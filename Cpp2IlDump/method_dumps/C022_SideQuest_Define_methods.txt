Type: C022_SideQuest_Define

Method: System.Void C022_SideQuest_Define::.ctor():	Method Body (x86 ASM):
		0x1802068B0 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1802068B2 jmp near ptr 0000000180207540h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802068B7 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.Void C022_SideQuest_Define::.ctor():
		End of function at 0x1802068B8
		Absolute End is at 0x1802068B8
		Identified Jump Destination addresses:

		0x1802068B2: [!] Calls managed method System.Void System.Object::.ctor() on instance {'this' (function parameter, type C022_SideQuest_Define)}

		0x1802068B2: [!] Returns from the function




	Generated Pseudocode:

	Declaring Type: C022_SideQuest_Define
	System.Void .ctor()

		base..ctor()
		return


Generated IL:
	IL_0000: ldarg.0
	IL_0001: call System.Void System.Object::.ctor()
	IL_0006: ret
	

Method: System.Void C022_SideQuest_Define::.cctor():	Method Body (x86 ASM):
		0x18021ABB0 mov [rsp+8],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RSP | 8 | None ||| N/A | N/A
		0x18021ABB5 push rdi		; DEBUG: {Register}/RDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18021ABB6 sub rsp,20h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 32
		0x18021ABBA cmp byte ptr [18183D2D0h],0		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6467867344 | None ||| N/A | 0
		0x18021ABC1 jne short 000000018021ABD5h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021ABC3 mov ecx,[181516030h]		; DEBUG: {Register}/ECX {Memory}/None ||| RIP | 6464561200 | None ||| N/A | N/A
		0x18021ABC9 call 00000001800FEB90h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021ABCE mov byte ptr [18183D2D0h],1		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6467867344 | None ||| N/A | 1
		0x18021ABD5 mov rcx,[181884F78h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468161400 | None ||| N/A | N/A
		0x18021ABDC mov edx,23h		; DEBUG: {Register}/EDX {Immediate32}/None ||| None | 0 | None ||| N/A | 35
		0x18021ABE1 call 0000000180141320h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021ABE6 mov rcx,[181884228h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468157992 | None ||| N/A | N/A
		0x18021ABED mov rdi,rax		; DEBUG: {Register}/RDI {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021ABF0 mov rbx,[181874A68h]		; DEBUG: {Register}/RBX {Memory}/None ||| RIP | 6468094568 | None ||| N/A | N/A
		0x18021ABF7 test byte ptr [rcx+127h],2		; DEBUG: {Memory}/None {Immediate8}/None ||| RCX | 295 | None ||| N/A | 2
		0x18021ABFE je short 000000018021AC0Eh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021AC00 cmp dword ptr [rcx+0D8h],0		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RCX | 216 | None ||| N/A | 0
		0x18021AC07 jne short 000000018021AC0Eh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021AC09 call 000000018010EAF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021AC0E xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021AC10 mov rcx,rbx		; DEBUG: {Register}/RCX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x18021AC13 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021AC18 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021AC1B test rdi,rdi		; DEBUG: {Register}/RDI {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x18021AC1E je near ptr 000000018021B42Dh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021AC24 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021AC27 je short 000000018021AC41h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021AC29 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18021AC2C mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021AC2F mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18021AC33 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021AC38 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021AC3B je near ptr 000000018021B435h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021AC41 cmp dword ptr [rdi+18h],1		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 1
		0x18021AC45 jbe near ptr 000000018021B448h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021AC4B mov [rdi+28h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 40 | None ||| N/A | N/A
		0x18021AC4F xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021AC51 mov rcx,[181874AA0h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468094624 | None ||| N/A | N/A
		0x18021AC58 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021AC5D mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021AC60 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021AC63 je short 000000018021AC7Dh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021AC65 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18021AC68 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021AC6B mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18021AC6F call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021AC74 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021AC77 je near ptr 000000018021B45Bh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021AC7D cmp dword ptr [rdi+18h],2		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 2
		0x18021AC81 jbe near ptr 000000018021B46Eh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021AC87 mov [rdi+30h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 48 | None ||| N/A | N/A
		0x18021AC8B xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021AC8D mov rcx,[181874AC8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468094664 | None ||| N/A | N/A
		0x18021AC94 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021AC99 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021AC9C test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021AC9F je short 000000018021ACB9h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021ACA1 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18021ACA4 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021ACA7 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18021ACAB call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021ACB0 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021ACB3 je near ptr 000000018021B481h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021ACB9 cmp dword ptr [rdi+18h],3		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 3
		0x18021ACBD jbe near ptr 000000018021B494h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021ACC3 mov [rdi+38h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 56 | None ||| N/A | N/A
		0x18021ACC7 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021ACC9 mov rcx,[181874AF0h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468094704 | None ||| N/A | N/A
		0x18021ACD0 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021ACD5 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021ACD8 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021ACDB je short 000000018021ACF5h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021ACDD mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18021ACE0 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021ACE3 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18021ACE7 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021ACEC test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021ACEF je near ptr 000000018021B4A7h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021ACF5 cmp dword ptr [rdi+18h],4		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 4
		0x18021ACF9 jbe near ptr 000000018021B4BAh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021ACFF mov [rdi+40h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 64 | None ||| N/A | N/A
		0x18021AD03 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021AD05 mov rcx,[181874B18h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468094744 | None ||| N/A | N/A
		0x18021AD0C call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021AD11 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021AD14 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021AD17 je short 000000018021AD31h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021AD19 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18021AD1C mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021AD1F mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18021AD23 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021AD28 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021AD2B je near ptr 000000018021B4CDh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021AD31 cmp dword ptr [rdi+18h],5		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 5
		0x18021AD35 jbe near ptr 000000018021B4E0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021AD3B mov [rdi+48h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 72 | None ||| N/A | N/A
		0x18021AD3F xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021AD41 mov rcx,[181874B28h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468094760 | None ||| N/A | N/A
		0x18021AD48 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021AD4D mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021AD50 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021AD53 je short 000000018021AD6Dh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021AD55 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18021AD58 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021AD5B mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18021AD5F call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021AD64 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021AD67 je near ptr 000000018021B4F3h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021AD6D cmp dword ptr [rdi+18h],6		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 6
		0x18021AD71 jbe near ptr 000000018021B506h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021AD77 mov [rdi+50h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 80 | None ||| N/A | N/A
		0x18021AD7B xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021AD7D mov rcx,[181874B58h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468094808 | None ||| N/A | N/A
		0x18021AD84 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021AD89 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021AD8C test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021AD8F je short 000000018021ADA9h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021AD91 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18021AD94 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021AD97 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18021AD9B call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021ADA0 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021ADA3 je near ptr 000000018021B519h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021ADA9 cmp dword ptr [rdi+18h],7		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 7
		0x18021ADAD jbe near ptr 000000018021B52Ch		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021ADB3 mov [rdi+58h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 88 | None ||| N/A | N/A
		0x18021ADB7 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021ADB9 mov rcx,[181874B98h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468094872 | None ||| N/A | N/A
		0x18021ADC0 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021ADC5 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021ADC8 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021ADCB je short 000000018021ADE5h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021ADCD mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18021ADD0 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021ADD3 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18021ADD7 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021ADDC test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021ADDF je near ptr 000000018021B53Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021ADE5 cmp dword ptr [rdi+18h],8		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 8
		0x18021ADE9 jbe near ptr 000000018021B552h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021ADEF mov [rdi+60h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 96 | None ||| N/A | N/A
		0x18021ADF3 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021ADF5 mov rcx,[181874BA0h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468094880 | None ||| N/A | N/A
		0x18021ADFC call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021AE01 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021AE04 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021AE07 je short 000000018021AE21h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021AE09 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18021AE0C mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021AE0F mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18021AE13 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021AE18 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021AE1B je near ptr 000000018021B565h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021AE21 cmp dword ptr [rdi+18h],9		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 9
		0x18021AE25 jbe near ptr 000000018021B578h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021AE2B mov [rdi+68h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 104 | None ||| N/A | N/A
		0x18021AE2F xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021AE31 mov rcx,[181874BD8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468094936 | None ||| N/A | N/A
		0x18021AE38 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021AE3D mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021AE40 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021AE43 je short 000000018021AE5Dh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021AE45 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18021AE48 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021AE4B mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18021AE4F call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021AE54 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021AE57 je near ptr 000000018021B58Bh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021AE5D cmp dword ptr [rdi+18h],0Ah		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 10
		0x18021AE61 jbe near ptr 000000018021B59Eh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021AE67 mov [rdi+70h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 112 | None ||| N/A | N/A
		0x18021AE6B xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021AE6D mov rcx,[181874C00h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468094976 | None ||| N/A | N/A
		0x18021AE74 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021AE79 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021AE7C test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021AE7F je short 000000018021AE99h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021AE81 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18021AE84 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021AE87 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18021AE8B call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021AE90 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021AE93 je near ptr 000000018021B5B1h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021AE99 cmp dword ptr [rdi+18h],0Bh		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 11
		0x18021AE9D jbe near ptr 000000018021B5C4h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021AEA3 mov [rdi+78h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 120 | None ||| N/A | N/A
		0x18021AEA7 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021AEA9 mov rcx,[181874C30h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468095024 | None ||| N/A | N/A
		0x18021AEB0 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021AEB5 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021AEB8 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021AEBB je short 000000018021AED5h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021AEBD mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18021AEC0 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021AEC3 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18021AEC7 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021AECC test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021AECF je near ptr 000000018021B5D7h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021AED5 cmp dword ptr [rdi+18h],0Ch		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 12
		0x18021AED9 jbe near ptr 000000018021B5EAh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021AEDF mov [rdi+80h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 128 | None ||| N/A | N/A
		0x18021AEE6 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021AEE8 mov rcx,[181874C58h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468095064 | None ||| N/A | N/A
		0x18021AEEF call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021AEF4 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021AEF7 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021AEFA je short 000000018021AF14h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021AEFC mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18021AEFF mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021AF02 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18021AF06 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021AF0B test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021AF0E je near ptr 000000018021B5FDh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021AF14 cmp dword ptr [rdi+18h],0Dh		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 13
		0x18021AF18 jbe near ptr 000000018021B610h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021AF1E mov [rdi+88h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 136 | None ||| N/A | N/A
		0x18021AF25 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021AF27 mov rcx,[181874C80h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468095104 | None ||| N/A | N/A
		0x18021AF2E call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021AF33 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021AF36 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021AF39 je short 000000018021AF53h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021AF3B mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18021AF3E mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021AF41 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18021AF45 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021AF4A test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021AF4D je near ptr 000000018021B623h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021AF53 cmp dword ptr [rdi+18h],0Eh		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 14
		0x18021AF57 jbe near ptr 000000018021B636h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021AF5D mov [rdi+90h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 144 | None ||| N/A | N/A
		0x18021AF64 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021AF66 mov rcx,[181874CA8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468095144 | None ||| N/A | N/A
		0x18021AF6D call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021AF72 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021AF75 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021AF78 je short 000000018021AF92h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021AF7A mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18021AF7D mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021AF80 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18021AF84 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021AF89 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021AF8C je near ptr 000000018021B649h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021AF92 cmp dword ptr [rdi+18h],0Fh		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 15
		0x18021AF96 jbe near ptr 000000018021B65Ch		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021AF9C mov [rdi+98h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 152 | None ||| N/A | N/A
		0x18021AFA3 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021AFA5 mov rcx,[181874CB8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468095160 | None ||| N/A | N/A
		0x18021AFAC call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021AFB1 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021AFB4 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021AFB7 je short 000000018021AFD1h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021AFB9 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18021AFBC mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021AFBF mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18021AFC3 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021AFC8 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021AFCB je near ptr 000000018021B66Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021AFD1 cmp dword ptr [rdi+18h],10h		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 16
		0x18021AFD5 jbe near ptr 000000018021B682h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021AFDB mov [rdi+0A0h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 160 | None ||| N/A | N/A
		0x18021AFE2 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021AFE4 mov rcx,[181874CF8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468095224 | None ||| N/A | N/A
		0x18021AFEB call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021AFF0 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021AFF3 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021AFF6 je short 000000018021B010h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021AFF8 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18021AFFB mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021AFFE mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18021B002 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B007 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021B00A je near ptr 000000018021B695h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B010 cmp dword ptr [rdi+18h],11h		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 17
		0x18021B014 jbe near ptr 000000018021B6A8h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B01A mov [rdi+0A8h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 168 | None ||| N/A | N/A
		0x18021B021 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021B023 mov rcx,[181874D28h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468095272 | None ||| N/A | N/A
		0x18021B02A call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B02F mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021B032 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021B035 je short 000000018021B04Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B037 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18021B03A mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021B03D mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18021B041 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B046 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021B049 je near ptr 000000018021B6BBh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B04F cmp dword ptr [rdi+18h],12h		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 18
		0x18021B053 jbe near ptr 000000018021B6CEh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B059 mov [rdi+0B0h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 176 | None ||| N/A | N/A
		0x18021B060 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021B062 mov rcx,[181874D50h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468095312 | None ||| N/A | N/A
		0x18021B069 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B06E mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021B071 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021B074 je short 000000018021B08Eh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B076 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18021B079 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021B07C mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18021B080 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B085 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021B088 je near ptr 000000018021B6E1h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B08E cmp dword ptr [rdi+18h],13h		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 19
		0x18021B092 jbe near ptr 000000018021B6F4h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B098 mov [rdi+0B8h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 184 | None ||| N/A | N/A
		0x18021B09F xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021B0A1 mov rcx,[181874D70h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468095344 | None ||| N/A | N/A
		0x18021B0A8 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B0AD mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021B0B0 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021B0B3 je short 000000018021B0CDh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B0B5 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18021B0B8 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021B0BB mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18021B0BF call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B0C4 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021B0C7 je near ptr 000000018021B707h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B0CD cmp dword ptr [rdi+18h],14h		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 20
		0x18021B0D1 jbe near ptr 000000018021B71Ah		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B0D7 mov [rdi+0C0h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 192 | None ||| N/A | N/A
		0x18021B0DE xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021B0E0 mov rcx,[181874D98h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468095384 | None ||| N/A | N/A
		0x18021B0E7 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B0EC mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021B0EF test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021B0F2 je short 000000018021B10Ch		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B0F4 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18021B0F7 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021B0FA mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18021B0FE call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B103 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021B106 je near ptr 000000018021B72Dh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B10C cmp dword ptr [rdi+18h],15h		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 21
		0x18021B110 jbe near ptr 000000018021B740h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B116 mov [rdi+0C8h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 200 | None ||| N/A | N/A
		0x18021B11D xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021B11F mov rcx,[181874DA8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468095400 | None ||| N/A | N/A
		0x18021B126 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B12B mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021B12E test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021B131 je short 000000018021B14Bh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B133 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18021B136 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021B139 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18021B13D call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B142 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021B145 je near ptr 000000018021B753h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B14B cmp dword ptr [rdi+18h],16h		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 22
		0x18021B14F jbe near ptr 000000018021B766h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B155 mov [rdi+0D0h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 208 | None ||| N/A | N/A
		0x18021B15C xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021B15E mov rcx,[181874DE0h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468095456 | None ||| N/A | N/A
		0x18021B165 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B16A mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021B16D test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021B170 je short 000000018021B18Ah		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B172 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18021B175 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021B178 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18021B17C call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B181 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021B184 je near ptr 000000018021B779h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B18A cmp dword ptr [rdi+18h],17h		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 23
		0x18021B18E jbe near ptr 000000018021B78Ch		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B194 mov [rdi+0D8h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 216 | None ||| N/A | N/A
		0x18021B19B xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021B19D mov rcx,[181874E08h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468095496 | None ||| N/A | N/A
		0x18021B1A4 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B1A9 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021B1AC test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021B1AF je short 000000018021B1C9h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B1B1 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18021B1B4 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021B1B7 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18021B1BB call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B1C0 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021B1C3 je near ptr 000000018021B79Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B1C9 cmp dword ptr [rdi+18h],18h		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 24
		0x18021B1CD jbe near ptr 000000018021B7B2h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B1D3 mov [rdi+0E0h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 224 | None ||| N/A | N/A
		0x18021B1DA xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021B1DC mov rcx,[181874E38h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468095544 | None ||| N/A | N/A
		0x18021B1E3 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B1E8 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021B1EB test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021B1EE je short 000000018021B208h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B1F0 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18021B1F3 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021B1F6 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18021B1FA call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B1FF test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021B202 je near ptr 000000018021B7C5h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B208 cmp dword ptr [rdi+18h],19h		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 25
		0x18021B20C jbe near ptr 000000018021B7D8h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B212 mov [rdi+0E8h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 232 | None ||| N/A | N/A
		0x18021B219 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021B21B mov rcx,[181874E68h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468095592 | None ||| N/A | N/A
		0x18021B222 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B227 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021B22A test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021B22D je short 000000018021B247h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B22F mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18021B232 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021B235 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18021B239 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B23E test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021B241 je near ptr 000000018021B7EBh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B247 cmp dword ptr [rdi+18h],1Ah		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 26
		0x18021B24B jbe near ptr 000000018021B7FEh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B251 mov [rdi+0F0h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 240 | None ||| N/A | N/A
		0x18021B258 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021B25A mov rcx,[181874E78h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468095608 | None ||| N/A | N/A
		0x18021B261 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B266 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021B269 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021B26C je short 000000018021B286h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B26E mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18021B271 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021B274 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18021B278 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B27D test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021B280 je near ptr 000000018021B811h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B286 cmp dword ptr [rdi+18h],1Bh		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 27
		0x18021B28A jbe near ptr 000000018021B824h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B290 mov [rdi+0F8h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 248 | None ||| N/A | N/A
		0x18021B297 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021B299 mov rcx,[181874EB0h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468095664 | None ||| N/A | N/A
		0x18021B2A0 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B2A5 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021B2A8 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021B2AB je short 000000018021B2C5h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B2AD mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18021B2B0 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021B2B3 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18021B2B7 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B2BC test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021B2BF je near ptr 000000018021B837h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B2C5 cmp dword ptr [rdi+18h],1Ch		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 28
		0x18021B2C9 jbe near ptr 000000018021B84Ah		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B2CF mov [rdi+100h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 256 | None ||| N/A | N/A
		0x18021B2D6 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021B2D8 mov rcx,[181874ED0h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468095696 | None ||| N/A | N/A
		0x18021B2DF call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B2E4 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021B2E7 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021B2EA je short 000000018021B304h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B2EC mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18021B2EF mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021B2F2 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18021B2F6 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B2FB test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021B2FE je near ptr 000000018021B85Dh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B304 cmp dword ptr [rdi+18h],1Dh		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 29
		0x18021B308 jbe near ptr 000000018021B870h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B30E mov [rdi+108h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 264 | None ||| N/A | N/A
		0x18021B315 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021B317 mov rcx,[181874F00h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468095744 | None ||| N/A | N/A
		0x18021B31E call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B323 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021B326 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021B329 je short 000000018021B343h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B32B mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18021B32E mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021B331 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18021B335 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B33A test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021B33D je near ptr 000000018021B883h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B343 cmp dword ptr [rdi+18h],1Eh		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 30
		0x18021B347 jbe near ptr 000000018021B896h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B34D mov [rdi+110h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 272 | None ||| N/A | N/A
		0x18021B354 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021B356 mov rcx,[181874F10h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468095760 | None ||| N/A | N/A
		0x18021B35D call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B362 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021B365 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021B368 je short 000000018021B382h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B36A mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18021B36D mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021B370 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18021B374 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B379 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021B37C je near ptr 000000018021B8A9h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B382 cmp dword ptr [rdi+18h],1Fh		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 31
		0x18021B386 jbe near ptr 000000018021B8BCh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B38C mov [rdi+118h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 280 | None ||| N/A | N/A
		0x18021B393 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021B395 mov rcx,[181874F58h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468095832 | None ||| N/A | N/A
		0x18021B39C call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B3A1 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021B3A4 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021B3A7 je short 000000018021B3C1h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B3A9 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18021B3AC mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021B3AF mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18021B3B3 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B3B8 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021B3BB je near ptr 000000018021B8CFh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B3C1 cmp dword ptr [rdi+18h],20h		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 32
		0x18021B3C5 jbe near ptr 000000018021B8E2h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B3CB mov [rdi+120h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 288 | None ||| N/A | N/A
		0x18021B3D2 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021B3D4 mov rcx,[181874F70h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468095856 | None ||| N/A | N/A
		0x18021B3DB call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B3E0 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021B3E3 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021B3E6 je short 000000018021B400h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B3E8 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18021B3EB mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021B3EE mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18021B3F2 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B3F7 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021B3FA je near ptr 000000018021B8F5h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B400 cmp dword ptr [rdi+18h],21h		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 33
		0x18021B404 jbe near ptr 000000018021B908h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B40A mov [rdi+128h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 296 | None ||| N/A | N/A
		0x18021B411 mov rax,[18189BA60h]		; DEBUG: {Register}/RAX {Memory}/None ||| RIP | 6468254304 | None ||| N/A | N/A
		0x18021B418 mov rbx,[rsp+30h]		; DEBUG: {Register}/RBX {Memory}/None ||| RSP | 48 | None ||| N/A | N/A
		0x18021B41D mov rcx,[rax+0B8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RAX | 184 | None ||| N/A | N/A
		0x18021B424 mov [rcx],rdi		; DEBUG: {Memory}/None {Register}/RDI ||| RCX | 0 | None ||| N/A | N/A
		0x18021B427 add rsp,20h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 32
		0x18021B42B pop rdi		; DEBUG: {Register}/RDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18021B42C ret		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18021B42D xor ecx,ecx		; DEBUG: {Register}/ECX {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x18021B42F call 000000018012BDA0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B434 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18021B435 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B43A mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021B43D xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18021B440 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021B442 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B447 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18021B45B call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B460 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021B463 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18021B466 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021B468 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B46D int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18021B481 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B486 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021B489 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18021B48C xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021B48E call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B493 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18021B4A7 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B4AC mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021B4AF xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18021B4B2 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021B4B4 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B4B9 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18021B4CD call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B4D2 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021B4D5 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18021B4D8 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021B4DA call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B4DF int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18021B4F3 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B4F8 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021B4FB xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18021B4FE xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021B500 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B505 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18021B519 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B51E mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021B521 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18021B524 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021B526 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B52B int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18021B53F call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B544 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021B547 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18021B54A xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021B54C call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B551 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18021B565 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B56A mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021B56D xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18021B570 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021B572 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B577 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18021B58B call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B590 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021B593 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18021B596 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021B598 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B59D int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18021B5B1 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B5B6 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021B5B9 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18021B5BC xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021B5BE call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B5C3 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18021B5D7 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B5DC mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021B5DF xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18021B5E2 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021B5E4 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B5E9 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18021B5FD call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B602 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021B605 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18021B608 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021B60A call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B60F int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18021B623 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B628 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021B62B xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18021B62E xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021B630 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B635 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18021B649 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B64E mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021B651 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18021B654 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021B656 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B65B int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18021B66F call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B674 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021B677 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18021B67A xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021B67C call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B681 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18021B695 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B69A mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021B69D xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18021B6A0 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021B6A2 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B6A7 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18021B6BB call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B6C0 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021B6C3 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18021B6C6 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021B6C8 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B6CD int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18021B6E1 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B6E6 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021B6E9 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18021B6EC xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021B6EE call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B6F3 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18021B707 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B70C mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021B70F xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18021B712 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021B714 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B719 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18021B72D call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B732 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021B735 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18021B738 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021B73A call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B73F int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18021B753 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B758 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021B75B xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18021B75E xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021B760 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B765 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18021B779 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B77E mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021B781 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18021B784 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021B786 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B78B int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18021B79F call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B7A4 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021B7A7 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18021B7AA xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021B7AC call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B7B1 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18021B7C5 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B7CA mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021B7CD xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18021B7D0 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021B7D2 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B7D7 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18021B7EB call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B7F0 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021B7F3 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18021B7F6 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021B7F8 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B7FD int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18021B811 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B816 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021B819 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18021B81C xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021B81E call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B823 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18021B837 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B83C mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021B83F xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18021B842 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021B844 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B849 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18021B85D call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B862 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021B865 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18021B868 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021B86A call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B86F int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18021B883 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B888 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021B88B xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18021B88E xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021B890 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B895 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18021B8A9 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B8AE mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021B8B1 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18021B8B4 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021B8B6 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B8BB int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18021B8CF call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B8D4 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021B8D7 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18021B8DA xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021B8DC call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B8E1 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18021B8F5 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B8FA mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021B8FD xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18021B900 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021B902 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021B907 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Static Method System.Void C022_SideQuest_Define::.cctor():
		End of function at 0x18021B908
		Absolute End is at 0x18021B908
		Identified Jump Destination addresses:

		0x18021ABB5: Saves the content of rdi to the stack
		0x18021ABBA: Compares {Unknown Global at 0x18183D2D0, first ten bytes are [0 0 0 0 0 0 0 0 0 0], or as chars "          "} and 0
		0x18021ABC1: Jumps to 0x18021ABD5 if {Unknown Global at 0x18183D2D0, first ten bytes are [0 0 0 0 0 0 0 0 0 0], or as chars "          "} != 0

		0x18021ABC3: Loads string "ì" into register rcx as constant {'constant3' (constant value of type Cpp2IL.Core.Analysis.ResultModels.Il2CppString)}
		0x18021ABC9: Attempts to load the il2cpp metadata for this method (method id 0) and init it cpp-side.

		0x18021ABD5: Loads the type definition for managed type System.Type[] as a constant "Type[]" in rcx
		0x18021ABDC: [!] Writes the constant 0x23 into operand 35 (type UInt64) in register rdx
		0x18021ABE1: [!] Allocates an array of type System.Type[] of size 35 and stores the result as local0 in register rax

		0x18021ABE6: Loads the type definition for managed type System.Type as a constant "Type" in rcx
		0x18021ABED: Copies {'local0' (type System.Type[])} from rax into rdi
		0x18021ABF0: Loads the type definition for managed type ESerifSideQ_Pol_C022_1000 as a constant "ESerifSideQ_Pol_C022_1000" in rbx
		0x18021ABF7: Compares "{il2cpp field on {'Type' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" and 2
		0x18021ABFE: Jumps to 0x18021AC0E if "{il2cpp field on {'Type' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" equals 2

		0x18021AC00: Compares "{il2cpp field on {'Type' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" and 0
		0x18021AC07: Jumps to 0x18021AC0E if "{il2cpp field on {'Type' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" != 0

		0x18021AC09: Calls the il2cpp cctor for the type System.Type
		0x18021AC10: Copies {'ESerifSideQ_Pol_C022_1000' (constant value of type Mono.Cecil.TypeReference)} from rbx into rcx
		0x18021AC13: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C022_1000' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle' (type System.Type)}

		0x18021AC18: Copies {'typeFromHandle' (type System.Type)} from rax into rbx
		0x18021AC1B: [!] Compares {'local0' (type System.Type[])} and 0
		0x18021AC1E: Jumps to 0x18021B42D (which throws a NRE) if local0 equals 0. Implicitly present in managed code, so ignored here.
		0x18021AC24: [!] Compares {'typeFromHandle' (type System.Type)} and 0
		0x18021AC27: Jumps to 0x18021AC41 (which is an if statement's body) if typeFromHandle equals 0 ;  - Increasing indentation - is standard if, unimportant is False

		0x18021AC29: Loads the class pointer from local0 into a constant constant14 in register rdx
		0x18021AC2C: Copies {'typeFromHandle' (type System.Type)} from rax into rcx
		0x18021AC2F: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18021AC38: [!] Compares {'typeFromHandle' (type System.Type)} and 0
		0x18021AC3B: Jumps to 0x18021B435 if typeFromHandle equals 0 ;  - This is probably a goto, jumping to 0x18021B435 which is after end of current block @ 0x18021AC41 (started at 0x18021AC29)

		0x18021AC41: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 1
		0x18021AC45: Jumps to 0x18021B448 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 1. Implicitly present in managed code, so ignored here.
		0x18021AC4B: Sets the value at offset 1 in array local0 to {'typeFromHandle' (type System.Type)}
		0x18021AC51: Loads the type definition for managed type ESerifSideQ_Pol_C022_1001 as a constant "ESerifSideQ_Pol_C022_1001" in rcx
		0x18021AC58: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C022_1001' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle2' (type System.Type)}

		0x18021AC5D: Copies {'typeFromHandle2' (type System.Type)} from rax into rbx
		0x18021AC60: [!] Compares {'typeFromHandle2' (type System.Type)} and 0
		0x18021AC63: Jumps to 0x18021AC7D if typeFromHandle2 equals 0 ;  - This is probably a goto, jumping to 0x18021AC7D which is after end of current block @ 0x18021AC41 (started at 0x18021AC29)

		0x18021AC65: Loads the class pointer from local0 into a constant constant19 in register rdx
		0x18021AC68: Copies {'typeFromHandle2' (type System.Type)} from rax into rcx
		0x18021AC6B: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18021AC74: [!] Compares {'typeFromHandle2' (type System.Type)} and 0
		0x18021AC77: Jumps to 0x18021B45B if typeFromHandle2 equals 0 ;  - This is probably a goto, jumping to 0x18021B45B which is after end of current block @ 0x18021AC41 (started at 0x18021AC29)

		0x18021AC7D: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 2
		0x18021AC81: Jumps to 0x18021B46E (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 2. Implicitly present in managed code, so ignored here.
		0x18021AC87: Sets the value at offset 2 in array local0 to {'typeFromHandle2' (type System.Type)}
		0x18021AC8D: Loads the type definition for managed type ESerifSideQ_Pol_C022_1002 as a constant "ESerifSideQ_Pol_C022_1002" in rcx
		0x18021AC94: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C022_1002' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle3' (type System.Type)}

		0x18021AC99: Copies {'typeFromHandle3' (type System.Type)} from rax into rbx
		0x18021AC9C: [!] Compares {'typeFromHandle3' (type System.Type)} and 0
		0x18021AC9F: Jumps to 0x18021ACB9 if typeFromHandle3 equals 0 ;  - This is probably a goto, jumping to 0x18021ACB9 which is after end of current block @ 0x18021AC41 (started at 0x18021AC29)

		0x18021ACA1: Loads the class pointer from local0 into a constant constant24 in register rdx
		0x18021ACA4: Copies {'typeFromHandle3' (type System.Type)} from rax into rcx
		0x18021ACA7: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18021ACB0: [!] Compares {'typeFromHandle3' (type System.Type)} and 0
		0x18021ACB3: Jumps to 0x18021B481 if typeFromHandle3 equals 0 ;  - This is probably a goto, jumping to 0x18021B481 which is after end of current block @ 0x18021AC41 (started at 0x18021AC29)

		0x18021ACB9: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 3
		0x18021ACBD: Jumps to 0x18021B494 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 3. Implicitly present in managed code, so ignored here.
		0x18021ACC3: Sets the value at offset 3 in array local0 to {'typeFromHandle3' (type System.Type)}
		0x18021ACC9: Loads the type definition for managed type ESerifSideQ_Pol_C022_1016 as a constant "ESerifSideQ_Pol_C022_1016" in rcx
		0x18021ACD0: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C022_1016' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle4' (type System.Type)}

		0x18021ACD5: Copies {'typeFromHandle4' (type System.Type)} from rax into rbx
		0x18021ACD8: [!] Compares {'typeFromHandle4' (type System.Type)} and 0
		0x18021ACDB: Jumps to 0x18021ACF5 if typeFromHandle4 equals 0 ;  - This is probably a goto, jumping to 0x18021ACF5 which is after end of current block @ 0x18021AC41 (started at 0x18021AC29)

		0x18021ACDD: Loads the class pointer from local0 into a constant constant29 in register rdx
		0x18021ACE0: Copies {'typeFromHandle4' (type System.Type)} from rax into rcx
		0x18021ACE3: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18021ACEC: [!] Compares {'typeFromHandle4' (type System.Type)} and 0
		0x18021ACEF: Jumps to 0x18021B4A7 if typeFromHandle4 equals 0 ;  - This is probably a goto, jumping to 0x18021B4A7 which is after end of current block @ 0x18021AC41 (started at 0x18021AC29)

		0x18021ACF5: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 4
		0x18021ACF9: Jumps to 0x18021B4BA (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 4. Implicitly present in managed code, so ignored here.
		0x18021ACFF: Sets the value at offset 4 in array local0 to {'typeFromHandle4' (type System.Type)}
		0x18021AD05: Loads the type definition for managed type ESerifSideQ_Pol_C022_1003 as a constant "ESerifSideQ_Pol_C022_1003" in rcx
		0x18021AD0C: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C022_1003' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle5' (type System.Type)}

		0x18021AD11: Copies {'typeFromHandle5' (type System.Type)} from rax into rbx
		0x18021AD14: [!] Compares {'typeFromHandle5' (type System.Type)} and 0
		0x18021AD17: Jumps to 0x18021AD31 if typeFromHandle5 equals 0 ;  - This is probably a goto, jumping to 0x18021AD31 which is after end of current block @ 0x18021AC41 (started at 0x18021AC29)

		0x18021AD19: Loads the class pointer from local0 into a constant constant34 in register rdx
		0x18021AD1C: Copies {'typeFromHandle5' (type System.Type)} from rax into rcx
		0x18021AD1F: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18021AD28: [!] Compares {'typeFromHandle5' (type System.Type)} and 0
		0x18021AD2B: Jumps to 0x18021B4CD if typeFromHandle5 equals 0 ;  - This is probably a goto, jumping to 0x18021B4CD which is after end of current block @ 0x18021AC41 (started at 0x18021AC29)

		0x18021AD31: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 5
		0x18021AD35: Jumps to 0x18021B4E0 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 5. Implicitly present in managed code, so ignored here.
		0x18021AD3B: Sets the value at offset 5 in array local0 to {'typeFromHandle5' (type System.Type)}
		0x18021AD41: Loads the type definition for managed type ESerifSideQ_Pol_C022_1004 as a constant "ESerifSideQ_Pol_C022_1004" in rcx
		0x18021AD48: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C022_1004' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle6' (type System.Type)}

		0x18021AD4D: Copies {'typeFromHandle6' (type System.Type)} from rax into rbx
		0x18021AD50: [!] Compares {'typeFromHandle6' (type System.Type)} and 0
		0x18021AD53: Jumps to 0x18021AD6D if typeFromHandle6 equals 0 ;  - This is probably a goto, jumping to 0x18021AD6D which is after end of current block @ 0x18021AC41 (started at 0x18021AC29)

		0x18021AD55: Loads the class pointer from local0 into a constant constant39 in register rdx
		0x18021AD58: Copies {'typeFromHandle6' (type System.Type)} from rax into rcx
		0x18021AD5B: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18021AD64: [!] Compares {'typeFromHandle6' (type System.Type)} and 0
		0x18021AD67: Jumps to 0x18021B4F3 if typeFromHandle6 equals 0 ;  - This is probably a goto, jumping to 0x18021B4F3 which is after end of current block @ 0x18021AC41 (started at 0x18021AC29)

		0x18021AD6D: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 6
		0x18021AD71: Jumps to 0x18021B506 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 6. Implicitly present in managed code, so ignored here.
		0x18021AD77: Sets the value at offset 6 in array local0 to {'typeFromHandle6' (type System.Type)}
		0x18021AD7D: Loads the type definition for managed type ESerifSideQ_Pol_C022_1005 as a constant "ESerifSideQ_Pol_C022_1005" in rcx
		0x18021AD84: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C022_1005' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle7' (type System.Type)}

		0x18021AD89: Copies {'typeFromHandle7' (type System.Type)} from rax into rbx
		0x18021AD8C: [!] Compares {'typeFromHandle7' (type System.Type)} and 0
		0x18021AD8F: Jumps to 0x18021ADA9 if typeFromHandle7 equals 0 ;  - This is probably a goto, jumping to 0x18021ADA9 which is after end of current block @ 0x18021AC41 (started at 0x18021AC29)

		0x18021AD91: Loads the class pointer from local0 into a constant constant44 in register rdx
		0x18021AD94: Copies {'typeFromHandle7' (type System.Type)} from rax into rcx
		0x18021AD97: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18021ADA0: [!] Compares {'typeFromHandle7' (type System.Type)} and 0
		0x18021ADA3: Jumps to 0x18021B519 if typeFromHandle7 equals 0 ;  - This is probably a goto, jumping to 0x18021B519 which is after end of current block @ 0x18021AC41 (started at 0x18021AC29)

		0x18021ADA9: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 7
		0x18021ADAD: Jumps to 0x18021B52C (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 7. Implicitly present in managed code, so ignored here.
		0x18021ADB3: Sets the value at offset 7 in array local0 to {'typeFromHandle7' (type System.Type)}
		0x18021ADB9: Loads the type definition for managed type ESerifSideQ_Pol_C022_1006 as a constant "ESerifSideQ_Pol_C022_1006" in rcx
		0x18021ADC0: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C022_1006' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle8' (type System.Type)}

		0x18021ADC5: Copies {'typeFromHandle8' (type System.Type)} from rax into rbx
		0x18021ADC8: [!] Compares {'typeFromHandle8' (type System.Type)} and 0
		0x18021ADCB: Jumps to 0x18021ADE5 if typeFromHandle8 equals 0 ;  - This is probably a goto, jumping to 0x18021ADE5 which is after end of current block @ 0x18021AC41 (started at 0x18021AC29)

		0x18021ADCD: Loads the class pointer from local0 into a constant constant49 in register rdx
		0x18021ADD0: Copies {'typeFromHandle8' (type System.Type)} from rax into rcx
		0x18021ADD3: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18021ADDC: [!] Compares {'typeFromHandle8' (type System.Type)} and 0
		0x18021ADDF: Jumps to 0x18021B53F if typeFromHandle8 equals 0 ;  - This is probably a goto, jumping to 0x18021B53F which is after end of current block @ 0x18021AC41 (started at 0x18021AC29)

		0x18021ADE5: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 8
		0x18021ADE9: Jumps to 0x18021B552 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 8. Implicitly present in managed code, so ignored here.
		0x18021ADEF: Sets the value at offset 8 in array local0 to {'typeFromHandle8' (type System.Type)}
		0x18021ADF5: Loads the type definition for managed type ESerifSideQ_Pol_C022_1007 as a constant "ESerifSideQ_Pol_C022_1007" in rcx
		0x18021ADFC: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C022_1007' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle9' (type System.Type)}

		0x18021AE01: Copies {'typeFromHandle9' (type System.Type)} from rax into rbx
		0x18021AE04: [!] Compares {'typeFromHandle9' (type System.Type)} and 0
		0x18021AE07: Jumps to 0x18021AE21 if typeFromHandle9 equals 0 ;  - This is probably a goto, jumping to 0x18021AE21 which is after end of current block @ 0x18021AC41 (started at 0x18021AC29)

		0x18021AE09: Loads the class pointer from local0 into a constant constant54 in register rdx
		0x18021AE0C: Copies {'typeFromHandle9' (type System.Type)} from rax into rcx
		0x18021AE0F: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18021AE18: [!] Compares {'typeFromHandle9' (type System.Type)} and 0
		0x18021AE1B: Jumps to 0x18021B565 if typeFromHandle9 equals 0 ;  - This is probably a goto, jumping to 0x18021B565 which is after end of current block @ 0x18021AC41 (started at 0x18021AC29)

		0x18021AE21: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 9
		0x18021AE25: Jumps to 0x18021B578 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 9. Implicitly present in managed code, so ignored here.
		0x18021AE2B: Sets the value at offset 9 in array local0 to {'typeFromHandle9' (type System.Type)}
		0x18021AE31: Loads the type definition for managed type ESerifSideQ_Pol_C022_1008 as a constant "ESerifSideQ_Pol_C022_1008" in rcx
		0x18021AE38: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C022_1008' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle10' (type System.Type)}

		0x18021AE3D: Copies {'typeFromHandle10' (type System.Type)} from rax into rbx
		0x18021AE40: [!] Compares {'typeFromHandle10' (type System.Type)} and 0
		0x18021AE43: Jumps to 0x18021AE5D if typeFromHandle10 equals 0 ;  - This is probably a goto, jumping to 0x18021AE5D which is after end of current block @ 0x18021AC41 (started at 0x18021AC29)

		0x18021AE45: Loads the class pointer from local0 into a constant constant59 in register rdx
		0x18021AE48: Copies {'typeFromHandle10' (type System.Type)} from rax into rcx
		0x18021AE4B: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18021AE54: [!] Compares {'typeFromHandle10' (type System.Type)} and 0
		0x18021AE57: Jumps to 0x18021B58B if typeFromHandle10 equals 0 ;  - This is probably a goto, jumping to 0x18021B58B which is after end of current block @ 0x18021AC41 (started at 0x18021AC29)

		0x18021AE5D: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 10
		0x18021AE61: Jumps to 0x18021B59E (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 10. Implicitly present in managed code, so ignored here.
		0x18021AE67: Sets the value at offset 10 in array local0 to {'typeFromHandle10' (type System.Type)}
		0x18021AE6D: Loads the type definition for managed type ESerifSideQ_Pol_C022_1009 as a constant "ESerifSideQ_Pol_C022_1009" in rcx
		0x18021AE74: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C022_1009' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle11' (type System.Type)}

		0x18021AE79: Copies {'typeFromHandle11' (type System.Type)} from rax into rbx
		0x18021AE7C: [!] Compares {'typeFromHandle11' (type System.Type)} and 0
		0x18021AE7F: Jumps to 0x18021AE99 if typeFromHandle11 equals 0 ;  - This is probably a goto, jumping to 0x18021AE99 which is after end of current block @ 0x18021AC41 (started at 0x18021AC29)

		0x18021AE81: Loads the class pointer from local0 into a constant constant64 in register rdx
		0x18021AE84: Copies {'typeFromHandle11' (type System.Type)} from rax into rcx
		0x18021AE87: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18021AE90: [!] Compares {'typeFromHandle11' (type System.Type)} and 0
		0x18021AE93: Jumps to 0x18021B5B1 if typeFromHandle11 equals 0 ;  - This is probably a goto, jumping to 0x18021B5B1 which is after end of current block @ 0x18021AC41 (started at 0x18021AC29)

		0x18021AE99: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 11
		0x18021AE9D: Jumps to 0x18021B5C4 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 11. Implicitly present in managed code, so ignored here.
		0x18021AEA3: Sets the value at offset 11 in array local0 to {'typeFromHandle11' (type System.Type)}
		0x18021AEA9: Loads the type definition for managed type ESerifSideQ_Pol_C022_1010 as a constant "ESerifSideQ_Pol_C022_1010" in rcx
		0x18021AEB0: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C022_1010' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle12' (type System.Type)}

		0x18021AEB5: Copies {'typeFromHandle12' (type System.Type)} from rax into rbx
		0x18021AEB8: [!] Compares {'typeFromHandle12' (type System.Type)} and 0
		0x18021AEBB: Jumps to 0x18021AED5 if typeFromHandle12 equals 0 ;  - This is probably a goto, jumping to 0x18021AED5 which is after end of current block @ 0x18021AC41 (started at 0x18021AC29)

		0x18021AEBD: Loads the class pointer from local0 into a constant constant69 in register rdx
		0x18021AEC0: Copies {'typeFromHandle12' (type System.Type)} from rax into rcx
		0x18021AEC3: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18021AECC: [!] Compares {'typeFromHandle12' (type System.Type)} and 0
		0x18021AECF: Jumps to 0x18021B5D7 if typeFromHandle12 equals 0 ;  - This is probably a goto, jumping to 0x18021B5D7 which is after end of current block @ 0x18021AC41 (started at 0x18021AC29)

		0x18021AED5: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 12
		0x18021AED9: Jumps to 0x18021B5EA (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 12. Implicitly present in managed code, so ignored here.
		0x18021AEDF: Sets the value at offset 12 in array local0 to {'typeFromHandle12' (type System.Type)}
		0x18021AEE8: Loads the type definition for managed type ESerifSideQ_Pol_C022_1011 as a constant "ESerifSideQ_Pol_C022_1011" in rcx
		0x18021AEEF: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C022_1011' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle13' (type System.Type)}

		0x18021AEF4: Copies {'typeFromHandle13' (type System.Type)} from rax into rbx
		0x18021AEF7: [!] Compares {'typeFromHandle13' (type System.Type)} and 0
		0x18021AEFA: Jumps to 0x18021AF14 if typeFromHandle13 equals 0 ;  - This is probably a goto, jumping to 0x18021AF14 which is after end of current block @ 0x18021AC41 (started at 0x18021AC29)

		0x18021AEFC: Loads the class pointer from local0 into a constant constant74 in register rdx
		0x18021AEFF: Copies {'typeFromHandle13' (type System.Type)} from rax into rcx
		0x18021AF02: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18021AF0B: [!] Compares {'typeFromHandle13' (type System.Type)} and 0
		0x18021AF0E: Jumps to 0x18021B5FD if typeFromHandle13 equals 0 ;  - This is probably a goto, jumping to 0x18021B5FD which is after end of current block @ 0x18021AC41 (started at 0x18021AC29)

		0x18021AF14: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 13
		0x18021AF18: Jumps to 0x18021B610 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 13. Implicitly present in managed code, so ignored here.
		0x18021AF1E: Sets the value at offset 13 in array local0 to {'typeFromHandle13' (type System.Type)}
		0x18021AF27: Loads the type definition for managed type ESerifSideQ_Pol_C022_1012 as a constant "ESerifSideQ_Pol_C022_1012" in rcx
		0x18021AF2E: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C022_1012' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle14' (type System.Type)}

		0x18021AF33: Copies {'typeFromHandle14' (type System.Type)} from rax into rbx
		0x18021AF36: [!] Compares {'typeFromHandle14' (type System.Type)} and 0
		0x18021AF39: Jumps to 0x18021AF53 if typeFromHandle14 equals 0 ;  - This is probably a goto, jumping to 0x18021AF53 which is after end of current block @ 0x18021AC41 (started at 0x18021AC29)

		0x18021AF3B: Loads the class pointer from local0 into a constant constant79 in register rdx
		0x18021AF3E: Copies {'typeFromHandle14' (type System.Type)} from rax into rcx
		0x18021AF41: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18021AF4A: [!] Compares {'typeFromHandle14' (type System.Type)} and 0
		0x18021AF4D: Jumps to 0x18021B623 if typeFromHandle14 equals 0 ;  - This is probably a goto, jumping to 0x18021B623 which is after end of current block @ 0x18021AC41 (started at 0x18021AC29)

		0x18021AF53: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 14
		0x18021AF57: Jumps to 0x18021B636 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 14. Implicitly present in managed code, so ignored here.
		0x18021AF5D: Sets the value at offset 14 in array local0 to {'typeFromHandle14' (type System.Type)}
		0x18021AF66: Loads the type definition for managed type ESerifSideQ_Pol_C022_1013 as a constant "ESerifSideQ_Pol_C022_1013" in rcx
		0x18021AF6D: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C022_1013' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle15' (type System.Type)}

		0x18021AF72: Copies {'typeFromHandle15' (type System.Type)} from rax into rbx
		0x18021AF75: [!] Compares {'typeFromHandle15' (type System.Type)} and 0
		0x18021AF78: Jumps to 0x18021AF92 if typeFromHandle15 equals 0 ;  - This is probably a goto, jumping to 0x18021AF92 which is after end of current block @ 0x18021AC41 (started at 0x18021AC29)

		0x18021AF7A: Loads the class pointer from local0 into a constant constant84 in register rdx
		0x18021AF7D: Copies {'typeFromHandle15' (type System.Type)} from rax into rcx
		0x18021AF80: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18021AF89: [!] Compares {'typeFromHandle15' (type System.Type)} and 0
		0x18021AF8C: Jumps to 0x18021B649 if typeFromHandle15 equals 0 ;  - This is probably a goto, jumping to 0x18021B649 which is after end of current block @ 0x18021AC41 (started at 0x18021AC29)

		0x18021AF92: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 15
		0x18021AF96: Jumps to 0x18021B65C (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 15. Implicitly present in managed code, so ignored here.
		0x18021AF9C: Sets the value at offset 15 in array local0 to {'typeFromHandle15' (type System.Type)}
		0x18021AFA5: Loads the type definition for managed type ESerifSideQ_Pol_C022_1014 as a constant "ESerifSideQ_Pol_C022_1014" in rcx
		0x18021AFAC: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C022_1014' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle16' (type System.Type)}

		0x18021AFB1: Copies {'typeFromHandle16' (type System.Type)} from rax into rbx
		0x18021AFB4: [!] Compares {'typeFromHandle16' (type System.Type)} and 0
		0x18021AFB7: Jumps to 0x18021AFD1 if typeFromHandle16 equals 0 ;  - This is probably a goto, jumping to 0x18021AFD1 which is after end of current block @ 0x18021AC41 (started at 0x18021AC29)

		0x18021AFB9: Loads the class pointer from local0 into a constant constant89 in register rdx
		0x18021AFBC: Copies {'typeFromHandle16' (type System.Type)} from rax into rcx
		0x18021AFBF: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18021AFC8: [!] Compares {'typeFromHandle16' (type System.Type)} and 0
		0x18021AFCB: Jumps to 0x18021B66F if typeFromHandle16 equals 0 ;  - This is probably a goto, jumping to 0x18021B66F which is after end of current block @ 0x18021AC41 (started at 0x18021AC29)

		0x18021AFD1: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 16
		0x18021AFD5: Jumps to 0x18021B682 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 16. Implicitly present in managed code, so ignored here.
		0x18021AFDB: Sets the value at offset 16 in array local0 to {'typeFromHandle16' (type System.Type)}
		0x18021AFE4: Loads the type definition for managed type ESerifSideQ_Pol_C022_1015 as a constant "ESerifSideQ_Pol_C022_1015" in rcx
		0x18021AFEB: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C022_1015' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle17' (type System.Type)}

		0x18021AFF0: Copies {'typeFromHandle17' (type System.Type)} from rax into rbx
		0x18021AFF3: [!] Compares {'typeFromHandle17' (type System.Type)} and 0
		0x18021AFF6: Jumps to 0x18021B010 if typeFromHandle17 equals 0 ;  - This is probably a goto, jumping to 0x18021B010 which is after end of current block @ 0x18021AC41 (started at 0x18021AC29)

		0x18021AFF8: Loads the class pointer from local0 into a constant constant94 in register rdx
		0x18021AFFB: Copies {'typeFromHandle17' (type System.Type)} from rax into rcx
		0x18021AFFE: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18021B007: [!] Compares {'typeFromHandle17' (type System.Type)} and 0
		0x18021B00A: Jumps to 0x18021B695 if typeFromHandle17 equals 0 ;  - This is probably a goto, jumping to 0x18021B695 which is after end of current block @ 0x18021AC41 (started at 0x18021AC29)

		0x18021B010: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 17
		0x18021B014: Jumps to 0x18021B6A8 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 17. Implicitly present in managed code, so ignored here.
		0x18021B01A: Sets the value at offset 17 in array local0 to {'typeFromHandle17' (type System.Type)}
		0x18021B023: Loads the type definition for managed type ESerifSideQ_Pol_C022_2000 as a constant "ESerifSideQ_Pol_C022_2000" in rcx
		0x18021B02A: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C022_2000' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle18' (type System.Type)}

		0x18021B02F: Copies {'typeFromHandle18' (type System.Type)} from rax into rbx
		0x18021B032: [!] Compares {'typeFromHandle18' (type System.Type)} and 0
		0x18021B035: Jumps to 0x18021B04F if typeFromHandle18 equals 0 ;  - This is probably a goto, jumping to 0x18021B04F which is after end of current block @ 0x18021AC41 (started at 0x18021AC29)

		0x18021B037: Loads the class pointer from local0 into a constant constant99 in register rdx
		0x18021B03A: Copies {'typeFromHandle18' (type System.Type)} from rax into rcx
		0x18021B03D: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18021B046: [!] Compares {'typeFromHandle18' (type System.Type)} and 0
		0x18021B049: Jumps to 0x18021B6BB if typeFromHandle18 equals 0 ;  - This is probably a goto, jumping to 0x18021B6BB which is after end of current block @ 0x18021AC41 (started at 0x18021AC29)

		0x18021B04F: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 18
		0x18021B053: Jumps to 0x18021B6CE (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 18. Implicitly present in managed code, so ignored here.
		0x18021B059: Sets the value at offset 18 in array local0 to {'typeFromHandle18' (type System.Type)}
		0x18021B062: Loads the type definition for managed type ESerifSideQ_Pol_C022_2001 as a constant "ESerifSideQ_Pol_C022_2001" in rcx
		0x18021B069: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C022_2001' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle19' (type System.Type)}

		0x18021B06E: Copies {'typeFromHandle19' (type System.Type)} from rax into rbx
		0x18021B071: [!] Compares {'typeFromHandle19' (type System.Type)} and 0
		0x18021B074: Jumps to 0x18021B08E if typeFromHandle19 equals 0 ;  - This is probably a goto, jumping to 0x18021B08E which is after end of current block @ 0x18021AC41 (started at 0x18021AC29)

		0x18021B076: Loads the class pointer from local0 into a constant constant104 in register rdx
		0x18021B079: Copies {'typeFromHandle19' (type System.Type)} from rax into rcx
		0x18021B07C: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18021B085: [!] Compares {'typeFromHandle19' (type System.Type)} and 0
		0x18021B088: Jumps to 0x18021B6E1 if typeFromHandle19 equals 0 ;  - This is probably a goto, jumping to 0x18021B6E1 which is after end of current block @ 0x18021AC41 (started at 0x18021AC29)

		0x18021B08E: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 19
		0x18021B092: Jumps to 0x18021B6F4 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 19. Implicitly present in managed code, so ignored here.
		0x18021B098: Sets the value at offset 19 in array local0 to {'typeFromHandle19' (type System.Type)}
		0x18021B0A1: Loads the type definition for managed type ESerifSideQ_Pol_C022_2002 as a constant "ESerifSideQ_Pol_C022_2002" in rcx
		0x18021B0A8: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C022_2002' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle20' (type System.Type)}

		0x18021B0AD: Copies {'typeFromHandle20' (type System.Type)} from rax into rbx
		0x18021B0B0: [!] Compares {'typeFromHandle20' (type System.Type)} and 0
		0x18021B0B3: Jumps to 0x18021B0CD if typeFromHandle20 equals 0 ;  - This is probably a goto, jumping to 0x18021B0CD which is after end of current block @ 0x18021AC41 (started at 0x18021AC29)

		0x18021B0B5: Loads the class pointer from local0 into a constant constant109 in register rdx
		0x18021B0B8: Copies {'typeFromHandle20' (type System.Type)} from rax into rcx
		0x18021B0BB: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18021B0C4: [!] Compares {'typeFromHandle20' (type System.Type)} and 0
		0x18021B0C7: Jumps to 0x18021B707 if typeFromHandle20 equals 0 ;  - This is probably a goto, jumping to 0x18021B707 which is after end of current block @ 0x18021AC41 (started at 0x18021AC29)

		0x18021B0CD: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 20
		0x18021B0D1: Jumps to 0x18021B71A (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 20. Implicitly present in managed code, so ignored here.
		0x18021B0D7: Sets the value at offset 20 in array local0 to {'typeFromHandle20' (type System.Type)}
		0x18021B0E0: Loads the type definition for managed type ESerifSideQ_Pol_C022_2003 as a constant "ESerifSideQ_Pol_C022_2003" in rcx
		0x18021B0E7: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C022_2003' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle21' (type System.Type)}

		0x18021B0EC: Copies {'typeFromHandle21' (type System.Type)} from rax into rbx
		0x18021B0EF: [!] Compares {'typeFromHandle21' (type System.Type)} and 0
		0x18021B0F2: Jumps to 0x18021B10C if typeFromHandle21 equals 0 ;  - This is probably a goto, jumping to 0x18021B10C which is after end of current block @ 0x18021AC41 (started at 0x18021AC29)

		0x18021B0F4: Loads the class pointer from local0 into a constant constant114 in register rdx
		0x18021B0F7: Copies {'typeFromHandle21' (type System.Type)} from rax into rcx
		0x18021B0FA: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18021B103: [!] Compares {'typeFromHandle21' (type System.Type)} and 0
		0x18021B106: Jumps to 0x18021B72D if typeFromHandle21 equals 0 ;  - This is probably a goto, jumping to 0x18021B72D which is after end of current block @ 0x18021AC41 (started at 0x18021AC29)

		0x18021B10C: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 21
		0x18021B110: Jumps to 0x18021B740 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 21. Implicitly present in managed code, so ignored here.
		0x18021B116: Sets the value at offset 21 in array local0 to {'typeFromHandle21' (type System.Type)}
		0x18021B11F: Loads the type definition for managed type ESerifSideQ_Pol_C022_2004 as a constant "ESerifSideQ_Pol_C022_2004" in rcx
		0x18021B126: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C022_2004' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle22' (type System.Type)}

		0x18021B12B: Copies {'typeFromHandle22' (type System.Type)} from rax into rbx
		0x18021B12E: [!] Compares {'typeFromHandle22' (type System.Type)} and 0
		0x18021B131: Jumps to 0x18021B14B if typeFromHandle22 equals 0 ;  - This is probably a goto, jumping to 0x18021B14B which is after end of current block @ 0x18021AC41 (started at 0x18021AC29)

		0x18021B133: Loads the class pointer from local0 into a constant constant119 in register rdx
		0x18021B136: Copies {'typeFromHandle22' (type System.Type)} from rax into rcx
		0x18021B139: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18021B142: [!] Compares {'typeFromHandle22' (type System.Type)} and 0
		0x18021B145: Jumps to 0x18021B753 if typeFromHandle22 equals 0 ;  - This is probably a goto, jumping to 0x18021B753 which is after end of current block @ 0x18021AC41 (started at 0x18021AC29)

		0x18021B14B: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 22
		0x18021B14F: Jumps to 0x18021B766 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 22. Implicitly present in managed code, so ignored here.
		0x18021B155: Sets the value at offset 22 in array local0 to {'typeFromHandle22' (type System.Type)}
		0x18021B15E: Loads the type definition for managed type ESerifSideQ_Pol_C022_2005 as a constant "ESerifSideQ_Pol_C022_2005" in rcx
		0x18021B165: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C022_2005' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle23' (type System.Type)}

		0x18021B16A: Copies {'typeFromHandle23' (type System.Type)} from rax into rbx
		0x18021B16D: [!] Compares {'typeFromHandle23' (type System.Type)} and 0
		0x18021B170: Jumps to 0x18021B18A if typeFromHandle23 equals 0 ;  - This is probably a goto, jumping to 0x18021B18A which is after end of current block @ 0x18021AC41 (started at 0x18021AC29)

		0x18021B172: Loads the class pointer from local0 into a constant constant124 in register rdx
		0x18021B175: Copies {'typeFromHandle23' (type System.Type)} from rax into rcx
		0x18021B178: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18021B181: [!] Compares {'typeFromHandle23' (type System.Type)} and 0
		0x18021B184: Jumps to 0x18021B779 if typeFromHandle23 equals 0 ;  - This is probably a goto, jumping to 0x18021B779 which is after end of current block @ 0x18021AC41 (started at 0x18021AC29)

		0x18021B18A: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 23
		0x18021B18E: Jumps to 0x18021B78C (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 23. Implicitly present in managed code, so ignored here.
		0x18021B194: Sets the value at offset 23 in array local0 to {'typeFromHandle23' (type System.Type)}
		0x18021B19D: Loads the type definition for managed type ESerifSideQ_Pol_C022_2006 as a constant "ESerifSideQ_Pol_C022_2006" in rcx
		0x18021B1A4: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C022_2006' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle24' (type System.Type)}

		0x18021B1A9: Copies {'typeFromHandle24' (type System.Type)} from rax into rbx
		0x18021B1AC: [!] Compares {'typeFromHandle24' (type System.Type)} and 0
		0x18021B1AF: Jumps to 0x18021B1C9 if typeFromHandle24 equals 0 ;  - This is probably a goto, jumping to 0x18021B1C9 which is after end of current block @ 0x18021AC41 (started at 0x18021AC29)

		0x18021B1B1: Loads the class pointer from local0 into a constant constant129 in register rdx
		0x18021B1B4: Copies {'typeFromHandle24' (type System.Type)} from rax into rcx
		0x18021B1B7: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18021B1C0: [!] Compares {'typeFromHandle24' (type System.Type)} and 0
		0x18021B1C3: Jumps to 0x18021B79F if typeFromHandle24 equals 0 ;  - This is probably a goto, jumping to 0x18021B79F which is after end of current block @ 0x18021AC41 (started at 0x18021AC29)

		0x18021B1C9: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 24
		0x18021B1CD: Jumps to 0x18021B7B2 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 24. Implicitly present in managed code, so ignored here.
		0x18021B1D3: Sets the value at offset 24 in array local0 to {'typeFromHandle24' (type System.Type)}
		0x18021B1DC: Loads the type definition for managed type ESerifSideQ_Pol_C022_3000 as a constant "ESerifSideQ_Pol_C022_3000" in rcx
		0x18021B1E3: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C022_3000' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle25' (type System.Type)}

		0x18021B1E8: Copies {'typeFromHandle25' (type System.Type)} from rax into rbx
		0x18021B1EB: [!] Compares {'typeFromHandle25' (type System.Type)} and 0
		0x18021B1EE: Jumps to 0x18021B208 if typeFromHandle25 equals 0 ;  - This is probably a goto, jumping to 0x18021B208 which is after end of current block @ 0x18021AC41 (started at 0x18021AC29)

		0x18021B1F0: Loads the class pointer from local0 into a constant constant134 in register rdx
		0x18021B1F3: Copies {'typeFromHandle25' (type System.Type)} from rax into rcx
		0x18021B1F6: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18021B1FF: [!] Compares {'typeFromHandle25' (type System.Type)} and 0
		0x18021B202: Jumps to 0x18021B7C5 if typeFromHandle25 equals 0 ;  - This is probably a goto, jumping to 0x18021B7C5 which is after end of current block @ 0x18021AC41 (started at 0x18021AC29)

		0x18021B208: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 25
		0x18021B20C: Jumps to 0x18021B7D8 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 25. Implicitly present in managed code, so ignored here.
		0x18021B212: Sets the value at offset 25 in array local0 to {'typeFromHandle25' (type System.Type)}
		0x18021B21B: Loads the type definition for managed type ESerifSideQ_Pol_C022_3001 as a constant "ESerifSideQ_Pol_C022_3001" in rcx
		0x18021B222: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C022_3001' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle26' (type System.Type)}

		0x18021B227: Copies {'typeFromHandle26' (type System.Type)} from rax into rbx
		0x18021B22A: [!] Compares {'typeFromHandle26' (type System.Type)} and 0
		0x18021B22D: Jumps to 0x18021B247 if typeFromHandle26 equals 0 ;  - This is probably a goto, jumping to 0x18021B247 which is after end of current block @ 0x18021AC41 (started at 0x18021AC29)

		0x18021B22F: Loads the class pointer from local0 into a constant constant139 in register rdx
		0x18021B232: Copies {'typeFromHandle26' (type System.Type)} from rax into rcx
		0x18021B235: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18021B23E: [!] Compares {'typeFromHandle26' (type System.Type)} and 0
		0x18021B241: Jumps to 0x18021B7EB if typeFromHandle26 equals 0 ;  - This is probably a goto, jumping to 0x18021B7EB which is after end of current block @ 0x18021AC41 (started at 0x18021AC29)

		0x18021B247: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 26
		0x18021B24B: Jumps to 0x18021B7FE (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 26. Implicitly present in managed code, so ignored here.
		0x18021B251: Sets the value at offset 26 in array local0 to {'typeFromHandle26' (type System.Type)}
		0x18021B25A: Loads the type definition for managed type ESerifSideQ_Pol_C022_3002 as a constant "ESerifSideQ_Pol_C022_3002" in rcx
		0x18021B261: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C022_3002' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle27' (type System.Type)}

		0x18021B266: Copies {'typeFromHandle27' (type System.Type)} from rax into rbx
		0x18021B269: [!] Compares {'typeFromHandle27' (type System.Type)} and 0
		0x18021B26C: Jumps to 0x18021B286 if typeFromHandle27 equals 0 ;  - This is probably a goto, jumping to 0x18021B286 which is after end of current block @ 0x18021AC41 (started at 0x18021AC29)

		0x18021B26E: Loads the class pointer from local0 into a constant constant144 in register rdx
		0x18021B271: Copies {'typeFromHandle27' (type System.Type)} from rax into rcx
		0x18021B274: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18021B27D: [!] Compares {'typeFromHandle27' (type System.Type)} and 0
		0x18021B280: Jumps to 0x18021B811 if typeFromHandle27 equals 0 ;  - This is probably a goto, jumping to 0x18021B811 which is after end of current block @ 0x18021AC41 (started at 0x18021AC29)

		0x18021B286: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 27
		0x18021B28A: Jumps to 0x18021B824 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 27. Implicitly present in managed code, so ignored here.
		0x18021B290: Sets the value at offset 27 in array local0 to {'typeFromHandle27' (type System.Type)}
		0x18021B299: Loads the type definition for managed type ESerifSideQ_Pol_C022_4000 as a constant "ESerifSideQ_Pol_C022_4000" in rcx
		0x18021B2A0: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C022_4000' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle28' (type System.Type)}

		0x18021B2A5: Copies {'typeFromHandle28' (type System.Type)} from rax into rbx
		0x18021B2A8: [!] Compares {'typeFromHandle28' (type System.Type)} and 0
		0x18021B2AB: Jumps to 0x18021B2C5 if typeFromHandle28 equals 0 ;  - This is probably a goto, jumping to 0x18021B2C5 which is after end of current block @ 0x18021AC41 (started at 0x18021AC29)

		0x18021B2AD: Loads the class pointer from local0 into a constant constant149 in register rdx
		0x18021B2B0: Copies {'typeFromHandle28' (type System.Type)} from rax into rcx
		0x18021B2B3: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18021B2BC: [!] Compares {'typeFromHandle28' (type System.Type)} and 0
		0x18021B2BF: Jumps to 0x18021B837 if typeFromHandle28 equals 0 ;  - This is probably a goto, jumping to 0x18021B837 which is after end of current block @ 0x18021AC41 (started at 0x18021AC29)

		0x18021B2C5: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 28
		0x18021B2C9: Jumps to 0x18021B84A (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 28. Implicitly present in managed code, so ignored here.
		0x18021B2CF: Sets the value at offset 28 in array local0 to {'typeFromHandle28' (type System.Type)}
		0x18021B2D8: Loads the type definition for managed type ESerifSideQ_Pol_C022_4001 as a constant "ESerifSideQ_Pol_C022_4001" in rcx
		0x18021B2DF: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C022_4001' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle29' (type System.Type)}

		0x18021B2E4: Copies {'typeFromHandle29' (type System.Type)} from rax into rbx
		0x18021B2E7: [!] Compares {'typeFromHandle29' (type System.Type)} and 0
		0x18021B2EA: Jumps to 0x18021B304 if typeFromHandle29 equals 0 ;  - This is probably a goto, jumping to 0x18021B304 which is after end of current block @ 0x18021AC41 (started at 0x18021AC29)

		0x18021B2EC: Loads the class pointer from local0 into a constant constant154 in register rdx
		0x18021B2EF: Copies {'typeFromHandle29' (type System.Type)} from rax into rcx
		0x18021B2F2: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18021B2FB: [!] Compares {'typeFromHandle29' (type System.Type)} and 0
		0x18021B2FE: Jumps to 0x18021B85D if typeFromHandle29 equals 0 ;  - This is probably a goto, jumping to 0x18021B85D which is after end of current block @ 0x18021AC41 (started at 0x18021AC29)

		0x18021B304: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 29
		0x18021B308: Jumps to 0x18021B870 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 29. Implicitly present in managed code, so ignored here.
		0x18021B30E: Sets the value at offset 29 in array local0 to {'typeFromHandle29' (type System.Type)}
		0x18021B317: Loads the type definition for managed type ESerifSideQ_Pol_C022_4002 as a constant "ESerifSideQ_Pol_C022_4002" in rcx
		0x18021B31E: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C022_4002' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle30' (type System.Type)}

		0x18021B323: Copies {'typeFromHandle30' (type System.Type)} from rax into rbx
		0x18021B326: [!] Compares {'typeFromHandle30' (type System.Type)} and 0
		0x18021B329: Jumps to 0x18021B343 if typeFromHandle30 equals 0 ;  - This is probably a goto, jumping to 0x18021B343 which is after end of current block @ 0x18021AC41 (started at 0x18021AC29)

		0x18021B32B: Loads the class pointer from local0 into a constant constant159 in register rdx
		0x18021B32E: Copies {'typeFromHandle30' (type System.Type)} from rax into rcx
		0x18021B331: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18021B33A: [!] Compares {'typeFromHandle30' (type System.Type)} and 0
		0x18021B33D: Jumps to 0x18021B883 if typeFromHandle30 equals 0 ;  - This is probably a goto, jumping to 0x18021B883 which is after end of current block @ 0x18021AC41 (started at 0x18021AC29)

		0x18021B343: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 30
		0x18021B347: Jumps to 0x18021B896 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 30. Implicitly present in managed code, so ignored here.
		0x18021B34D: Sets the value at offset 30 in array local0 to {'typeFromHandle30' (type System.Type)}
		0x18021B356: Loads the type definition for managed type ESerifSideQ_Pol_C022_5000 as a constant "ESerifSideQ_Pol_C022_5000" in rcx
		0x18021B35D: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C022_5000' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle31' (type System.Type)}

		0x18021B362: Copies {'typeFromHandle31' (type System.Type)} from rax into rbx
		0x18021B365: [!] Compares {'typeFromHandle31' (type System.Type)} and 0
		0x18021B368: Jumps to 0x18021B382 if typeFromHandle31 equals 0 ;  - This is probably a goto, jumping to 0x18021B382 which is after end of current block @ 0x18021AC41 (started at 0x18021AC29)

		0x18021B36A: Loads the class pointer from local0 into a constant constant164 in register rdx
		0x18021B36D: Copies {'typeFromHandle31' (type System.Type)} from rax into rcx
		0x18021B370: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18021B379: [!] Compares {'typeFromHandle31' (type System.Type)} and 0
		0x18021B37C: Jumps to 0x18021B8A9 if typeFromHandle31 equals 0 ;  - This is probably a goto, jumping to 0x18021B8A9 which is after end of current block @ 0x18021AC41 (started at 0x18021AC29)

		0x18021B382: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 31
		0x18021B386: Jumps to 0x18021B8BC (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 31. Implicitly present in managed code, so ignored here.
		0x18021B38C: Sets the value at offset 31 in array local0 to {'typeFromHandle31' (type System.Type)}
		0x18021B395: Loads the type definition for managed type ESerifSideQ_Pol_C022_5001 as a constant "ESerifSideQ_Pol_C022_5001" in rcx
		0x18021B39C: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C022_5001' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle32' (type System.Type)}

		0x18021B3A1: Copies {'typeFromHandle32' (type System.Type)} from rax into rbx
		0x18021B3A4: [!] Compares {'typeFromHandle32' (type System.Type)} and 0
		0x18021B3A7: Jumps to 0x18021B3C1 if typeFromHandle32 equals 0 ;  - This is probably a goto, jumping to 0x18021B3C1 which is after end of current block @ 0x18021AC41 (started at 0x18021AC29)

		0x18021B3A9: Loads the class pointer from local0 into a constant constant169 in register rdx
		0x18021B3AC: Copies {'typeFromHandle32' (type System.Type)} from rax into rcx
		0x18021B3AF: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18021B3B8: [!] Compares {'typeFromHandle32' (type System.Type)} and 0
		0x18021B3BB: Jumps to 0x18021B8CF if typeFromHandle32 equals 0 ;  - This is probably a goto, jumping to 0x18021B8CF which is after end of current block @ 0x18021AC41 (started at 0x18021AC29)

		0x18021B3C1: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 32
		0x18021B3C5: Jumps to 0x18021B8E2 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 32. Implicitly present in managed code, so ignored here.
		0x18021B3CB: Sets the value at offset 32 in array local0 to {'typeFromHandle32' (type System.Type)}
		0x18021B3D4: Loads the type definition for managed type ESerifSideQ_Pol_C022_5002 as a constant "ESerifSideQ_Pol_C022_5002" in rcx
		0x18021B3DB: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C022_5002' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle33' (type System.Type)}

		0x18021B3E0: Copies {'typeFromHandle33' (type System.Type)} from rax into rbx
		0x18021B3E3: [!] Compares {'typeFromHandle33' (type System.Type)} and 0
		0x18021B3E6: Jumps to 0x18021B400 if typeFromHandle33 equals 0 ;  - This is probably a goto, jumping to 0x18021B400 which is after end of current block @ 0x18021AC41 (started at 0x18021AC29)

		0x18021B3E8: Loads the class pointer from local0 into a constant constant174 in register rdx
		0x18021B3EB: Copies {'typeFromHandle33' (type System.Type)} from rax into rcx
		0x18021B3EE: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18021B3F7: [!] Compares {'typeFromHandle33' (type System.Type)} and 0
		0x18021B3FA: Jumps to 0x18021B8F5 if typeFromHandle33 equals 0 ;  - This is probably a goto, jumping to 0x18021B8F5 which is after end of current block @ 0x18021AC41 (started at 0x18021AC29)

		0x18021B400: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 33
		0x18021B404: Jumps to 0x18021B908 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 33. Implicitly present in managed code, so ignored here.
		0x18021B40A: Sets the value at offset 33 in array local0 to {'typeFromHandle33' (type System.Type)}
		0x18021B411: Loads the type definition for managed type C022_SideQuest_Define as a constant "C022_SideQuest_Define" in rax
		0x18021B418: Reads unknown value in stack, offset 48 (0x30) and stores the pointer in register rbx as new constant constant178
		0x18021B41D: Loads the pointer to the static fields for C022_SideQuest_Define and stores it in constant179 in register rcx
		0x18021B424: [!] Sets static field . to {'local0' (type System.Type[])}
		0x18021B42C: [!] Returns from the function

		0x18021B42F: [!] Constructs and throws an exception of kind System.NullReferenceException

		0x18021B43A: Copies {'local68' (type System.NullReferenceException)} from rax into rcx
		0x18021B460: Copies {'local68' (type System.NullReferenceException)} from rax into rcx
		0x18021B486: Copies {'local68' (type System.NullReferenceException)} from rax into rcx
		0x18021B4AC: Copies {'local68' (type System.NullReferenceException)} from rax into rcx
		0x18021B4D2: Copies {'local68' (type System.NullReferenceException)} from rax into rcx
		0x18021B4F8: Copies {'local68' (type System.NullReferenceException)} from rax into rcx
		0x18021B51E: Copies {'local68' (type System.NullReferenceException)} from rax into rcx
		0x18021B544: Copies {'local68' (type System.NullReferenceException)} from rax into rcx
		0x18021B56A: Copies {'local68' (type System.NullReferenceException)} from rax into rcx
		0x18021B590: Copies {'local68' (type System.NullReferenceException)} from rax into rcx
		0x18021B5B6: Copies {'local68' (type System.NullReferenceException)} from rax into rcx
		0x18021B5DC: Copies {'local68' (type System.NullReferenceException)} from rax into rcx
		0x18021B602: Copies {'local68' (type System.NullReferenceException)} from rax into rcx
		0x18021B628: Copies {'local68' (type System.NullReferenceException)} from rax into rcx
		0x18021B64E: Copies {'local68' (type System.NullReferenceException)} from rax into rcx
		0x18021B674: Copies {'local68' (type System.NullReferenceException)} from rax into rcx
		0x18021B69A: Copies {'local68' (type System.NullReferenceException)} from rax into rcx
		0x18021B6C0: Copies {'local68' (type System.NullReferenceException)} from rax into rcx
		0x18021B6E6: Copies {'local68' (type System.NullReferenceException)} from rax into rcx
		0x18021B70C: Copies {'local68' (type System.NullReferenceException)} from rax into rcx
		0x18021B732: Copies {'local68' (type System.NullReferenceException)} from rax into rcx
		0x18021B758: Copies {'local68' (type System.NullReferenceException)} from rax into rcx
		0x18021B77E: Copies {'local68' (type System.NullReferenceException)} from rax into rcx
		0x18021B7A4: Copies {'local68' (type System.NullReferenceException)} from rax into rcx
		0x18021B7CA: Copies {'local68' (type System.NullReferenceException)} from rax into rcx
		0x18021B7F0: Copies {'local68' (type System.NullReferenceException)} from rax into rcx
		0x18021B816: Copies {'local68' (type System.NullReferenceException)} from rax into rcx
		0x18021B83C: Copies {'local68' (type System.NullReferenceException)} from rax into rcx
		0x18021B862: Copies {'local68' (type System.NullReferenceException)} from rax into rcx
		0x18021B888: Copies {'local68' (type System.NullReferenceException)} from rax into rcx
		0x18021B8AE: Copies {'local68' (type System.NullReferenceException)} from rax into rcx
		0x18021B8D4: Copies {'local68' (type System.NullReferenceException)} from rax into rcx
		0x18021B8FA: Copies {'local68' (type System.NullReferenceException)} from rax into rcx



	Generated Pseudocode:

	Declaring Type: C022_SideQuest_Define
	static System.Void .cctor()
		System.Type[] local0 = new System.Type[35]

		System.Type typeFromHandle = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C022_1000' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle != 0)

		    if (typeFromHandle == 0)
                goto INSN_18021B435
            endif
		endif
        
		local0[1] = typeFromHandle

		System.Type typeFromHandle2 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C022_1001' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle2 == 0)
            goto INSN_18021AC7D
        endif

		if (typeFromHandle2 == 0)
            goto INSN_18021B45B
        endif

		INSN_18021AC7D:
		local0[2] = typeFromHandle2

		System.Type typeFromHandle3 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C022_1002' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle3 == 0)
            goto INSN_18021ACB9
        endif

		if (typeFromHandle3 == 0)
            goto INSN_18021B481
        endif

		INSN_18021ACB9:
		local0[3] = typeFromHandle3

		System.Type typeFromHandle4 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C022_1016' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle4 == 0)
            goto INSN_18021ACF5
        endif

		if (typeFromHandle4 == 0)
            goto INSN_18021B4A7
        endif

		INSN_18021ACF5:
		local0[4] = typeFromHandle4

		System.Type typeFromHandle5 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C022_1003' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle5 == 0)
            goto INSN_18021AD31
        endif

		if (typeFromHandle5 == 0)
            goto INSN_18021B4CD
        endif

		INSN_18021AD31:
		local0[5] = typeFromHandle5

		System.Type typeFromHandle6 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C022_1004' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle6 == 0)
            goto INSN_18021AD6D
        endif

		if (typeFromHandle6 == 0)
            goto INSN_18021B4F3
        endif

		INSN_18021AD6D:
		local0[6] = typeFromHandle6

		System.Type typeFromHandle7 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C022_1005' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle7 == 0)
            goto INSN_18021ADA9
        endif

		if (typeFromHandle7 == 0)
            goto INSN_18021B519
        endif

		INSN_18021ADA9:
		local0[7] = typeFromHandle7

		System.Type typeFromHandle8 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C022_1006' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle8 == 0)
            goto INSN_18021ADE5
        endif

		if (typeFromHandle8 == 0)
            goto INSN_18021B53F
        endif

		INSN_18021ADE5:
		local0[8] = typeFromHandle8

		System.Type typeFromHandle9 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C022_1007' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle9 == 0)
            goto INSN_18021AE21
        endif

		if (typeFromHandle9 == 0)
            goto INSN_18021B565
        endif

		INSN_18021AE21:
		local0[9] = typeFromHandle9

		System.Type typeFromHandle10 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C022_1008' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle10 == 0)
            goto INSN_18021AE5D
        endif

		if (typeFromHandle10 == 0)
            goto INSN_18021B58B
        endif

		INSN_18021AE5D:
		local0[10] = typeFromHandle10

		System.Type typeFromHandle11 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C022_1009' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle11 == 0)
            goto INSN_18021AE99
        endif

		if (typeFromHandle11 == 0)
            goto INSN_18021B5B1
        endif

		INSN_18021AE99:
		local0[11] = typeFromHandle11

		System.Type typeFromHandle12 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C022_1010' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle12 == 0)
            goto INSN_18021AED5
        endif

		if (typeFromHandle12 == 0)
            goto INSN_18021B5D7
        endif

		INSN_18021AED5:
		local0[12] = typeFromHandle12

		System.Type typeFromHandle13 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C022_1011' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle13 == 0)
            goto INSN_18021AF14
        endif

		if (typeFromHandle13 == 0)
            goto INSN_18021B5FD
        endif

		INSN_18021AF14:
		local0[13] = typeFromHandle13

		System.Type typeFromHandle14 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C022_1012' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle14 == 0)
            goto INSN_18021AF53
        endif

		if (typeFromHandle14 == 0)
            goto INSN_18021B623
        endif

		INSN_18021AF53:
		local0[14] = typeFromHandle14

		System.Type typeFromHandle15 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C022_1013' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle15 == 0)
            goto INSN_18021AF92
        endif

		if (typeFromHandle15 == 0)
            goto INSN_18021B649
        endif

		INSN_18021AF92:
		local0[15] = typeFromHandle15

		System.Type typeFromHandle16 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C022_1014' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle16 == 0)
            goto INSN_18021AFD1
        endif

		if (typeFromHandle16 == 0)
            goto INSN_18021B66F
        endif

		INSN_18021AFD1:
		local0[16] = typeFromHandle16

		System.Type typeFromHandle17 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C022_1015' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle17 == 0)
            goto INSN_18021B010
        endif

		if (typeFromHandle17 == 0)
            goto INSN_18021B695
        endif

		INSN_18021B010:
		local0[17] = typeFromHandle17

		System.Type typeFromHandle18 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C022_2000' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle18 == 0)
            goto INSN_18021B04F
        endif

		if (typeFromHandle18 == 0)
            goto INSN_18021B6BB
        endif

		INSN_18021B04F:
		local0[18] = typeFromHandle18

		System.Type typeFromHandle19 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C022_2001' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle19 == 0)
            goto INSN_18021B08E
        endif

		if (typeFromHandle19 == 0)
            goto INSN_18021B6E1
        endif

		INSN_18021B08E:
		local0[19] = typeFromHandle19

		System.Type typeFromHandle20 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C022_2002' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle20 == 0)
            goto INSN_18021B0CD
        endif

		if (typeFromHandle20 == 0)
            goto INSN_18021B707
        endif

		INSN_18021B0CD:
		local0[20] = typeFromHandle20

		System.Type typeFromHandle21 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C022_2003' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle21 == 0)
            goto INSN_18021B10C
        endif

		if (typeFromHandle21 == 0)
            goto INSN_18021B72D
        endif

		INSN_18021B10C:
		local0[21] = typeFromHandle21

		System.Type typeFromHandle22 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C022_2004' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle22 == 0)
            goto INSN_18021B14B
        endif

		if (typeFromHandle22 == 0)
            goto INSN_18021B753
        endif

		INSN_18021B14B:
		local0[22] = typeFromHandle22

		System.Type typeFromHandle23 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C022_2005' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle23 == 0)
            goto INSN_18021B18A
        endif

		if (typeFromHandle23 == 0)
            goto INSN_18021B779
        endif

		INSN_18021B18A:
		local0[23] = typeFromHandle23

		System.Type typeFromHandle24 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C022_2006' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle24 == 0)
            goto INSN_18021B1C9
        endif

		if (typeFromHandle24 == 0)
            goto INSN_18021B79F
        endif

		INSN_18021B1C9:
		local0[24] = typeFromHandle24

		System.Type typeFromHandle25 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C022_3000' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle25 == 0)
            goto INSN_18021B208
        endif

		if (typeFromHandle25 == 0)
            goto INSN_18021B7C5
        endif

		INSN_18021B208:
		local0[25] = typeFromHandle25

		System.Type typeFromHandle26 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C022_3001' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle26 == 0)
            goto INSN_18021B247
        endif

		if (typeFromHandle26 == 0)
            goto INSN_18021B7EB
        endif

		INSN_18021B247:
		local0[26] = typeFromHandle26

		System.Type typeFromHandle27 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C022_3002' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle27 == 0)
            goto INSN_18021B286
        endif

		if (typeFromHandle27 == 0)
            goto INSN_18021B811
        endif

		INSN_18021B286:
		local0[27] = typeFromHandle27

		System.Type typeFromHandle28 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C022_4000' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle28 == 0)
            goto INSN_18021B2C5
        endif

		if (typeFromHandle28 == 0)
            goto INSN_18021B837
        endif

		INSN_18021B2C5:
		local0[28] = typeFromHandle28

		System.Type typeFromHandle29 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C022_4001' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle29 == 0)
            goto INSN_18021B304
        endif

		if (typeFromHandle29 == 0)
            goto INSN_18021B85D
        endif

		INSN_18021B304:
		local0[29] = typeFromHandle29

		System.Type typeFromHandle30 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C022_4002' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle30 == 0)
            goto INSN_18021B343
        endif

		if (typeFromHandle30 == 0)
            goto INSN_18021B883
        endif

		INSN_18021B343:
		local0[30] = typeFromHandle30

		System.Type typeFromHandle31 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C022_5000' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle31 == 0)
            goto INSN_18021B382
        endif

		if (typeFromHandle31 == 0)
            goto INSN_18021B8A9
        endif

		INSN_18021B382:
		local0[31] = typeFromHandle31

		System.Type typeFromHandle32 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C022_5001' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle32 == 0)
            goto INSN_18021B3C1
        endif

		if (typeFromHandle32 == 0)
            goto INSN_18021B8CF
        endif

		INSN_18021B3C1:
		local0[32] = typeFromHandle32

		System.Type typeFromHandle33 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C022_5002' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle33 == 0)
            goto INSN_18021B400
        endif

		if (typeFromHandle33 == 0)
            goto INSN_18021B8F5
        endif

		INSN_18021B400:
		local0[33] = typeFromHandle33
		. = local0
		return
		throw new System.NullReferenceException()

		INSN_18021B435:

		INSN_18021B45B:

		INSN_18021B481:

		INSN_18021B4A7:

		INSN_18021B4CD:

		INSN_18021B4F3:

		INSN_18021B519:

		INSN_18021B53F:

		INSN_18021B565:

		INSN_18021B58B:

		INSN_18021B5B1:

		INSN_18021B5D7:

		INSN_18021B5FD:

		INSN_18021B623:

		INSN_18021B649:

		INSN_18021B66F:

		INSN_18021B695:

		INSN_18021B6BB:

		INSN_18021B6E1:

		INSN_18021B707:

		INSN_18021B72D:

		INSN_18021B753:

		INSN_18021B779:

		INSN_18021B79F:

		INSN_18021B7C5:

		INSN_18021B7EB:

		INSN_18021B811:

		INSN_18021B837:

		INSN_18021B85D:

		INSN_18021B883:

		INSN_18021B8A9:

		INSN_18021B8CF:

		INSN_18021B8F5:


Generated IL:
	Action of type Cpp2IL.Core.Analysis.Actions.x86.Important.RegToStaticFieldAction at (0x18021B424) is corrupt (No further info) and cannot be created as IL. Aborting here.


