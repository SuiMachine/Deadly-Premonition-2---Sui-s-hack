Type: GetTouchCountCallback

Method: System.Void UICamera/GetTouchCountCallback::.ctor(System.Object,System.IntPtr):	Method Body (x86 ASM):
		0x1802ED440 mov rax,[r8]		; DEBUG: {Register}/RAX {Memory}/None ||| R8 | 0 | None ||| N/A | N/A
		0x1802ED443 mov [rcx+10h],rax		; DEBUG: {Memory}/None {Register}/RAX ||| RCX | 16 | None ||| N/A | N/A
		0x1802ED447 mov [rcx+28h],r8		; DEBUG: {Memory}/None {Register}/R8 ||| RCX | 40 | None ||| N/A | N/A
		0x1802ED44B mov [rcx+20h],rdx		; DEBUG: {Memory}/None {Register}/RDX ||| RCX | 32 | None ||| N/A | N/A
		0x1802ED44F ret		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.Void UICamera/GetTouchCountCallback::.ctor(System.Object,System.IntPtr):
		End of function at 0x1802ED450
		Absolute End is at 0x1802ED450
		Identified Jump Destination addresses:

		0x1802ED440: Loads the class pointer from method into a constant constant1 in register rax
		0x1802ED443: [!] Sets the field method_ptr (Type System.IntPtr) on local {'this' (function parameter, type UICamera/GetTouchCountCallback)} to the value stored in {'constant1' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)}
		0x1802ED447: [!] Sets the field method (Type System.IntPtr) on local {'this' (function parameter, type UICamera/GetTouchCountCallback)} to the value stored in {'method' (function parameter, type System.IntPtr)}
		0x1802ED44B: [!] Sets the field m_target (Type System.Object) on local {'this' (function parameter, type UICamera/GetTouchCountCallback)} to the value stored in {'object' (function parameter, type System.Object)}
		0x1802ED44F: [!] Returns from the function




	Generated Pseudocode:

	Declaring Type: UICamera/GetTouchCountCallback
	System.Void .ctor(System.Object object, System.IntPtr method)
		this.method_ptr = constant1
		this.method = method
		this.m_target = object
		return


Generated IL:
	Action of type Cpp2IL.Core.Analysis.Actions.x86.Important.RegToFieldAction at (0x1802ED443) is corrupt (ConstantDefinition: Don't know how to get IL to load a Cpp2IL.Core.Analysis.Il2CppClassIdentifier) and cannot be created as IL. Aborting here.


Method: System.Int32 UICamera/GetTouchCountCallback::Invoke():	Method Body (x86 ASM):
		0x180716910 mov [rsp+8],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RSP | 8 | None ||| N/A | N/A
		0x180716915 mov [rsp+10h],rbp		; DEBUG: {Memory}/None {Register}/RBP ||| RSP | 16 | None ||| N/A | N/A
		0x18071691A mov [rsp+18h],rsi		; DEBUG: {Memory}/None {Register}/RSI ||| RSP | 24 | None ||| N/A | N/A
		0x18071691F push rdi		; DEBUG: {Register}/RDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180716920 push r14		; DEBUG: {Register}/R14 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180716922 push r15		; DEBUG: {Register}/R15 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180716924 sub rsp,20h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 32
		0x180716928 mov rbp,rcx		; DEBUG: {Register}/RBP {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x18071692B xor ebx,ebx		; DEBUG: {Register}/EBX {Register}/EBX ||| None | 0 | None ||| N/A | N/A
		0x18071692D mov rcx,[rcx+58h]		; DEBUG: {Register}/RCX {Memory}/None ||| RCX | 88 | None ||| N/A | N/A
		0x180716931 test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x180716934 je short 000000018071693Bh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180716936 call 0000000180716910h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18071693B mov rdi,[rbp+28h]		; DEBUG: {Register}/RDI {Memory}/None ||| RBP | 40 | None ||| N/A | N/A
		0x18071693F mov r15d,0FFFFh		; DEBUG: {Register}/R15D {Immediate32}/None ||| None | 0 | None ||| N/A | 65535
		0x180716945 mov r14,[rbp+10h]		; DEBUG: {Register}/R14 {Memory}/None ||| RBP | 16 | None ||| N/A | N/A
		0x180716949 mov rsi,[rbp+20h]		; DEBUG: {Register}/RSI {Memory}/None ||| RBP | 32 | None ||| N/A | N/A
		0x18071694D cmp [rdi+48h],r15w		; DEBUG: {Memory}/None {Register}/R15W ||| RDI | 72 | None ||| N/A | N/A
		0x180716952 jne short 000000018071695Ch		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180716954 mov rcx,rdi		; DEBUG: {Register}/RCX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x180716957 call 00000001801102D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18071695C mov rcx,rdi		; DEBUG: {Register}/RCX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x18071695F call 0000000180141DF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180716964 test al,al		; DEBUG: {Register}/AL {Register}/AL ||| None | 0 | None ||| N/A | N/A
		0x180716966 jne short 000000018071697Ch		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180716968 cmp [rdi+4Ah],bl		; DEBUG: {Memory}/None {Register}/BL ||| RDI | 74 | None ||| N/A | N/A
		0x18071696B jne near ptr 0000000180716B33h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180716971 mov rcx,rdi		; DEBUG: {Register}/RCX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x180716974 call r14		; DEBUG: {Register}/R14 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180716977 jmp near ptr 0000000180716B3Ch		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18071697C cmp [rdi+48h],r15w		; DEBUG: {Memory}/None {Register}/R15W ||| RDI | 72 | None ||| N/A | N/A
		0x180716981 je near ptr 0000000180716B33h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180716987 test rsi,rsi		; DEBUG: {Register}/RSI {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x18071698A je short 000000018071699Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18071698C mov rax,[rsi]		; DEBUG: {Register}/RAX {Memory}/None ||| RSI | 0 | None ||| N/A | N/A
		0x18071698F test dword ptr [rax+108h],100h		; DEBUG: {Memory}/None {Immediate32}/None ||| RAX | 264 | None ||| N/A | 256
		0x180716999 jne near ptr 0000000180716B33h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18071699F cmp [rbp+18h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RBP | 24 | None ||| N/A | N/A
		0x1807169A3 je near ptr 0000000180716B33h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1807169A9 test rsi,rsi		; DEBUG: {Register}/RSI {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x1807169AC je short 00000001807169C4h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1807169AE mov rcx,[rsi]		; DEBUG: {Register}/RCX {Memory}/None ||| RSI | 0 | None ||| N/A | N/A
		0x1807169B1 test dword ptr [rcx+108h],100h		; DEBUG: {Memory}/None {Immediate32}/None ||| RCX | 264 | None ||| N/A | 256
		0x1807169BB je short 00000001807169C4h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1807169BD mov eax,ebx		; DEBUG: {Register}/EAX {Register}/EBX ||| None | 0 | None ||| N/A | N/A
		0x1807169BF jmp near ptr 0000000180716B3Ch		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1807169C4 mov rcx,rdi		; DEBUG: {Register}/RCX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x1807169C7 call 0000000180141DC0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1807169CC mov rcx,rdi		; DEBUG: {Register}/RCX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x1807169CF test al,al		; DEBUG: {Register}/AL {Register}/AL ||| None | 0 | None ||| N/A | N/A
		0x1807169D1 je near ptr 0000000180716A7Ch		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1807169D7 call 000000018005DA10h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1807169DC mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1807169DF call 00000001800F6DD0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1807169E4 movzx ecx,word ptr [rdi+48h]		; DEBUG: {Register}/ECX {Memory}/None ||| RDI | 72 | None ||| N/A | N/A
		0x1807169E8 test al,al		; DEBUG: {Register}/AL {Register}/AL ||| None | 0 | None ||| N/A | N/A
		0x1807169EA je near ptr 0000000180716A6Ch		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1807169F0 mov r10,[rsi]		; DEBUG: {Register}/R10 {Memory}/None ||| RSI | 0 | None ||| N/A | N/A
		0x1807169F3 mov r11d,ecx		; DEBUG: {Register}/R11D {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x1807169F6 mov r9,[rdi+18h]		; DEBUG: {Register}/R9 {Memory}/None ||| RDI | 24 | None ||| N/A | N/A
		0x1807169FA movzx edx,word ptr [r10+11Eh]		; DEBUG: {Register}/EDX {Memory}/None ||| R10 | 286 | None ||| N/A | N/A
		0x180716A02 cmp bx,dx		; DEBUG: {Register}/BX {Register}/DX ||| None | 0 | None ||| N/A | N/A
		0x180716A05 jae short 0000000180716A26h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180716A07 mov r8,[r10+0B0h]		; DEBUG: {Register}/R8 {Memory}/None ||| R10 | 176 | None ||| N/A | N/A
		0x180716A0E xchg ax,ax		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180716A10 movzx ecx,bx		; DEBUG: {Register}/ECX {Register}/BX ||| None | 0 | None ||| N/A | N/A
		0x180716A13 mov eax,ecx		; DEBUG: {Register}/EAX {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x180716A15 add rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180716A18 cmp [r8+rax*8],r9		; DEBUG: {Memory}/None {Register}/R9 ||| R8 | 0 | RAX ||| N/A | N/A
		0x180716A1C je short 0000000180716A51h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180716A1E inc bx		; DEBUG: {Register}/BX {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180716A21 cmp bx,dx		; DEBUG: {Register}/BX {Register}/DX ||| None | 0 | None ||| N/A | N/A
		0x180716A24 jb short 0000000180716A10h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180716A26 mov r8d,r11d		; DEBUG: {Register}/R8D {Register}/R11D ||| None | 0 | None ||| N/A | N/A
		0x180716A29 mov rdx,r9		; DEBUG: {Register}/RDX {Register}/R9 ||| None | 0 | None ||| N/A | N/A
		0x180716A2C mov rcx,rsi		; DEBUG: {Register}/RCX {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x180716A2F call 00000001800F5B10h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180716A34 mov rcx,[rax+8]		; DEBUG: {Register}/RCX {Memory}/None ||| RAX | 8 | None ||| N/A | N/A
		0x180716A38 mov rdx,rdi		; DEBUG: {Register}/RDX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x180716A3B call 000000018010EE60h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180716A40 mov rdx,rax		; DEBUG: {Register}/RDX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180716A43 mov rcx,rsi		; DEBUG: {Register}/RCX {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x180716A46 mov r8,[rax]		; DEBUG: {Register}/R8 {Memory}/None ||| RAX | 0 | None ||| N/A | N/A
		0x180716A49 call r8		; DEBUG: {Register}/R8 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180716A4C jmp near ptr 0000000180716B3Ch		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180716A51 add rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x180716A54 lea rax,[r10+128h]		; DEBUG: {Register}/RAX {Memory}/None ||| R10 | 296 | None ||| N/A | N/A
		0x180716A5B mov ecx,[r8+rcx*8+8]		; DEBUG: {Register}/ECX {Memory}/None ||| R8 | 8 | RCX ||| N/A | N/A
		0x180716A60 add ecx,r11d		; DEBUG: {Register}/ECX {Register}/R11D ||| None | 0 | None ||| N/A | N/A
		0x180716A63 shl rcx,4		; DEBUG: {Register}/RCX {Immediate8}/None ||| None | 0 | None ||| N/A | 4
		0x180716A67 add rax,rcx		; DEBUG: {Register}/RAX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x180716A6A jmp short 0000000180716A34h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180716A6C mov rax,[rsi]		; DEBUG: {Register}/RAX {Memory}/None ||| RSI | 0 | None ||| N/A | N/A
		0x180716A6F add rcx,13h		; DEBUG: {Register}/RCX {Immediate8to64}/None ||| None | 0 | None ||| N/A | 19
		0x180716A73 add rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x180716A76 mov rcx,[rax+rcx*8]		; DEBUG: {Register}/RCX {Memory}/None ||| RAX | 0 | RCX ||| N/A | N/A
		0x180716A7A jmp short 0000000180716A38h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180716A7C call 000000018005DA10h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180716A81 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180716A84 call 00000001800F6DD0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180716A89 test al,al		; DEBUG: {Register}/AL {Register}/AL ||| None | 0 | None ||| N/A | N/A
		0x180716A8B je near ptr 0000000180716B13h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180716A91 mov rcx,rdi		; DEBUG: {Register}/RCX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x180716A94 call 000000018005DA10h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180716A99 mov r10,[rsi]		; DEBUG: {Register}/R10 {Memory}/None ||| RSI | 0 | None ||| N/A | N/A
		0x180716A9C mov r9,rax		; DEBUG: {Register}/R9 {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180716A9F movzx r11d,word ptr [rdi+48h]		; DEBUG: {Register}/R11D {Memory}/None ||| RDI | 72 | None ||| N/A | N/A
		0x180716AA4 movzx r8d,word ptr [r10+11Eh]		; DEBUG: {Register}/R8D {Memory}/None ||| R10 | 286 | None ||| N/A | N/A
		0x180716AAC cmp bx,r8w		; DEBUG: {Register}/BX {Register}/R8W ||| None | 0 | None ||| N/A | N/A
		0x180716AB0 jae short 0000000180716AD7h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180716AB2 mov rdx,[r10+0B0h]		; DEBUG: {Register}/RDX {Memory}/None ||| R10 | 176 | None ||| N/A | N/A
		0x180716AB9 nop dword ptr [rax]		; DEBUG: {Memory}/None {Register}/None ||| RAX | 0 | None ||| N/A | N/A
		0x180716AC0 movzx ecx,bx		; DEBUG: {Register}/ECX {Register}/BX ||| None | 0 | None ||| N/A | N/A
		0x180716AC3 mov eax,ecx		; DEBUG: {Register}/EAX {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x180716AC5 add rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180716AC8 cmp [rdx+rax*8],r9		; DEBUG: {Memory}/None {Register}/R9 ||| RDX | 0 | RAX ||| N/A | N/A
		0x180716ACC je short 0000000180716AF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180716ACE inc bx		; DEBUG: {Register}/BX {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180716AD1 cmp bx,r8w		; DEBUG: {Register}/BX {Register}/R8W ||| None | 0 | None ||| N/A | N/A
		0x180716AD5 jb short 0000000180716AC0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180716AD7 mov r8d,r11d		; DEBUG: {Register}/R8D {Register}/R11D ||| None | 0 | None ||| N/A | N/A
		0x180716ADA mov rdx,r9		; DEBUG: {Register}/RDX {Register}/R9 ||| None | 0 | None ||| N/A | N/A
		0x180716ADD mov rcx,rsi		; DEBUG: {Register}/RCX {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x180716AE0 call 00000001800F5B10h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180716AE5 mov rcx,rsi		; DEBUG: {Register}/RCX {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x180716AE8 mov rdx,[rax+8]		; DEBUG: {Register}/RDX {Memory}/None ||| RAX | 8 | None ||| N/A | N/A
		0x180716AEC call qword ptr [rax]		; DEBUG: {Memory}/None {Register}/None ||| RAX | 0 | None ||| N/A | N/A
		0x180716AEE jmp short 0000000180716B3Ch		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180716AF0 add rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x180716AF3 lea rax,[r10+128h]		; DEBUG: {Register}/RAX {Memory}/None ||| R10 | 296 | None ||| N/A | N/A
		0x180716AFA mov ecx,[rdx+rcx*8+8]		; DEBUG: {Register}/ECX {Memory}/None ||| RDX | 8 | RCX ||| N/A | N/A
		0x180716AFE add ecx,r11d		; DEBUG: {Register}/ECX {Register}/R11D ||| None | 0 | None ||| N/A | N/A
		0x180716B01 shl rcx,4		; DEBUG: {Register}/RCX {Immediate8}/None ||| None | 0 | None ||| N/A | 4
		0x180716B05 add rax,rcx		; DEBUG: {Register}/RAX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x180716B08 mov rcx,rsi		; DEBUG: {Register}/RCX {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x180716B0B mov rdx,[rax+8]		; DEBUG: {Register}/RDX {Memory}/None ||| RAX | 8 | None ||| N/A | N/A
		0x180716B0F call qword ptr [rax]		; DEBUG: {Memory}/None {Register}/None ||| RAX | 0 | None ||| N/A | N/A
		0x180716B11 jmp short 0000000180716B3Ch		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180716B13 movzx r8d,word ptr [rdi+48h]		; DEBUG: {Register}/R8D {Memory}/None ||| RDI | 72 | None ||| N/A | N/A
		0x180716B18 mov rcx,rsi		; DEBUG: {Register}/RCX {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x180716B1B mov rax,[rsi]		; DEBUG: {Register}/RAX {Memory}/None ||| RSI | 0 | None ||| N/A | N/A
		0x180716B1E add r8,r8		; DEBUG: {Register}/R8 {Register}/R8 ||| None | 0 | None ||| N/A | N/A
		0x180716B21 mov rdx,[rax+r8*8+130h]		; DEBUG: {Register}/RDX {Memory}/None ||| RAX | 304 | R8 ||| N/A | N/A
		0x180716B29 call qword ptr [rax+r8*8+128h]		; DEBUG: {Memory}/None {Register}/None ||| RAX | 296 | R8 ||| N/A | N/A
		0x180716B31 jmp short 0000000180716B3Ch		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180716B33 mov rdx,rdi		; DEBUG: {Register}/RDX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x180716B36 mov rcx,rsi		; DEBUG: {Register}/RCX {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x180716B39 call r14		; DEBUG: {Register}/R14 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180716B3C mov rbx,[rsp+40h]		; DEBUG: {Register}/RBX {Memory}/None ||| RSP | 64 | None ||| N/A | N/A
		0x180716B41 mov rbp,[rsp+48h]		; DEBUG: {Register}/RBP {Memory}/None ||| RSP | 72 | None ||| N/A | N/A
		0x180716B46 mov rsi,[rsp+50h]		; DEBUG: {Register}/RSI {Memory}/None ||| RSP | 80 | None ||| N/A | N/A
		0x180716B4B add rsp,20h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 32
		0x180716B4F pop r15		; DEBUG: {Register}/R15 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180716B51 pop r14		; DEBUG: {Register}/R14 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180716B53 pop rdi		; DEBUG: {Register}/RDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180716B54 ret		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180716B55 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.Int32 UICamera/GetTouchCountCallback::Invoke():
		End of function at 0x180716B56
		Absolute End is at 0x180716B56
		Identified Jump Destination addresses:
			0x180716B3C
		0x18071691F: Saves the content of rdi to the stack
		0x180716920: Saves the content of r14 to the stack
		0x180716922: Saves the content of r15 to the stack
		0x180716928: Copies {'this' (function parameter, type UICamera/GetTouchCountCallback)} from rcx into rbp
		0x18071692B: Clears register rbx, yielding zero-local {'local1' (type System.Int32)}
		0x18071692D: [!] Reads field prev from {'this' (function parameter, type UICamera/GetTouchCountCallback)} and stores in a new local {'prev' (type System.MulticastDelegate)}

		0x180716931: [!] Compares {'prev' (type System.MulticastDelegate)} and 0
		0x180716934: Jumps to 0x18071693B (which is an if statement's body) if prev equals 0 ;  - Increasing indentation - is standard if, unimportant is False

		0x180716936: [!] Calls managed method System.Int32 UICamera/GetTouchCountCallback::Invoke() on instance {'prev' (type System.MulticastDelegate)} and stores the result in {'int32' (type System.Int32)} ;  - This is an instance method, but the type of the 'this' parameter is mismatched. Expecting GetTouchCountCallback, actually System.MulticastDelegate

		0x18071693B: [!] Reads field method from {'this' (function parameter, type UICamera/GetTouchCountCallback)} and stores in a new local {'method' (type System.IntPtr)}

		0x18071693F: [!] Writes the constant 0xFFFF into operand {'local5' (type System.UInt32)} (type UInt64) in register r15
		0x180716949: [!] Reads field m_target from {'this' (function parameter, type UICamera/GetTouchCountCallback)} and stores in a new local {'m_target' (type System.Object)}

		0x18071694D: [!] Compares  and {'local5' (type System.UInt32)}
		0x180716952: Jumps to 0x18071695C if  != {'local5' (type System.UInt32)} ;  - This is probably a goto, jumping to 0x18071695C which is after end of current block @ 0x18071693B (started at 0x180716936)

		0x180716954: Copies {'method' (type System.IntPtr)} from rdi into rcx
		0x180716957: [!] Constructs and throws an exception of kind System.ExecutionEngineException

		0x18071695C: Copies {'method' (type System.IntPtr)} from rdi into rcx
		0x180716964: [!] Compares {'local8' (type System.ExecutionEngineException)} and 0
		0x180716966: Jumps to 0x18071697C if {'local8' (type System.ExecutionEngineException)} != 0 ;  - This is probably a goto, jumping to 0x18071697C which is after end of current block @ 0x18071693B (started at 0x180716936)

		0x180716968: [!] Compares  and {'local1' (type System.Int32)}
		0x18071696B: Jumps to 0x180716B33 if  != {'local1' (type System.Int32)} ;  - This is probably a goto, jumping to 0x180716B33 which is after end of current block @ 0x18071693B (started at 0x180716936)

		0x180716971: Copies {'method' (type System.IntPtr)} from rdi into rcx
		0x180716977: Jumps to 0x180716B3C (which is an function-local jump destination)

		0x18071697C: [!] Compares  and {'local5' (type System.UInt32)}
		0x180716981: Jumps to 0x180716B33 if  equals local5 ;  - This is probably a goto, jumping to 0x180716B33 which is after end of current block @ 0x18071693B (started at 0x180716936)

		0x180716987: [!] Compares {'m_target' (type System.Object)} and 0
		0x18071698A: Jumps to 0x18071699F if m_target equals 0 ;  - This is probably a goto, jumping to 0x18071699F which is after end of current block @ 0x18071693B (started at 0x180716936)

		0x18071698C: Loads the class pointer from m_target into a constant constant4 in register rax
		0x18071698F: Compares "{il2cpp field on {'constant4' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)}, offset 0x108}" and 256
		0x180716999: Jumps to 0x180716B33 if "{il2cpp field on {'constant4' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)}, offset 0x108}" != 256 ;  - This is probably a goto, jumping to 0x180716B33 which is after end of current block @ 0x18071693B (started at 0x180716936)

		0x18071699F: [!] Compares  and {'local1' (type System.Int32)}
		0x1807169A3: Jumps to 0x180716B33 if  equals local1 ;  - This is probably a goto, jumping to 0x180716B33 which is after end of current block @ 0x18071693B (started at 0x180716936)

		0x1807169A9: [!] Compares {'m_target' (type System.Object)} and 0
		0x1807169AC: Jumps to 0x1807169C4 if m_target equals 0 ;  - This is probably a goto, jumping to 0x1807169C4 which is after end of current block @ 0x18071693B (started at 0x180716936)

		0x1807169AE: Loads the class pointer from m_target into a constant constant8 in register rcx
		0x1807169B1: Compares "{il2cpp field on {'constant8' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)}, offset 0x108}" and 256
		0x1807169BB: Jumps to 0x1807169C4 if "{il2cpp field on {'constant8' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)}, offset 0x108}" equals 256 ;  - This is probably a goto, jumping to 0x1807169C4 which is after end of current block @ 0x18071693B (started at 0x180716936)

		0x1807169BD: Copies {'local1' (type System.Int32)} from rbx into rax
		0x1807169BF: Jumps to 0x180716B3C (which is an function-local jump destination)

		0x1807169C4: Copies {'method' (type System.IntPtr)} from rdi into rcx
		0x1807169CC: Copies {'method' (type System.IntPtr)} from rdi into rcx
		0x1807169CF: [!] Compares {'local1' (type System.Int32)} and 0
		0x1807169D1: Jumps to 0x180716A7C if local1 equals 0 ;  - This is probably a goto, jumping to 0x180716A7C which is after end of current block @ 0x18071693B (started at 0x180716936)

		0x1807169D7: [!] Calls managed method  on instance {'method' (type System.IntPtr)} ;  - Failed to resolve any matching method (there are 3 at this address)

		0x1807169DC: Copies {'local1' (type System.Int32)} from rax into rcx
		0x1807169E4: [!] Reads field  from {'method' (type System.IntPtr)} and stores in a new local 

		0x1807169E8: [!] Compares {'local1' (type System.Int32)} and 0
		0x1807169EA: Jumps to 0x180716A6C if local1 equals 0 ;  - This is probably a goto, jumping to 0x180716A6C which is after end of current block @ 0x18071693B (started at 0x180716936)

		0x1807169F0: Loads the class pointer from m_target into a constant constant13 in register r10
		0x1807169F3: Copies {'local1' (type System.Int32)} from rcx into r11
		0x1807169F6: [!] Reads field  from {'method' (type System.IntPtr)} and stores in a new local 

		0x1807169FA: [!!] Reads value at unknown offset 286 (0x11E) on a klass pointer
		0x180716A02: [!] Compares {'local1' (type System.Int32)} and {'il2cppMethodInfo' (type )}
		0x180716A05: Jumps to 0x180716A26 if {'local1' (type System.Int32)} is greater than or equal to {'il2cppMethodInfo' (type )} ;  - This is probably a goto, jumping to 0x180716A26 which is after end of current block @ 0x18071693B (started at 0x180716936)

		0x180716A07: Loads the interface offsets for the class pointer to System.Object, which contains 0 offsets, and stores them as a constant constant14 in reg r8
		0x180716A10: Copies {'local1' (type System.Int32)} from rbx into rcx
		0x180716A13: Copies {'local1' (type System.Int32)} from rcx into rax
		0x180716A15: [!] Adds {'local1' (type System.Int32)} and {'local1' (type System.Int32)} and stores the result in {'local1' (type System.Int32)}
		0x180716A1C: Jumps to 0x180716A51 if local1 equals il2cppMethodInfo ;  - This is probably a goto, jumping to 0x180716A51 which is after end of current block @ 0x18071693B (started at 0x180716936)

		0x180716A1E: [!] Adds 1 to the value {'local1' (type System.Int32)}, stored in rbx
		0x180716A21: [!] Compares {'local1' (type System.Int32)} and {'il2cppMethodInfo' (type )}
		0x180716A26: Copies {'local1' (type System.Int32)} from r11 into r8
		0x180716A2C: Copies {'m_target' (type System.Object)} from rsi into rcx

		Potential Loop Start (0x180716A34):
		0x180716A34: [!] Reads field  from {'local1' (type System.Int32)} and stores in a new local 


		Potential Loop Start (0x180716A38):
		0x180716A38: Copies {'method' (type System.IntPtr)} from rdi into rdx
		0x180716A40: Copies {'local1' (type System.Int32)} from rax into rdx
		0x180716A43: Copies {'m_target' (type System.Object)} from rsi into rcx
		0x180716A46: Loads the class pointer from local1 into a constant constant15 in register r8
		0x180716A4C: Jumps to 0x180716B3C (which is an function-local jump destination)

		0x180716A51: [!] Adds {'m_target' (type System.Object)} and {'m_target' (type System.Object)} and stores the result in {'m_target' (type System.Object)}
		0x180716A5B: [!!] Reads value at unknown offset 8 (0x8) on a klass pointer
		0x180716A60: [!] Adds {'m_target' (type System.Object)} and {'local1' (type System.Int32)} and stores the result in {'m_target' (type System.Object)}
		0x180716A67: [!] Adds {'local1' (type System.Int32)} and {'m_target' (type System.Object)} and stores the result in {'local1' (type System.Int32)}
		0x180716A6A: Jumps to 0x180716A34 - which is still in this function, but further up. Probably indicative that this is a loop.
		0x180716A6C: Loads the class pointer from m_target into a constant constant16 in register rax
		0x180716A6F: Loads the pointer to the field  on {'m_target' (type System.Object)} into register rcx
		0x180716A73: [!] Adds {'m_target' (type System.Object)} and {'m_target' (type System.Object)} and stores the result in {'m_target' (type System.Object)}
		0x180716A76: [!!] Reads value at unknown offset 0 (0x0) on a klass pointer
		0x180716A7A: Jumps to 0x180716A38 - which is still in this function, but further up. Probably indicative that this is a loop.
		0x180716A7C: [!] Calls managed method  on instance {'m_target' (type System.Object)} ;  - Failed to resolve any matching method (there are 3 at this address)

		0x180716A81: Copies {'constant16' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} from rax into rcx
		0x180716A89: [!] Compares {'constant16' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} and 0
		0x180716A8B: Jumps to 0x180716B13 if constant16 equals 0 ;  - This is probably a goto, jumping to 0x180716B13 which is after end of current block @ 0x18071693B (started at 0x180716936)

		0x180716A91: Copies {'method' (type System.IntPtr)} from rdi into rcx
		0x180716A94: [!] Calls managed method  on instance {'method' (type System.IntPtr)} ;  - Failed to resolve any matching method (there are 3 at this address)

		0x180716A99: Loads the class pointer from m_target into a constant constant18 in register r10
		0x180716A9C: Copies {'constant16' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} from rax into r9
		0x180716A9F: [!] Reads field  from {'method' (type System.IntPtr)} and stores in a new local 

		0x180716AA4: [!!] Reads value at unknown offset 286 (0x11E) on a klass pointer
		0x180716AAC: [!] Compares {'local1' (type System.Int32)} and {'constant15' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)}
		0x180716AB0: Jumps to 0x180716AD7 if {'local1' (type System.Int32)} is greater than or equal to {'constant15' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} ;  - This is probably a goto, jumping to 0x180716AD7 which is after end of current block @ 0x18071693B (started at 0x180716936)

		0x180716AB2: Loads the interface offsets for the class pointer to System.Object, which contains 0 offsets, and stores them as a constant constant19 in reg rdx
		0x180716AC0: Copies {'local1' (type System.Int32)} from rbx into rcx
		0x180716AC3: Copies {'local1' (type System.Int32)} from rcx into rax
		0x180716AC5: [!] Adds {'local1' (type System.Int32)} and {'local1' (type System.Int32)} and stores the result in {'local1' (type System.Int32)}
		0x180716ACC: Jumps to 0x180716AF0 if local1 equals constant15 ;  - This is probably a goto, jumping to 0x180716AF0 which is after end of current block @ 0x18071693B (started at 0x180716936)

		0x180716ACE: [!] Adds 1 to the value {'local1' (type System.Int32)}, stored in rbx
		0x180716AD1: [!] Compares {'local1' (type System.Int32)} and {'constant15' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)}
		0x180716AD7: Copies {'local1' (type System.Int32)} from r11 into r8
		0x180716ADA: Copies {'constant16' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} from r9 into rdx
		0x180716ADD: Copies {'m_target' (type System.Object)} from rsi into rcx
		0x180716AE5: Copies {'m_target' (type System.Object)} from rsi into rcx
		0x180716AE8: [!] Reads field  from {'local1' (type System.Int32)} and stores in a new local 

		0x180716AEE: Jumps to 0x180716B3C (which is an function-local jump destination)

		0x180716AF0: [!] Adds {'m_target' (type System.Object)} and {'m_target' (type System.Object)} and stores the result in {'m_target' (type System.Object)}
		0x180716AFA: [!!] Reads value at unknown offset 8 (0x8) on a klass pointer
		0x180716AFE: [!] Adds {'m_target' (type System.Object)} and {'local1' (type System.Int32)} and stores the result in {'m_target' (type System.Object)}
		0x180716B05: [!] Adds {'local1' (type System.Int32)} and {'m_target' (type System.Object)} and stores the result in {'local1' (type System.Int32)}
		0x180716B08: Copies {'m_target' (type System.Object)} from rsi into rcx
		0x180716B0B: [!] Reads field  from {'local1' (type System.Int32)} and stores in a new local 

		0x180716B11: Jumps to 0x180716B3C (which is an function-local jump destination)

		0x180716B13: [!] Reads field  from {'method' (type System.IntPtr)} and stores in a new local 

		0x180716B18: Copies {'m_target' (type System.Object)} from rsi into rcx
		0x180716B1B: Loads the class pointer from m_target into a constant constant20 in register rax
		0x180716B1E: [!] Adds {'local1' (type System.Int32)} and {'local1' (type System.Int32)} and stores the result in {'local1' (type System.Int32)}
		0x180716B21: Loads the pointer to the implementation of virtual function  specific to System.Object from the class pointer in rax, slot -1 (from memory offset 304) and stores in constant 
		0x180716B31: Jumps to 0x180716B3C (which is an function-local jump destination)

		0x180716B33: Copies {'method' (type System.IntPtr)} from rdi into rdx
		0x180716B36: Copies {'m_target' (type System.Object)} from rsi into rcx

		Jump Destination (0x180716B3C):
		0x180716B3C: Reads unknown value in stack, offset 64 (0x40) and stores the pointer in register rbx as new constant constant21
		0x180716B41: Reads unknown value in stack, offset 72 (0x48) and stores the pointer in register rbp as new constant constant22
		0x180716B46: Reads unknown value in stack, offset 80 (0x50) and stores the pointer in register rsi as new constant constant23
		0x180716B54: [!] Returns {'constant20' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} from the function




	Generated Pseudocode:

	Declaring Type: UICamera/GetTouchCountCallback
	System.Int32 Invoke()
		ulong local1 = 0
		System.MulticastDelegate prev = this.prev

		if (prev != 0)

		    System.Int32 int32 = prev.Invoke()
		endif
        
		System.IntPtr method = this.method
		System.Int64 local5 = 0xFFFF
		System.Object m_target = this.m_target

		if ( != local5)
            goto INSN_18071695C
        endif
		throw new System.ExecutionEngineException()

		INSN_18071695C:

		if (local8 != 0)
            goto INSN_18071697C
        endif

		if ( != local1)
            goto INSN_180716B33
        endif

		INSN_18071697C:

		if ( == local5)
            goto INSN_180716B33
        endif

		if (m_target == 0)
            goto INSN_18071699F
        endif

		INSN_18071699F:

		if ( == local1)
            goto INSN_180716B33
        endif

		if (m_target == 0)
            goto INSN_1807169C4
        endif

		INSN_1807169C4:

		if (local1 == 0)
            goto INSN_180716A7C
        endif

		[instruction error - managed method being called is null]
		  = method.

		if (local1 == 0)
            goto INSN_180716A6C
        endif
		  = method.
		//UNKNOWN CLASS OFFSET READ HERE

		if (local1 >= il2cppMethodInfo)
            goto INSN_180716A26
        endif
		local1 += local1

		if (local1 == il2cppMethodInfo)
            goto INSN_180716A51
        endif
		local1 += 1

		INSN_180716A26:
		  = local1.

		INSN_180716A51:
		m_target += m_target
		//UNKNOWN CLASS OFFSET READ HERE
		m_target += local1
		local1 += m_target

		INSN_180716A6C:
		m_target += m_target
		//UNKNOWN CLASS OFFSET READ HERE

		INSN_180716A7C:

		[instruction error - managed method being called is null]

		if (constant16 == 0)
            goto INSN_180716B13
        endif

		[instruction error - managed method being called is null]
		  = method.
		//UNKNOWN CLASS OFFSET READ HERE

		if (local1 >= constant15)
            goto INSN_180716AD7
        endif
		local1 += local1

		if (local1 == constant15)
            goto INSN_180716AF0
        endif
		local1 += 1

		INSN_180716AD7:
		  = local1.

		INSN_180716AF0:
		m_target += m_target
		//UNKNOWN CLASS OFFSET READ HERE
		m_target += local1
		local1 += m_target
		  = local1.

		INSN_180716B13:
		  = method.
		local1 += local1

		INSN_180716B33:
		return constant20


Generated IL:
	Action of type Cpp2IL.Core.Analysis.Actions.x86.Important.CallManagedFunctionAction at (0x180716936) is corrupt (Mismatched instance parameter. Expecting an instance of UICamera/GetTouchCountCallback, actually {'prev' (type System.MulticastDelegate)}) and cannot be created as IL. Aborting here.


Method: System.IAsyncResult UICamera/GetTouchCountCallback::BeginInvoke(System.AsyncCallback,System.Object):	Method Body (x86 ASM):
		0x1802ED1B0 sub rsp,38h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 56
		0x1802ED1B4 mov r9,r8		; DEBUG: {Register}/R9 {Register}/R8 ||| None | 0 | None ||| N/A | N/A
		0x1802ED1B7 mov qword ptr [rsp+20h],0		; DEBUG: {Memory}/None {Immediate32to64}/None ||| RSP | 32 | None ||| N/A | 0
		0x1802ED1C0 mov r8,rdx		; DEBUG: {Register}/R8 {Register}/RDX ||| None | 0 | None ||| N/A | N/A
		0x1802ED1C3 lea rdx,[rsp+20h]		; DEBUG: {Register}/RDX {Memory}/None ||| RSP | 32 | None ||| N/A | N/A
		0x1802ED1C8 call 000000018010D170h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802ED1CD add rsp,38h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 56
		0x1802ED1D1 ret		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1802ED1D2 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.IAsyncResult UICamera/GetTouchCountCallback::BeginInvoke(System.AsyncCallback,System.Object):
		End of function at 0x1802ED1D3
		Absolute End is at 0x1802ED1D3
		Identified Jump Destination addresses:

		0x1802ED1B4: Copies {'object' (function parameter, type System.Object)} from r8 into r9
		0x1802ED1B7: Moves 0 (immediate ulong value) to the stack at offset 32 as a new local local3
		0x1802ED1C0: Copies {'callback' (function parameter, type System.AsyncCallback)} from rdx into r8
		0x1802ED1C3: Loads a pointer to stack offset 0x20 into register rdx as new constant constant1
		0x1802ED1D1: [!] Returns  from the function




	Generated Pseudocode:

	Declaring Type: UICamera/GetTouchCountCallback
	System.IAsyncResult BeginInvoke(System.AsyncCallback callback, System.Object object)
		return 


Generated IL:
	Action of type Cpp2IL.Core.Analysis.Actions.x86.Important.ReturnFromFunctionAction at (0x1802ED1D1) is corrupt (Return value is missing) and cannot be created as IL. Aborting here.


Method: System.Int32 UICamera/GetTouchCountCallback::EndInvoke(System.IAsyncResult):	Method Body (x86 ASM):
		0x1807168E0 sub rsp,28h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 40
		0x1807168E4 mov rcx,rdx		; DEBUG: {Register}/RCX {Register}/RDX ||| None | 0 | None ||| N/A | N/A
		0x1807168E7 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1807168E9 call 000000018010DD90h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1807168EE test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1807168F1 je short 0000000180716902h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1807168F3 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1807168F6 call 000000018013ADF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1807168FB mov eax,[rax]		; DEBUG: {Register}/EAX {Memory}/None ||| RAX | 0 | None ||| N/A | N/A
		0x1807168FD add rsp,28h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 40
		0x180716901 ret		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180716902 xor ecx,ecx		; DEBUG: {Register}/ECX {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x180716904 call 000000018012BDA0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180716909 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.Int32 UICamera/GetTouchCountCallback::EndInvoke(System.IAsyncResult):
		End of function at 0x18071690A
		Absolute End is at 0x18071690A
		Identified Jump Destination addresses:

		0x1807168E4: Copies {'result' (function parameter, type System.IAsyncResult)} from rdx into rcx
		0x1807168EE: [!] Compares  and 0
		0x1807168F1: Jumps to 0x180716902 (which throws a NRE) if  equals 0. Implicitly present in managed code, so ignored here.
		0x1807168FB: Dereference and moves local result to local3
		0x180716901: [!] Returns {'local3' (type System.IAsyncResult)} from the function

		0x180716904: [!] Constructs and throws an exception of kind System.NullReferenceException




	Generated Pseudocode:

	Declaring Type: UICamera/GetTouchCountCallback
	System.Int32 EndInvoke(System.IAsyncResult result)
		local3 = result
		return local3
		throw new System.NullReferenceException()


Generated IL:
	Action of type Cpp2IL.Core.Analysis.Actions.x86.ReadLocalPointerToRegAction at (0x1807168FB) is corrupt (Local being dereferenced was stripped) and cannot be created as IL. Aborting here.


