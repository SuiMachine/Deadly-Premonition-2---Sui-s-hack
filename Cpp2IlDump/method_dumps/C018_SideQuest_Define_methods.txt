Type: C018_SideQuest_Define

Method: System.Void C018_SideQuest_Define::.ctor():	Method Body (x86 ASM):
		0x1802068B0 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1802068B2 jmp near ptr 0000000180207540h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802068B7 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.Void C018_SideQuest_Define::.ctor():
		End of function at 0x1802068B8
		Absolute End is at 0x1802068B8
		Identified Jump Destination addresses:

		0x1802068B2: [!] Calls managed method System.Void System.Object::.ctor() on instance {'this' (function parameter, type C018_SideQuest_Define)}

		0x1802068B2: [!] Returns from the function




	Generated Pseudocode:

	Declaring Type: C018_SideQuest_Define
	System.Void .ctor()

		base..ctor()
		return


Generated IL:
	IL_0000: ldarg.0
	IL_0001: call System.Void System.Object::.ctor()
	IL_0006: ret
	

Method: System.Void C018_SideQuest_Define::.cctor():	Method Body (x86 ASM):
		0x180552C30 mov [rsp+8],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RSP | 8 | None ||| N/A | N/A
		0x180552C35 push rdi		; DEBUG: {Register}/RDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180552C36 sub rsp,20h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 32
		0x180552C3A cmp byte ptr [18183EAFEh],0		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6467873534 | None ||| N/A | 0
		0x180552C41 jne short 0000000180552C55h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180552C43 mov ecx,[181515FACh]		; DEBUG: {Register}/ECX {Memory}/None ||| RIP | 6464561068 | None ||| N/A | N/A
		0x180552C49 call 00000001800FEB90h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180552C4E mov byte ptr [18183EAFEh],1		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6467873534 | None ||| N/A | 1
		0x180552C55 mov rcx,[181884F78h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468161400 | None ||| N/A | N/A
		0x180552C5C mov edx,12h		; DEBUG: {Register}/EDX {Immediate32}/None ||| None | 0 | None ||| N/A | 18
		0x180552C61 call 0000000180141320h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180552C66 mov rcx,[181884228h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468157992 | None ||| N/A | N/A
		0x180552C6D mov rdi,rax		; DEBUG: {Register}/RDI {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180552C70 mov rbx,[181871188h]		; DEBUG: {Register}/RBX {Memory}/None ||| RIP | 6468080008 | None ||| N/A | N/A
		0x180552C77 test byte ptr [rcx+127h],2		; DEBUG: {Memory}/None {Immediate8}/None ||| RCX | 295 | None ||| N/A | 2
		0x180552C7E je short 0000000180552C8Eh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180552C80 cmp dword ptr [rcx+0D8h],0		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RCX | 216 | None ||| N/A | 0
		0x180552C87 jne short 0000000180552C8Eh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180552C89 call 000000018010EAF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180552C8E xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180552C90 mov rcx,rbx		; DEBUG: {Register}/RCX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x180552C93 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180552C98 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180552C9B test rdi,rdi		; DEBUG: {Register}/RDI {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x180552C9E je near ptr 000000018055307Eh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180552CA4 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180552CA7 je short 0000000180552CC1h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180552CA9 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x180552CAC mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180552CAF mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x180552CB3 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180552CB8 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180552CBB je near ptr 0000000180553086h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180552CC1 cmp dword ptr [rdi+18h],1		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 1
		0x180552CC5 jbe near ptr 0000000180553099h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180552CCB mov [rdi+28h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 40 | None ||| N/A | N/A
		0x180552CCF xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180552CD1 mov rcx,[1818711A8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468080040 | None ||| N/A | N/A
		0x180552CD8 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180552CDD mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180552CE0 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180552CE3 je short 0000000180552CFDh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180552CE5 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x180552CE8 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180552CEB mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x180552CEF call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180552CF4 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180552CF7 je near ptr 00000001805530ACh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180552CFD cmp dword ptr [rdi+18h],2		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 2
		0x180552D01 jbe near ptr 00000001805530BFh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180552D07 mov [rdi+30h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 48 | None ||| N/A | N/A
		0x180552D0B xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180552D0D mov rcx,[1818711F0h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468080112 | None ||| N/A | N/A
		0x180552D14 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180552D19 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180552D1C test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180552D1F je short 0000000180552D39h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180552D21 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x180552D24 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180552D27 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x180552D2B call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180552D30 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180552D33 je near ptr 00000001805530D2h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180552D39 cmp dword ptr [rdi+18h],3		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 3
		0x180552D3D jbe near ptr 00000001805530E5h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180552D43 mov [rdi+38h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 56 | None ||| N/A | N/A
		0x180552D47 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180552D49 mov rcx,[181871218h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468080152 | None ||| N/A | N/A
		0x180552D50 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180552D55 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180552D58 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180552D5B je short 0000000180552D75h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180552D5D mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x180552D60 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180552D63 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x180552D67 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180552D6C test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180552D6F je near ptr 00000001805530F8h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180552D75 cmp dword ptr [rdi+18h],4		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 4
		0x180552D79 jbe near ptr 000000018055310Bh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180552D7F mov [rdi+40h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 64 | None ||| N/A | N/A
		0x180552D83 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180552D85 mov rcx,[181871238h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468080184 | None ||| N/A | N/A
		0x180552D8C call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180552D91 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180552D94 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180552D97 je short 0000000180552DB1h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180552D99 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x180552D9C mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180552D9F mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x180552DA3 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180552DA8 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180552DAB je near ptr 000000018055311Eh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180552DB1 cmp dword ptr [rdi+18h],5		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 5
		0x180552DB5 jbe near ptr 0000000180553131h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180552DBB mov [rdi+48h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 72 | None ||| N/A | N/A
		0x180552DBF xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180552DC1 mov rcx,[181871250h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468080208 | None ||| N/A | N/A
		0x180552DC8 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180552DCD mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180552DD0 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180552DD3 je short 0000000180552DEDh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180552DD5 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x180552DD8 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180552DDB mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x180552DDF call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180552DE4 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180552DE7 je near ptr 0000000180553144h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180552DED cmp dword ptr [rdi+18h],6		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 6
		0x180552DF1 jbe near ptr 0000000180553157h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180552DF7 mov [rdi+50h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 80 | None ||| N/A | N/A
		0x180552DFB xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180552DFD mov rcx,[181871278h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468080248 | None ||| N/A | N/A
		0x180552E04 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180552E09 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180552E0C test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180552E0F je short 0000000180552E29h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180552E11 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x180552E14 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180552E17 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x180552E1B call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180552E20 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180552E23 je near ptr 000000018055316Ah		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180552E29 cmp dword ptr [rdi+18h],7		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 7
		0x180552E2D jbe near ptr 000000018055317Dh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180552E33 mov [rdi+58h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 88 | None ||| N/A | N/A
		0x180552E37 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180552E39 mov rcx,[1818712B8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468080312 | None ||| N/A | N/A
		0x180552E40 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180552E45 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180552E48 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180552E4B je short 0000000180552E65h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180552E4D mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x180552E50 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180552E53 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x180552E57 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180552E5C test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180552E5F je near ptr 0000000180553190h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180552E65 cmp dword ptr [rdi+18h],8		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 8
		0x180552E69 jbe near ptr 00000001805531A3h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180552E6F mov [rdi+60h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 96 | None ||| N/A | N/A
		0x180552E73 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180552E75 mov rcx,[1818712C8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468080328 | None ||| N/A | N/A
		0x180552E7C call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180552E81 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180552E84 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180552E87 je short 0000000180552EA1h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180552E89 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x180552E8C mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180552E8F mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x180552E93 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180552E98 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180552E9B je near ptr 00000001805531B6h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180552EA1 cmp dword ptr [rdi+18h],9		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 9
		0x180552EA5 jbe near ptr 00000001805531C9h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180552EAB mov [rdi+68h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 104 | None ||| N/A | N/A
		0x180552EAF xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180552EB1 mov rcx,[1818712F8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468080376 | None ||| N/A | N/A
		0x180552EB8 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180552EBD mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180552EC0 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180552EC3 je short 0000000180552EDDh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180552EC5 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x180552EC8 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180552ECB mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x180552ECF call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180552ED4 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180552ED7 je near ptr 00000001805531DCh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180552EDD cmp dword ptr [rdi+18h],0Ah		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 10
		0x180552EE1 jbe near ptr 00000001805531EFh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180552EE7 mov [rdi+70h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 112 | None ||| N/A | N/A
		0x180552EEB xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180552EED mov rcx,[181871318h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468080408 | None ||| N/A | N/A
		0x180552EF4 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180552EF9 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180552EFC test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180552EFF je short 0000000180552F19h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180552F01 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x180552F04 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180552F07 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x180552F0B call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180552F10 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180552F13 je near ptr 0000000180553202h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180552F19 cmp dword ptr [rdi+18h],0Bh		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 11
		0x180552F1D jbe near ptr 0000000180553215h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180552F23 mov [rdi+78h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 120 | None ||| N/A | N/A
		0x180552F27 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180552F29 mov rcx,[181871348h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468080456 | None ||| N/A | N/A
		0x180552F30 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180552F35 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180552F38 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180552F3B je short 0000000180552F55h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180552F3D mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x180552F40 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180552F43 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x180552F47 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180552F4C test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180552F4F je near ptr 0000000180553228h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180552F55 cmp dword ptr [rdi+18h],0Ch		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 12
		0x180552F59 jbe near ptr 000000018055323Bh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180552F5F mov [rdi+80h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 128 | None ||| N/A | N/A
		0x180552F66 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180552F68 mov rcx,[181871370h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468080496 | None ||| N/A | N/A
		0x180552F6F call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180552F74 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180552F77 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180552F7A je short 0000000180552F94h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180552F7C mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x180552F7F mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180552F82 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x180552F86 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180552F8B test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180552F8E je near ptr 000000018055324Eh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180552F94 cmp dword ptr [rdi+18h],0Dh		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 13
		0x180552F98 jbe near ptr 0000000180553261h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180552F9E mov [rdi+88h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 136 | None ||| N/A | N/A
		0x180552FA5 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180552FA7 mov rcx,[181871390h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468080528 | None ||| N/A | N/A
		0x180552FAE call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180552FB3 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180552FB6 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180552FB9 je short 0000000180552FD3h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180552FBB mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x180552FBE mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180552FC1 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x180552FC5 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180552FCA test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180552FCD je near ptr 0000000180553274h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180552FD3 cmp dword ptr [rdi+18h],0Eh		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 14
		0x180552FD7 jbe near ptr 0000000180553287h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180552FDD mov [rdi+90h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 144 | None ||| N/A | N/A
		0x180552FE4 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180552FE6 mov rcx,[1818713D0h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468080592 | None ||| N/A | N/A
		0x180552FED call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180552FF2 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180552FF5 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180552FF8 je short 0000000180553012h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180552FFA mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x180552FFD mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180553000 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x180553004 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180553009 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18055300C je near ptr 000000018055329Ah		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180553012 cmp dword ptr [rdi+18h],0Fh		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 15
		0x180553016 jbe near ptr 00000001805532ADh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18055301C mov [rdi+98h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 152 | None ||| N/A | N/A
		0x180553023 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180553025 mov rcx,[1818713E0h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468080608 | None ||| N/A | N/A
		0x18055302C call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180553031 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180553034 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180553037 je short 0000000180553051h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180553039 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18055303C mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18055303F mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x180553043 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180553048 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18055304B je near ptr 00000001805532C0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180553051 cmp dword ptr [rdi+18h],10h		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 16
		0x180553055 jbe near ptr 00000001805532D3h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18055305B mov [rdi+0A0h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 160 | None ||| N/A | N/A
		0x180553062 mov rax,[18189B960h]		; DEBUG: {Register}/RAX {Memory}/None ||| RIP | 6468254048 | None ||| N/A | N/A
		0x180553069 mov rbx,[rsp+30h]		; DEBUG: {Register}/RBX {Memory}/None ||| RSP | 48 | None ||| N/A | N/A
		0x18055306E mov rcx,[rax+0B8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RAX | 184 | None ||| N/A | N/A
		0x180553075 mov [rcx],rdi		; DEBUG: {Memory}/None {Register}/RDI ||| RCX | 0 | None ||| N/A | N/A
		0x180553078 add rsp,20h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 32
		0x18055307C pop rdi		; DEBUG: {Register}/RDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18055307D ret		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18055307E xor ecx,ecx		; DEBUG: {Register}/ECX {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x180553080 call 000000018012BDA0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180553085 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180553086 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18055308B mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18055308E xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x180553091 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180553093 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180553098 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805530AC call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805530B1 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805530B4 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805530B7 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805530B9 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805530BE int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805530D2 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805530D7 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805530DA xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805530DD xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805530DF call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805530E4 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805530F8 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805530FD mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180553100 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x180553103 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180553105 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18055310A int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18055311E call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180553123 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180553126 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x180553129 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18055312B call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180553130 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180553144 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180553149 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18055314C xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18055314F xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180553151 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180553156 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18055316A call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18055316F mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180553172 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x180553175 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180553177 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18055317C int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180553190 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180553195 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180553198 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18055319B xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18055319D call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805531A2 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805531B6 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805531BB mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805531BE xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805531C1 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805531C3 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805531C8 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805531DC call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805531E1 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805531E4 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805531E7 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805531E9 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805531EE int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180553202 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180553207 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18055320A xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18055320D xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18055320F call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180553214 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180553228 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18055322D mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180553230 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x180553233 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180553235 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18055323A int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18055324E call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180553253 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180553256 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x180553259 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18055325B call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180553260 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180553274 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180553279 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18055327C xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18055327F xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180553281 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180553286 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18055329A call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18055329F mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805532A2 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805532A5 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805532A7 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805532AC int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805532C0 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805532C5 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805532C8 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805532CB xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805532CD call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805532D2 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Static Method System.Void C018_SideQuest_Define::.cctor():
		End of function at 0x1805532D3
		Absolute End is at 0x1805532D3
		Identified Jump Destination addresses:

		0x180552C35: Saves the content of rdi to the stack
		0x180552C3A: Compares {Unknown Global at 0x18183EAFE, first ten bytes are [1 0 224 60 103 1 80 202 1 0], or as chars " à<gPÊ "} and 0
		0x180552C41: Jumps to 0x180552C55 if {Unknown Global at 0x18183EAFE, first ten bytes are [1 0 224 60 103 1 80 202 1 0], or as chars " à<gPÊ "} != 0

		0x180552C43: Loads string "ä" into register rcx as constant {'constant3' (constant value of type Cpp2IL.Core.Analysis.ResultModels.Il2CppString)}
		0x180552C49: Attempts to load the il2cpp metadata for this method (method id 0) and init it cpp-side.

		0x180552C55: Loads the type definition for managed type System.Type[] as a constant "Type[]" in rcx
		0x180552C5C: [!] Writes the constant 0x12 into operand 18 (type UInt64) in register rdx
		0x180552C61: [!] Allocates an array of type System.Type[] of size 18 and stores the result as local0 in register rax

		0x180552C66: Loads the type definition for managed type System.Type as a constant "Type" in rcx
		0x180552C6D: Copies {'local0' (type System.Type[])} from rax into rdi
		0x180552C70: Loads the type definition for managed type ESerifSideQ_Pol_C018_1000 as a constant "ESerifSideQ_Pol_C018_1000" in rbx
		0x180552C77: Compares "{il2cpp field on {'Type' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" and 2
		0x180552C7E: Jumps to 0x180552C8E if "{il2cpp field on {'Type' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" equals 2

		0x180552C80: Compares "{il2cpp field on {'Type' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" and 0
		0x180552C87: Jumps to 0x180552C8E if "{il2cpp field on {'Type' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" != 0

		0x180552C89: Calls the il2cpp cctor for the type System.Type
		0x180552C90: Copies {'ESerifSideQ_Pol_C018_1000' (constant value of type Mono.Cecil.TypeReference)} from rbx into rcx
		0x180552C93: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C018_1000' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle' (type System.Type)}

		0x180552C98: Copies {'typeFromHandle' (type System.Type)} from rax into rbx
		0x180552C9B: [!] Compares {'local0' (type System.Type[])} and 0
		0x180552C9E: Jumps to 0x18055307E (which throws a NRE) if local0 equals 0. Implicitly present in managed code, so ignored here.
		0x180552CA4: [!] Compares {'typeFromHandle' (type System.Type)} and 0
		0x180552CA7: Jumps to 0x180552CC1 (which is an if statement's body) if typeFromHandle equals 0 ;  - Increasing indentation - is standard if, unimportant is False

		0x180552CA9: Loads the class pointer from local0 into a constant constant14 in register rdx
		0x180552CAC: Copies {'typeFromHandle' (type System.Type)} from rax into rcx
		0x180552CAF: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x180552CB8: [!] Compares {'typeFromHandle' (type System.Type)} and 0
		0x180552CBB: Jumps to 0x180553086 if typeFromHandle equals 0 ;  - This is probably a goto, jumping to 0x180553086 which is after end of current block @ 0x180552CC1 (started at 0x180552CA9)

		0x180552CC1: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 1
		0x180552CC5: Jumps to 0x180553099 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 1. Implicitly present in managed code, so ignored here.
		0x180552CCB: Sets the value at offset 1 in array local0 to {'typeFromHandle' (type System.Type)}
		0x180552CD1: Loads the type definition for managed type ESerifSideQ_Pol_C018_1001 as a constant "ESerifSideQ_Pol_C018_1001" in rcx
		0x180552CD8: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C018_1001' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle2' (type System.Type)}

		0x180552CDD: Copies {'typeFromHandle2' (type System.Type)} from rax into rbx
		0x180552CE0: [!] Compares {'typeFromHandle2' (type System.Type)} and 0
		0x180552CE3: Jumps to 0x180552CFD if typeFromHandle2 equals 0 ;  - This is probably a goto, jumping to 0x180552CFD which is after end of current block @ 0x180552CC1 (started at 0x180552CA9)

		0x180552CE5: Loads the class pointer from local0 into a constant constant19 in register rdx
		0x180552CE8: Copies {'typeFromHandle2' (type System.Type)} from rax into rcx
		0x180552CEB: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x180552CF4: [!] Compares {'typeFromHandle2' (type System.Type)} and 0
		0x180552CF7: Jumps to 0x1805530AC if typeFromHandle2 equals 0 ;  - This is probably a goto, jumping to 0x1805530AC which is after end of current block @ 0x180552CC1 (started at 0x180552CA9)

		0x180552CFD: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 2
		0x180552D01: Jumps to 0x1805530BF (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 2. Implicitly present in managed code, so ignored here.
		0x180552D07: Sets the value at offset 2 in array local0 to {'typeFromHandle2' (type System.Type)}
		0x180552D0D: Loads the type definition for managed type ESerifSideQ_Pol_C018_1002 as a constant "ESerifSideQ_Pol_C018_1002" in rcx
		0x180552D14: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C018_1002' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle3' (type System.Type)}

		0x180552D19: Copies {'typeFromHandle3' (type System.Type)} from rax into rbx
		0x180552D1C: [!] Compares {'typeFromHandle3' (type System.Type)} and 0
		0x180552D1F: Jumps to 0x180552D39 if typeFromHandle3 equals 0 ;  - This is probably a goto, jumping to 0x180552D39 which is after end of current block @ 0x180552CC1 (started at 0x180552CA9)

		0x180552D21: Loads the class pointer from local0 into a constant constant24 in register rdx
		0x180552D24: Copies {'typeFromHandle3' (type System.Type)} from rax into rcx
		0x180552D27: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x180552D30: [!] Compares {'typeFromHandle3' (type System.Type)} and 0
		0x180552D33: Jumps to 0x1805530D2 if typeFromHandle3 equals 0 ;  - This is probably a goto, jumping to 0x1805530D2 which is after end of current block @ 0x180552CC1 (started at 0x180552CA9)

		0x180552D39: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 3
		0x180552D3D: Jumps to 0x1805530E5 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 3. Implicitly present in managed code, so ignored here.
		0x180552D43: Sets the value at offset 3 in array local0 to {'typeFromHandle3' (type System.Type)}
		0x180552D49: Loads the type definition for managed type ESerifSideQ_Pol_C018_1003 as a constant "ESerifSideQ_Pol_C018_1003" in rcx
		0x180552D50: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C018_1003' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle4' (type System.Type)}

		0x180552D55: Copies {'typeFromHandle4' (type System.Type)} from rax into rbx
		0x180552D58: [!] Compares {'typeFromHandle4' (type System.Type)} and 0
		0x180552D5B: Jumps to 0x180552D75 if typeFromHandle4 equals 0 ;  - This is probably a goto, jumping to 0x180552D75 which is after end of current block @ 0x180552CC1 (started at 0x180552CA9)

		0x180552D5D: Loads the class pointer from local0 into a constant constant29 in register rdx
		0x180552D60: Copies {'typeFromHandle4' (type System.Type)} from rax into rcx
		0x180552D63: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x180552D6C: [!] Compares {'typeFromHandle4' (type System.Type)} and 0
		0x180552D6F: Jumps to 0x1805530F8 if typeFromHandle4 equals 0 ;  - This is probably a goto, jumping to 0x1805530F8 which is after end of current block @ 0x180552CC1 (started at 0x180552CA9)

		0x180552D75: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 4
		0x180552D79: Jumps to 0x18055310B (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 4. Implicitly present in managed code, so ignored here.
		0x180552D7F: Sets the value at offset 4 in array local0 to {'typeFromHandle4' (type System.Type)}
		0x180552D85: Loads the type definition for managed type ESerifSideQ_Pol_C018_1004 as a constant "ESerifSideQ_Pol_C018_1004" in rcx
		0x180552D8C: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C018_1004' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle5' (type System.Type)}

		0x180552D91: Copies {'typeFromHandle5' (type System.Type)} from rax into rbx
		0x180552D94: [!] Compares {'typeFromHandle5' (type System.Type)} and 0
		0x180552D97: Jumps to 0x180552DB1 if typeFromHandle5 equals 0 ;  - This is probably a goto, jumping to 0x180552DB1 which is after end of current block @ 0x180552CC1 (started at 0x180552CA9)

		0x180552D99: Loads the class pointer from local0 into a constant constant34 in register rdx
		0x180552D9C: Copies {'typeFromHandle5' (type System.Type)} from rax into rcx
		0x180552D9F: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x180552DA8: [!] Compares {'typeFromHandle5' (type System.Type)} and 0
		0x180552DAB: Jumps to 0x18055311E if typeFromHandle5 equals 0 ;  - This is probably a goto, jumping to 0x18055311E which is after end of current block @ 0x180552CC1 (started at 0x180552CA9)

		0x180552DB1: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 5
		0x180552DB5: Jumps to 0x180553131 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 5. Implicitly present in managed code, so ignored here.
		0x180552DBB: Sets the value at offset 5 in array local0 to {'typeFromHandle5' (type System.Type)}
		0x180552DC1: Loads the type definition for managed type ESerifSideQ_Pol_C018_1005 as a constant "ESerifSideQ_Pol_C018_1005" in rcx
		0x180552DC8: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C018_1005' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle6' (type System.Type)}

		0x180552DCD: Copies {'typeFromHandle6' (type System.Type)} from rax into rbx
		0x180552DD0: [!] Compares {'typeFromHandle6' (type System.Type)} and 0
		0x180552DD3: Jumps to 0x180552DED if typeFromHandle6 equals 0 ;  - This is probably a goto, jumping to 0x180552DED which is after end of current block @ 0x180552CC1 (started at 0x180552CA9)

		0x180552DD5: Loads the class pointer from local0 into a constant constant39 in register rdx
		0x180552DD8: Copies {'typeFromHandle6' (type System.Type)} from rax into rcx
		0x180552DDB: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x180552DE4: [!] Compares {'typeFromHandle6' (type System.Type)} and 0
		0x180552DE7: Jumps to 0x180553144 if typeFromHandle6 equals 0 ;  - This is probably a goto, jumping to 0x180553144 which is after end of current block @ 0x180552CC1 (started at 0x180552CA9)

		0x180552DED: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 6
		0x180552DF1: Jumps to 0x180553157 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 6. Implicitly present in managed code, so ignored here.
		0x180552DF7: Sets the value at offset 6 in array local0 to {'typeFromHandle6' (type System.Type)}
		0x180552DFD: Loads the type definition for managed type ESerifSideQ_Pol_C018_1006 as a constant "ESerifSideQ_Pol_C018_1006" in rcx
		0x180552E04: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C018_1006' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle7' (type System.Type)}

		0x180552E09: Copies {'typeFromHandle7' (type System.Type)} from rax into rbx
		0x180552E0C: [!] Compares {'typeFromHandle7' (type System.Type)} and 0
		0x180552E0F: Jumps to 0x180552E29 if typeFromHandle7 equals 0 ;  - This is probably a goto, jumping to 0x180552E29 which is after end of current block @ 0x180552CC1 (started at 0x180552CA9)

		0x180552E11: Loads the class pointer from local0 into a constant constant44 in register rdx
		0x180552E14: Copies {'typeFromHandle7' (type System.Type)} from rax into rcx
		0x180552E17: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x180552E20: [!] Compares {'typeFromHandle7' (type System.Type)} and 0
		0x180552E23: Jumps to 0x18055316A if typeFromHandle7 equals 0 ;  - This is probably a goto, jumping to 0x18055316A which is after end of current block @ 0x180552CC1 (started at 0x180552CA9)

		0x180552E29: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 7
		0x180552E2D: Jumps to 0x18055317D (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 7. Implicitly present in managed code, so ignored here.
		0x180552E33: Sets the value at offset 7 in array local0 to {'typeFromHandle7' (type System.Type)}
		0x180552E39: Loads the type definition for managed type ESerifSideQ_Pol_C018_1007 as a constant "ESerifSideQ_Pol_C018_1007" in rcx
		0x180552E40: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C018_1007' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle8' (type System.Type)}

		0x180552E45: Copies {'typeFromHandle8' (type System.Type)} from rax into rbx
		0x180552E48: [!] Compares {'typeFromHandle8' (type System.Type)} and 0
		0x180552E4B: Jumps to 0x180552E65 if typeFromHandle8 equals 0 ;  - This is probably a goto, jumping to 0x180552E65 which is after end of current block @ 0x180552CC1 (started at 0x180552CA9)

		0x180552E4D: Loads the class pointer from local0 into a constant constant49 in register rdx
		0x180552E50: Copies {'typeFromHandle8' (type System.Type)} from rax into rcx
		0x180552E53: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x180552E5C: [!] Compares {'typeFromHandle8' (type System.Type)} and 0
		0x180552E5F: Jumps to 0x180553190 if typeFromHandle8 equals 0 ;  - This is probably a goto, jumping to 0x180553190 which is after end of current block @ 0x180552CC1 (started at 0x180552CA9)

		0x180552E65: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 8
		0x180552E69: Jumps to 0x1805531A3 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 8. Implicitly present in managed code, so ignored here.
		0x180552E6F: Sets the value at offset 8 in array local0 to {'typeFromHandle8' (type System.Type)}
		0x180552E75: Loads the type definition for managed type ESerifSideQ_Pol_C018_2000 as a constant "ESerifSideQ_Pol_C018_2000" in rcx
		0x180552E7C: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C018_2000' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle9' (type System.Type)}

		0x180552E81: Copies {'typeFromHandle9' (type System.Type)} from rax into rbx
		0x180552E84: [!] Compares {'typeFromHandle9' (type System.Type)} and 0
		0x180552E87: Jumps to 0x180552EA1 if typeFromHandle9 equals 0 ;  - This is probably a goto, jumping to 0x180552EA1 which is after end of current block @ 0x180552CC1 (started at 0x180552CA9)

		0x180552E89: Loads the class pointer from local0 into a constant constant54 in register rdx
		0x180552E8C: Copies {'typeFromHandle9' (type System.Type)} from rax into rcx
		0x180552E8F: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x180552E98: [!] Compares {'typeFromHandle9' (type System.Type)} and 0
		0x180552E9B: Jumps to 0x1805531B6 if typeFromHandle9 equals 0 ;  - This is probably a goto, jumping to 0x1805531B6 which is after end of current block @ 0x180552CC1 (started at 0x180552CA9)

		0x180552EA1: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 9
		0x180552EA5: Jumps to 0x1805531C9 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 9. Implicitly present in managed code, so ignored here.
		0x180552EAB: Sets the value at offset 9 in array local0 to {'typeFromHandle9' (type System.Type)}
		0x180552EB1: Loads the type definition for managed type ESerifSideQ_Pol_C018_2001 as a constant "ESerifSideQ_Pol_C018_2001" in rcx
		0x180552EB8: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C018_2001' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle10' (type System.Type)}

		0x180552EBD: Copies {'typeFromHandle10' (type System.Type)} from rax into rbx
		0x180552EC0: [!] Compares {'typeFromHandle10' (type System.Type)} and 0
		0x180552EC3: Jumps to 0x180552EDD if typeFromHandle10 equals 0 ;  - This is probably a goto, jumping to 0x180552EDD which is after end of current block @ 0x180552CC1 (started at 0x180552CA9)

		0x180552EC5: Loads the class pointer from local0 into a constant constant59 in register rdx
		0x180552EC8: Copies {'typeFromHandle10' (type System.Type)} from rax into rcx
		0x180552ECB: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x180552ED4: [!] Compares {'typeFromHandle10' (type System.Type)} and 0
		0x180552ED7: Jumps to 0x1805531DC if typeFromHandle10 equals 0 ;  - This is probably a goto, jumping to 0x1805531DC which is after end of current block @ 0x180552CC1 (started at 0x180552CA9)

		0x180552EDD: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 10
		0x180552EE1: Jumps to 0x1805531EF (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 10. Implicitly present in managed code, so ignored here.
		0x180552EE7: Sets the value at offset 10 in array local0 to {'typeFromHandle10' (type System.Type)}
		0x180552EED: Loads the type definition for managed type ESerifSideQ_Pol_C018_2002 as a constant "ESerifSideQ_Pol_C018_2002" in rcx
		0x180552EF4: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C018_2002' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle11' (type System.Type)}

		0x180552EF9: Copies {'typeFromHandle11' (type System.Type)} from rax into rbx
		0x180552EFC: [!] Compares {'typeFromHandle11' (type System.Type)} and 0
		0x180552EFF: Jumps to 0x180552F19 if typeFromHandle11 equals 0 ;  - This is probably a goto, jumping to 0x180552F19 which is after end of current block @ 0x180552CC1 (started at 0x180552CA9)

		0x180552F01: Loads the class pointer from local0 into a constant constant64 in register rdx
		0x180552F04: Copies {'typeFromHandle11' (type System.Type)} from rax into rcx
		0x180552F07: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x180552F10: [!] Compares {'typeFromHandle11' (type System.Type)} and 0
		0x180552F13: Jumps to 0x180553202 if typeFromHandle11 equals 0 ;  - This is probably a goto, jumping to 0x180553202 which is after end of current block @ 0x180552CC1 (started at 0x180552CA9)

		0x180552F19: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 11
		0x180552F1D: Jumps to 0x180553215 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 11. Implicitly present in managed code, so ignored here.
		0x180552F23: Sets the value at offset 11 in array local0 to {'typeFromHandle11' (type System.Type)}
		0x180552F29: Loads the type definition for managed type ESerifSideQ_Pol_C018_2003 as a constant "ESerifSideQ_Pol_C018_2003" in rcx
		0x180552F30: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C018_2003' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle12' (type System.Type)}

		0x180552F35: Copies {'typeFromHandle12' (type System.Type)} from rax into rbx
		0x180552F38: [!] Compares {'typeFromHandle12' (type System.Type)} and 0
		0x180552F3B: Jumps to 0x180552F55 if typeFromHandle12 equals 0 ;  - This is probably a goto, jumping to 0x180552F55 which is after end of current block @ 0x180552CC1 (started at 0x180552CA9)

		0x180552F3D: Loads the class pointer from local0 into a constant constant69 in register rdx
		0x180552F40: Copies {'typeFromHandle12' (type System.Type)} from rax into rcx
		0x180552F43: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x180552F4C: [!] Compares {'typeFromHandle12' (type System.Type)} and 0
		0x180552F4F: Jumps to 0x180553228 if typeFromHandle12 equals 0 ;  - This is probably a goto, jumping to 0x180553228 which is after end of current block @ 0x180552CC1 (started at 0x180552CA9)

		0x180552F55: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 12
		0x180552F59: Jumps to 0x18055323B (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 12. Implicitly present in managed code, so ignored here.
		0x180552F5F: Sets the value at offset 12 in array local0 to {'typeFromHandle12' (type System.Type)}
		0x180552F68: Loads the type definition for managed type ESerifSideQ_Pol_C018_3000 as a constant "ESerifSideQ_Pol_C018_3000" in rcx
		0x180552F6F: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C018_3000' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle13' (type System.Type)}

		0x180552F74: Copies {'typeFromHandle13' (type System.Type)} from rax into rbx
		0x180552F77: [!] Compares {'typeFromHandle13' (type System.Type)} and 0
		0x180552F7A: Jumps to 0x180552F94 if typeFromHandle13 equals 0 ;  - This is probably a goto, jumping to 0x180552F94 which is after end of current block @ 0x180552CC1 (started at 0x180552CA9)

		0x180552F7C: Loads the class pointer from local0 into a constant constant74 in register rdx
		0x180552F7F: Copies {'typeFromHandle13' (type System.Type)} from rax into rcx
		0x180552F82: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x180552F8B: [!] Compares {'typeFromHandle13' (type System.Type)} and 0
		0x180552F8E: Jumps to 0x18055324E if typeFromHandle13 equals 0 ;  - This is probably a goto, jumping to 0x18055324E which is after end of current block @ 0x180552CC1 (started at 0x180552CA9)

		0x180552F94: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 13
		0x180552F98: Jumps to 0x180553261 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 13. Implicitly present in managed code, so ignored here.
		0x180552F9E: Sets the value at offset 13 in array local0 to {'typeFromHandle13' (type System.Type)}
		0x180552FA7: Loads the type definition for managed type ESerifSideQ_Pol_C018_3001 as a constant "ESerifSideQ_Pol_C018_3001" in rcx
		0x180552FAE: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C018_3001' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle14' (type System.Type)}

		0x180552FB3: Copies {'typeFromHandle14' (type System.Type)} from rax into rbx
		0x180552FB6: [!] Compares {'typeFromHandle14' (type System.Type)} and 0
		0x180552FB9: Jumps to 0x180552FD3 if typeFromHandle14 equals 0 ;  - This is probably a goto, jumping to 0x180552FD3 which is after end of current block @ 0x180552CC1 (started at 0x180552CA9)

		0x180552FBB: Loads the class pointer from local0 into a constant constant79 in register rdx
		0x180552FBE: Copies {'typeFromHandle14' (type System.Type)} from rax into rcx
		0x180552FC1: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x180552FCA: [!] Compares {'typeFromHandle14' (type System.Type)} and 0
		0x180552FCD: Jumps to 0x180553274 if typeFromHandle14 equals 0 ;  - This is probably a goto, jumping to 0x180553274 which is after end of current block @ 0x180552CC1 (started at 0x180552CA9)

		0x180552FD3: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 14
		0x180552FD7: Jumps to 0x180553287 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 14. Implicitly present in managed code, so ignored here.
		0x180552FDD: Sets the value at offset 14 in array local0 to {'typeFromHandle14' (type System.Type)}
		0x180552FE6: Loads the type definition for managed type ESerifSideQ_Pol_C018_3002 as a constant "ESerifSideQ_Pol_C018_3002" in rcx
		0x180552FED: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C018_3002' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle15' (type System.Type)}

		0x180552FF2: Copies {'typeFromHandle15' (type System.Type)} from rax into rbx
		0x180552FF5: [!] Compares {'typeFromHandle15' (type System.Type)} and 0
		0x180552FF8: Jumps to 0x180553012 if typeFromHandle15 equals 0 ;  - This is probably a goto, jumping to 0x180553012 which is after end of current block @ 0x180552CC1 (started at 0x180552CA9)

		0x180552FFA: Loads the class pointer from local0 into a constant constant84 in register rdx
		0x180552FFD: Copies {'typeFromHandle15' (type System.Type)} from rax into rcx
		0x180553000: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x180553009: [!] Compares {'typeFromHandle15' (type System.Type)} and 0
		0x18055300C: Jumps to 0x18055329A if typeFromHandle15 equals 0 ;  - This is probably a goto, jumping to 0x18055329A which is after end of current block @ 0x180552CC1 (started at 0x180552CA9)

		0x180553012: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 15
		0x180553016: Jumps to 0x1805532AD (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 15. Implicitly present in managed code, so ignored here.
		0x18055301C: Sets the value at offset 15 in array local0 to {'typeFromHandle15' (type System.Type)}
		0x180553025: Loads the type definition for managed type ESerifSideQ_Pol_C018_3003 as a constant "ESerifSideQ_Pol_C018_3003" in rcx
		0x18055302C: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C018_3003' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle16' (type System.Type)}

		0x180553031: Copies {'typeFromHandle16' (type System.Type)} from rax into rbx
		0x180553034: [!] Compares {'typeFromHandle16' (type System.Type)} and 0
		0x180553037: Jumps to 0x180553051 if typeFromHandle16 equals 0 ;  - This is probably a goto, jumping to 0x180553051 which is after end of current block @ 0x180552CC1 (started at 0x180552CA9)

		0x180553039: Loads the class pointer from local0 into a constant constant89 in register rdx
		0x18055303C: Copies {'typeFromHandle16' (type System.Type)} from rax into rcx
		0x18055303F: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x180553048: [!] Compares {'typeFromHandle16' (type System.Type)} and 0
		0x18055304B: Jumps to 0x1805532C0 if typeFromHandle16 equals 0 ;  - This is probably a goto, jumping to 0x1805532C0 which is after end of current block @ 0x180552CC1 (started at 0x180552CA9)

		0x180553051: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 16
		0x180553055: Jumps to 0x1805532D3 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 16. Implicitly present in managed code, so ignored here.
		0x18055305B: Sets the value at offset 16 in array local0 to {'typeFromHandle16' (type System.Type)}
		0x180553062: Loads the type definition for managed type C018_SideQuest_Define as a constant "C018_SideQuest_Define" in rax
		0x180553069: Reads unknown value in stack, offset 48 (0x30) and stores the pointer in register rbx as new constant constant93
		0x18055306E: Loads the pointer to the static fields for C018_SideQuest_Define and stores it in constant94 in register rcx
		0x180553075: [!] Sets static field . to {'local0' (type System.Type[])}
		0x18055307D: [!] Returns from the function

		0x180553080: [!] Constructs and throws an exception of kind System.NullReferenceException

		0x18055308B: Copies {'local34' (type System.NullReferenceException)} from rax into rcx
		0x1805530B1: Copies {'local34' (type System.NullReferenceException)} from rax into rcx
		0x1805530D7: Copies {'local34' (type System.NullReferenceException)} from rax into rcx
		0x1805530FD: Copies {'local34' (type System.NullReferenceException)} from rax into rcx
		0x180553123: Copies {'local34' (type System.NullReferenceException)} from rax into rcx
		0x180553149: Copies {'local34' (type System.NullReferenceException)} from rax into rcx
		0x18055316F: Copies {'local34' (type System.NullReferenceException)} from rax into rcx
		0x180553195: Copies {'local34' (type System.NullReferenceException)} from rax into rcx
		0x1805531BB: Copies {'local34' (type System.NullReferenceException)} from rax into rcx
		0x1805531E1: Copies {'local34' (type System.NullReferenceException)} from rax into rcx
		0x180553207: Copies {'local34' (type System.NullReferenceException)} from rax into rcx
		0x18055322D: Copies {'local34' (type System.NullReferenceException)} from rax into rcx
		0x180553253: Copies {'local34' (type System.NullReferenceException)} from rax into rcx
		0x180553279: Copies {'local34' (type System.NullReferenceException)} from rax into rcx
		0x18055329F: Copies {'local34' (type System.NullReferenceException)} from rax into rcx
		0x1805532C5: Copies {'local34' (type System.NullReferenceException)} from rax into rcx



	Generated Pseudocode:

	Declaring Type: C018_SideQuest_Define
	static System.Void .cctor()
		System.Type[] local0 = new System.Type[18]

		System.Type typeFromHandle = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C018_1000' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle != 0)

		    if (typeFromHandle == 0)
                goto INSN_180553086
            endif
		endif
        
		local0[1] = typeFromHandle

		System.Type typeFromHandle2 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C018_1001' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle2 == 0)
            goto INSN_180552CFD
        endif

		if (typeFromHandle2 == 0)
            goto INSN_1805530AC
        endif

		INSN_180552CFD:
		local0[2] = typeFromHandle2

		System.Type typeFromHandle3 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C018_1002' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle3 == 0)
            goto INSN_180552D39
        endif

		if (typeFromHandle3 == 0)
            goto INSN_1805530D2
        endif

		INSN_180552D39:
		local0[3] = typeFromHandle3

		System.Type typeFromHandle4 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C018_1003' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle4 == 0)
            goto INSN_180552D75
        endif

		if (typeFromHandle4 == 0)
            goto INSN_1805530F8
        endif

		INSN_180552D75:
		local0[4] = typeFromHandle4

		System.Type typeFromHandle5 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C018_1004' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle5 == 0)
            goto INSN_180552DB1
        endif

		if (typeFromHandle5 == 0)
            goto INSN_18055311E
        endif

		INSN_180552DB1:
		local0[5] = typeFromHandle5

		System.Type typeFromHandle6 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C018_1005' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle6 == 0)
            goto INSN_180552DED
        endif

		if (typeFromHandle6 == 0)
            goto INSN_180553144
        endif

		INSN_180552DED:
		local0[6] = typeFromHandle6

		System.Type typeFromHandle7 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C018_1006' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle7 == 0)
            goto INSN_180552E29
        endif

		if (typeFromHandle7 == 0)
            goto INSN_18055316A
        endif

		INSN_180552E29:
		local0[7] = typeFromHandle7

		System.Type typeFromHandle8 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C018_1007' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle8 == 0)
            goto INSN_180552E65
        endif

		if (typeFromHandle8 == 0)
            goto INSN_180553190
        endif

		INSN_180552E65:
		local0[8] = typeFromHandle8

		System.Type typeFromHandle9 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C018_2000' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle9 == 0)
            goto INSN_180552EA1
        endif

		if (typeFromHandle9 == 0)
            goto INSN_1805531B6
        endif

		INSN_180552EA1:
		local0[9] = typeFromHandle9

		System.Type typeFromHandle10 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C018_2001' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle10 == 0)
            goto INSN_180552EDD
        endif

		if (typeFromHandle10 == 0)
            goto INSN_1805531DC
        endif

		INSN_180552EDD:
		local0[10] = typeFromHandle10

		System.Type typeFromHandle11 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C018_2002' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle11 == 0)
            goto INSN_180552F19
        endif

		if (typeFromHandle11 == 0)
            goto INSN_180553202
        endif

		INSN_180552F19:
		local0[11] = typeFromHandle11

		System.Type typeFromHandle12 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C018_2003' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle12 == 0)
            goto INSN_180552F55
        endif

		if (typeFromHandle12 == 0)
            goto INSN_180553228
        endif

		INSN_180552F55:
		local0[12] = typeFromHandle12

		System.Type typeFromHandle13 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C018_3000' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle13 == 0)
            goto INSN_180552F94
        endif

		if (typeFromHandle13 == 0)
            goto INSN_18055324E
        endif

		INSN_180552F94:
		local0[13] = typeFromHandle13

		System.Type typeFromHandle14 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C018_3001' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle14 == 0)
            goto INSN_180552FD3
        endif

		if (typeFromHandle14 == 0)
            goto INSN_180553274
        endif

		INSN_180552FD3:
		local0[14] = typeFromHandle14

		System.Type typeFromHandle15 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C018_3002' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle15 == 0)
            goto INSN_180553012
        endif

		if (typeFromHandle15 == 0)
            goto INSN_18055329A
        endif

		INSN_180553012:
		local0[15] = typeFromHandle15

		System.Type typeFromHandle16 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C018_3003' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle16 == 0)
            goto INSN_180553051
        endif

		if (typeFromHandle16 == 0)
            goto INSN_1805532C0
        endif

		INSN_180553051:
		local0[16] = typeFromHandle16
		. = local0
		return
		throw new System.NullReferenceException()

		INSN_180553086:

		INSN_1805530AC:

		INSN_1805530D2:

		INSN_1805530F8:

		INSN_18055311E:

		INSN_180553144:

		INSN_18055316A:

		INSN_180553190:

		INSN_1805531B6:

		INSN_1805531DC:

		INSN_180553202:

		INSN_180553228:

		INSN_18055324E:

		INSN_180553274:

		INSN_18055329A:

		INSN_1805532C0:


Generated IL:
	Action of type Cpp2IL.Core.Analysis.Actions.x86.Important.RegToStaticFieldAction at (0x180553075) is corrupt (No further info) and cannot be created as IL. Aborting here.


