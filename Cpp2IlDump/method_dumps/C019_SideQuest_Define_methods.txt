Type: C019_SideQuest_Define

Method: System.Void C019_SideQuest_Define::.ctor():	Method Body (x86 ASM):
		0x1802068B0 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1802068B2 jmp near ptr 0000000180207540h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802068B7 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.Void C019_SideQuest_Define::.ctor():
		End of function at 0x1802068B8
		Absolute End is at 0x1802068B8
		Identified Jump Destination addresses:

		0x1802068B2: [!] Calls managed method System.Void System.Object::.ctor() on instance {'this' (function parameter, type C019_SideQuest_Define)}

		0x1802068B2: [!] Returns from the function




	Generated Pseudocode:

	Declaring Type: C019_SideQuest_Define
	System.Void .ctor()

		base..ctor()
		return


Generated IL:
	IL_0000: ldarg.0
	IL_0001: call System.Void System.Object::.ctor()
	IL_0006: ret
	

Method: System.Void C019_SideQuest_Define::.cctor():	Method Body (x86 ASM):
		0x1802139D0 mov [rsp+8],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RSP | 8 | None ||| N/A | N/A
		0x1802139D5 push rdi		; DEBUG: {Register}/RDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1802139D6 sub rsp,20h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 32
		0x1802139DA cmp byte ptr [18183D2CAh],0		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6467867338 | None ||| N/A | 0
		0x1802139E1 jne short 00000001802139F5h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802139E3 mov ecx,[181515FD0h]		; DEBUG: {Register}/ECX {Memory}/None ||| RIP | 6464561104 | None ||| N/A | N/A
		0x1802139E9 call 00000001800FEB90h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802139EE mov byte ptr [18183D2CAh],1		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6467867338 | None ||| N/A | 1
		0x1802139F5 mov rcx,[181884F78h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468161400 | None ||| N/A | N/A
		0x1802139FC mov edx,11h		; DEBUG: {Register}/EDX {Immediate32}/None ||| None | 0 | None ||| N/A | 17
		0x180213A01 call 0000000180141320h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180213A06 mov rcx,[181884228h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468157992 | None ||| N/A | N/A
		0x180213A0D mov rdi,rax		; DEBUG: {Register}/RDI {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180213A10 mov rbx,[181871E70h]		; DEBUG: {Register}/RBX {Memory}/None ||| RIP | 6468083312 | None ||| N/A | N/A
		0x180213A17 test byte ptr [rcx+127h],2		; DEBUG: {Memory}/None {Immediate8}/None ||| RCX | 295 | None ||| N/A | 2
		0x180213A1E je short 0000000180213A2Eh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180213A20 cmp dword ptr [rcx+0D8h],0		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RCX | 216 | None ||| N/A | 0
		0x180213A27 jne short 0000000180213A2Eh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180213A29 call 000000018010EAF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180213A2E xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180213A30 mov rcx,rbx		; DEBUG: {Register}/RCX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x180213A33 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180213A38 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180213A3B test rdi,rdi		; DEBUG: {Register}/RDI {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x180213A3E je near ptr 0000000180213DDFh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180213A44 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180213A47 je short 0000000180213A61h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180213A49 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x180213A4C mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180213A4F mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x180213A53 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180213A58 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180213A5B je near ptr 0000000180213DE7h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180213A61 cmp dword ptr [rdi+18h],1		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 1
		0x180213A65 jbe near ptr 0000000180213DFAh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180213A6B mov [rdi+28h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 40 | None ||| N/A | N/A
		0x180213A6F xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180213A71 mov rcx,[181871E98h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468083352 | None ||| N/A | N/A
		0x180213A78 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180213A7D mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180213A80 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180213A83 je short 0000000180213A9Dh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180213A85 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x180213A88 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180213A8B mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x180213A8F call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180213A94 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180213A97 je near ptr 0000000180213E0Dh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180213A9D cmp dword ptr [rdi+18h],2		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 2
		0x180213AA1 jbe near ptr 0000000180213E20h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180213AA7 mov [rdi+30h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 48 | None ||| N/A | N/A
		0x180213AAB xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180213AAD mov rcx,[181871EC0h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468083392 | None ||| N/A | N/A
		0x180213AB4 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180213AB9 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180213ABC test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180213ABF je short 0000000180213AD9h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180213AC1 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x180213AC4 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180213AC7 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x180213ACB call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180213AD0 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180213AD3 je near ptr 0000000180213E33h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180213AD9 cmp dword ptr [rdi+18h],3		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 3
		0x180213ADD jbe near ptr 0000000180213E46h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180213AE3 mov [rdi+38h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 56 | None ||| N/A | N/A
		0x180213AE7 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180213AE9 mov rcx,[181871ED8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468083416 | None ||| N/A | N/A
		0x180213AF0 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180213AF5 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180213AF8 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180213AFB je short 0000000180213B15h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180213AFD mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x180213B00 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180213B03 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x180213B07 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180213B0C test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180213B0F je near ptr 0000000180213E59h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180213B15 cmp dword ptr [rdi+18h],4		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 4
		0x180213B19 jbe near ptr 0000000180213E6Ch		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180213B1F mov [rdi+40h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 64 | None ||| N/A | N/A
		0x180213B23 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180213B25 mov rcx,[181871EF0h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468083440 | None ||| N/A | N/A
		0x180213B2C call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180213B31 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180213B34 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180213B37 je short 0000000180213B51h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180213B39 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x180213B3C mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180213B3F mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x180213B43 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180213B48 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180213B4B je near ptr 0000000180213E7Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180213B51 cmp dword ptr [rdi+18h],5		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 5
		0x180213B55 jbe near ptr 0000000180213E92h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180213B5B mov [rdi+48h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 72 | None ||| N/A | N/A
		0x180213B5F xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180213B61 mov rcx,[181871F38h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468083512 | None ||| N/A | N/A
		0x180213B68 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180213B6D mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180213B70 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180213B73 je short 0000000180213B8Dh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180213B75 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x180213B78 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180213B7B mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x180213B7F call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180213B84 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180213B87 je near ptr 0000000180213EA5h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180213B8D cmp dword ptr [rdi+18h],6		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 6
		0x180213B91 jbe near ptr 0000000180213EB8h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180213B97 mov [rdi+50h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 80 | None ||| N/A | N/A
		0x180213B9B xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180213B9D mov rcx,[181871F58h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468083544 | None ||| N/A | N/A
		0x180213BA4 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180213BA9 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180213BAC test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180213BAF je short 0000000180213BC9h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180213BB1 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x180213BB4 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180213BB7 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x180213BBB call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180213BC0 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180213BC3 je near ptr 0000000180213ECBh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180213BC9 cmp dword ptr [rdi+18h],7		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 7
		0x180213BCD jbe near ptr 0000000180213EDEh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180213BD3 mov [rdi+58h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 88 | None ||| N/A | N/A
		0x180213BD7 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180213BD9 mov rcx,[181871F68h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468083560 | None ||| N/A | N/A
		0x180213BE0 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180213BE5 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180213BE8 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180213BEB je short 0000000180213C05h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180213BED mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x180213BF0 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180213BF3 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x180213BF7 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180213BFC test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180213BFF je near ptr 0000000180213EF1h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180213C05 cmp dword ptr [rdi+18h],8		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 8
		0x180213C09 jbe near ptr 0000000180213F04h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180213C0F mov [rdi+60h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 96 | None ||| N/A | N/A
		0x180213C13 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180213C15 mov rcx,[181871F90h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468083600 | None ||| N/A | N/A
		0x180213C1C call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180213C21 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180213C24 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180213C27 je short 0000000180213C41h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180213C29 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x180213C2C mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180213C2F mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x180213C33 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180213C38 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180213C3B je near ptr 0000000180213F17h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180213C41 cmp dword ptr [rdi+18h],9		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 9
		0x180213C45 jbe near ptr 0000000180213F2Ah		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180213C4B mov [rdi+68h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 104 | None ||| N/A | N/A
		0x180213C4F xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180213C51 mov rcx,[181871FB8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468083640 | None ||| N/A | N/A
		0x180213C58 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180213C5D mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180213C60 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180213C63 je short 0000000180213C7Dh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180213C65 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x180213C68 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180213C6B mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x180213C6F call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180213C74 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180213C77 je near ptr 0000000180213F3Dh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180213C7D cmp dword ptr [rdi+18h],0Ah		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 10
		0x180213C81 jbe near ptr 0000000180213F50h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180213C87 mov [rdi+70h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 112 | None ||| N/A | N/A
		0x180213C8B xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180213C8D mov rcx,[181871FE0h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468083680 | None ||| N/A | N/A
		0x180213C94 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180213C99 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180213C9C test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180213C9F je short 0000000180213CB9h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180213CA1 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x180213CA4 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180213CA7 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x180213CAB call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180213CB0 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180213CB3 je near ptr 0000000180213F63h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180213CB9 cmp dword ptr [rdi+18h],0Bh		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 11
		0x180213CBD jbe near ptr 0000000180213F76h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180213CC3 mov [rdi+78h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 120 | None ||| N/A | N/A
		0x180213CC7 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180213CC9 mov rcx,[181872008h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468083720 | None ||| N/A | N/A
		0x180213CD0 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180213CD5 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180213CD8 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180213CDB je short 0000000180213CF5h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180213CDD mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x180213CE0 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180213CE3 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x180213CE7 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180213CEC test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180213CEF je near ptr 0000000180213F89h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180213CF5 cmp dword ptr [rdi+18h],0Ch		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 12
		0x180213CF9 jbe near ptr 0000000180213F9Ch		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180213CFF mov [rdi+80h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 128 | None ||| N/A | N/A
		0x180213D06 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180213D08 mov rcx,[181872038h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468083768 | None ||| N/A | N/A
		0x180213D0F call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180213D14 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180213D17 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180213D1A je short 0000000180213D34h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180213D1C mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x180213D1F mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180213D22 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x180213D26 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180213D2B test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180213D2E je near ptr 0000000180213FAFh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180213D34 cmp dword ptr [rdi+18h],0Dh		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 13
		0x180213D38 jbe near ptr 0000000180213FC2h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180213D3E mov [rdi+88h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 136 | None ||| N/A | N/A
		0x180213D45 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180213D47 mov rcx,[181872078h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468083832 | None ||| N/A | N/A
		0x180213D4E call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180213D53 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180213D56 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180213D59 je short 0000000180213D73h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180213D5B mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x180213D5E mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180213D61 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x180213D65 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180213D6A test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180213D6D je near ptr 0000000180213FD5h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180213D73 cmp dword ptr [rdi+18h],0Eh		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 14
		0x180213D77 jbe near ptr 0000000180213FE8h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180213D7D mov [rdi+90h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 144 | None ||| N/A | N/A
		0x180213D84 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180213D86 mov rcx,[181872090h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468083856 | None ||| N/A | N/A
		0x180213D8D call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180213D92 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180213D95 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180213D98 je short 0000000180213DB2h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180213D9A mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x180213D9D mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180213DA0 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x180213DA4 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180213DA9 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180213DAC je near ptr 0000000180213FFBh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180213DB2 cmp dword ptr [rdi+18h],0Fh		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 15
		0x180213DB6 jbe near ptr 000000018021400Eh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180213DBC mov [rdi+98h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 152 | None ||| N/A | N/A
		0x180213DC3 mov rax,[18189B998h]		; DEBUG: {Register}/RAX {Memory}/None ||| RIP | 6468254104 | None ||| N/A | N/A
		0x180213DCA mov rbx,[rsp+30h]		; DEBUG: {Register}/RBX {Memory}/None ||| RSP | 48 | None ||| N/A | N/A
		0x180213DCF mov rcx,[rax+0B8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RAX | 184 | None ||| N/A | N/A
		0x180213DD6 mov [rcx],rdi		; DEBUG: {Memory}/None {Register}/RDI ||| RCX | 0 | None ||| N/A | N/A
		0x180213DD9 add rsp,20h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 32
		0x180213DDD pop rdi		; DEBUG: {Register}/RDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180213DDE ret		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180213DDF xor ecx,ecx		; DEBUG: {Register}/ECX {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x180213DE1 call 000000018012BDA0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180213DE6 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180213DE7 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180213DEC mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180213DEF xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x180213DF2 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180213DF4 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180213DF9 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180213E0D call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180213E12 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180213E15 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x180213E18 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180213E1A call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180213E1F int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180213E33 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180213E38 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180213E3B xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x180213E3E xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180213E40 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180213E45 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180213E59 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180213E5E mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180213E61 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x180213E64 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180213E66 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180213E6B int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180213E7F call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180213E84 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180213E87 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x180213E8A xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180213E8C call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180213E91 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180213EA5 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180213EAA mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180213EAD xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x180213EB0 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180213EB2 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180213EB7 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180213ECB call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180213ED0 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180213ED3 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x180213ED6 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180213ED8 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180213EDD int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180213EF1 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180213EF6 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180213EF9 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x180213EFC xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180213EFE call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180213F03 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180213F17 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180213F1C mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180213F1F xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x180213F22 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180213F24 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180213F29 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180213F3D call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180213F42 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180213F45 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x180213F48 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180213F4A call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180213F4F int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180213F63 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180213F68 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180213F6B xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x180213F6E xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180213F70 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180213F75 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180213F89 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180213F8E mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180213F91 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x180213F94 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180213F96 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180213F9B int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180213FAF call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180213FB4 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180213FB7 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x180213FBA xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180213FBC call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180213FC1 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180213FD5 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180213FDA mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180213FDD xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x180213FE0 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180213FE2 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180213FE7 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180213FFB call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180214000 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180214003 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x180214006 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180214008 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021400D int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Static Method System.Void C019_SideQuest_Define::.cctor():
		End of function at 0x18021400E
		Absolute End is at 0x18021400E
		Identified Jump Destination addresses:

		0x1802139D5: Saves the content of rdi to the stack
		0x1802139DA: Compares {Unknown Global at 0x18183D2CA, first ten bytes are [0 0 0 0 0 0 0 0 0 0], or as chars "          "} and 0
		0x1802139E1: Jumps to 0x1802139F5 if {Unknown Global at 0x18183D2CA, first ten bytes are [0 0 0 0 0 0 0 0 0 0], or as chars "          "} != 0

		0x1802139E3: Loads string "æ" into register rcx as constant {'constant3' (constant value of type Cpp2IL.Core.Analysis.ResultModels.Il2CppString)}
		0x1802139E9: Attempts to load the il2cpp metadata for this method (method id 0) and init it cpp-side.

		0x1802139F5: Loads the type definition for managed type System.Type[] as a constant "Type[]" in rcx
		0x1802139FC: [!] Writes the constant 0x11 into operand 17 (type UInt64) in register rdx
		0x180213A01: [!] Allocates an array of type System.Type[] of size 17 and stores the result as local0 in register rax

		0x180213A06: Loads the type definition for managed type System.Type as a constant "Type" in rcx
		0x180213A0D: Copies {'local0' (type System.Type[])} from rax into rdi
		0x180213A10: Loads the type definition for managed type ESerifSideQ_Pol_C019_1000 as a constant "ESerifSideQ_Pol_C019_1000" in rbx
		0x180213A17: Compares "{il2cpp field on {'Type' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" and 2
		0x180213A1E: Jumps to 0x180213A2E if "{il2cpp field on {'Type' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" equals 2

		0x180213A20: Compares "{il2cpp field on {'Type' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" and 0
		0x180213A27: Jumps to 0x180213A2E if "{il2cpp field on {'Type' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" != 0

		0x180213A29: Calls the il2cpp cctor for the type System.Type
		0x180213A30: Copies {'ESerifSideQ_Pol_C019_1000' (constant value of type Mono.Cecil.TypeReference)} from rbx into rcx
		0x180213A33: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C019_1000' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle' (type System.Type)}

		0x180213A38: Copies {'typeFromHandle' (type System.Type)} from rax into rbx
		0x180213A3B: [!] Compares {'local0' (type System.Type[])} and 0
		0x180213A3E: Jumps to 0x180213DDF (which throws a NRE) if local0 equals 0. Implicitly present in managed code, so ignored here.
		0x180213A44: [!] Compares {'typeFromHandle' (type System.Type)} and 0
		0x180213A47: Jumps to 0x180213A61 (which is an if statement's body) if typeFromHandle equals 0 ;  - Increasing indentation - is standard if, unimportant is False

		0x180213A49: Loads the class pointer from local0 into a constant constant14 in register rdx
		0x180213A4C: Copies {'typeFromHandle' (type System.Type)} from rax into rcx
		0x180213A4F: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x180213A58: [!] Compares {'typeFromHandle' (type System.Type)} and 0
		0x180213A5B: Jumps to 0x180213DE7 if typeFromHandle equals 0 ;  - This is probably a goto, jumping to 0x180213DE7 which is after end of current block @ 0x180213A61 (started at 0x180213A49)

		0x180213A61: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 1
		0x180213A65: Jumps to 0x180213DFA (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 1. Implicitly present in managed code, so ignored here.
		0x180213A6B: Sets the value at offset 1 in array local0 to {'typeFromHandle' (type System.Type)}
		0x180213A71: Loads the type definition for managed type ESerifSideQ_Pol_C019_1001 as a constant "ESerifSideQ_Pol_C019_1001" in rcx
		0x180213A78: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C019_1001' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle2' (type System.Type)}

		0x180213A7D: Copies {'typeFromHandle2' (type System.Type)} from rax into rbx
		0x180213A80: [!] Compares {'typeFromHandle2' (type System.Type)} and 0
		0x180213A83: Jumps to 0x180213A9D if typeFromHandle2 equals 0 ;  - This is probably a goto, jumping to 0x180213A9D which is after end of current block @ 0x180213A61 (started at 0x180213A49)

		0x180213A85: Loads the class pointer from local0 into a constant constant19 in register rdx
		0x180213A88: Copies {'typeFromHandle2' (type System.Type)} from rax into rcx
		0x180213A8B: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x180213A94: [!] Compares {'typeFromHandle2' (type System.Type)} and 0
		0x180213A97: Jumps to 0x180213E0D if typeFromHandle2 equals 0 ;  - This is probably a goto, jumping to 0x180213E0D which is after end of current block @ 0x180213A61 (started at 0x180213A49)

		0x180213A9D: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 2
		0x180213AA1: Jumps to 0x180213E20 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 2. Implicitly present in managed code, so ignored here.
		0x180213AA7: Sets the value at offset 2 in array local0 to {'typeFromHandle2' (type System.Type)}
		0x180213AAD: Loads the type definition for managed type ESerifSideQ_Pol_C019_1002 as a constant "ESerifSideQ_Pol_C019_1002" in rcx
		0x180213AB4: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C019_1002' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle3' (type System.Type)}

		0x180213AB9: Copies {'typeFromHandle3' (type System.Type)} from rax into rbx
		0x180213ABC: [!] Compares {'typeFromHandle3' (type System.Type)} and 0
		0x180213ABF: Jumps to 0x180213AD9 if typeFromHandle3 equals 0 ;  - This is probably a goto, jumping to 0x180213AD9 which is after end of current block @ 0x180213A61 (started at 0x180213A49)

		0x180213AC1: Loads the class pointer from local0 into a constant constant24 in register rdx
		0x180213AC4: Copies {'typeFromHandle3' (type System.Type)} from rax into rcx
		0x180213AC7: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x180213AD0: [!] Compares {'typeFromHandle3' (type System.Type)} and 0
		0x180213AD3: Jumps to 0x180213E33 if typeFromHandle3 equals 0 ;  - This is probably a goto, jumping to 0x180213E33 which is after end of current block @ 0x180213A61 (started at 0x180213A49)

		0x180213AD9: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 3
		0x180213ADD: Jumps to 0x180213E46 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 3. Implicitly present in managed code, so ignored here.
		0x180213AE3: Sets the value at offset 3 in array local0 to {'typeFromHandle3' (type System.Type)}
		0x180213AE9: Loads the type definition for managed type ESerifSideQ_Pol_C019_1003 as a constant "ESerifSideQ_Pol_C019_1003" in rcx
		0x180213AF0: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C019_1003' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle4' (type System.Type)}

		0x180213AF5: Copies {'typeFromHandle4' (type System.Type)} from rax into rbx
		0x180213AF8: [!] Compares {'typeFromHandle4' (type System.Type)} and 0
		0x180213AFB: Jumps to 0x180213B15 if typeFromHandle4 equals 0 ;  - This is probably a goto, jumping to 0x180213B15 which is after end of current block @ 0x180213A61 (started at 0x180213A49)

		0x180213AFD: Loads the class pointer from local0 into a constant constant29 in register rdx
		0x180213B00: Copies {'typeFromHandle4' (type System.Type)} from rax into rcx
		0x180213B03: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x180213B0C: [!] Compares {'typeFromHandle4' (type System.Type)} and 0
		0x180213B0F: Jumps to 0x180213E59 if typeFromHandle4 equals 0 ;  - This is probably a goto, jumping to 0x180213E59 which is after end of current block @ 0x180213A61 (started at 0x180213A49)

		0x180213B15: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 4
		0x180213B19: Jumps to 0x180213E6C (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 4. Implicitly present in managed code, so ignored here.
		0x180213B1F: Sets the value at offset 4 in array local0 to {'typeFromHandle4' (type System.Type)}
		0x180213B25: Loads the type definition for managed type ESerifSideQ_Pol_C019_1004 as a constant "ESerifSideQ_Pol_C019_1004" in rcx
		0x180213B2C: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C019_1004' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle5' (type System.Type)}

		0x180213B31: Copies {'typeFromHandle5' (type System.Type)} from rax into rbx
		0x180213B34: [!] Compares {'typeFromHandle5' (type System.Type)} and 0
		0x180213B37: Jumps to 0x180213B51 if typeFromHandle5 equals 0 ;  - This is probably a goto, jumping to 0x180213B51 which is after end of current block @ 0x180213A61 (started at 0x180213A49)

		0x180213B39: Loads the class pointer from local0 into a constant constant34 in register rdx
		0x180213B3C: Copies {'typeFromHandle5' (type System.Type)} from rax into rcx
		0x180213B3F: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x180213B48: [!] Compares {'typeFromHandle5' (type System.Type)} and 0
		0x180213B4B: Jumps to 0x180213E7F if typeFromHandle5 equals 0 ;  - This is probably a goto, jumping to 0x180213E7F which is after end of current block @ 0x180213A61 (started at 0x180213A49)

		0x180213B51: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 5
		0x180213B55: Jumps to 0x180213E92 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 5. Implicitly present in managed code, so ignored here.
		0x180213B5B: Sets the value at offset 5 in array local0 to {'typeFromHandle5' (type System.Type)}
		0x180213B61: Loads the type definition for managed type ESerifSideQ_Pol_C019_1005 as a constant "ESerifSideQ_Pol_C019_1005" in rcx
		0x180213B68: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C019_1005' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle6' (type System.Type)}

		0x180213B6D: Copies {'typeFromHandle6' (type System.Type)} from rax into rbx
		0x180213B70: [!] Compares {'typeFromHandle6' (type System.Type)} and 0
		0x180213B73: Jumps to 0x180213B8D if typeFromHandle6 equals 0 ;  - This is probably a goto, jumping to 0x180213B8D which is after end of current block @ 0x180213A61 (started at 0x180213A49)

		0x180213B75: Loads the class pointer from local0 into a constant constant39 in register rdx
		0x180213B78: Copies {'typeFromHandle6' (type System.Type)} from rax into rcx
		0x180213B7B: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x180213B84: [!] Compares {'typeFromHandle6' (type System.Type)} and 0
		0x180213B87: Jumps to 0x180213EA5 if typeFromHandle6 equals 0 ;  - This is probably a goto, jumping to 0x180213EA5 which is after end of current block @ 0x180213A61 (started at 0x180213A49)

		0x180213B8D: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 6
		0x180213B91: Jumps to 0x180213EB8 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 6. Implicitly present in managed code, so ignored here.
		0x180213B97: Sets the value at offset 6 in array local0 to {'typeFromHandle6' (type System.Type)}
		0x180213B9D: Loads the type definition for managed type ESerifSideQ_Pol_C019_1006 as a constant "ESerifSideQ_Pol_C019_1006" in rcx
		0x180213BA4: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C019_1006' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle7' (type System.Type)}

		0x180213BA9: Copies {'typeFromHandle7' (type System.Type)} from rax into rbx
		0x180213BAC: [!] Compares {'typeFromHandle7' (type System.Type)} and 0
		0x180213BAF: Jumps to 0x180213BC9 if typeFromHandle7 equals 0 ;  - This is probably a goto, jumping to 0x180213BC9 which is after end of current block @ 0x180213A61 (started at 0x180213A49)

		0x180213BB1: Loads the class pointer from local0 into a constant constant44 in register rdx
		0x180213BB4: Copies {'typeFromHandle7' (type System.Type)} from rax into rcx
		0x180213BB7: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x180213BC0: [!] Compares {'typeFromHandle7' (type System.Type)} and 0
		0x180213BC3: Jumps to 0x180213ECB if typeFromHandle7 equals 0 ;  - This is probably a goto, jumping to 0x180213ECB which is after end of current block @ 0x180213A61 (started at 0x180213A49)

		0x180213BC9: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 7
		0x180213BCD: Jumps to 0x180213EDE (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 7. Implicitly present in managed code, so ignored here.
		0x180213BD3: Sets the value at offset 7 in array local0 to {'typeFromHandle7' (type System.Type)}
		0x180213BD9: Loads the type definition for managed type ESerifSideQ_Pol_C019_1007 as a constant "ESerifSideQ_Pol_C019_1007" in rcx
		0x180213BE0: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C019_1007' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle8' (type System.Type)}

		0x180213BE5: Copies {'typeFromHandle8' (type System.Type)} from rax into rbx
		0x180213BE8: [!] Compares {'typeFromHandle8' (type System.Type)} and 0
		0x180213BEB: Jumps to 0x180213C05 if typeFromHandle8 equals 0 ;  - This is probably a goto, jumping to 0x180213C05 which is after end of current block @ 0x180213A61 (started at 0x180213A49)

		0x180213BED: Loads the class pointer from local0 into a constant constant49 in register rdx
		0x180213BF0: Copies {'typeFromHandle8' (type System.Type)} from rax into rcx
		0x180213BF3: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x180213BFC: [!] Compares {'typeFromHandle8' (type System.Type)} and 0
		0x180213BFF: Jumps to 0x180213EF1 if typeFromHandle8 equals 0 ;  - This is probably a goto, jumping to 0x180213EF1 which is after end of current block @ 0x180213A61 (started at 0x180213A49)

		0x180213C05: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 8
		0x180213C09: Jumps to 0x180213F04 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 8. Implicitly present in managed code, so ignored here.
		0x180213C0F: Sets the value at offset 8 in array local0 to {'typeFromHandle8' (type System.Type)}
		0x180213C15: Loads the type definition for managed type ESerifSideQ_Pol_C019_1008 as a constant "ESerifSideQ_Pol_C019_1008" in rcx
		0x180213C1C: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C019_1008' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle9' (type System.Type)}

		0x180213C21: Copies {'typeFromHandle9' (type System.Type)} from rax into rbx
		0x180213C24: [!] Compares {'typeFromHandle9' (type System.Type)} and 0
		0x180213C27: Jumps to 0x180213C41 if typeFromHandle9 equals 0 ;  - This is probably a goto, jumping to 0x180213C41 which is after end of current block @ 0x180213A61 (started at 0x180213A49)

		0x180213C29: Loads the class pointer from local0 into a constant constant54 in register rdx
		0x180213C2C: Copies {'typeFromHandle9' (type System.Type)} from rax into rcx
		0x180213C2F: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x180213C38: [!] Compares {'typeFromHandle9' (type System.Type)} and 0
		0x180213C3B: Jumps to 0x180213F17 if typeFromHandle9 equals 0 ;  - This is probably a goto, jumping to 0x180213F17 which is after end of current block @ 0x180213A61 (started at 0x180213A49)

		0x180213C41: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 9
		0x180213C45: Jumps to 0x180213F2A (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 9. Implicitly present in managed code, so ignored here.
		0x180213C4B: Sets the value at offset 9 in array local0 to {'typeFromHandle9' (type System.Type)}
		0x180213C51: Loads the type definition for managed type ESerifSideQ_Pol_C019_1009 as a constant "ESerifSideQ_Pol_C019_1009" in rcx
		0x180213C58: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C019_1009' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle10' (type System.Type)}

		0x180213C5D: Copies {'typeFromHandle10' (type System.Type)} from rax into rbx
		0x180213C60: [!] Compares {'typeFromHandle10' (type System.Type)} and 0
		0x180213C63: Jumps to 0x180213C7D if typeFromHandle10 equals 0 ;  - This is probably a goto, jumping to 0x180213C7D which is after end of current block @ 0x180213A61 (started at 0x180213A49)

		0x180213C65: Loads the class pointer from local0 into a constant constant59 in register rdx
		0x180213C68: Copies {'typeFromHandle10' (type System.Type)} from rax into rcx
		0x180213C6B: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x180213C74: [!] Compares {'typeFromHandle10' (type System.Type)} and 0
		0x180213C77: Jumps to 0x180213F3D if typeFromHandle10 equals 0 ;  - This is probably a goto, jumping to 0x180213F3D which is after end of current block @ 0x180213A61 (started at 0x180213A49)

		0x180213C7D: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 10
		0x180213C81: Jumps to 0x180213F50 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 10. Implicitly present in managed code, so ignored here.
		0x180213C87: Sets the value at offset 10 in array local0 to {'typeFromHandle10' (type System.Type)}
		0x180213C8D: Loads the type definition for managed type ESerifSideQ_Pol_C019_1010 as a constant "ESerifSideQ_Pol_C019_1010" in rcx
		0x180213C94: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C019_1010' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle11' (type System.Type)}

		0x180213C99: Copies {'typeFromHandle11' (type System.Type)} from rax into rbx
		0x180213C9C: [!] Compares {'typeFromHandle11' (type System.Type)} and 0
		0x180213C9F: Jumps to 0x180213CB9 if typeFromHandle11 equals 0 ;  - This is probably a goto, jumping to 0x180213CB9 which is after end of current block @ 0x180213A61 (started at 0x180213A49)

		0x180213CA1: Loads the class pointer from local0 into a constant constant64 in register rdx
		0x180213CA4: Copies {'typeFromHandle11' (type System.Type)} from rax into rcx
		0x180213CA7: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x180213CB0: [!] Compares {'typeFromHandle11' (type System.Type)} and 0
		0x180213CB3: Jumps to 0x180213F63 if typeFromHandle11 equals 0 ;  - This is probably a goto, jumping to 0x180213F63 which is after end of current block @ 0x180213A61 (started at 0x180213A49)

		0x180213CB9: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 11
		0x180213CBD: Jumps to 0x180213F76 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 11. Implicitly present in managed code, so ignored here.
		0x180213CC3: Sets the value at offset 11 in array local0 to {'typeFromHandle11' (type System.Type)}
		0x180213CC9: Loads the type definition for managed type ESerifSideQ_Pol_C019_2000 as a constant "ESerifSideQ_Pol_C019_2000" in rcx
		0x180213CD0: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C019_2000' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle12' (type System.Type)}

		0x180213CD5: Copies {'typeFromHandle12' (type System.Type)} from rax into rbx
		0x180213CD8: [!] Compares {'typeFromHandle12' (type System.Type)} and 0
		0x180213CDB: Jumps to 0x180213CF5 if typeFromHandle12 equals 0 ;  - This is probably a goto, jumping to 0x180213CF5 which is after end of current block @ 0x180213A61 (started at 0x180213A49)

		0x180213CDD: Loads the class pointer from local0 into a constant constant69 in register rdx
		0x180213CE0: Copies {'typeFromHandle12' (type System.Type)} from rax into rcx
		0x180213CE3: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x180213CEC: [!] Compares {'typeFromHandle12' (type System.Type)} and 0
		0x180213CEF: Jumps to 0x180213F89 if typeFromHandle12 equals 0 ;  - This is probably a goto, jumping to 0x180213F89 which is after end of current block @ 0x180213A61 (started at 0x180213A49)

		0x180213CF5: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 12
		0x180213CF9: Jumps to 0x180213F9C (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 12. Implicitly present in managed code, so ignored here.
		0x180213CFF: Sets the value at offset 12 in array local0 to {'typeFromHandle12' (type System.Type)}
		0x180213D08: Loads the type definition for managed type ESerifSideQ_Pol_C019_2001 as a constant "ESerifSideQ_Pol_C019_2001" in rcx
		0x180213D0F: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C019_2001' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle13' (type System.Type)}

		0x180213D14: Copies {'typeFromHandle13' (type System.Type)} from rax into rbx
		0x180213D17: [!] Compares {'typeFromHandle13' (type System.Type)} and 0
		0x180213D1A: Jumps to 0x180213D34 if typeFromHandle13 equals 0 ;  - This is probably a goto, jumping to 0x180213D34 which is after end of current block @ 0x180213A61 (started at 0x180213A49)

		0x180213D1C: Loads the class pointer from local0 into a constant constant74 in register rdx
		0x180213D1F: Copies {'typeFromHandle13' (type System.Type)} from rax into rcx
		0x180213D22: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x180213D2B: [!] Compares {'typeFromHandle13' (type System.Type)} and 0
		0x180213D2E: Jumps to 0x180213FAF if typeFromHandle13 equals 0 ;  - This is probably a goto, jumping to 0x180213FAF which is after end of current block @ 0x180213A61 (started at 0x180213A49)

		0x180213D34: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 13
		0x180213D38: Jumps to 0x180213FC2 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 13. Implicitly present in managed code, so ignored here.
		0x180213D3E: Sets the value at offset 13 in array local0 to {'typeFromHandle13' (type System.Type)}
		0x180213D47: Loads the type definition for managed type ESerifSideQ_Pol_C019_2002 as a constant "ESerifSideQ_Pol_C019_2002" in rcx
		0x180213D4E: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C019_2002' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle14' (type System.Type)}

		0x180213D53: Copies {'typeFromHandle14' (type System.Type)} from rax into rbx
		0x180213D56: [!] Compares {'typeFromHandle14' (type System.Type)} and 0
		0x180213D59: Jumps to 0x180213D73 if typeFromHandle14 equals 0 ;  - This is probably a goto, jumping to 0x180213D73 which is after end of current block @ 0x180213A61 (started at 0x180213A49)

		0x180213D5B: Loads the class pointer from local0 into a constant constant79 in register rdx
		0x180213D5E: Copies {'typeFromHandle14' (type System.Type)} from rax into rcx
		0x180213D61: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x180213D6A: [!] Compares {'typeFromHandle14' (type System.Type)} and 0
		0x180213D6D: Jumps to 0x180213FD5 if typeFromHandle14 equals 0 ;  - This is probably a goto, jumping to 0x180213FD5 which is after end of current block @ 0x180213A61 (started at 0x180213A49)

		0x180213D73: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 14
		0x180213D77: Jumps to 0x180213FE8 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 14. Implicitly present in managed code, so ignored here.
		0x180213D7D: Sets the value at offset 14 in array local0 to {'typeFromHandle14' (type System.Type)}
		0x180213D86: Loads the type definition for managed type ESerifSideQ_Pol_C019_2003 as a constant "ESerifSideQ_Pol_C019_2003" in rcx
		0x180213D8D: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C019_2003' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle15' (type System.Type)}

		0x180213D92: Copies {'typeFromHandle15' (type System.Type)} from rax into rbx
		0x180213D95: [!] Compares {'typeFromHandle15' (type System.Type)} and 0
		0x180213D98: Jumps to 0x180213DB2 if typeFromHandle15 equals 0 ;  - This is probably a goto, jumping to 0x180213DB2 which is after end of current block @ 0x180213A61 (started at 0x180213A49)

		0x180213D9A: Loads the class pointer from local0 into a constant constant84 in register rdx
		0x180213D9D: Copies {'typeFromHandle15' (type System.Type)} from rax into rcx
		0x180213DA0: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x180213DA9: [!] Compares {'typeFromHandle15' (type System.Type)} and 0
		0x180213DAC: Jumps to 0x180213FFB if typeFromHandle15 equals 0 ;  - This is probably a goto, jumping to 0x180213FFB which is after end of current block @ 0x180213A61 (started at 0x180213A49)

		0x180213DB2: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 15
		0x180213DB6: Jumps to 0x18021400E (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 15. Implicitly present in managed code, so ignored here.
		0x180213DBC: Sets the value at offset 15 in array local0 to {'typeFromHandle15' (type System.Type)}
		0x180213DC3: Loads the type definition for managed type C019_SideQuest_Define as a constant "C019_SideQuest_Define" in rax
		0x180213DCA: Reads unknown value in stack, offset 48 (0x30) and stores the pointer in register rbx as new constant constant88
		0x180213DCF: Loads the pointer to the static fields for C019_SideQuest_Define and stores it in constant89 in register rcx
		0x180213DD6: [!] Sets static field . to {'local0' (type System.Type[])}
		0x180213DDE: [!] Returns from the function

		0x180213DE1: [!] Constructs and throws an exception of kind System.NullReferenceException

		0x180213DEC: Copies {'local32' (type System.NullReferenceException)} from rax into rcx
		0x180213E12: Copies {'local32' (type System.NullReferenceException)} from rax into rcx
		0x180213E38: Copies {'local32' (type System.NullReferenceException)} from rax into rcx
		0x180213E5E: Copies {'local32' (type System.NullReferenceException)} from rax into rcx
		0x180213E84: Copies {'local32' (type System.NullReferenceException)} from rax into rcx
		0x180213EAA: Copies {'local32' (type System.NullReferenceException)} from rax into rcx
		0x180213ED0: Copies {'local32' (type System.NullReferenceException)} from rax into rcx
		0x180213EF6: Copies {'local32' (type System.NullReferenceException)} from rax into rcx
		0x180213F1C: Copies {'local32' (type System.NullReferenceException)} from rax into rcx
		0x180213F42: Copies {'local32' (type System.NullReferenceException)} from rax into rcx
		0x180213F68: Copies {'local32' (type System.NullReferenceException)} from rax into rcx
		0x180213F8E: Copies {'local32' (type System.NullReferenceException)} from rax into rcx
		0x180213FB4: Copies {'local32' (type System.NullReferenceException)} from rax into rcx
		0x180213FDA: Copies {'local32' (type System.NullReferenceException)} from rax into rcx
		0x180214000: Copies {'local32' (type System.NullReferenceException)} from rax into rcx



	Generated Pseudocode:

	Declaring Type: C019_SideQuest_Define
	static System.Void .cctor()
		System.Type[] local0 = new System.Type[17]

		System.Type typeFromHandle = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C019_1000' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle != 0)

		    if (typeFromHandle == 0)
                goto INSN_180213DE7
            endif
		endif
        
		local0[1] = typeFromHandle

		System.Type typeFromHandle2 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C019_1001' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle2 == 0)
            goto INSN_180213A9D
        endif

		if (typeFromHandle2 == 0)
            goto INSN_180213E0D
        endif

		INSN_180213A9D:
		local0[2] = typeFromHandle2

		System.Type typeFromHandle3 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C019_1002' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle3 == 0)
            goto INSN_180213AD9
        endif

		if (typeFromHandle3 == 0)
            goto INSN_180213E33
        endif

		INSN_180213AD9:
		local0[3] = typeFromHandle3

		System.Type typeFromHandle4 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C019_1003' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle4 == 0)
            goto INSN_180213B15
        endif

		if (typeFromHandle4 == 0)
            goto INSN_180213E59
        endif

		INSN_180213B15:
		local0[4] = typeFromHandle4

		System.Type typeFromHandle5 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C019_1004' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle5 == 0)
            goto INSN_180213B51
        endif

		if (typeFromHandle5 == 0)
            goto INSN_180213E7F
        endif

		INSN_180213B51:
		local0[5] = typeFromHandle5

		System.Type typeFromHandle6 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C019_1005' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle6 == 0)
            goto INSN_180213B8D
        endif

		if (typeFromHandle6 == 0)
            goto INSN_180213EA5
        endif

		INSN_180213B8D:
		local0[6] = typeFromHandle6

		System.Type typeFromHandle7 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C019_1006' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle7 == 0)
            goto INSN_180213BC9
        endif

		if (typeFromHandle7 == 0)
            goto INSN_180213ECB
        endif

		INSN_180213BC9:
		local0[7] = typeFromHandle7

		System.Type typeFromHandle8 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C019_1007' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle8 == 0)
            goto INSN_180213C05
        endif

		if (typeFromHandle8 == 0)
            goto INSN_180213EF1
        endif

		INSN_180213C05:
		local0[8] = typeFromHandle8

		System.Type typeFromHandle9 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C019_1008' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle9 == 0)
            goto INSN_180213C41
        endif

		if (typeFromHandle9 == 0)
            goto INSN_180213F17
        endif

		INSN_180213C41:
		local0[9] = typeFromHandle9

		System.Type typeFromHandle10 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C019_1009' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle10 == 0)
            goto INSN_180213C7D
        endif

		if (typeFromHandle10 == 0)
            goto INSN_180213F3D
        endif

		INSN_180213C7D:
		local0[10] = typeFromHandle10

		System.Type typeFromHandle11 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C019_1010' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle11 == 0)
            goto INSN_180213CB9
        endif

		if (typeFromHandle11 == 0)
            goto INSN_180213F63
        endif

		INSN_180213CB9:
		local0[11] = typeFromHandle11

		System.Type typeFromHandle12 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C019_2000' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle12 == 0)
            goto INSN_180213CF5
        endif

		if (typeFromHandle12 == 0)
            goto INSN_180213F89
        endif

		INSN_180213CF5:
		local0[12] = typeFromHandle12

		System.Type typeFromHandle13 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C019_2001' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle13 == 0)
            goto INSN_180213D34
        endif

		if (typeFromHandle13 == 0)
            goto INSN_180213FAF
        endif

		INSN_180213D34:
		local0[13] = typeFromHandle13

		System.Type typeFromHandle14 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C019_2002' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle14 == 0)
            goto INSN_180213D73
        endif

		if (typeFromHandle14 == 0)
            goto INSN_180213FD5
        endif

		INSN_180213D73:
		local0[14] = typeFromHandle14

		System.Type typeFromHandle15 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C019_2003' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle15 == 0)
            goto INSN_180213DB2
        endif

		if (typeFromHandle15 == 0)
            goto INSN_180213FFB
        endif

		INSN_180213DB2:
		local0[15] = typeFromHandle15
		. = local0
		return
		throw new System.NullReferenceException()

		INSN_180213DE7:

		INSN_180213E0D:

		INSN_180213E33:

		INSN_180213E59:

		INSN_180213E7F:

		INSN_180213EA5:

		INSN_180213ECB:

		INSN_180213EF1:

		INSN_180213F17:

		INSN_180213F3D:

		INSN_180213F63:

		INSN_180213F89:

		INSN_180213FAF:

		INSN_180213FD5:

		INSN_180213FFB:


Generated IL:
	Action of type Cpp2IL.Core.Analysis.Actions.x86.Important.RegToStaticFieldAction at (0x180213DD6) is corrupt (No further info) and cannot be created as IL. Aborting here.


