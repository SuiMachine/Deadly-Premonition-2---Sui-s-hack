Type: BoatCourseDataManager

Method: System.Void BoatCourseDataManager::.ctor():	Method Body (x86 ASM):
		0x180203000 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180203002 jmp near ptr 0000000180CE1E90h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180203007 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.Void BoatCourseDataManager::.ctor():
		End of function at 0x180203008
		Absolute End is at 0x180203008
		Identified Jump Destination addresses:

		0x180203002: [!] Calls managed method System.Void UnityEngine.MonoBehaviour::.ctor() on instance {'this' (function parameter, type BoatCourseDataManager)}

		0x180203002: [!] Returns from the function




	Generated Pseudocode:

	Declaring Type: BoatCourseDataManager
	System.Void .ctor()

		base..ctor()
		return


Generated IL:
	IL_0000: ldarg.0
	IL_0001: call System.Void UnityEngine.MonoBehaviour::.ctor()
	IL_0006: ret
	

Method: System.Void BoatCourseDataManager::Init():	Method Body (x86 ASM):
		0x1802574B0 mov [rsp+20h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RSP | 32 | None ||| N/A | N/A
		0x1802574B5 push rbp		; DEBUG: {Register}/RBP {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1802574B6 sub rsp,20h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 32
		0x1802574BA cmp byte ptr [18183D428h],0		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6467867688 | None ||| N/A | 0
		0x1802574C1 mov rbp,rcx		; DEBUG: {Register}/RBP {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x1802574C4 jne short 00000001802574D8h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802574C6 mov ecx,[1815147ACh]		; DEBUG: {Register}/ECX {Memory}/None ||| RIP | 6464554924 | None ||| N/A | N/A
		0x1802574CC call 00000001800FEB90h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802574D1 mov byte ptr [18183D428h],1		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6467867688 | None ||| N/A | 1
		0x1802574D8 mov rdx,[1818712D0h]		; DEBUG: {Register}/RDX {Memory}/None ||| RIP | 6468080336 | None ||| N/A | N/A
		0x1802574DF mov rcx,rbp		; DEBUG: {Register}/RCX {Register}/RBP ||| None | 0 | None ||| N/A | N/A
		0x1802574E2 mov [rsp+38h],rsi		; DEBUG: {Memory}/None {Register}/RSI ||| RSP | 56 | None ||| N/A | N/A
		0x1802574E7 mov [rsp+40h],rdi		; DEBUG: {Memory}/None {Register}/RDI ||| RSP | 64 | None ||| N/A | N/A
		0x1802574EC call 000000018090AEA0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802574F1 xor ebx,ebx		; DEBUG: {Register}/EBX {Register}/EBX ||| None | 0 | None ||| N/A | N/A
		0x1802574F3 mov [rbp+18h],rax		; DEBUG: {Memory}/None {Register}/RAX ||| RBP | 24 | None ||| N/A | N/A
		0x1802574F7 mov edx,ebx		; DEBUG: {Register}/EDX {Register}/EBX ||| None | 0 | None ||| N/A | N/A
		0x1802574F9 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1802574FC je near ptr 000000018025761Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180257502 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180257505 cmp edx,[rax+18h]		; DEBUG: {Register}/EDX {Memory}/None ||| RAX | 24 | None ||| N/A | N/A
		0x180257508 jge near ptr 000000018025760Ah		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18025750E test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x180257511 je near ptr 000000018025761Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180257517 cmp ebx,[rcx+18h]		; DEBUG: {Register}/EBX {Memory}/None ||| RCX | 24 | None ||| N/A | N/A
		0x18025751A jae near ptr 0000000180257627h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180257520 movsxd rax,ebx		; DEBUG: {Register}/RAX {Register}/EBX ||| None | 0 | None ||| N/A | N/A
		0x180257523 mov rdi,[rcx+rax*8+20h]		; DEBUG: {Register}/RDI {Memory}/None ||| RCX | 32 | RAX ||| N/A | N/A
		0x180257528 test rdi,rdi		; DEBUG: {Register}/RDI {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x18025752B je near ptr 000000018025761Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180257531 cmp byte ptr [18183D43Ah],0		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6467867706 | None ||| N/A | 0
		0x180257538 jne short 000000018025754Ch		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18025753A mov ecx,[18151486Ch]		; DEBUG: {Register}/ECX {Memory}/None ||| RIP | 6464555116 | None ||| N/A | N/A
		0x180257540 call 00000001800FEB90h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180257545 mov byte ptr [18183D43Ah],1		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6467867706 | None ||| N/A | 1
		0x18025754C mov rcx,[181899DE8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468247016 | None ||| N/A | N/A
		0x180257553 mov esi,[rdi+18h]		; DEBUG: {Register}/ESI {Memory}/None ||| RDI | 24 | None ||| N/A | N/A
		0x180257556 test byte ptr [rcx+127h],2		; DEBUG: {Memory}/None {Immediate8}/None ||| RCX | 295 | None ||| N/A | 2
		0x18025755D je short 000000018025756Dh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18025755F cmp dword ptr [rcx+0D8h],0		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RCX | 216 | None ||| N/A | 0
		0x180257566 jne short 000000018025756Dh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180257568 call 000000018010EAF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18025756D xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18025756F mov ecx,esi		; DEBUG: {Register}/ECX {Register}/ESI ||| None | 0 | None ||| N/A | N/A
		0x180257571 call 000000018114B8A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180257576 mov [rdi+20h],rax		; DEBUG: {Memory}/None {Register}/RAX ||| RDI | 32 | None ||| N/A | N/A
		0x18025757A test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18025757D jne short 00000001802575F5h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18025757F mov eax,[rdi+18h]		; DEBUG: {Register}/EAX {Memory}/None ||| RDI | 24 | None ||| N/A | N/A
		0x180257582 lea rdx,[rsp+30h]		; DEBUG: {Register}/RDX {Memory}/None ||| RSP | 48 | None ||| N/A | N/A
		0x180257587 mov rcx,[1818841C8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468157896 | None ||| N/A | N/A
		0x18025758E mov [rsp+30h],eax		; DEBUG: {Memory}/None {Register}/EAX ||| RSP | 48 | None ||| N/A | N/A
		0x180257592 call 000000018013A7F0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180257597 mov rcx,[181883F70h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468157296 | None ||| N/A | N/A
		0x18025759E mov rdi,rax		; DEBUG: {Register}/RDI {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1802575A1 test byte ptr [rcx+127h],2		; DEBUG: {Memory}/None {Immediate8}/None ||| RCX | 295 | None ||| N/A | 2
		0x1802575A8 je short 00000001802575B8h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802575AA cmp dword ptr [rcx+0D8h],0		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RCX | 216 | None ||| N/A | 0
		0x1802575B1 jne short 00000001802575B8h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802575B3 call 000000018010EAF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802575B8 mov rcx,[181866EC8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468038344 | None ||| N/A | N/A
		0x1802575BF xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1802575C2 mov rdx,rdi		; DEBUG: {Register}/RDX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x1802575C5 call 0000000180D4CDC0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802575CA mov rcx,[18188D688h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468195976 | None ||| N/A | N/A
		0x1802575D1 mov rdi,rax		; DEBUG: {Register}/RDI {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1802575D4 test byte ptr [rcx+127h],2		; DEBUG: {Memory}/None {Immediate8}/None ||| RCX | 295 | None ||| N/A | 2
		0x1802575DB je short 00000001802575EBh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802575DD cmp dword ptr [rcx+0D8h],0		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RCX | 216 | None ||| N/A | 0
		0x1802575E4 jne short 00000001802575EBh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802575E6 call 000000018010EAF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802575EB xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1802575ED mov rcx,rdi		; DEBUG: {Register}/RCX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x1802575F0 call 0000000180B2C440h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802575F5 mov rax,[rbp+18h]		; DEBUG: {Register}/RAX {Memory}/None ||| RBP | 24 | None ||| N/A | N/A
		0x1802575F9 inc ebx		; DEBUG: {Register}/EBX {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1802575FB mov edx,ebx		; DEBUG: {Register}/EDX {Register}/EBX ||| None | 0 | None ||| N/A | N/A
		0x1802575FD mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180257600 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180257603 je short 000000018025761Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180257605 jmp near ptr 0000000180257505h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18025760A mov rdi,[rsp+40h]		; DEBUG: {Register}/RDI {Memory}/None ||| RSP | 64 | None ||| N/A | N/A
		0x18025760F mov rsi,[rsp+38h]		; DEBUG: {Register}/RSI {Memory}/None ||| RSP | 56 | None ||| N/A | N/A
		0x180257614 mov rbx,[rsp+48h]		; DEBUG: {Register}/RBX {Memory}/None ||| RSP | 72 | None ||| N/A | N/A
		0x180257619 add rsp,20h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 32
		0x18025761D pop rbp		; DEBUG: {Register}/RBP {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18025761E ret		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18025761F xor ecx,ecx		; DEBUG: {Register}/ECX {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x180257621 call 000000018012BDA0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180257626 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.Void BoatCourseDataManager::Init():
		End of function at 0x180257627
		Absolute End is at 0x180257627
		Identified Jump Destination addresses:

		0x1802574B5: Saves the content of rbp to the stack
		0x1802574BA: Compares {Unknown Global at 0x18183D428, first ten bytes are [32 11 1 0 200 60 103 1 32 11], or as chars "  È<g "} and 0
		0x1802574C1: Copies {'this' (function parameter, type BoatCourseDataManager)} from rcx into rbp
		0x1802574C4: Jumps to 0x1802574D8 if {Unknown Global at 0x18183D428, first ten bytes are [32 11 1 0 200 60 103 1 32 11], or as chars "  È<g "} != 0

		0x1802574C6: Loads string "d" into register rcx as constant {'constant3' (constant value of type Cpp2IL.Core.Analysis.ResultModels.Il2CppString)}
		0x1802574CC: Attempts to load the il2cpp metadata for this method (method id 0) and init it cpp-side.

		0x1802574D8: Loads the global generic method reference for method T[] UnityEngine.Component::GetComponentsInChildren<BoatCoursePoint>() on type UnityEngine.Component and stores the result in constant {'GetComponentsInChildren' (constant value of type Cpp2IL.Core.Analysis.ResultModels.GenericMethodReference)} in rdx
		0x1802574DF: Copies {'this' (function parameter, type BoatCourseDataManager)} from rbp into rcx
		0x1802574EC: [!] Calls managed method T[] UnityEngine.Component::GetComponentsInChildren<BoatCoursePoint>() on instance {'this' (function parameter, type BoatCourseDataManager)} and stores the result in {'componentsInChildren' (type BoatCoursePoint[])} ;  - Method resolved from concrete implementations at this address, with the help of a constant value to identify which concrete implementation.

		0x1802574F1: Clears register rbx, yielding zero-local {'local2' (type System.Int32)}
		0x1802574F3: [!] Sets the field m_coursePoints (Type BoatCoursePoint[]) on local {'this' (function parameter, type BoatCourseDataManager)} to the value stored in {'componentsInChildren' (type BoatCoursePoint[])}
		0x1802574F7: Copies {'local2' (type System.Int32)} from rbx into rdx
		0x1802574F9: [!] Compares {'componentsInChildren' (type BoatCoursePoint[])} and 0
		0x1802574FC: Jumps to 0x18025761F (which throws a NRE) if componentsInChildren equals 0. Implicitly present in managed code, so ignored here.
		0x180257502: Copies {'componentsInChildren' (type BoatCoursePoint[])} from rax into rcx

		Potential Loop Start (0x180257505):
		0x180257505: [!] Compares {'local2' (type System.Int32)} and {Property System.Int32 System.Array::Length() on {'componentsInChildren' (type BoatCoursePoint[])}}
		0x180257508: Jumps to 0x18025760A if {'local2' (type System.Int32)} is greater than or equal to {Property System.Int32 System.Array::Length() on {'componentsInChildren' (type BoatCoursePoint[])}} ;  - Increasing indentation - is while loop, unimportant is False

		0x18025750E: [!] Compares {'componentsInChildren' (type BoatCoursePoint[])} and 0
		0x180257511: Jumps to 0x18025761F (which throws a NRE) if componentsInChildren equals 0. Implicitly present in managed code, so ignored here.
		0x180257517: [!] Compares {'local2' (type System.Int32)} and {Property System.Int32 System.Array::Length() on {'componentsInChildren' (type BoatCoursePoint[])}}
		0x18025751A: Jumps to 0x180257627 (which throws a NRE) if {'local2' (type System.Int32)} is greater than or equal to {Property System.Int32 System.Array::Length() on {'componentsInChildren' (type BoatCoursePoint[])}}. Implicitly present in managed code, so ignored here.
		0x180257520: Copies {'local2' (type System.Int32)} from rbx into rax
		0x180257523: Copies the element in the array {'componentsInChildren' (type BoatCoursePoint[])} at the index specified by {'local2' (type System.Int32)} into new local {'boatCoursePoint' (type BoatCoursePoint)}
		0x180257528: [!] Compares {'boatCoursePoint' (type BoatCoursePoint)} and 0
		0x18025752B: Jumps to 0x18025761F (which throws a NRE) if boatCoursePoint equals 0. Implicitly present in managed code, so ignored here.
		0x180257531: Compares {Unknown Global at 0x18183D43A, first ten bytes are [103 1 80 11 1 0 112 11 1 0], or as chars "gP p "} and 0
		0x180257538: Jumps to 0x18025754C if {Unknown Global at 0x18183D43A, first ten bytes are [103 1 80 11 1 0 112 11 1 0], or as chars "gP p "} != 0

		0x18025753A: Loads string "p" into register rcx as constant {'constant10' (constant value of type Cpp2IL.Core.Analysis.ResultModels.Il2CppString)}
		0x180257540: Attempts to load the il2cpp metadata for this method (method id 0) and init it cpp-side.

		0x18025754C: Loads the type definition for managed type DataManager as a constant "DataManager" in rcx
		0x180257553: [!] Reads field m_courseId from {'boatCoursePoint' (type BoatCoursePoint)} and stores in a new local {'m_courseId' (type System.Int32)}

		0x180257556: Compares "{il2cpp field on {'DataManager' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" and 2
		0x18025755D: Jumps to 0x18025756D if "{il2cpp field on {'DataManager' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" equals 2

		0x18025755F: Compares "{il2cpp field on {'DataManager' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" and 0
		0x180257566: Jumps to 0x18025756D if "{il2cpp field on {'DataManager' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" != 0

		0x180257568: Calls the il2cpp cctor for the type DataManager
		0x18025756F: Copies {'m_courseId' (type System.Int32)} from rsi into rcx
		0x180257571: [!] Calls static managed method BoatCourseData DataManager::GetBoatCourseData(System.Int32) with arguments [{'m_courseId' (type System.Int32)}] and stores the result in {'boatCourseData' (type BoatCourseData)}

		0x180257576: [!] Sets the field <CourseData>k__BackingField (Type BoatCourseData) on local {'boatCoursePoint' (type BoatCoursePoint)} to the value stored in {'boatCourseData' (type BoatCourseData)}
		0x18025757A: [!] Compares {'boatCourseData' (type BoatCourseData)} and 0
		0x18025757D: Jumps to 0x1802575F5 (which is an if statement's body) if {'boatCourseData' (type BoatCourseData)} != 0 ;  - Increasing indentation - is standard if, unimportant is False

		0x18025757F: [!] Reads field m_courseId from {'boatCoursePoint' (type BoatCoursePoint)} and stores in a new local {'m_courseId2' (type System.Int32)}

		0x180257582: Loads a pointer to stack offset 0x30 into register rdx as new constant constant17
		0x180257587: Loads the type definition for managed type System.Int32 as a constant "Int32" in rcx
		0x18025758E: Moves m_courseId2 (type System.Int32) from register rax to the stack at offset 48 (0x30)
		0x180257592: Boxes a cpp primitive value {'m_courseId2' (type System.Int32)} to managed type System.Int32 and stores the result in new local  in register rax.
		0x180257597: Loads the type definition for managed type System.String as a constant "String" in rcx
		0x18025759E: Copies {'m_courseId2' (type System.Int32)} from rax into rdi
		0x1802575A1: Compares "{il2cpp field on {'String' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" and 2
		0x1802575A8: Jumps to 0x1802575B8 if "{il2cpp field on {'String' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" equals 2

		0x1802575AA: Compares "{il2cpp field on {'String' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" and 0
		0x1802575B1: Jumps to 0x1802575B8 if "{il2cpp field on {'String' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" != 0

		0x1802575B3: Calls the il2cpp cctor for the type System.String
		0x1802575B8: Loads the string literal "BoatCourseData Not Exist : " as a constant "constant24" in rcx
		0x1802575C2: Copies {'m_courseId2' (type System.Int32)} from rdi into rdx
		0x1802575C5: [!] Calls static managed method System.String System.String::Concat(System.Object,System.Object) with arguments ["BoatCourseData Not Exist : ", {'m_courseId2' (type System.Int32)}] and stores the result in {'string' (type System.String)}

		0x1802575CA: Loads the type definition for managed type UnityEngine.Debug as a constant "Debug" in rcx
		0x1802575D1: Copies {'string' (type System.String)} from rax into rdi
		0x1802575D4: Compares "{il2cpp field on {'Debug' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" and 2
		0x1802575DB: Jumps to 0x1802575EB if "{il2cpp field on {'Debug' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" equals 2

		0x1802575DD: Compares "{il2cpp field on {'Debug' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" and 0
		0x1802575E4: Jumps to 0x1802575EB if "{il2cpp field on {'Debug' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" != 0

		0x1802575E6: Calls the il2cpp cctor for the type UnityEngine.Debug
		0x1802575ED: Copies {'string' (type System.String)} from rdi into rcx
		0x1802575F0: [!] Calls static managed method System.Void UnityEngine.Debug::LogWarning(System.Object) with arguments [{'string' (type System.String)}]

		0x1802575F5: [!] Reads field m_coursePoints from {'this' (function parameter, type BoatCourseDataManager)} and stores in a new local {'m_coursePoints' (type BoatCoursePoint[])}

		0x1802575F9: [!] Adds 1 to the value {'local2' (type System.Int32)}, stored in rbx
		0x1802575FB: Copies {'local2' (type System.Int32)} from rbx into rdx
		0x1802575FD: Copies {'m_coursePoints' (type BoatCoursePoint[])} from rax into rcx
		0x180257600: [!] Compares {'m_coursePoints' (type BoatCoursePoint[])} and 0
		0x180257603: Jumps to 0x18025761F (which throws a NRE) if m_coursePoints equals 0. Implicitly present in managed code, so ignored here.
		0x180257605: Jumps to 0x180257505 - which is still in this function, but further up. Probably indicative that this is a loop.
		0x18025760A: Reads unknown value in stack, offset 64 (0x40) and stores the pointer in register rdi as new constant constant31
		0x18025760F: Reads unknown value in stack, offset 56 (0x38) and stores the pointer in register rsi as new constant constant32
		0x180257614: Reads unknown value in stack, offset 72 (0x48) and stores the pointer in register rbx as new constant constant33
		0x18025761E: [!] Returns from the function

		0x180257621: [!] Constructs and throws an exception of kind System.NullReferenceException




	Generated Pseudocode:

	Declaring Type: BoatCourseDataManager
	System.Void Init()

		BoatCoursePoint[] componentsInChildren = base.GetComponentsInChildren<BoatCoursePoint>()
		ulong local2 = 0
		this.m_coursePoints = componentsInChildren

		while (local2 < componentsInChildren.Length)
		    BoatCoursePoint boatCoursePoint = componentsInChildren[local2]
		    System.Int32 m_courseId = boatCoursePoint.m_courseId

		    BoatCourseData boatCourseData = DataManager.GetBoatCourseData(m_courseId) //(Int32 id)
		    boatCoursePoint.<CourseData>k__BackingField = boatCourseData

		    if (boatCourseData == 0)
		        System.Int32 m_courseId2 = boatCoursePoint.m_courseId

		        System.String string = System.String.Concat("BoatCourseData Not Exist : ", m_courseId2) //(Object arg0, Object arg1)

		        UnityEngine.Debug.LogWarning(string) //(Object message)
		    endif
            
		    BoatCoursePoint[] m_coursePoints = this.m_coursePoints
		    local2 += 1
		endwhile
        
		return
		throw new System.NullReferenceException()


Generated IL:
	IL_0000: ldarg.0
	IL_0001: call T[] UnityEngine.Component::GetComponentsInChildren<BoatCoursePoint>()
	IL_0006: stloc.0
	IL_0007: ldc.i4.0
	IL_0008: stloc.1
	IL_0009: ldarg.0
	IL_000a: ldloc.0
	IL_000b: stfld BoatCoursePoint[] BoatCourseDataManager::m_coursePoints
	IL_0010: ldloc.1
	IL_0011: ldloc.0
	IL_0012: call System.Int32 System.Array::get_Length()
	IL_0017: bge.s IL_005d
	IL_0019: ldloc.0
	IL_001a: ldloc.1
	IL_001b: ldelem.any BoatCoursePoint
	IL_0020: stloc.2
	IL_0021: ldloc.2
	IL_0022: ldfld System.Int32 BoatCoursePoint::m_courseId
	IL_0027: call BoatCourseData DataManager::GetBoatCourseData(System.Int32)
	IL_002c: stloc.3
	IL_002d: ldloc.2
	IL_002e: ldloc.3
	IL_002f: stfld BoatCourseData BoatCoursePoint::<CourseData>k__BackingField
	IL_0034: ldloc.3
	IL_0035: ldc.i4.0
	IL_0036: bne.un.s IL_0051
	IL_0038: ldloc.2
	IL_0039: ldfld System.Int32 BoatCoursePoint::m_courseId
	IL_003e: stloc.s V_4
	IL_0040: ldstr "BoatCourseData Not Exist : "
	IL_0045: ldloc.s V_4
	IL_0047: call System.String System.String::Concat(System.Object,System.Object)
	IL_004c: call System.Void UnityEngine.Debug::LogWarning(System.Object)
	IL_0051: ldarg.0
	IL_0052: ldfld BoatCoursePoint[] BoatCourseDataManager::m_coursePoints
	IL_0057: stloc.s V_5
	IL_0059: ldloc.1
	IL_005a: ldc.i4.1
	IL_005b: add
	IL_005c: stloc.1
	IL_005d: ret
	IL_005e: newobj System.Void System.NullReferenceException::.ctor()
	IL_0063: throw
	

Method: BoatCoursePoint BoatCourseDataManager::GetCoursePoint(System.Int32):	Method Body (x86 ASM):
		0x1802572D0 sub rsp,28h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 40
		0x1802572D4 mov r8,[rcx+18h]		; DEBUG: {Register}/R8 {Memory}/None ||| RCX | 24 | None ||| N/A | N/A
		0x1802572D8 test r8,r8		; DEBUG: {Register}/R8 {Register}/R8 ||| None | 0 | None ||| N/A | N/A
		0x1802572DB je short 00000001802572F0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802572DD cmp edx,[r8+18h]		; DEBUG: {Register}/EDX {Memory}/None ||| R8 | 24 | None ||| N/A | N/A
		0x1802572E1 jae short 00000001802572F8h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802572E3 movsxd rax,edx		; DEBUG: {Register}/RAX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1802572E6 mov rax,[r8+rax*8+20h]		; DEBUG: {Register}/RAX {Memory}/None ||| R8 | 32 | RAX ||| N/A | N/A
		0x1802572EB add rsp,28h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 40
		0x1802572EF ret		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1802572F0 xor ecx,ecx		; DEBUG: {Register}/ECX {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x1802572F2 call 000000018012BDA0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802572F7 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method BoatCoursePoint BoatCourseDataManager::GetCoursePoint(System.Int32):
		End of function at 0x1802572F8
		Absolute End is at 0x1802572F8
		Identified Jump Destination addresses:

		0x1802572D4: [!] Reads field m_coursePoints from {'this' (function parameter, type BoatCourseDataManager)} and stores in a new local {'m_coursePoints' (type BoatCoursePoint[])}

		0x1802572D8: [!] Compares {'m_coursePoints' (type BoatCoursePoint[])} and 0
		0x1802572DB: Jumps to 0x1802572F0 (which throws a NRE) if m_coursePoints equals 0. Implicitly present in managed code, so ignored here.
		0x1802572DD: [!] Compares {'id' (function parameter, type System.Int32)} and {Property System.Int32 System.Array::Length() on {'m_coursePoints' (type BoatCoursePoint[])}}
		0x1802572E1: Jumps to 0x1802572F8 (which throws a NRE) if {'id' (function parameter, type System.Int32)} is greater than or equal to {Property System.Int32 System.Array::Length() on {'m_coursePoints' (type BoatCoursePoint[])}}. Implicitly present in managed code, so ignored here.
		0x1802572E3: Copies {'id' (function parameter, type System.Int32)} from rdx into rax
		0x1802572E6: Copies the element in the array {'m_coursePoints' (type BoatCoursePoint[])} at the index specified by {'id' (function parameter, type System.Int32)} into new local {'boatCoursePoint' (type BoatCoursePoint)}
		0x1802572EF: [!] Returns {'boatCoursePoint' (type BoatCoursePoint)} from the function

		0x1802572F2: [!] Constructs and throws an exception of kind System.NullReferenceException




	Generated Pseudocode:

	Declaring Type: BoatCourseDataManager
	BoatCoursePoint GetCoursePoint(System.Int32 id)
		BoatCoursePoint[] m_coursePoints = this.m_coursePoints
		BoatCoursePoint boatCoursePoint = m_coursePoints[id]
		return boatCoursePoint
		throw new System.NullReferenceException()


Generated IL:
	IL_0000: ldarg.0
	IL_0001: ldfld BoatCoursePoint[] BoatCourseDataManager::m_coursePoints
	IL_0006: ldarg.1
	IL_0007: ldelem.any BoatCoursePoint
	IL_000c: ret
	IL_000d: newobj System.Void System.NullReferenceException::.ctor()
	IL_0012: throw
	

Method: BoatCoursePoint[] BoatCourseDataManager::GetCoursePoints():	Method Body (x86 ASM):
		0x180257310 push r14		; DEBUG: {Register}/R14 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180257312 sub rsp,20h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 32
		0x180257316 cmp byte ptr [18183D429h],0		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6467867689 | None ||| N/A | 0
		0x18025731D mov r14,rcx		; DEBUG: {Register}/R14 {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x180257320 jne short 0000000180257334h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180257322 mov ecx,[181514798h]		; DEBUG: {Register}/ECX {Memory}/None ||| RIP | 6464554904 | None ||| N/A | N/A
		0x180257328 call 00000001800FEB90h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18025732D mov byte ptr [18183D429h],1		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6467867689 | None ||| N/A | 1
		0x180257334 mov rax,[r14+18h]		; DEBUG: {Register}/RAX {Memory}/None ||| R14 | 24 | None ||| N/A | N/A
		0x180257338 mov [rsp+30h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RSP | 48 | None ||| N/A | N/A
		0x18025733D mov [rsp+38h],rbp		; DEBUG: {Memory}/None {Register}/RBP ||| RSP | 56 | None ||| N/A | N/A
		0x180257342 mov [rsp+40h],rsi		; DEBUG: {Memory}/None {Register}/RSI ||| RSP | 64 | None ||| N/A | N/A
		0x180257347 mov [rsp+48h],rdi		; DEBUG: {Memory}/None {Register}/RDI ||| RSP | 72 | None ||| N/A | N/A
		0x18025734C test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18025734F je near ptr 0000000180257450h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180257355 mov edx,[rax+18h]		; DEBUG: {Register}/EDX {Memory}/None ||| RAX | 24 | None ||| N/A | N/A
		0x180257358 mov rcx,[18189AB98h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468250520 | None ||| N/A | N/A
		0x18025735F call 0000000180141320h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180257364 mov rsi,rax		; DEBUG: {Register}/RSI {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180257367 xor ebx,ebx		; DEBUG: {Register}/EBX {Register}/EBX ||| None | 0 | None ||| N/A | N/A
		0x180257369 mov eax,ebx		; DEBUG: {Register}/EAX {Register}/EBX ||| None | 0 | None ||| N/A | N/A
		0x18025736B test rsi,rsi		; DEBUG: {Register}/RSI {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x18025736E je near ptr 0000000180257450h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180257374 cmp eax,[rsi+18h]		; DEBUG: {Register}/EAX {Memory}/None ||| RSI | 24 | None ||| N/A | N/A
		0x180257377 jge near ptr 0000000180257432h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18025737D mov rax,[18189ABA8h]		; DEBUG: {Register}/RAX {Memory}/None ||| RIP | 6468250536 | None ||| N/A | N/A
		0x180257384 test byte ptr [rax+127h],2		; DEBUG: {Memory}/None {Immediate8}/None ||| RAX | 295 | None ||| N/A | 2
		0x18025738B je short 00000001802573A5h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18025738D cmp dword ptr [rax+0D8h],0		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RAX | 216 | None ||| N/A | 0
		0x180257394 jne short 00000001802573A5h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180257396 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180257399 call 000000018010EAF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18025739E mov rax,[18189ABA8h]		; DEBUG: {Register}/RAX {Memory}/None ||| RIP | 6468250536 | None ||| N/A | N/A
		0x1802573A5 mov rax,[rax+0B8h]		; DEBUG: {Register}/RAX {Memory}/None ||| RAX | 184 | None ||| N/A | N/A
		0x1802573AC mov rcx,[rax]		; DEBUG: {Register}/RCX {Memory}/None ||| RAX | 0 | None ||| N/A | N/A
		0x1802573AF test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x1802573B2 je near ptr 0000000180257450h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802573B8 movsxd rbp,ebx		; DEBUG: {Register}/RBP {Register}/EBX ||| None | 0 | None ||| N/A | N/A
		0x1802573BB cmp ebx,[rcx+18h]		; DEBUG: {Register}/EBX {Memory}/None ||| RCX | 24 | None ||| N/A | N/A
		0x1802573BE jae near ptr 0000000180257491h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802573C4 mov edi,[rcx+rbp*4+20h]		; DEBUG: {Register}/EDI {Memory}/None ||| RCX | 32 | RBP ||| N/A | N/A
		0x1802573C8 mov rcx,[181899DE8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468247016 | None ||| N/A | N/A
		0x1802573CF test byte ptr [rcx+127h],2		; DEBUG: {Memory}/None {Immediate8}/None ||| RCX | 295 | None ||| N/A | 2
		0x1802573D6 je short 00000001802573E6h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802573D8 cmp dword ptr [rcx+0D8h],0		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RCX | 216 | None ||| N/A | 0
		0x1802573DF jne short 00000001802573E6h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802573E1 call 000000018010EAF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802573E6 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1802573E8 mov ecx,edi		; DEBUG: {Register}/ECX {Register}/EDI ||| None | 0 | None ||| N/A | N/A
		0x1802573EA call 00000001811509D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802573EF test al,al		; DEBUG: {Register}/AL {Register}/AL ||| None | 0 | None ||| N/A | N/A
		0x1802573F1 je short 0000000180257429h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802573F3 mov rax,[r14+18h]		; DEBUG: {Register}/RAX {Memory}/None ||| R14 | 24 | None ||| N/A | N/A
		0x1802573F7 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1802573FA je short 0000000180257450h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802573FC cmp ebx,[rax+18h]		; DEBUG: {Register}/EBX {Memory}/None ||| RAX | 24 | None ||| N/A | N/A
		0x1802573FF jae short 000000018025747Eh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180257401 mov rdi,[rax+rbp*8+20h]		; DEBUG: {Register}/RDI {Memory}/None ||| RAX | 32 | RBP ||| N/A | N/A
		0x180257406 test rdi,rdi		; DEBUG: {Register}/RDI {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x180257409 je short 000000018025741Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18025740B mov rdx,[rsi]		; DEBUG: {Register}/RDX {Memory}/None ||| RSI | 0 | None ||| N/A | N/A
		0x18025740E mov rcx,rdi		; DEBUG: {Register}/RCX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x180257411 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x180257415 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18025741A test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18025741D je short 0000000180257458h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18025741F cmp ebx,[rsi+18h]		; DEBUG: {Register}/EBX {Memory}/None ||| RSI | 24 | None ||| N/A | N/A
		0x180257422 jae short 000000018025746Bh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180257424 mov [rsi+rbp*8+20h],rdi		; DEBUG: {Memory}/None {Register}/RDI ||| RSI | 32 | RBP ||| N/A | N/A
		0x180257429 inc ebx		; DEBUG: {Register}/EBX {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18025742B mov eax,ebx		; DEBUG: {Register}/EAX {Register}/EBX ||| None | 0 | None ||| N/A | N/A
		0x18025742D jmp near ptr 0000000180257374h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180257432 mov rdi,[rsp+48h]		; DEBUG: {Register}/RDI {Memory}/None ||| RSP | 72 | None ||| N/A | N/A
		0x180257437 mov rax,rsi		; DEBUG: {Register}/RAX {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x18025743A mov rsi,[rsp+40h]		; DEBUG: {Register}/RSI {Memory}/None ||| RSP | 64 | None ||| N/A | N/A
		0x18025743F mov rbp,[rsp+38h]		; DEBUG: {Register}/RBP {Memory}/None ||| RSP | 56 | None ||| N/A | N/A
		0x180257444 mov rbx,[rsp+30h]		; DEBUG: {Register}/RBX {Memory}/None ||| RSP | 48 | None ||| N/A | N/A
		0x180257449 add rsp,20h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 32
		0x18025744D pop r14		; DEBUG: {Register}/R14 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18025744F ret		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180257450 xor ecx,ecx		; DEBUG: {Register}/ECX {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x180257452 call 000000018012BDA0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180257457 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180257458 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18025745D mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180257460 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x180257463 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180257465 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18025746A int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method BoatCoursePoint[] BoatCourseDataManager::GetCoursePoints():
		End of function at 0x18025746B
		Absolute End is at 0x18025746B
		Identified Jump Destination addresses:

		0x180257310: Saves the content of r14 to the stack
		0x180257316: Compares {Unknown Global at 0x18183D429, first ten bytes are [11 1 0 200 60 103 1 32 11 1], or as chars " È<g "} and 0
		0x18025731D: Copies {'this' (function parameter, type BoatCourseDataManager)} from rcx into r14
		0x180257320: Jumps to 0x180257334 if {Unknown Global at 0x18183D429, first ten bytes are [11 1 0 200 60 103 1 32 11 1], or as chars " È<g "} != 0

		0x180257322: Loads string "c" into register rcx as constant {'constant3' (constant value of type Cpp2IL.Core.Analysis.ResultModels.Il2CppString)}
		0x180257328: Attempts to load the il2cpp metadata for this method (method id 0) and init it cpp-side.

		0x180257334: [!] Reads field m_coursePoints from {'this' (function parameter, type BoatCourseDataManager)} and stores in a new local {'m_coursePoints' (type BoatCoursePoint[])}

		0x18025734C: [!] Compares {'m_coursePoints' (type BoatCoursePoint[])} and 0
		0x18025734F: Jumps to 0x180257450 (which throws a NRE) if m_coursePoints equals 0. Implicitly present in managed code, so ignored here.
		0x180257355: Reads the length of the array "{'m_coursePoints' (type BoatCoursePoint[])}" and stores it in new local {'length' (type System.Int32)} in register rdx
		0x180257358: Loads the type definition for managed type BoatCoursePoint[] as a constant "BoatCoursePoint[]" in rcx
		0x18025735F: [!] Allocates an array of type BoatCoursePoint[] of size length and stores the result as local3 in register rax

		0x180257364: Copies {'local3' (type BoatCoursePoint[])} from rax into rsi
		0x180257367: Clears register rbx, yielding zero-local {'local4' (type System.Int32)}
		0x180257369: Copies {'local4' (type System.Int32)} from rbx into rax
		0x18025736B: [!] Compares {'local3' (type BoatCoursePoint[])} and 0
		0x18025736E: Jumps to 0x180257450 (which throws a NRE) if local3 equals 0. Implicitly present in managed code, so ignored here.

		Potential Loop Start (0x180257374):
		0x180257374: [!] Compares {'local4' (type System.Int32)} and {Property System.Int32 System.Array::Length() on {'local3' (type BoatCoursePoint[])}}
		0x180257377: Jumps to 0x180257432 if {'local4' (type System.Int32)} is greater than or equal to {Property System.Int32 System.Array::Length() on {'local3' (type BoatCoursePoint[])}} ;  - Increasing indentation - is while loop, unimportant is False

		0x18025737D: Loads the type definition for managed type BoatCourseDataManager as a constant "BoatCourseDataManager" in rax
		0x180257384: Compares "{il2cpp field on {'BoatCourseDataManager' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" and 2
		0x18025738B: Jumps to 0x1802573A5 if "{il2cpp field on {'BoatCourseDataManager' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" equals 2

		0x18025738D: Compares "{il2cpp field on {'BoatCourseDataManager' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" and 0
		0x180257394: Jumps to 0x1802573A5 if "{il2cpp field on {'BoatCourseDataManager' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" != 0

		0x180257396: Copies {'BoatCourseDataManager' (constant value of type Mono.Cecil.TypeReference)} from rax into rcx
		0x180257399: Calls the il2cpp cctor for the type BoatCourseDataManager
		0x18025739E: Loads the type definition for managed type BoatCourseDataManager as a constant "BoatCourseDataManager" in rax
		0x1802573A5: Loads the pointer to the static fields for BoatCourseDataManager and stores it in constant13 in register rax
		0x1802573AC: [!] Reads the static field ECondition[] BoatCourseDataManager::scCourseUnlockConditions into new local scCourseUnlockConditions
		0x1802573AF: [!] Compares {'scCourseUnlockConditions' (type ECondition[])} and 0
		0x1802573B2: Jumps to 0x180257450 (which throws a NRE) if scCourseUnlockConditions equals 0. Implicitly present in managed code, so ignored here.
		0x1802573B8: Copies {'local4' (type System.Int32)} from rbx into rbp
		0x1802573BB: [!] Compares {'local4' (type System.Int32)} and {Property System.Int32 System.Array::Length() on {'scCourseUnlockConditions' (type ECondition[])}}
		0x1802573BE: Jumps to 0x180257491 (which throws a NRE) if {'local4' (type System.Int32)} is greater than or equal to {Property System.Int32 System.Array::Length() on {'scCourseUnlockConditions' (type ECondition[])}}. Implicitly present in managed code, so ignored here.
		0x1802573C4: Copies the element in the array {'scCourseUnlockConditions' (type ECondition[])} at the index specified by {'local4' (type System.Int32)} into new local {'eCondition' (type ECondition)}
		0x1802573C8: Loads the type definition for managed type DataManager as a constant "DataManager" in rcx
		0x1802573CF: Compares "{il2cpp field on {'DataManager' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" and 2
		0x1802573D6: Jumps to 0x1802573E6 if "{il2cpp field on {'DataManager' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" equals 2

		0x1802573D8: Compares "{il2cpp field on {'DataManager' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" and 0
		0x1802573DF: Jumps to 0x1802573E6 if "{il2cpp field on {'DataManager' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" != 0

		0x1802573E1: Calls the il2cpp cctor for the type DataManager
		0x1802573E8: Copies {'eCondition' (type ECondition)} from rdi into rcx
		0x1802573EA: [!] Calls static managed method System.Boolean DataManager::IsSatisfyCondition(ECondition) with arguments [{'eCondition' (type ECondition)}] and stores the result in {'isSatisfyCondition' (type System.Boolean)}

		0x1802573EF: [!] Compares {'isSatisfyCondition' (type System.Boolean)} and False
		0x1802573F1: Jumps to 0x180257429 (which is an if statement's body) if isSatisfyCondition equals False ;  - Increasing indentation - is standard if, unimportant is False

		0x1802573F3: [!] Reads field m_coursePoints from {'this' (function parameter, type BoatCourseDataManager)} and stores in a new local {'m_coursePoints2' (type BoatCoursePoint[])}

		0x1802573F7: [!] Compares {'m_coursePoints2' (type BoatCoursePoint[])} and 0
		0x1802573FA: Jumps to 0x180257450 (which throws a NRE) if m_coursePoints2 equals 0. Implicitly present in managed code, so ignored here.
		0x1802573FC: [!] Compares {'local4' (type System.Int32)} and {Property System.Int32 System.Array::Length() on {'m_coursePoints2' (type BoatCoursePoint[])}}
		0x1802573FF: Jumps to 0x18025747E (which throws a NRE) if {'local4' (type System.Int32)} is greater than or equal to {Property System.Int32 System.Array::Length() on {'m_coursePoints2' (type BoatCoursePoint[])}}. Implicitly present in managed code, so ignored here.
		0x180257401: Copies the element in the array {'m_coursePoints2' (type BoatCoursePoint[])} at the index specified by {'local4' (type System.Int32)} into new local {'boatCoursePoint' (type BoatCoursePoint)}
		0x180257406: [!] Compares {'boatCoursePoint' (type BoatCoursePoint)} and 0
		0x180257409: Jumps to 0x18025741F (which is an if statement's body) if boatCoursePoint equals 0 ;  - Increasing indentation - is standard if, unimportant is False

		0x18025740B: Loads the class pointer from local3 into a constant constant23 in register rdx
		0x18025740E: Copies {'boatCoursePoint' (type BoatCoursePoint)} from rdi into rcx
		0x180257411: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='', name='BoatCoursePoint', parentType=UnityEngine.MonoBehaviour] and stores in register rdx
		0x18025741A: [!] Compares {'m_coursePoints2' (type BoatCoursePoint[])} and 0
		0x18025741D: Jumps to 0x180257458 if m_coursePoints2 equals 0 ;  - This is probably a goto, jumping to 0x180257458 which is after end of current block @ 0x18025741F (started at 0x18025740B)

		0x18025741F: [!] Compares {'local4' (type System.Int32)} and {Property System.Int32 System.Array::Length() on {'local3' (type BoatCoursePoint[])}}
		0x180257422: Jumps to 0x18025746B (which throws a NRE) if {'local4' (type System.Int32)} is greater than or equal to {Property System.Int32 System.Array::Length() on {'local3' (type BoatCoursePoint[])}}. Implicitly present in managed code, so ignored here.
		0x180257424: Sets the value at offset 0 in array local3 to {'boatCoursePoint' (type BoatCoursePoint)}
		0x180257429: [!] Adds 1 to the value {'local4' (type System.Int32)}, stored in rbx
		0x18025742B: Copies {'local4' (type System.Int32)} from rbx into rax
		0x18025742D: Jumps to 0x180257374 - which is still in this function, but further up. Probably indicative that this is a loop.
		0x180257432: Reads unknown value in stack, offset 72 (0x48) and stores the pointer in register rdi as new constant constant25
		0x180257437: Copies {'local3' (type BoatCoursePoint[])} from rsi into rax
		0x18025743A: Reads unknown value in stack, offset 64 (0x40) and stores the pointer in register rsi as new constant constant26
		0x18025743F: Reads unknown value in stack, offset 56 (0x38) and stores the pointer in register rbp as new constant constant27
		0x180257444: Reads unknown value in stack, offset 48 (0x30) and stores the pointer in register rbx as new constant constant28
		0x18025744F: [!] Returns {'local3' (type BoatCoursePoint[])} from the function

		0x180257452: [!] Constructs and throws an exception of kind System.NullReferenceException

		0x18025745D: Copies {'local12' (type System.NullReferenceException)} from rax into rcx



	Generated Pseudocode:

	Declaring Type: BoatCourseDataManager
	BoatCoursePoint[] GetCoursePoints()
		BoatCoursePoint[] m_coursePoints = this.m_coursePoints
		System.Int32 length = m_coursePoints.Length
		BoatCoursePoint[] local3 = new BoatCoursePoint[length]
		ulong local4 = 0

		while (local4 < local3.Length)
		    ECondition[] scCourseUnlockConditions = BoatCourseDataManager.scCourseUnlockConditions
		    ECondition eCondition = scCourseUnlockConditions[local4]

		    System.Boolean isSatisfyCondition = DataManager.IsSatisfyCondition(eCondition) //(ECondition conditionId)

		    if (isSatisfyCondition != False)
		        BoatCoursePoint[] m_coursePoints2 = this.m_coursePoints
		        BoatCoursePoint boatCoursePoint = m_coursePoints2[local4]

		        if (boatCoursePoint != 0)

		            if (m_coursePoints2 == 0)
                        goto INSN_180257458
                    endif
		        endif
                
		        local3[0] = boatCoursePoint
		    endif
            
		    local4 += 1
		endwhile
        
		return local3
		throw new System.NullReferenceException()

		INSN_180257458:


Generated IL:
	IL_0000: ldarg.0
	IL_0001: ldfld BoatCoursePoint[] BoatCourseDataManager::m_coursePoints
	IL_0006: call System.Int32 System.Array::get_Length()
	IL_000b: newarr BoatCoursePoint
	IL_0010: stloc.0
	IL_0011: ldc.i4.0
	IL_0012: stloc.1
	IL_0013: ldloc.1
	IL_0014: ldloc.0
	IL_0015: call System.Int32 System.Array::get_Length()
	IL_001a: bge.s IL_0052
	IL_001c: ldsfld ECondition[] BoatCourseDataManager::scCourseUnlockConditions
	IL_0021: ldloc.1
	IL_0022: ldelem.any ECondition
	IL_0027: call System.Boolean DataManager::IsSatisfyCondition(ECondition)
	IL_002c: ldc.i4.0
	IL_002d: beq.s IL_004e
	IL_002f: ldarg.0
	IL_0030: ldfld BoatCoursePoint[] BoatCourseDataManager::m_coursePoints
	IL_0035: stloc.2
	IL_0036: ldloc.2
	IL_0037: ldloc.1
	IL_0038: ldelem.any BoatCoursePoint
	IL_003d: stloc.3
	IL_003e: ldloc.3
	IL_003f: ldc.i4.0
	IL_0040: beq.s IL_0046
	IL_0042: ldloc.2
	IL_0043: ldc.i4.0
	IL_0044: beq.s IL_0000
	IL_0046: ldloc.0
	IL_0047: ldc.i4.0
	IL_0048: ldloc.3
	IL_0049: stelem.any BoatCoursePoint
	IL_004e: ldloc.1
	IL_004f: ldc.i4.1
	IL_0050: add
	IL_0051: stloc.1
	IL_0052: ldloc.0
	IL_0053: ret
	IL_0054: newobj System.Void System.NullReferenceException::.ctor()
	IL_0059: throw
	

Method: System.Void BoatCourseDataManager::.cctor():	Method Body (x86 ASM):
		0x180257640 push rbx		; DEBUG: {Register}/RBX {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180257642 sub rsp,20h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 32
		0x180257646 cmp byte ptr [18183D42Ah],0		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6467867690 | None ||| N/A | 0
		0x18025764D jne short 0000000180257661h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18025764F mov ecx,[1815147BCh]		; DEBUG: {Register}/ECX {Memory}/None ||| RIP | 6464554940 | None ||| N/A | N/A
		0x180257655 call 00000001800FEB90h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18025765A mov byte ptr [18183D42Ah],1		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6467867690 | None ||| N/A | 1
		0x180257661 mov rcx,[18189A000h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468247552 | None ||| N/A | N/A
		0x180257668 mov edx,6		; DEBUG: {Register}/EDX {Immediate32}/None ||| None | 0 | None ||| N/A | 6
		0x18025766D call 0000000180141320h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180257672 mov rdx,[1818773E0h]		; DEBUG: {Register}/RDX {Memory}/None ||| RIP | 6468105184 | None ||| N/A | N/A
		0x180257679 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18025767C mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18025767F mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180257682 call 0000000180A71470h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180257687 mov rcx,[18189ABA8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468250536 | None ||| N/A | N/A
		0x18025768E mov rdx,[rcx+0B8h]		; DEBUG: {Register}/RDX {Memory}/None ||| RCX | 184 | None ||| N/A | N/A
		0x180257695 mov [rdx],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDX | 0 | None ||| N/A | N/A
		0x180257698 add rsp,20h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 32
		0x18025769C pop rbx		; DEBUG: {Register}/RBX {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18025769D ret		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18025769E int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Static Method System.Void BoatCourseDataManager::.cctor():
		End of function at 0x18025769F
		Absolute End is at 0x18025769F
		Identified Jump Destination addresses:

		0x180257640: Saves the content of rbx to the stack
		0x180257646: Compares {Unknown Global at 0x18183D42A, first ten bytes are [1 0 200 60 103 1 32 11 1 0], or as chars " È<g  "} and 0
		0x18025764D: Jumps to 0x180257661 if {Unknown Global at 0x18183D42A, first ten bytes are [1 0 200 60 103 1 32 11 1 0], or as chars " È<g  "} != 0

		0x18025764F: Loads string "e" into register rcx as constant {'constant3' (constant value of type Cpp2IL.Core.Analysis.ResultModels.Il2CppString)}
		0x180257655: Attempts to load the il2cpp metadata for this method (method id 0) and init it cpp-side.

		0x180257661: Loads the type definition for managed type ECondition[] as a constant "ECondition[]" in rcx
		0x180257668: [!] Writes the constant 0x6 into operand 6 (type UInt64) in register rdx
		0x18025766D: [!] Allocates an array of type ECondition[] of size 6 and stores the result as local0 in register rax

		0x180257672: Loads the type definition for managed field <PrivateImplementationDetails>/$ArrayType=24 <PrivateImplementationDetails>::$field-4D6B372BF17D726B3ACA834307E396BD3193E3B1 as a constant "$field-4D6B372BF17D726B3ACA834307E396BD3193E3B1"
		0x18025767C: Copies {'local0' (type ECondition[])} from rax into rcx
		0x18025767F: Copies {'local0' (type ECondition[])} from rax into rbx
		0x180257682: [!] Calls static managed method System.Void System.Runtime.CompilerServices.RuntimeHelpers::InitializeArray(System.Array,System.RuntimeFieldHandle) with arguments [{'local0' (type ECondition[])}, <PrivateImplementationDetails>.$field-4D6B372BF17D726B3ACA834307E396BD3193E3B1] ;  - Initializes array containing values: [20091, 20092, 20093, 20094, 20095, 20096]

		0x180257687: Loads the type definition for managed type BoatCourseDataManager as a constant "BoatCourseDataManager" in rcx
		0x18025768E: Loads the pointer to the static fields for BoatCourseDataManager and stores it in constant8 in register rdx
		0x180257695: [!] Sets static field BoatCourseDataManager.scCourseUnlockConditions to {'local0' (type ECondition[])}
		0x18025769D: [!] Returns from the function




	Generated Pseudocode:

	Declaring Type: BoatCourseDataManager
	static System.Void .cctor()
		ECondition[] local0 = new ECondition[6]

		local0 = new ECondition[] {20091, 20092, 20093, 20094, 20095, 20096}
		BoatCourseDataManager.scCourseUnlockConditions = local0
		return


Generated IL:
	IL_0000: ldc.i4.6
	IL_0001: newarr ECondition
	IL_0006: stloc.0
	IL_0007: ldloc.0
	IL_0008: ldtoken <PrivateImplementationDetails>/$ArrayType=24 <PrivateImplementationDetails>::$field-4D6B372BF17D726B3ACA834307E396BD3193E3B1
	IL_000d: call System.Void System.Runtime.CompilerServices.RuntimeHelpers::InitializeArray(System.Array,System.RuntimeFieldHandle)
	IL_0012: ldloc.0
	IL_0013: stsfld ECondition[] BoatCourseDataManager::scCourseUnlockConditions
	IL_0018: ret
	

