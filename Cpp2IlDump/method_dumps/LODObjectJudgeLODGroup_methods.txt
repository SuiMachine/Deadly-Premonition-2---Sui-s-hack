Type: LODObjectJudgeLODGroup

Method: System.Void LODObjectJudgeLODGroup::.ctor():	Method Body (x86 ASM):
		0x180203000 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180203002 jmp near ptr 0000000180CE1E90h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180203007 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.Void LODObjectJudgeLODGroup::.ctor():
		End of function at 0x180203008
		Absolute End is at 0x180203008
		Identified Jump Destination addresses:

		0x180203002: [!] Calls managed method System.Void UnityEngine.MonoBehaviour::.ctor() on instance {'this' (function parameter, type LODObjectJudgeLODGroup)}

		0x180203002: [!] Returns from the function




	Generated Pseudocode:

	Declaring Type: LODObjectJudgeLODGroup
	System.Void .ctor()

		base..ctor()
		return


Generated IL:
	IL_0000: ldarg.0
	IL_0001: call System.Void UnityEngine.MonoBehaviour::.ctor()
	IL_0006: ret
	

Method: System.Void LODObjectJudgeLODGroup::Start():	Method Body (x86 ASM):
		0x1805AFC00 push rbp		; DEBUG: {Register}/RBP {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805AFC02 push r15		; DEBUG: {Register}/R15 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805AFC04 sub rsp,28h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 40
		0x1805AFC08 cmp byte ptr [18183ECE9h],0		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6467874025 | None ||| N/A | 0
		0x1805AFC0F mov r15,rcx		; DEBUG: {Register}/R15 {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x1805AFC12 jne short 00000001805AFC26h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805AFC14 mov ecx,[1814B6DC0h]		; DEBUG: {Register}/ECX {Memory}/None ||| RIP | 6464171456 | None ||| N/A | N/A
		0x1805AFC1A call 00000001800FEB90h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805AFC1F mov byte ptr [18183ECE9h],1		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6467874025 | None ||| N/A | 1
		0x1805AFC26 mov rax,[r15+18h]		; DEBUG: {Register}/RAX {Memory}/None ||| R15 | 24 | None ||| N/A | N/A
		0x1805AFC2A xor ebp,ebp		; DEBUG: {Register}/EBP {Register}/EBP ||| None | 0 | None ||| N/A | N/A
		0x1805AFC2C mov [rsp+40h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RSP | 64 | None ||| N/A | N/A
		0x1805AFC31 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805AFC33 mov [rsp+48h],rsi		; DEBUG: {Memory}/None {Register}/RSI ||| RSP | 72 | None ||| N/A | N/A
		0x1805AFC38 mov [rsp+50h],rdi		; DEBUG: {Memory}/None {Register}/RDI ||| RSP | 80 | None ||| N/A | N/A
		0x1805AFC3D mov [rsp+20h],r14		; DEBUG: {Memory}/None {Register}/R14 ||| RSP | 32 | None ||| N/A | N/A
		0x1805AFC42 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805AFC45 je near ptr 00000001805B002Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805AFC4B mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805AFC4E xchg ax,ax		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805AFC50 cmp edx,[rax+18h]		; DEBUG: {Register}/EDX {Memory}/None ||| RAX | 24 | None ||| N/A | N/A
		0x1805AFC53 jge near ptr 00000001805B0013h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805AFC59 test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x1805AFC5C je near ptr 00000001805B002Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805AFC62 movsxd rax,ebp		; DEBUG: {Register}/RAX {Register}/EBP ||| None | 0 | None ||| N/A | N/A
		0x1805AFC65 cmp ebp,[rcx+18h]		; DEBUG: {Register}/EBP {Memory}/None ||| RCX | 24 | None ||| N/A | N/A
		0x1805AFC68 jae near ptr 00000001805B01A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805AFC6E lea r14,[rax*8+20h]		; DEBUG: {Register}/R14 {Memory}/None ||| None | 32 | RAX ||| N/A | N/A
		0x1805AFC76 mov rax,[r14+rcx]		; DEBUG: {Register}/RAX {Memory}/None ||| R14 | 0 | RCX ||| N/A | N/A
		0x1805AFC7A test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805AFC7D je near ptr 00000001805AFE01h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805AFC83 mov rcx,[18188D758h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468196184 | None ||| N/A | N/A
		0x1805AFC8A mov rbx,[rax+10h]		; DEBUG: {Register}/RBX {Memory}/None ||| RAX | 16 | None ||| N/A | N/A
		0x1805AFC8E test byte ptr [rcx+127h],2		; DEBUG: {Memory}/None {Immediate8}/None ||| RCX | 295 | None ||| N/A | 2
		0x1805AFC95 je short 00000001805AFCA5h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805AFC97 cmp dword ptr [rcx+0D8h],0		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RCX | 216 | None ||| N/A | 0
		0x1805AFC9E jne short 00000001805AFCA5h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805AFCA0 call 000000018010EAF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805AFCA5 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805AFCA8 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805AFCAA mov rcx,rbx		; DEBUG: {Register}/RCX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x1805AFCAD call 0000000180EA6750h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805AFCB2 test al,al		; DEBUG: {Register}/AL {Register}/AL ||| None | 0 | None ||| N/A | N/A
		0x1805AFCB4 je near ptr 00000001805AFE01h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805AFCBA xor ebx,ebx		; DEBUG: {Register}/EBX {Register}/EBX ||| None | 0 | None ||| N/A | N/A
		0x1805AFCBC nop dword ptr [rax]		; DEBUG: {Memory}/None {Register}/None ||| RAX | 0 | None ||| N/A | N/A
		0x1805AFCC0 mov rax,[r15+18h]		; DEBUG: {Register}/RAX {Memory}/None ||| R15 | 24 | None ||| N/A | N/A
		0x1805AFCC4 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805AFCC7 je near ptr 00000001805B002Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805AFCCD cmp ebp,[rax+18h]		; DEBUG: {Register}/EBP {Memory}/None ||| RAX | 24 | None ||| N/A | N/A
		0x1805AFCD0 jae near ptr 00000001805B0083h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805AFCD6 mov rcx,[r14+rax]		; DEBUG: {Register}/RCX {Memory}/None ||| R14 | 0 | RAX ||| N/A | N/A
		0x1805AFCDA test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x1805AFCDD je near ptr 00000001805B002Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805AFCE3 mov rcx,[rcx+18h]		; DEBUG: {Register}/RCX {Memory}/None ||| RCX | 24 | None ||| N/A | N/A
		0x1805AFCE7 test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x1805AFCEA je near ptr 00000001805B002Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805AFCF0 cmp ebx,[rcx+18h]		; DEBUG: {Register}/EBX {Memory}/None ||| RCX | 24 | None ||| N/A | N/A
		0x1805AFCF3 jge near ptr 00000001805B0002h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805AFCF9 movsxd rax,ebx		; DEBUG: {Register}/RAX {Register}/EBX ||| None | 0 | None ||| N/A | N/A
		0x1805AFCFC jae near ptr 00000001805B0070h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805AFD02 lea rdi,[rax*8+20h]		; DEBUG: {Register}/RDI {Memory}/None ||| None | 32 | RAX ||| N/A | N/A
		0x1805AFD0A mov rsi,[rdi+rcx]		; DEBUG: {Register}/RSI {Memory}/None ||| RDI | 0 | RCX ||| N/A | N/A
		0x1805AFD0E mov rcx,[18188D758h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468196184 | None ||| N/A | N/A
		0x1805AFD15 test byte ptr [rcx+127h],2		; DEBUG: {Memory}/None {Immediate8}/None ||| RCX | 295 | None ||| N/A | 2
		0x1805AFD1C je short 00000001805AFD2Ch		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805AFD1E cmp dword ptr [rcx+0D8h],0		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RCX | 216 | None ||| N/A | 0
		0x1805AFD25 jne short 00000001805AFD2Ch		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805AFD27 call 000000018010EAF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805AFD2C xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805AFD2E mov rcx,rsi		; DEBUG: {Register}/RCX {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x1805AFD31 call 0000000180EA6680h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805AFD36 test al,al		; DEBUG: {Register}/AL {Register}/AL ||| None | 0 | None ||| N/A | N/A
		0x1805AFD38 je near ptr 00000001805AFDFAh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805AFD3E mov rax,[r15+18h]		; DEBUG: {Register}/RAX {Memory}/None ||| R15 | 24 | None ||| N/A | N/A
		0x1805AFD42 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805AFD45 je near ptr 00000001805B002Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805AFD4B cmp ebp,[rax+18h]		; DEBUG: {Register}/EBP {Memory}/None ||| RAX | 24 | None ||| N/A | N/A
		0x1805AFD4E jae near ptr 00000001805B005Dh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805AFD54 mov rax,[r14+rax]		; DEBUG: {Register}/RAX {Memory}/None ||| R14 | 0 | RAX ||| N/A | N/A
		0x1805AFD58 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805AFD5B je near ptr 00000001805B002Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805AFD61 mov rax,[rax+18h]		; DEBUG: {Register}/RAX {Memory}/None ||| RAX | 24 | None ||| N/A | N/A
		0x1805AFD65 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805AFD68 je near ptr 00000001805B002Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805AFD6E cmp ebx,[rax+18h]		; DEBUG: {Register}/EBX {Memory}/None ||| RAX | 24 | None ||| N/A | N/A
		0x1805AFD71 jae near ptr 00000001805B004Ah		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805AFD77 mov rcx,[rdi+rax]		; DEBUG: {Register}/RCX {Memory}/None ||| RDI | 0 | RAX ||| N/A | N/A
		0x1805AFD7B test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x1805AFD7E je near ptr 00000001805B002Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805AFD84 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805AFD86 call 0000000180B29690h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805AFD8B mov rcx,[181899E98h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468247192 | None ||| N/A | N/A
		0x1805AFD92 mov rdi,rax		; DEBUG: {Register}/RDI {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805AFD95 test byte ptr [rcx+127h],2		; DEBUG: {Memory}/None {Immediate8}/None ||| RCX | 295 | None ||| N/A | 2
		0x1805AFD9C je short 00000001805AFDACh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805AFD9E cmp dword ptr [rcx+0D8h],0		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RCX | 216 | None ||| N/A | 0
		0x1805AFDA5 jne short 00000001805AFDACh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805AFDA7 call 000000018010EAF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805AFDAC mov rdx,[181869B08h]		; DEBUG: {Register}/RDX {Memory}/None ||| RIP | 6468049672 | None ||| N/A | N/A
		0x1805AFDB3 mov rcx,rdi		; DEBUG: {Register}/RCX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x1805AFDB6 call 00000001807F8560h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805AFDBB mov rcx,[r15+18h]		; DEBUG: {Register}/RCX {Memory}/None ||| R15 | 24 | None ||| N/A | N/A
		0x1805AFDBF test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x1805AFDC2 je near ptr 00000001805B002Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805AFDC8 cmp ebp,[rcx+18h]		; DEBUG: {Register}/EBP {Memory}/None ||| RCX | 24 | None ||| N/A | N/A
		0x1805AFDCB jae near ptr 00000001805B0037h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805AFDD1 mov rdx,[r14+rcx]		; DEBUG: {Register}/RDX {Memory}/None ||| R14 | 0 | RCX ||| N/A | N/A
		0x1805AFDD5 test rdx,rdx		; DEBUG: {Register}/RDX {Register}/RDX ||| None | 0 | None ||| N/A | N/A
		0x1805AFDD8 je near ptr 00000001805B002Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805AFDDE mov rcx,[rdx+20h]		; DEBUG: {Register}/RCX {Memory}/None ||| RDX | 32 | None ||| N/A | N/A
		0x1805AFDE2 test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x1805AFDE5 je near ptr 00000001805B002Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805AFDEB mov r8,[18188E7C8h]		; DEBUG: {Register}/R8 {Memory}/None ||| RIP | 6468200392 | None ||| N/A | N/A
		0x1805AFDF2 mov rdx,rax		; DEBUG: {Register}/RDX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805AFDF5 call 00000001810ACD30h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805AFDFA inc ebx		; DEBUG: {Register}/EBX {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805AFDFC jmp near ptr 00000001805AFCC0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805AFE01 mov rcx,[1818843E8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468158440 | None ||| N/A | N/A
		0x1805AFE08 mov edx,6		; DEBUG: {Register}/EDX {Immediate32}/None ||| None | 0 | None ||| N/A | 6
		0x1805AFE0D call 0000000180141320h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805AFE12 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805AFE15 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805AFE18 je near ptr 00000001805B002Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805AFE1E mov rax,[18187B768h]		; DEBUG: {Register}/RAX {Memory}/None ||| RIP | 6468122472 | None ||| N/A | N/A
		0x1805AFE25 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805AFE28 je short 00000001805AFE49h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805AFE2A mov rdx,[rbx]		; DEBUG: {Register}/RDX {Memory}/None ||| RBX | 0 | None ||| N/A | N/A
		0x1805AFE2D mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805AFE30 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1805AFE34 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805AFE39 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805AFE3C je near ptr 00000001805B0096h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805AFE42 mov rax,[18187B768h]		; DEBUG: {Register}/RAX {Memory}/None ||| RIP | 6468122472 | None ||| N/A | N/A
		0x1805AFE49 cmp dword ptr [rbx+18h],0		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RBX | 24 | None ||| N/A | 0
		0x1805AFE4D jbe near ptr 00000001805B018Dh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805AFE53 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805AFE55 mov [rbx+20h],rax		; DEBUG: {Memory}/None {Register}/RAX ||| RBX | 32 | None ||| N/A | N/A
		0x1805AFE59 mov rcx,r15		; DEBUG: {Register}/RCX {Register}/R15 ||| None | 0 | None ||| N/A | N/A
		0x1805AFE5C call 0000000180B29690h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805AFE61 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805AFE64 je near ptr 00000001805B002Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805AFE6A xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805AFE6C mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805AFE6F call 0000000180EA64C0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805AFE74 mov rdi,rax		; DEBUG: {Register}/RDI {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805AFE77 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805AFE7A je short 00000001805AFE94h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805AFE7C mov rdx,[rbx]		; DEBUG: {Register}/RDX {Memory}/None ||| RBX | 0 | None ||| N/A | N/A
		0x1805AFE7F mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805AFE82 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1805AFE86 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805AFE8B test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805AFE8E je near ptr 00000001805B00A9h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805AFE94 cmp dword ptr [rbx+18h],1		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RBX | 24 | None ||| N/A | 1
		0x1805AFE98 jbe near ptr 00000001805B017Ah		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805AFE9E mov [rbx+28h],rdi		; DEBUG: {Memory}/None {Register}/RDI ||| RBX | 40 | None ||| N/A | N/A
		0x1805AFEA2 mov rax,[18187B788h]		; DEBUG: {Register}/RAX {Memory}/None ||| RIP | 6468122504 | None ||| N/A | N/A
		0x1805AFEA9 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805AFEAC je short 00000001805AFECDh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805AFEAE mov rdx,[rbx]		; DEBUG: {Register}/RDX {Memory}/None ||| RBX | 0 | None ||| N/A | N/A
		0x1805AFEB1 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805AFEB4 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1805AFEB8 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805AFEBD test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805AFEC0 je near ptr 00000001805B00BCh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805AFEC6 mov rax,[18187B788h]		; DEBUG: {Register}/RAX {Memory}/None ||| RIP | 6468122504 | None ||| N/A | N/A
		0x1805AFECD cmp dword ptr [rbx+18h],2		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RBX | 24 | None ||| N/A | 2
		0x1805AFED1 jbe near ptr 00000001805B0167h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805AFED7 mov [rbx+30h],rax		; DEBUG: {Memory}/None {Register}/RAX ||| RBX | 48 | None ||| N/A | N/A
		0x1805AFEDB mov rax,[r15+18h]		; DEBUG: {Register}/RAX {Memory}/None ||| R15 | 24 | None ||| N/A | N/A
		0x1805AFEDF test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805AFEE2 je near ptr 00000001805B002Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805AFEE8 cmp ebp,[rax+18h]		; DEBUG: {Register}/EBP {Memory}/None ||| RAX | 24 | None ||| N/A | N/A
		0x1805AFEEB jae near ptr 00000001805B0154h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805AFEF1 mov rdi,[r14+rax]		; DEBUG: {Register}/RDI {Memory}/None ||| R14 | 0 | RAX ||| N/A | N/A
		0x1805AFEF5 test rdi,rdi		; DEBUG: {Register}/RDI {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x1805AFEF8 je short 00000001805AFF12h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805AFEFA mov rdx,[rbx]		; DEBUG: {Register}/RDX {Memory}/None ||| RBX | 0 | None ||| N/A | N/A
		0x1805AFEFD mov rcx,rdi		; DEBUG: {Register}/RCX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x1805AFF00 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1805AFF04 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805AFF09 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805AFF0C je near ptr 00000001805B00CFh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805AFF12 cmp dword ptr [rbx+18h],3		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RBX | 24 | None ||| N/A | 3
		0x1805AFF16 jbe near ptr 00000001805B0141h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805AFF1C mov [rbx+38h],rdi		; DEBUG: {Memory}/None {Register}/RDI ||| RBX | 56 | None ||| N/A | N/A
		0x1805AFF20 mov rax,[18187B7B0h]		; DEBUG: {Register}/RAX {Memory}/None ||| RIP | 6468122544 | None ||| N/A | N/A
		0x1805AFF27 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805AFF2A je short 00000001805AFF4Bh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805AFF2C mov rdx,[rbx]		; DEBUG: {Register}/RDX {Memory}/None ||| RBX | 0 | None ||| N/A | N/A
		0x1805AFF2F mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805AFF32 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1805AFF36 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805AFF3B test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805AFF3E je near ptr 00000001805B00E2h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805AFF44 mov rax,[18187B7B0h]		; DEBUG: {Register}/RAX {Memory}/None ||| RIP | 6468122544 | None ||| N/A | N/A
		0x1805AFF4B cmp dword ptr [rbx+18h],4		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RBX | 24 | None ||| N/A | 4
		0x1805AFF4F jbe near ptr 00000001805B012Eh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805AFF55 mov [rbx+40h],rax		; DEBUG: {Memory}/None {Register}/RAX ||| RBX | 64 | None ||| N/A | N/A
		0x1805AFF59 mov rax,[r15+18h]		; DEBUG: {Register}/RAX {Memory}/None ||| R15 | 24 | None ||| N/A | N/A
		0x1805AFF5D test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805AFF60 je near ptr 00000001805B002Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805AFF66 cmp ebp,[rax+18h]		; DEBUG: {Register}/EBP {Memory}/None ||| RAX | 24 | None ||| N/A | N/A
		0x1805AFF69 jae near ptr 00000001805B011Bh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805AFF6F mov rdi,[r14+rax]		; DEBUG: {Register}/RDI {Memory}/None ||| R14 | 0 | RAX ||| N/A | N/A
		0x1805AFF73 test rdi,rdi		; DEBUG: {Register}/RDI {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x1805AFF76 je near ptr 00000001805B002Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805AFF7C mov rdi,[rdi+10h]		; DEBUG: {Register}/RDI {Memory}/None ||| RDI | 16 | None ||| N/A | N/A
		0x1805AFF80 test rdi,rdi		; DEBUG: {Register}/RDI {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x1805AFF83 je short 00000001805AFF9Dh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805AFF85 mov rdx,[rbx]		; DEBUG: {Register}/RDX {Memory}/None ||| RBX | 0 | None ||| N/A | N/A
		0x1805AFF88 mov rcx,rdi		; DEBUG: {Register}/RCX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x1805AFF8B mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1805AFF8F call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805AFF94 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805AFF97 je near ptr 00000001805B00F5h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805AFF9D cmp dword ptr [rbx+18h],5		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RBX | 24 | None ||| N/A | 5
		0x1805AFFA1 jbe near ptr 00000001805B0108h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805AFFA7 mov [rbx+48h],rdi		; DEBUG: {Memory}/None {Register}/RDI ||| RBX | 72 | None ||| N/A | N/A
		0x1805AFFAB mov rcx,[181883F70h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468157296 | None ||| N/A | N/A
		0x1805AFFB2 test byte ptr [rcx+127h],2		; DEBUG: {Memory}/None {Immediate8}/None ||| RCX | 295 | None ||| N/A | 2
		0x1805AFFB9 je short 00000001805AFFC9h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805AFFBB cmp dword ptr [rcx+0D8h],0		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RCX | 216 | None ||| N/A | 0
		0x1805AFFC2 jne short 00000001805AFFC9h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805AFFC4 call 000000018010EAF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805AFFC9 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805AFFCB mov rcx,rbx		; DEBUG: {Register}/RCX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x1805AFFCE call 0000000180D4CE70h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805AFFD3 mov rcx,[18188D688h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468195976 | None ||| N/A | N/A
		0x1805AFFDA mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805AFFDD test byte ptr [rcx+127h],2		; DEBUG: {Memory}/None {Immediate8}/None ||| RCX | 295 | None ||| N/A | 2
		0x1805AFFE4 je short 00000001805AFFF4h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805AFFE6 cmp dword ptr [rcx+0D8h],0		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RCX | 216 | None ||| N/A | 0
		0x1805AFFED jne short 00000001805AFFF4h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805AFFEF call 000000018010EAF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805AFFF4 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805AFFF6 mov rcx,rbx		; DEBUG: {Register}/RCX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x1805AFFF9 call 0000000180B2BE30h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805AFFFE mov rax,[r15+18h]		; DEBUG: {Register}/RAX {Memory}/None ||| R15 | 24 | None ||| N/A | N/A
		0x1805B0002 inc ebp		; DEBUG: {Register}/EBP {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805B0004 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805B0007 mov edx,ebp		; DEBUG: {Register}/EDX {Register}/EBP ||| None | 0 | None ||| N/A | N/A
		0x1805B0009 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805B000C je short 00000001805B002Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805B000E jmp near ptr 00000001805AFC50h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805B0013 mov r14,[rsp+20h]		; DEBUG: {Register}/R14 {Memory}/None ||| RSP | 32 | None ||| N/A | N/A
		0x1805B0018 mov rdi,[rsp+50h]		; DEBUG: {Register}/RDI {Memory}/None ||| RSP | 80 | None ||| N/A | N/A
		0x1805B001D mov rsi,[rsp+48h]		; DEBUG: {Register}/RSI {Memory}/None ||| RSP | 72 | None ||| N/A | N/A
		0x1805B0022 mov rbx,[rsp+40h]		; DEBUG: {Register}/RBX {Memory}/None ||| RSP | 64 | None ||| N/A | N/A
		0x1805B0027 add rsp,28h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 40
		0x1805B002B pop r15		; DEBUG: {Register}/R15 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805B002D pop rbp		; DEBUG: {Register}/RBP {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805B002E ret		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805B002F xor ecx,ecx		; DEBUG: {Register}/ECX {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x1805B0031 call 000000018012BDA0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805B0036 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.Void LODObjectJudgeLODGroup::Start():
		End of function at 0x1805B0037
		Absolute End is at 0x1805B0037
		Identified Jump Destination addresses:

		0x1805AFC00: Saves the content of rbp to the stack
		0x1805AFC02: Saves the content of r15 to the stack
		0x1805AFC08: Compares {Unknown Global at 0x18183ECE9, first ten bytes are [216 1 0 112 64 103 1 192 216 1], or as chars "Ø p@gÀØ"} and 0
		0x1805AFC0F: Copies {'this' (function parameter, type LODObjectJudgeLODGroup)} from rcx into r15
		0x1805AFC12: Jumps to 0x1805AFC26 if {Unknown Global at 0x18183ECE9, first ten bytes are [216 1 0 112 64 103 1 192 216 1], or as chars "Ø p@gÀØ"} != 0

		0x1805AFC14: Loads string "¥<" into register rcx as constant {'constant3' (constant value of type Cpp2IL.Core.Analysis.ResultModels.Il2CppString)}
		0x1805AFC1A: Attempts to load the il2cpp metadata for this method (method id 0) and init it cpp-side.

		0x1805AFC26: [!] Reads field m_lodObject from {'this' (function parameter, type LODObjectJudgeLODGroup)} and stores in a new local {'m_lodObject' (type LODObject[])}

		0x1805AFC2A: Clears register rbp, yielding zero-local {'local2' (type System.Int32)}
		0x1805AFC31: Clears register rdx, yielding zero-local {'local3' (type System.Int32)}
		0x1805AFC42: [!] Compares {'m_lodObject' (type LODObject[])} and 0
		0x1805AFC45: Jumps to 0x1805B002F (which throws a NRE) if m_lodObject equals 0. Implicitly present in managed code, so ignored here.
		0x1805AFC4B: Copies {'m_lodObject' (type LODObject[])} from rax into rcx

		Potential Loop Start (0x1805AFC50):
		0x1805AFC50: [!] Compares {'local3' (type System.Int32)} and {Property System.Int32 System.Array::Length() on {'m_lodObject' (type LODObject[])}}
		0x1805AFC53: Jumps to 0x1805B0013 if {'local3' (type System.Int32)} is greater than or equal to {Property System.Int32 System.Array::Length() on {'m_lodObject' (type LODObject[])}} ;  - Increasing indentation - is while loop, unimportant is False

		0x1805AFC59: [!] Compares {'m_lodObject' (type LODObject[])} and 0
		0x1805AFC5C: Jumps to 0x1805B002F (which throws a NRE) if m_lodObject equals 0. Implicitly present in managed code, so ignored here.
		0x1805AFC62: Copies {'local2' (type System.Int32)} from rbp into rax
		0x1805AFC65: [!] Compares {'local2' (type System.Int32)} and {Property System.Int32 System.Array::Length() on {'m_lodObject' (type LODObject[])}}
		0x1805AFC68: Jumps to 0x1805B01A0 (which throws a NRE) if {'local2' (type System.Int32)} is greater than or equal to {Property System.Int32 System.Array::Length() on {'m_lodObject' (type LODObject[])}}. Implicitly present in managed code, so ignored here.
		0x1805AFC76: [!] Reads a value from the array {'m_lodObject' (type LODObject[])} at an index specified by the value in , into a new local {'local4' (type LODObject)}

		0x1805AFC7A: [!] Compares {'local4' (type LODObject)} and 0
		0x1805AFC7D: Jumps to 0x1805AFE01 (which is an if statement's body) if local4 equals 0 ;  - Increasing indentation - is standard if, unimportant is False

		0x1805AFC83: Loads the type definition for managed type UnityEngine.Object as a constant "Object" in rcx
		0x1805AFC8A: [!] Reads field m_object from {'local4' (type LODObject)} and stores in a new local {'m_object' (type UnityEngine.GameObject)}

		0x1805AFC8E: Compares "{il2cpp field on {'Object' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" and 2
		0x1805AFC95: Jumps to 0x1805AFCA5 if "{il2cpp field on {'Object' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" equals 2

		0x1805AFC97: Compares "{il2cpp field on {'Object' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" and 0
		0x1805AFC9E: Jumps to 0x1805AFCA5 if "{il2cpp field on {'Object' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" != 0

		0x1805AFCA0: Calls the il2cpp cctor for the type UnityEngine.Object
		0x1805AFCA8: Clears register rdx, yielding zero-local {'local7' (type System.Int32)}
		0x1805AFCAA: Copies {'m_object' (type UnityEngine.GameObject)} from rbx into rcx
		0x1805AFCAD: [!] Calls static managed method System.Boolean UnityEngine.Object::op_Inequality(UnityEngine.Object,UnityEngine.Object) with arguments [{'m_object' (type UnityEngine.GameObject)}, {'local7' (type System.Int32)}] and stores the result in {'boolean' (type System.Boolean)}

		0x1805AFCB2: [!] Compares {'boolean' (type System.Boolean)} and False
		0x1805AFCB4: Jumps to 0x1805AFE01 (which is an if statement's body) if boolean equals False ;  - Increasing indentation - is standard if, unimportant is False

		0x1805AFCBA: Clears register rbx, yielding zero-local {'local9' (type System.Int32)}

		Potential Loop Start (0x1805AFCC0):
		0x1805AFCC0: [!] Reads field m_lodObject from {'this' (function parameter, type LODObjectJudgeLODGroup)} and stores in a new local {'m_lodObject2' (type LODObject[])}

		0x1805AFCC4: [!] Compares {'m_lodObject2' (type LODObject[])} and 0
		0x1805AFCC7: Jumps to 0x1805B002F (which throws a NRE) if m_lodObject2 equals 0. Implicitly present in managed code, so ignored here.
		0x1805AFCCD: [!] Compares {'local2' (type System.Int32)} and {Property System.Int32 System.Array::Length() on {'m_lodObject2' (type LODObject[])}}
		0x1805AFCD0: Jumps to 0x1805B0083 (which throws a NRE) if {'local2' (type System.Int32)} is greater than or equal to {Property System.Int32 System.Array::Length() on {'m_lodObject2' (type LODObject[])}}. Implicitly present in managed code, so ignored here.
		0x1805AFCD6: [!] Reads a value from the array {'m_lodObject2' (type LODObject[])} at an index specified by the value in , into a new local {'local11' (type LODObject)}

		0x1805AFCDA: [!] Compares {'local11' (type LODObject)} and 0
		0x1805AFCDD: Jumps to 0x1805B002F (which throws a NRE) if local11 equals 0. Implicitly present in managed code, so ignored here.
		0x1805AFCE3: [!] Reads field m_judgeRenderer from {'local11' (type LODObject)} and stores in a new local {'m_judgeRenderer' (type UnityEngine.Renderer[])}

		0x1805AFCE7: [!] Compares {'m_judgeRenderer' (type UnityEngine.Renderer[])} and 0
		0x1805AFCEA: Jumps to 0x1805B002F (which throws a NRE) if m_judgeRenderer equals 0. Implicitly present in managed code, so ignored here.
		0x1805AFCF0: [!] Compares {'local9' (type System.Int32)} and {Property System.Int32 System.Array::Length() on {'m_judgeRenderer' (type UnityEngine.Renderer[])}}
		0x1805AFCF3: Jumps to 0x1805B0002 if {'local9' (type System.Int32)} is greater than or equal to {Property System.Int32 System.Array::Length() on {'m_judgeRenderer' (type UnityEngine.Renderer[])}} ;  - This is probably a goto, jumping to 0x1805B0002 which is after end of current block @ 0x1805AFE01 (started at 0x1805AFCBA)

		0x1805AFCF9: Copies {'local9' (type System.Int32)} from rbx into rax
		0x1805AFCFC: Jumps to 0x1805B0070 (which throws a NRE) if {'local9' (type System.Int32)} is greater than or equal to {Property System.Int32 System.Array::Length() on {'m_judgeRenderer' (type UnityEngine.Renderer[])}}. Implicitly present in managed code, so ignored here.
		0x1805AFD0A: [!] Reads a value from the array {'m_judgeRenderer' (type UnityEngine.Renderer[])} at an index specified by the value in , into a new local {'local13' (type UnityEngine.Renderer)}

		0x1805AFD0E: Loads the type definition for managed type UnityEngine.Object as a constant "Object" in rcx
		0x1805AFD15: Compares "{il2cpp field on {'Object' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" and 2
		0x1805AFD1C: Jumps to 0x1805AFD2C if "{il2cpp field on {'Object' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" equals 2

		0x1805AFD1E: Compares "{il2cpp field on {'Object' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" and 0
		0x1805AFD25: Jumps to 0x1805AFD2C if "{il2cpp field on {'Object' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" != 0

		0x1805AFD27: Calls the il2cpp cctor for the type UnityEngine.Object
		0x1805AFD2E: Copies {'local13' (type UnityEngine.Renderer)} from rsi into rcx
		0x1805AFD31: [!] Calls static managed method System.Boolean UnityEngine.Object::op_Implicit(UnityEngine.Object) with arguments [{'local13' (type UnityEngine.Renderer)}] and stores the result in {'boolean2' (type System.Boolean)}

		0x1805AFD36: [!] Compares {'boolean2' (type System.Boolean)} and False
		0x1805AFD38: Jumps to 0x1805AFDFA (which is an if statement's body) if boolean2 equals False ;  - Increasing indentation - is standard if, unimportant is False

		0x1805AFD3E: [!] Reads field m_lodObject from {'this' (function parameter, type LODObjectJudgeLODGroup)} and stores in a new local {'m_lodObject3' (type LODObject[])}

		0x1805AFD42: [!] Compares {'m_lodObject3' (type LODObject[])} and 0
		0x1805AFD45: Jumps to 0x1805B002F (which throws a NRE) if m_lodObject3 equals 0. Implicitly present in managed code, so ignored here.
		0x1805AFD4B: [!] Compares {'local2' (type System.Int32)} and {Property System.Int32 System.Array::Length() on {'m_lodObject3' (type LODObject[])}}
		0x1805AFD4E: Jumps to 0x1805B005D (which throws a NRE) if {'local2' (type System.Int32)} is greater than or equal to {Property System.Int32 System.Array::Length() on {'m_lodObject3' (type LODObject[])}}. Implicitly present in managed code, so ignored here.
		0x1805AFD54: [!] Reads a value from the array {'m_lodObject3' (type LODObject[])} at an index specified by the value in , into a new local {'local17' (type LODObject)}

		0x1805AFD58: [!] Compares {'local17' (type LODObject)} and 0
		0x1805AFD5B: Jumps to 0x1805B002F (which throws a NRE) if local17 equals 0. Implicitly present in managed code, so ignored here.
		0x1805AFD61: [!] Reads field m_judgeRenderer from {'local17' (type LODObject)} and stores in a new local {'m_judgeRenderer2' (type UnityEngine.Renderer[])}

		0x1805AFD65: [!] Compares {'m_judgeRenderer2' (type UnityEngine.Renderer[])} and 0
		0x1805AFD68: Jumps to 0x1805B002F (which throws a NRE) if m_judgeRenderer2 equals 0. Implicitly present in managed code, so ignored here.
		0x1805AFD6E: [!] Compares {'local9' (type System.Int32)} and {Property System.Int32 System.Array::Length() on {'m_judgeRenderer2' (type UnityEngine.Renderer[])}}
		0x1805AFD71: Jumps to 0x1805B004A (which throws a NRE) if {'local9' (type System.Int32)} is greater than or equal to {Property System.Int32 System.Array::Length() on {'m_judgeRenderer2' (type UnityEngine.Renderer[])}}. Implicitly present in managed code, so ignored here.
		0x1805AFD77: [!] Reads a value from the array {'m_judgeRenderer2' (type UnityEngine.Renderer[])} at an index specified by the value in , into a new local {'local19' (type UnityEngine.Renderer)}

		0x1805AFD7B: [!] Compares {'local19' (type UnityEngine.Renderer)} and 0
		0x1805AFD7E: Jumps to 0x1805B002F (which throws a NRE) if local19 equals 0. Implicitly present in managed code, so ignored here.
		0x1805AFD86: [!] Calls managed method UnityEngine.GameObject UnityEngine.Component::get_gameObject() on instance {'local19' (type UnityEngine.Renderer)} and stores the result in {'gameObject' (type UnityEngine.GameObject)}

		0x1805AFD8B: Loads the type definition for managed type NGUITools as a constant "NGUITools" in rcx
		0x1805AFD92: Copies {'gameObject' (type UnityEngine.GameObject)} from rax into rdi
		0x1805AFD95: Compares "{il2cpp field on {'NGUITools' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" and 2
		0x1805AFD9C: Jumps to 0x1805AFDAC if "{il2cpp field on {'NGUITools' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" equals 2

		0x1805AFD9E: Compares "{il2cpp field on {'NGUITools' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" and 0
		0x1805AFDA5: Jumps to 0x1805AFDAC if "{il2cpp field on {'NGUITools' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" != 0

		0x1805AFDA7: Calls the il2cpp cctor for the type NGUITools
		0x1805AFDAC: Loads the global generic method reference for method T NGUITools::AddMissingComponent<LODWillRenderObject>(UnityEngine.GameObject) on type NGUITools and stores the result in constant {'AddMissingComponent' (constant value of type Cpp2IL.Core.Analysis.ResultModels.GenericMethodReference)} in rdx
		0x1805AFDB3: Copies {'gameObject' (type UnityEngine.GameObject)} from rdi into rcx
		0x1805AFDB6: [!] Calls static managed method T NGUITools::AddMissingComponent<LODWillRenderObject>(UnityEngine.GameObject) with arguments [{'gameObject' (type UnityEngine.GameObject)}] and stores the result in {'lODWillRenderObject' (type LODWillRenderObject)} ;  - Method resolved from concrete implementations at this address, with the help of a constant value to identify which concrete implementation.

		0x1805AFDBB: [!] Reads field m_lodObject from {'this' (function parameter, type LODObjectJudgeLODGroup)} and stores in a new local {'m_lodObject4' (type LODObject[])}

		0x1805AFDBF: [!] Compares {'m_lodObject4' (type LODObject[])} and 0
		0x1805AFDC2: Jumps to 0x1805B002F (which throws a NRE) if m_lodObject4 equals 0. Implicitly present in managed code, so ignored here.
		0x1805AFDC8: [!] Compares {'local2' (type System.Int32)} and {Property System.Int32 System.Array::Length() on {'m_lodObject4' (type LODObject[])}}
		0x1805AFDCB: Jumps to 0x1805B0037 (which throws a NRE) if {'local2' (type System.Int32)} is greater than or equal to {Property System.Int32 System.Array::Length() on {'m_lodObject4' (type LODObject[])}}. Implicitly present in managed code, so ignored here.
		0x1805AFDD1: [!] Reads a value from the array {'m_lodObject4' (type LODObject[])} at an index specified by the value in , into a new local {'local24' (type LODObject)}

		0x1805AFDD5: [!] Compares {'local24' (type LODObject)} and 0
		0x1805AFDD8: Jumps to 0x1805B002F (which throws a NRE) if local24 equals 0. Implicitly present in managed code, so ignored here.
		0x1805AFDDE: [!] Reads field m_willRenderObject from {'local24' (type LODObject)} and stores in a new local {'m_willRenderObject' (type System.Collections.Generic.List`1<LODWillRenderObject>)}

		0x1805AFDE2: [!] Compares {'m_willRenderObject' (type System.Collections.Generic.List`1<LODWillRenderObject>)} and 0
		0x1805AFDE5: Jumps to 0x1805B002F (which throws a NRE) if m_willRenderObject equals 0. Implicitly present in managed code, so ignored here.
		0x1805AFDEB: Loads the global generic method reference for method System.Void System.Collections.Generic.List`1::Add(T) on type System.Collections.Generic.List`1<LODWillRenderObject> and stores the result in constant {'Add' (constant value of type Cpp2IL.Core.Analysis.ResultModels.GenericMethodReference)} in r8
		0x1805AFDF2: Copies {'lODWillRenderObject' (type LODWillRenderObject)} from rax into rdx
		0x1805AFDF5: [!] Calls managed method System.Void System.Collections.Generic.List`1::Add(T) on instance {'m_willRenderObject' (type System.Collections.Generic.List`1<LODWillRenderObject>)} with arguments [{'lODWillRenderObject' (type LODWillRenderObject)}] ;  - Method resolved from concrete implementations at this address, with the help of a constant value to identify which concrete implementation.

		0x1805AFDFA: [!] Adds 1 to the value {'local9' (type System.Int32)}, stored in rbx
		0x1805AFDFC: Jumps to 0x1805AFCC0 - which is still in this function, but further up. Probably indicative that this is a loop.
		0x1805AFE01: Loads the type definition for managed type System.Object[] as a constant "Object[]" in rcx
		0x1805AFE08: [!] Writes the constant 0x6 into operand 6 (type UInt64) in register rdx
		0x1805AFE0D: [!] Allocates an array of type System.Object[] of size 6 and stores the result as local26 in register rax

		0x1805AFE12: Copies {'local26' (type System.Object[])} from rax into rbx
		0x1805AFE15: [!] Compares {'local26' (type System.Object[])} and 0
		0x1805AFE18: Jumps to 0x1805B002F (which throws a NRE) if local26 equals 0. Implicitly present in managed code, so ignored here.
		0x1805AFE1E: Loads the string literal "設定がおかしい " as a constant "constant39" in rax
		0x1805AFE25: [!] Compares "設定がおかしい " and 0
		0x1805AFE28: Jumps to 0x1805AFE49 if "設定がおかしい " equals 0 ;  - This is probably a goto, jumping to 0x1805AFE49 which is after end of current block @ 0x1805AFDFA (started at 0x1805AFD3E)

		0x1805AFE2A: Loads the class pointer from local26 into a constant constant41 in register rdx
		0x1805AFE2D: Copies "設定がおかしい " from rax into rcx
		0x1805AFE30: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Object', parentType=null] and stores in register rdx
		0x1805AFE39: [!] Compares "設定がおかしい " and 0
		0x1805AFE3C: Jumps to 0x1805B0096 if "設定がおかしい " equals 0 ;  - This is probably a goto, jumping to 0x1805B0096 which is after end of current block @ 0x1805AFDFA (started at 0x1805AFD3E)

		0x1805AFE42: Loads the string literal "設定がおかしい " as a constant "constant43" in rax
		0x1805AFE49: [!] Compares {Property System.Int32 System.Array::Length() on {'local26' (type System.Object[])}} and 0
		0x1805AFE4D: Jumps to 0x1805B018D (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local26' (type System.Object[])}} is less than or equal to 0. Implicitly present in managed code, so ignored here.
		0x1805AFE55: Sets the value at offset 0 in array local26 to "設定がおかしい "
		0x1805AFE59: Copies {'this' (function parameter, type LODObjectJudgeLODGroup)} from r15 into rcx
		0x1805AFE5C: [!] Calls managed method UnityEngine.GameObject UnityEngine.Component::get_gameObject() on instance {'this' (function parameter, type LODObjectJudgeLODGroup)} and stores the result in {'gameObject2' (type UnityEngine.GameObject)}

		0x1805AFE61: [!] Compares {'gameObject2' (type UnityEngine.GameObject)} and 0
		0x1805AFE64: Jumps to 0x1805B002F (which throws a NRE) if gameObject2 equals 0. Implicitly present in managed code, so ignored here.
		0x1805AFE6C: Copies {'gameObject2' (type UnityEngine.GameObject)} from rax into rcx
		0x1805AFE6F: [!] Calls managed method System.String UnityEngine.Object::get_name() on instance {'gameObject2' (type UnityEngine.GameObject)} and stores the result in {'name' (type System.String)}

		0x1805AFE74: Copies {'name' (type System.String)} from rax into rdi
		0x1805AFE77: [!] Compares {'name' (type System.String)} and 0
		0x1805AFE7A: Jumps to 0x1805AFE94 if name equals 0 ;  - This is probably a goto, jumping to 0x1805AFE94 which is after end of current block @ 0x1805AFDFA (started at 0x1805AFD3E)

		0x1805AFE7C: Loads the class pointer from local26 into a constant constant47 in register rdx
		0x1805AFE7F: Copies {'name' (type System.String)} from rax into rcx
		0x1805AFE82: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Object', parentType=null] and stores in register rdx
		0x1805AFE8B: [!] Compares {'name' (type System.String)} and 0
		0x1805AFE8E: Jumps to 0x1805B00A9 if name equals 0 ;  - This is probably a goto, jumping to 0x1805B00A9 which is after end of current block @ 0x1805AFDFA (started at 0x1805AFD3E)

		0x1805AFE94: [!] Compares {Property System.Int32 System.Array::Length() on {'local26' (type System.Object[])}} and 1
		0x1805AFE98: Jumps to 0x1805B017A (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local26' (type System.Object[])}} is less than or equal to 1. Implicitly present in managed code, so ignored here.
		0x1805AFE9E: Sets the value at offset 1 in array local26 to {'name' (type System.String)}
		0x1805AFEA2: Loads the string literal " m_lodObject " as a constant "constant50" in rax
		0x1805AFEA9: [!] Compares " m_lodObject " and 0
		0x1805AFEAC: Jumps to 0x1805AFECD if " m_lodObject " equals 0 ;  - This is probably a goto, jumping to 0x1805AFECD which is after end of current block @ 0x1805AFDFA (started at 0x1805AFD3E)

		0x1805AFEAE: Loads the class pointer from local26 into a constant constant52 in register rdx
		0x1805AFEB1: Copies " m_lodObject " from rax into rcx
		0x1805AFEB4: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Object', parentType=null] and stores in register rdx
		0x1805AFEBD: [!] Compares " m_lodObject " and 0
		0x1805AFEC0: Jumps to 0x1805B00BC if " m_lodObject " equals 0 ;  - This is probably a goto, jumping to 0x1805B00BC which is after end of current block @ 0x1805AFDFA (started at 0x1805AFD3E)

		0x1805AFEC6: Loads the string literal " m_lodObject " as a constant "constant54" in rax
		0x1805AFECD: [!] Compares {Property System.Int32 System.Array::Length() on {'local26' (type System.Object[])}} and 2
		0x1805AFED1: Jumps to 0x1805B0167 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local26' (type System.Object[])}} is less than or equal to 2. Implicitly present in managed code, so ignored here.
		0x1805AFED7: Sets the value at offset 2 in array local26 to " m_lodObject "
		0x1805AFEDB: [!] Reads field m_lodObject from {'this' (function parameter, type LODObjectJudgeLODGroup)} and stores in a new local {'m_lodObject5' (type LODObject[])}

		0x1805AFEDF: [!] Compares {'m_lodObject5' (type LODObject[])} and 0
		0x1805AFEE2: Jumps to 0x1805B002F (which throws a NRE) if m_lodObject5 equals 0. Implicitly present in managed code, so ignored here.
		0x1805AFEE8: [!] Compares {'local2' (type System.Int32)} and {Property System.Int32 System.Array::Length() on {'m_lodObject5' (type LODObject[])}}
		0x1805AFEEB: Jumps to 0x1805B0154 (which throws a NRE) if {'local2' (type System.Int32)} is greater than or equal to {Property System.Int32 System.Array::Length() on {'m_lodObject5' (type LODObject[])}}. Implicitly present in managed code, so ignored here.
		0x1805AFEF1: [!] Reads a value from the array {'m_lodObject5' (type LODObject[])} at an index specified by the value in , into a new local {'local32' (type LODObject)}

		0x1805AFEF5: [!] Compares {'local32' (type LODObject)} and 0
		0x1805AFEF8: Jumps to 0x1805AFF12 if local32 equals 0 ;  - This is probably a goto, jumping to 0x1805AFF12 which is after end of current block @ 0x1805AFDFA (started at 0x1805AFD3E)

		0x1805AFEFA: Loads the class pointer from local26 into a constant constant58 in register rdx
		0x1805AFEFD: Copies {'local32' (type LODObject)} from rdi into rcx
		0x1805AFF00: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Object', parentType=null] and stores in register rdx
		0x1805AFF09: [!] Compares {'m_lodObject5' (type LODObject[])} and 0
		0x1805AFF0C: Jumps to 0x1805B00CF if m_lodObject5 equals 0 ;  - This is probably a goto, jumping to 0x1805B00CF which is after end of current block @ 0x1805AFDFA (started at 0x1805AFD3E)

		0x1805AFF12: [!] Compares {Property System.Int32 System.Array::Length() on {'local26' (type System.Object[])}} and 3
		0x1805AFF16: Jumps to 0x1805B0141 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local26' (type System.Object[])}} is less than or equal to 3. Implicitly present in managed code, so ignored here.
		0x1805AFF1C: Sets the value at offset 3 in array local26 to {'local32' (type LODObject)}
		0x1805AFF20: Loads the string literal " m_object " as a constant "constant61" in rax
		0x1805AFF27: [!] Compares " m_object " and 0
		0x1805AFF2A: Jumps to 0x1805AFF4B if " m_object " equals 0 ;  - This is probably a goto, jumping to 0x1805AFF4B which is after end of current block @ 0x1805AFDFA (started at 0x1805AFD3E)

		0x1805AFF2C: Loads the class pointer from local26 into a constant constant63 in register rdx
		0x1805AFF2F: Copies " m_object " from rax into rcx
		0x1805AFF32: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Object', parentType=null] and stores in register rdx
		0x1805AFF3B: [!] Compares " m_object " and 0
		0x1805AFF3E: Jumps to 0x1805B00E2 if " m_object " equals 0 ;  - This is probably a goto, jumping to 0x1805B00E2 which is after end of current block @ 0x1805AFDFA (started at 0x1805AFD3E)

		0x1805AFF44: Loads the string literal " m_object " as a constant "constant65" in rax
		0x1805AFF4B: [!] Compares {Property System.Int32 System.Array::Length() on {'local26' (type System.Object[])}} and 4
		0x1805AFF4F: Jumps to 0x1805B012E (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local26' (type System.Object[])}} is less than or equal to 4. Implicitly present in managed code, so ignored here.
		0x1805AFF55: Sets the value at offset 4 in array local26 to " m_object "
		0x1805AFF59: [!] Reads field m_lodObject from {'this' (function parameter, type LODObjectJudgeLODGroup)} and stores in a new local {'m_lodObject6' (type LODObject[])}

		0x1805AFF5D: [!] Compares {'m_lodObject6' (type LODObject[])} and 0
		0x1805AFF60: Jumps to 0x1805B002F (which throws a NRE) if m_lodObject6 equals 0. Implicitly present in managed code, so ignored here.
		0x1805AFF66: [!] Compares {'local2' (type System.Int32)} and {Property System.Int32 System.Array::Length() on {'m_lodObject6' (type LODObject[])}}
		0x1805AFF69: Jumps to 0x1805B011B (which throws a NRE) if {'local2' (type System.Int32)} is greater than or equal to {Property System.Int32 System.Array::Length() on {'m_lodObject6' (type LODObject[])}}. Implicitly present in managed code, so ignored here.
		0x1805AFF6F: [!] Reads a value from the array {'m_lodObject6' (type LODObject[])} at an index specified by the value in , into a new local {'local34' (type LODObject)}

		0x1805AFF73: [!] Compares {'local34' (type LODObject)} and 0
		0x1805AFF76: Jumps to 0x1805B002F (which throws a NRE) if local34 equals 0. Implicitly present in managed code, so ignored here.
		0x1805AFF7C: [!] Reads field m_object from {'local34' (type LODObject)} and stores in a new local {'m_object2' (type UnityEngine.GameObject)}

		0x1805AFF80: [!] Compares {'m_object2' (type UnityEngine.GameObject)} and 0
		0x1805AFF83: Jumps to 0x1805AFF9D if m_object2 equals 0 ;  - This is probably a goto, jumping to 0x1805AFF9D which is after end of current block @ 0x1805AFDFA (started at 0x1805AFD3E)

		0x1805AFF85: Loads the class pointer from local26 into a constant constant70 in register rdx
		0x1805AFF88: Copies {'m_object2' (type UnityEngine.GameObject)} from rdi into rcx
		0x1805AFF8B: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Object', parentType=null] and stores in register rdx
		0x1805AFF94: [!] Compares {'m_lodObject6' (type LODObject[])} and 0
		0x1805AFF97: Jumps to 0x1805B00F5 if m_lodObject6 equals 0 ;  - This is probably a goto, jumping to 0x1805B00F5 which is after end of current block @ 0x1805AFDFA (started at 0x1805AFD3E)

		0x1805AFF9D: [!] Compares {Property System.Int32 System.Array::Length() on {'local26' (type System.Object[])}} and 5
		0x1805AFFA1: Jumps to 0x1805B0108 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local26' (type System.Object[])}} is less than or equal to 5. Implicitly present in managed code, so ignored here.
		0x1805AFFA7: Sets the value at offset 5 in array local26 to {'m_object2' (type UnityEngine.GameObject)}
		0x1805AFFAB: Loads the type definition for managed type System.String as a constant "String" in rcx
		0x1805AFFB2: Compares "{il2cpp field on {'String' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" and 2
		0x1805AFFB9: Jumps to 0x1805AFFC9 if "{il2cpp field on {'String' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" equals 2 ;  - This is probably a goto, jumping to 0x1805AFFC9 which is after end of current block @ 0x1805AFDFA (started at 0x1805AFD3E)

		0x1805AFFBB: Compares "{il2cpp field on {'String' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" and 0
		0x1805AFFC2: Jumps to 0x1805AFFC9 if "{il2cpp field on {'String' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" != 0 ;  - This is probably a goto, jumping to 0x1805AFFC9 which is after end of current block @ 0x1805AFDFA (started at 0x1805AFD3E)

		0x1805AFFC4: Calls the il2cpp cctor for the type System.String
		0x1805AFFCB: Copies {'local26' (type System.Object[])} from rbx into rcx
		0x1805AFFCE: [!] Calls static managed method System.String System.String::Concat(System.Object[]) with arguments [{'local26' (type System.Object[])}] and stores the result in {'string' (type System.String)}

		0x1805AFFD3: Loads the type definition for managed type UnityEngine.Debug as a constant "Debug" in rcx
		0x1805AFFDA: Copies {'string' (type System.String)} from rax into rbx
		0x1805AFFDD: Compares "{il2cpp field on {'Debug' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" and 2
		0x1805AFFE4: Jumps to 0x1805AFFF4 if "{il2cpp field on {'Debug' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" equals 2 ;  - This is probably a goto, jumping to 0x1805AFFF4 which is after end of current block @ 0x1805AFDFA (started at 0x1805AFD3E)

		0x1805AFFE6: Compares "{il2cpp field on {'Debug' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" and 0
		0x1805AFFED: Jumps to 0x1805AFFF4 if "{il2cpp field on {'Debug' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" != 0 ;  - This is probably a goto, jumping to 0x1805AFFF4 which is after end of current block @ 0x1805AFDFA (started at 0x1805AFD3E)

		0x1805AFFEF: Calls the il2cpp cctor for the type UnityEngine.Debug
		0x1805AFFF6: Copies {'string' (type System.String)} from rbx into rcx
		0x1805AFFF9: [!] Calls static managed method System.Void UnityEngine.Debug::LogError(System.Object) with arguments [{'string' (type System.String)}]

		0x1805AFFFE: [!] Reads field m_lodObject from {'this' (function parameter, type LODObjectJudgeLODGroup)} and stores in a new local {'m_lodObject7' (type LODObject[])}

		0x1805B0002: [!] Adds 1 to the value {'local2' (type System.Int32)}, stored in rbp
		0x1805B0004: Copies {'m_lodObject7' (type LODObject[])} from rax into rcx
		0x1805B0007: Copies {'local2' (type System.Int32)} from rbp into rdx
		0x1805B0009: [!] Compares {'m_lodObject7' (type LODObject[])} and 0
		0x1805B000C: Jumps to 0x1805B002F (which throws a NRE) if m_lodObject7 equals 0. Implicitly present in managed code, so ignored here.
		0x1805B000E: Jumps to 0x1805AFC50 - which is still in this function, but further up. Probably indicative that this is a loop.
		0x1805B0013: Reads unknown value in stack, offset 32 (0x20) and stores the pointer in register r14 as new constant constant84
		0x1805B0018: Reads unknown value in stack, offset 80 (0x50) and stores the pointer in register rdi as new constant constant85
		0x1805B001D: Reads unknown value in stack, offset 72 (0x48) and stores the pointer in register rsi as new constant constant86
		0x1805B0022: Reads unknown value in stack, offset 64 (0x40) and stores the pointer in register rbx as new constant constant87
		0x1805B002E: [!] Returns from the function

		0x1805B0031: [!] Constructs and throws an exception of kind System.NullReferenceException




	Generated Pseudocode:

	Declaring Type: LODObjectJudgeLODGroup
	System.Void Start()
		LODObject[] m_lodObject = this.m_lodObject
		ulong local2 = 0
		ulong local3 = 0

		while (local3 < m_lodObject.Length)
		    LODObject local4 = m_lodObject[]

		    if (local4 != 0)
		        UnityEngine.GameObject m_object = local4.m_object
		        ulong local7 = 0

		        System.Boolean boolean = UnityEngine.Object.op_Inequality(m_object, local7) //(Object x, Object y)

		        if (boolean != False)
		            ulong local9 = 0
		            LODObject[] m_lodObject2 = this.m_lodObject
		            LODObject local11 = m_lodObject2[]
		            UnityEngine.Renderer[] m_judgeRenderer = local11.m_judgeRenderer

		            if (local9 >= m_judgeRenderer.Length)
                        goto INSN_1805B0002
                    endif
		            UnityEngine.Renderer local13 = m_judgeRenderer[]

		            System.Boolean boolean2 = UnityEngine.Object.op_Implicit(local13) //(Object exists)

		            if (boolean2 != False)
		                LODObject[] m_lodObject3 = this.m_lodObject
		                LODObject local17 = m_lodObject3[]
		                UnityEngine.Renderer[] m_judgeRenderer2 = local17.m_judgeRenderer
		                UnityEngine.Renderer local19 = m_judgeRenderer2[]

		                UnityEngine.GameObject gameObject = local19.gameObject

		                LODWillRenderObject lODWillRenderObject = NGUITools.AddMissingComponent<LODWillRenderObject>(gameObject) //(GameObject )
		                LODObject[] m_lodObject4 = this.m_lodObject
		                LODObject local24 = m_lodObject4[]
		                System.Collections.Generic.List`1<LODWillRenderObject> m_willRenderObject = local24.m_willRenderObject

		                m_willRenderObject.Add(lODWillRenderObject) //(T item)
		            endif
                    
		            local9 += 1
		        endif
                
		        System.Object[] local26 = new System.Object[6]

		        if ("設定がおかしい " == 0)
                    goto INSN_1805AFE49
                endif

		        if ("設定がおかしい " == 0)
                    goto INSN_1805B0096
                endif

		        INSN_1805AFE49:
		        local26[0] = "設定がおかしい "

		        UnityEngine.GameObject gameObject2 = base.gameObject

		        System.String name = gameObject2.name

		        if (name == 0)
                    goto INSN_1805AFE94
                endif

		        if (name == 0)
                    goto INSN_1805B00A9
                endif

		        INSN_1805AFE94:
		        local26[1] = name

		        if (" m_lodObject " == 0)
                    goto INSN_1805AFECD
                endif

		        if (" m_lodObject " == 0)
                    goto INSN_1805B00BC
                endif

		        INSN_1805AFECD:
		        local26[2] = " m_lodObject "
		        LODObject[] m_lodObject5 = this.m_lodObject
		        LODObject local32 = m_lodObject5[]

		        if (local32 == 0)
                    goto INSN_1805AFF12
                endif

		        if (m_lodObject5 == 0)
                    goto INSN_1805B00CF
                endif

		        INSN_1805AFF12:
		        local26[3] = local32

		        if (" m_object " == 0)
                    goto INSN_1805AFF4B
                endif

		        if (" m_object " == 0)
                    goto INSN_1805B00E2
                endif

		        INSN_1805AFF4B:
		        local26[4] = " m_object "
		        LODObject[] m_lodObject6 = this.m_lodObject
		        LODObject local34 = m_lodObject6[]
		        UnityEngine.GameObject m_object2 = local34.m_object

		        if (m_object2 == 0)
                    goto INSN_1805AFF9D
                endif

		        if (m_lodObject6 == 0)
                    goto INSN_1805B00F5
                endif

		        INSN_1805AFF9D:
		        local26[5] = m_object2

		        System.String string = System.String.Concat(local26) //(Object[] args)

		        UnityEngine.Debug.LogError(string) //(Object message)
		        LODObject[] m_lodObject7 = this.m_lodObject

		        INSN_1805B0002:
		        local2 += 1
		        local3 = local2
		    endwhile
            
		    return
		    throw new System.NullReferenceException()


Generated IL:
	Don't know how to write IL for Cpp2IL.Core.Analysis.Actions.x86.Important.RegOffsetArrayValueReadRegToRegAction. Aborting here.


Method: System.Void LODObjectJudgeLODGroup::Update():	Method Body (x86 ASM):
		0x1805B01C0 mov [rsp+20h],rsi		; DEBUG: {Memory}/None {Register}/RSI ||| RSP | 32 | None ||| N/A | N/A
		0x1805B01C5 push r14		; DEBUG: {Register}/R14 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805B01C7 sub rsp,20h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 32
		0x1805B01CB cmp byte ptr [18183ECEAh],0		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6467874026 | None ||| N/A | 0
		0x1805B01D2 mov r14,rcx		; DEBUG: {Register}/R14 {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x1805B01D5 jne short 00000001805B01E9h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805B01D7 mov ecx,[1814B6DD4h]		; DEBUG: {Register}/ECX {Memory}/None ||| RIP | 6464171476 | None ||| N/A | N/A
		0x1805B01DD call 00000001800FEB90h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805B01E2 mov byte ptr [18183ECEAh],1		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6467874026 | None ||| N/A | 1
		0x1805B01E9 mov rax,[r14+18h]		; DEBUG: {Register}/RAX {Memory}/None ||| R14 | 24 | None ||| N/A | N/A
		0x1805B01ED xor esi,esi		; DEBUG: {Register}/ESI {Register}/ESI ||| None | 0 | None ||| N/A | N/A
		0x1805B01EF mov [rsp+30h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RSP | 48 | None ||| N/A | N/A
		0x1805B01F4 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805B01F6 mov [rsp+38h],rbp		; DEBUG: {Memory}/None {Register}/RBP ||| RSP | 56 | None ||| N/A | N/A
		0x1805B01FB mov [rsp+40h],rdi		; DEBUG: {Memory}/None {Register}/RDI ||| RSP | 64 | None ||| N/A | N/A
		0x1805B0200 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805B0203 je near ptr 00000001805B02DBh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805B0209 mov rdi,rax		; DEBUG: {Register}/RDI {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805B020C nop dword ptr [rax]		; DEBUG: {Memory}/None {Register}/None ||| RAX | 0 | None ||| N/A | N/A
		0x1805B0210 cmp edx,[rax+18h]		; DEBUG: {Register}/EDX {Memory}/None ||| RAX | 24 | None ||| N/A | N/A
		0x1805B0213 jge near ptr 00000001805B02C0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805B0219 test rdi,rdi		; DEBUG: {Register}/RDI {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x1805B021C je near ptr 00000001805B02DBh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805B0222 cmp esi,[rdi+18h]		; DEBUG: {Register}/ESI {Memory}/None ||| RDI | 24 | None ||| N/A | N/A
		0x1805B0225 jae near ptr 00000001805B02E3h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805B022B movsxd rax,esi		; DEBUG: {Register}/RAX {Register}/ESI ||| None | 0 | None ||| N/A | N/A
		0x1805B022E xor bpl,bpl		; DEBUG: {Register}/BPL {Register}/BPL ||| None | 0 | None ||| N/A | N/A
		0x1805B0231 xor ebx,ebx		; DEBUG: {Register}/EBX {Register}/EBX ||| None | 0 | None ||| N/A | N/A
		0x1805B0233 mov rdi,[rdi+rax*8+20h]		; DEBUG: {Register}/RDI {Memory}/None ||| RDI | 32 | RAX ||| N/A | N/A
		0x1805B0238 nop dword ptr [rax+rax]		; DEBUG: {Memory}/None {Register}/None ||| RAX | 0 | RAX ||| N/A | N/A
		0x1805B0240 test rdi,rdi		; DEBUG: {Register}/RDI {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x1805B0243 je near ptr 00000001805B02DBh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805B0249 mov rax,[rdi+18h]		; DEBUG: {Register}/RAX {Memory}/None ||| RDI | 24 | None ||| N/A | N/A
		0x1805B024D test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805B0250 je near ptr 00000001805B02DBh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805B0256 cmp ebx,[rax+18h]		; DEBUG: {Register}/EBX {Memory}/None ||| RAX | 24 | None ||| N/A | N/A
		0x1805B0259 jge short 00000001805B0284h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805B025B mov rcx,[rdi+20h]		; DEBUG: {Register}/RCX {Memory}/None ||| RDI | 32 | None ||| N/A | N/A
		0x1805B025F test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x1805B0262 je short 00000001805B02DBh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805B0264 mov r8,[181875600h]		; DEBUG: {Register}/R8 {Memory}/None ||| RIP | 6468097536 | None ||| N/A | N/A
		0x1805B026B mov edx,ebx		; DEBUG: {Register}/EDX {Register}/EBX ||| None | 0 | None ||| N/A | N/A
		0x1805B026D call 00000001810B67F0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805B0272 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805B0275 je short 00000001805B02DBh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805B0277 cmp [rax+18h],bpl		; DEBUG: {Memory}/None {Register}/BPL ||| RAX | 24 | None ||| N/A | N/A
		0x1805B027B jne short 00000001805B0281h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805B027D inc ebx		; DEBUG: {Register}/EBX {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805B027F jmp short 00000001805B0240h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805B0281 mov bpl,1		; DEBUG: {Register}/BPL {Immediate8}/None ||| None | 0 | None ||| N/A | 1
		0x1805B0284 mov rbx,[rdi+10h]		; DEBUG: {Register}/RBX {Memory}/None ||| RDI | 16 | None ||| N/A | N/A
		0x1805B0288 test rbx,rbx		; DEBUG: {Register}/RBX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x1805B028B je short 00000001805B02DBh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805B028D xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805B028F mov rcx,rbx		; DEBUG: {Register}/RCX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x1805B0292 call 0000000180B2E910h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805B0297 cmp al,bpl		; DEBUG: {Register}/AL {Register}/BPL ||| None | 0 | None ||| N/A | N/A
		0x1805B029A je short 00000001805B02ABh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805B029C xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805B029F movzx edx,bpl		; DEBUG: {Register}/EDX {Register}/BPL ||| None | 0 | None ||| N/A | N/A
		0x1805B02A3 mov rcx,rbx		; DEBUG: {Register}/RCX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x1805B02A6 call 0000000180B2E5A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805B02AB mov rax,[r14+18h]		; DEBUG: {Register}/RAX {Memory}/None ||| R14 | 24 | None ||| N/A | N/A
		0x1805B02AF inc esi		; DEBUG: {Register}/ESI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805B02B1 mov edx,esi		; DEBUG: {Register}/EDX {Register}/ESI ||| None | 0 | None ||| N/A | N/A
		0x1805B02B3 mov rdi,rax		; DEBUG: {Register}/RDI {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805B02B6 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805B02B9 je short 00000001805B02DBh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805B02BB jmp near ptr 00000001805B0210h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805B02C0 mov rdi,[rsp+40h]		; DEBUG: {Register}/RDI {Memory}/None ||| RSP | 64 | None ||| N/A | N/A
		0x1805B02C5 mov rbp,[rsp+38h]		; DEBUG: {Register}/RBP {Memory}/None ||| RSP | 56 | None ||| N/A | N/A
		0x1805B02CA mov rbx,[rsp+30h]		; DEBUG: {Register}/RBX {Memory}/None ||| RSP | 48 | None ||| N/A | N/A
		0x1805B02CF mov rsi,[rsp+48h]		; DEBUG: {Register}/RSI {Memory}/None ||| RSP | 72 | None ||| N/A | N/A
		0x1805B02D4 add rsp,20h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 32
		0x1805B02D8 pop r14		; DEBUG: {Register}/R14 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805B02DA ret		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805B02DB xor ecx,ecx		; DEBUG: {Register}/ECX {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x1805B02DD call 000000018012BDA0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805B02E2 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.Void LODObjectJudgeLODGroup::Update():
		End of function at 0x1805B02E3
		Absolute End is at 0x1805B02E3
		Identified Jump Destination addresses:

		0x1805B01C5: Saves the content of r14 to the stack
		0x1805B01CB: Compares {Unknown Global at 0x18183ECEA, first ten bytes are [1 0 112 64 103 1 192 216 1 0], or as chars " p@gÀØ "} and 0
		0x1805B01D2: Copies {'this' (function parameter, type LODObjectJudgeLODGroup)} from rcx into r14
		0x1805B01D5: Jumps to 0x1805B01E9 if {Unknown Global at 0x18183ECEA, first ten bytes are [1 0 112 64 103 1 192 216 1 0], or as chars " p@gÀØ "} != 0

		0x1805B01D7: Loads string "¦<" into register rcx as constant {'constant3' (constant value of type Cpp2IL.Core.Analysis.ResultModels.Il2CppString)}
		0x1805B01DD: Attempts to load the il2cpp metadata for this method (method id 0) and init it cpp-side.

		0x1805B01E9: [!] Reads field m_lodObject from {'this' (function parameter, type LODObjectJudgeLODGroup)} and stores in a new local {'m_lodObject' (type LODObject[])}

		0x1805B01ED: Clears register rsi, yielding zero-local {'local2' (type System.Int32)}
		0x1805B01F4: Clears register rdx, yielding zero-local {'local3' (type System.Int32)}
		0x1805B0200: [!] Compares {'m_lodObject' (type LODObject[])} and 0
		0x1805B0203: Jumps to 0x1805B02DB (which throws a NRE) if m_lodObject equals 0. Implicitly present in managed code, so ignored here.
		0x1805B0209: Copies {'m_lodObject' (type LODObject[])} from rax into rdi

		Potential Loop Start (0x1805B0210):
		0x1805B0210: [!] Compares {'local3' (type System.Int32)} and {Property System.Int32 System.Array::Length() on {'m_lodObject' (type LODObject[])}}
		0x1805B0213: Jumps to 0x1805B02C0 if {'local3' (type System.Int32)} is greater than or equal to {Property System.Int32 System.Array::Length() on {'m_lodObject' (type LODObject[])}} ;  - Increasing indentation - is while loop, unimportant is False

		0x1805B0219: [!] Compares {'m_lodObject' (type LODObject[])} and 0
		0x1805B021C: Jumps to 0x1805B02DB (which throws a NRE) if m_lodObject equals 0. Implicitly present in managed code, so ignored here.
		0x1805B0222: [!] Compares {'local2' (type System.Int32)} and {Property System.Int32 System.Array::Length() on {'m_lodObject' (type LODObject[])}}
		0x1805B0225: Jumps to 0x1805B02E3 (which throws a NRE) if {'local2' (type System.Int32)} is greater than or equal to {Property System.Int32 System.Array::Length() on {'m_lodObject' (type LODObject[])}}. Implicitly present in managed code, so ignored here.
		0x1805B022B: Copies {'local2' (type System.Int32)} from rsi into rax
		0x1805B022E: Clears register rbp, yielding zero-local {'local4' (type System.Int32)}
		0x1805B0231: Clears register rbx, yielding zero-local {'local5' (type System.Int32)}
		0x1805B0233: Copies the element in the array {'m_lodObject' (type LODObject[])} at the index specified by {'local2' (type System.Int32)} into new local {'lODObject' (type LODObject)}

		Potential Loop Start (0x1805B0240):
		0x1805B0240: [!] Compares {'lODObject' (type LODObject)} and 0
		0x1805B0243: Jumps to 0x1805B02DB (which throws a NRE) if lODObject equals 0. Implicitly present in managed code, so ignored here.
		0x1805B0249: [!] Reads field m_judgeRenderer from {'lODObject' (type LODObject)} and stores in a new local {'m_judgeRenderer' (type UnityEngine.Renderer[])}

		0x1805B024D: [!] Compares {'m_judgeRenderer' (type UnityEngine.Renderer[])} and 0
		0x1805B0250: Jumps to 0x1805B02DB (which throws a NRE) if m_judgeRenderer equals 0. Implicitly present in managed code, so ignored here.
		0x1805B0256: [!] Compares {'local5' (type System.Int32)} and {Property System.Int32 System.Array::Length() on {'m_judgeRenderer' (type UnityEngine.Renderer[])}}
		0x1805B0259: Jumps to 0x1805B0284 if {'local5' (type System.Int32)} is greater than or equal to {Property System.Int32 System.Array::Length() on {'m_judgeRenderer' (type UnityEngine.Renderer[])}} ;  - This is probably a goto, jumping to 0x1805B0284 which is after end of current block @ 0x1805B0281 (started at 0x1805B0240)

		0x1805B025B: [!] Reads field m_willRenderObject from {'lODObject' (type LODObject)} and stores in a new local {'m_willRenderObject' (type System.Collections.Generic.List`1<LODWillRenderObject>)}

		0x1805B025F: [!] Compares {'m_willRenderObject' (type System.Collections.Generic.List`1<LODWillRenderObject>)} and 0
		0x1805B0262: Jumps to 0x1805B02DB (which throws a NRE) if m_willRenderObject equals 0. Implicitly present in managed code, so ignored here.
		0x1805B0264: Loads the global generic method reference for method T System.Collections.Generic.List`1::get_Item(System.Int32) on type System.Collections.Generic.List`1<LODWillRenderObject> and stores the result in constant {'get_Item' (constant value of type Cpp2IL.Core.Analysis.ResultModels.GenericMethodReference)} in r8
		0x1805B026B: Copies {'local5' (type System.Int32)} from rbx into rdx
		0x1805B026D: [!] Calls managed method T System.Collections.Generic.List`1::get_Item(System.Int32) on instance {'m_willRenderObject' (type System.Collections.Generic.List`1<LODWillRenderObject>)} with arguments [{'local5' (type System.Int32)}] and stores the result in {'item' (type LODWillRenderObject)} ;  - Method resolved from concrete implementations at this address, with the help of a constant value to identify which concrete implementation.

		0x1805B0272: [!] Compares {'item' (type LODWillRenderObject)} and 0
		0x1805B0275: Jumps to 0x1805B02DB (which throws a NRE) if item equals 0. Implicitly present in managed code, so ignored here.
		0x1805B0277: [!] Compares {field m_isVisible, read from local {'item' (type LODWillRenderObject)}} and {'local4' (type System.Int32)}
		0x1805B027B: Jumps to 0x1805B0281 (which is an if statement's body) if {field m_isVisible, read from local {'item' (type LODWillRenderObject)}} != {'local4' (type System.Int32)} ;  - Increasing indentation - is standard if, unimportant is False

		0x1805B027D: [!] Adds 1 to the value {'local5' (type System.Int32)}, stored in rbx
		0x1805B027F: Jumps to 0x1805B0240 - which is still in this function, but further up. Probably indicative that this is a loop.
		0x1805B0281: [!] Writes the constant 0x1 into operand True (type UInt64) in register rbp
		0x1805B0284: [!] Reads field m_object from {'lODObject' (type LODObject)} and stores in a new local {'m_object' (type UnityEngine.GameObject)}

		0x1805B0288: [!] Compares {'m_object' (type UnityEngine.GameObject)} and 0
		0x1805B028B: Jumps to 0x1805B02DB (which throws a NRE) if m_object equals 0. Implicitly present in managed code, so ignored here.
		0x1805B028F: Copies {'m_object' (type UnityEngine.GameObject)} from rbx into rcx
		0x1805B0292: [!] Calls managed method System.Boolean UnityEngine.GameObject::get_activeSelf() on instance {'m_object' (type UnityEngine.GameObject)} and stores the result in {'activeSelf' (type System.Boolean)}

		0x1805B0297: [!] Compares {'activeSelf' (type System.Boolean)} and True
		0x1805B029A: Jumps to 0x1805B02AB if activeSelf equals True ;  - This is probably a goto, jumping to 0x1805B02AB which is after end of current block @ 0x1805B0281 (started at 0x1805B027D)

		0x1805B029F: Copies True from rbp into rdx
		0x1805B02A3: Copies {'m_object' (type UnityEngine.GameObject)} from rbx into rcx
		0x1805B02A6: [!] Calls managed method System.Void UnityEngine.GameObject::SetActive(System.Boolean) on instance {'m_object' (type UnityEngine.GameObject)} with arguments [True]

		0x1805B02AB: [!] Reads field m_lodObject from {'this' (function parameter, type LODObjectJudgeLODGroup)} and stores in a new local {'m_lodObject2' (type LODObject[])}

		0x1805B02AF: [!] Adds 1 to the value {'local2' (type System.Int32)}, stored in rsi
		0x1805B02B1: Copies {'local2' (type System.Int32)} from rsi into rdx
		0x1805B02B3: Copies {'m_lodObject2' (type LODObject[])} from rax into rdi
		0x1805B02B6: [!] Compares {'m_lodObject2' (type LODObject[])} and 0
		0x1805B02B9: Jumps to 0x1805B02DB (which throws a NRE) if m_lodObject2 equals 0. Implicitly present in managed code, so ignored here.
		0x1805B02BB: Jumps to 0x1805B0210 - which is still in this function, but further up. Probably indicative that this is a loop.
		0x1805B02C0: Reads unknown value in stack, offset 64 (0x40) and stores the pointer in register rdi as new constant constant14
		0x1805B02C5: Reads unknown value in stack, offset 56 (0x38) and stores the pointer in register rbp as new constant constant15
		0x1805B02CA: Reads unknown value in stack, offset 48 (0x30) and stores the pointer in register rbx as new constant constant16
		0x1805B02CF: Reads unknown value in stack, offset 72 (0x48) and stores the pointer in register rsi as new constant constant17
		0x1805B02DA: [!] Returns from the function

		0x1805B02DD: [!] Constructs and throws an exception of kind System.NullReferenceException




	Generated Pseudocode:

	Declaring Type: LODObjectJudgeLODGroup
	System.Void Update()
		LODObject[] m_lodObject = this.m_lodObject
		ulong local2 = 0
		ulong local3 = 0

		while (local3 < m_lodObject.Length)
		    ulong local4 = 0
		    ulong local5 = 0
		    LODObject lODObject = m_lodObject[local2]
		    UnityEngine.Renderer[] m_judgeRenderer = lODObject.m_judgeRenderer

		    if (local5 >= m_judgeRenderer.Length)
                goto INSN_1805B0284
            endif
		    System.Collections.Generic.List`1<LODWillRenderObject> m_willRenderObject = lODObject.m_willRenderObject

		    LODWillRenderObject item = m_willRenderObject.Item

		    if (item.m_isVisible == local4)
		        local5 += 1
		    endwhile
            
		    goto INSN_1805B02DB
            

		    INSN_1805B0284:
		    UnityEngine.GameObject m_object = lODObject.m_object

		    System.Boolean activeSelf = m_object.activeSelf

		    if (activeSelf == True)
                goto INSN_1805B02AB
            endif

		    m_object.SetActive(True) //(Boolean value)

		    INSN_1805B02AB:
		    LODObject[] m_lodObject2 = this.m_lodObject
		    local2 += 1
		    local3 = local2
		endwhile
        
		return

		INSN_1805B02DB:
		throw new System.NullReferenceException()


Generated IL:
	IL_0000: ldarg.0
	IL_0001: ldfld LODObject[] LODObjectJudgeLODGroup::m_lodObject
	IL_0006: stloc.0
	IL_0007: ldc.i4.0
	IL_0008: stloc.1
	IL_0009: ldc.i4.0
	IL_000a: stloc.2
	IL_000b: ldloc.2
	IL_000c: ldloc.0
	IL_000d: call System.Int32 System.Array::get_Length()
	IL_0012: bge.s IL_007b
	IL_0014: ldc.i4.0
	IL_0015: stloc.3
	IL_0016: ldc.i4.0
	IL_0017: stloc.s V_4
	IL_0019: ldloc.0
	IL_001a: ldloc.1
	IL_001b: ldelem.any LODObject
	IL_0020: stloc.s V_5
	IL_0022: ldloc.s V_5
	IL_0024: ldfld UnityEngine.Renderer[] LODObject::m_judgeRenderer
	IL_0029: stloc.s V_6
	IL_002b: ldloc.s V_4
	IL_002d: ldloc.s V_6
	IL_002f: call System.Int32 System.Array::get_Length()
	IL_0034: bge.s IL_0052
	IL_0036: ldloc.s V_5
	IL_0038: ldfld System.Collections.Generic.List`1<LODWillRenderObject> LODObject::m_willRenderObject
	IL_003d: ldloc.s V_4
	IL_003f: call T System.Collections.Generic.List`1::get_Item(System.Int32)
	IL_0044: ldfld System.Boolean LODWillRenderObject::m_isVisible
	IL_0049: ldloc.3
	IL_004a: bne.un.s IL_0052
	IL_004c: ldloc.s V_4
	IL_004e: ldc.i4.1
	IL_004f: add
	IL_0050: stloc.s V_4
	IL_0052: ldloc.s V_5
	IL_0054: ldfld UnityEngine.GameObject LODObject::m_object
	IL_0059: stloc.s V_7
	IL_005b: ldloc.s V_7
	IL_005d: call System.Boolean UnityEngine.GameObject::get_activeSelf()
	IL_0062: ldc.i4.1
	IL_0063: beq.s IL_006d
	IL_0065: ldloc.s V_7
	IL_0067: ldc.i4.1
	IL_0068: call System.Void UnityEngine.GameObject::SetActive(System.Boolean)
	IL_006d: ldarg.0
	IL_006e: ldfld LODObject[] LODObjectJudgeLODGroup::m_lodObject
	IL_0073: stloc.s V_8
	IL_0075: ldloc.1
	IL_0076: ldc.i4.1
	IL_0077: add
	IL_0078: stloc.1
	IL_0079: ldloc.1
	IL_007a: stloc.2
	IL_007b: ret
	IL_007c: newobj System.Void System.NullReferenceException::.ctor()
	IL_0081: throw
	

