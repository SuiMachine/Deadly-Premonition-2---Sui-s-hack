Type: SceneFlagObject_MoveObjects

Method: System.Void SceneFlagObject_MoveObjects::.ctor():	Method Body (x86 ASM):
		0x180203000 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180203002 jmp near ptr 0000000180CE1E90h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180203007 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.Void SceneFlagObject_MoveObjects::.ctor():
		End of function at 0x180203008
		Absolute End is at 0x180203008
		Identified Jump Destination addresses:

		0x180203002: [!] Calls managed method System.Void UnityEngine.MonoBehaviour::.ctor() on instance {'this' (function parameter, type SceneFlagObject_MoveObjects)}

		0x180203002: [!] Returns from the function




	Generated Pseudocode:

	Declaring Type: SceneFlagObject_MoveObjects
	System.Void .ctor()

		base..ctor()
		return


Generated IL:
	IL_0000: ldarg.0
	IL_0001: call System.Void UnityEngine.MonoBehaviour::.ctor()
	IL_0006: ret
	

Method: System.Void SceneFlagObject_MoveObjects::SetActive(System.Boolean):	Method Body (x86 ASM):
		0x1805BAE50 mov [rsp+18h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RSP | 24 | None ||| N/A | N/A
		0x1805BAE55 mov [rsp+20h],rsi		; DEBUG: {Memory}/None {Register}/RSI ||| RSP | 32 | None ||| N/A | N/A
		0x1805BAE5A push r14		; DEBUG: {Register}/R14 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805BAE5C sub rsp,20h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 32
		0x1805BAE60 cmp byte ptr [18183ED4Ch],0		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6467874124 | None ||| N/A | 0
		0x1805BAE67 movzx r14d,dl		; DEBUG: {Register}/R14D {Register}/DL ||| None | 0 | None ||| N/A | N/A
		0x1805BAE6B mov rsi,rcx		; DEBUG: {Register}/RSI {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x1805BAE6E jne short 00000001805BAE82h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805BAE70 mov ecx,[1814B9238h]		; DEBUG: {Register}/ECX {Memory}/None ||| RIP | 6464180792 | None ||| N/A | N/A
		0x1805BAE76 call 00000001800FEB90h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805BAE7B mov byte ptr [18183ED4Ch],1		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6467874124 | None ||| N/A | 1
		0x1805BAE82 mov rax,[rsi+20h]		; DEBUG: {Register}/RAX {Memory}/None ||| RSI | 32 | None ||| N/A | N/A
		0x1805BAE86 xor ebx,ebx		; DEBUG: {Register}/EBX {Register}/EBX ||| None | 0 | None ||| N/A | N/A
		0x1805BAE88 mov [rsp+30h],rbp		; DEBUG: {Memory}/None {Register}/RBP ||| RSP | 48 | None ||| N/A | N/A
		0x1805BAE8D mov r8d,ebx		; DEBUG: {Register}/R8D {Register}/EBX ||| None | 0 | None ||| N/A | N/A
		0x1805BAE90 mov [rsp+38h],rdi		; DEBUG: {Memory}/None {Register}/RDI ||| RSP | 56 | None ||| N/A | N/A
		0x1805BAE95 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805BAE98 je near ptr 00000001805BAF4Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805BAE9E mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805BAEA1 cmp r8d,[rax+18h]		; DEBUG: {Register}/R8D {Memory}/None ||| RAX | 24 | None ||| N/A | N/A
		0x1805BAEA5 jge near ptr 00000001805BAF34h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805BAEAB test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x1805BAEAE je near ptr 00000001805BAF4Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805BAEB4 movsxd rax,ebx		; DEBUG: {Register}/RAX {Register}/EBX ||| None | 0 | None ||| N/A | N/A
		0x1805BAEB7 cmp ebx,[rcx+18h]		; DEBUG: {Register}/EBX {Memory}/None ||| RCX | 24 | None ||| N/A | N/A
		0x1805BAEBA jae near ptr 00000001805BAF6Ah		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805BAEC0 lea rdi,[rax*8+20h]		; DEBUG: {Register}/RDI {Memory}/None ||| None | 32 | RAX ||| N/A | N/A
		0x1805BAEC8 mov rbp,[rdi+rcx]		; DEBUG: {Register}/RBP {Memory}/None ||| RDI | 0 | RCX ||| N/A | N/A
		0x1805BAECC mov rcx,[18188D758h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468196184 | None ||| N/A | N/A
		0x1805BAED3 test byte ptr [rcx+127h],2		; DEBUG: {Memory}/None {Immediate8}/None ||| RCX | 295 | None ||| N/A | 2
		0x1805BAEDA je short 00000001805BAEEAh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805BAEDC cmp dword ptr [rcx+0D8h],0		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RCX | 216 | None ||| N/A | 0
		0x1805BAEE3 jne short 00000001805BAEEAh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805BAEE5 call 000000018010EAF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805BAEEA xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805BAEED xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805BAEEF mov rcx,rbp		; DEBUG: {Register}/RCX {Register}/RBP ||| None | 0 | None ||| N/A | N/A
		0x1805BAEF2 call 0000000180EA6750h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805BAEF7 test al,al		; DEBUG: {Register}/AL {Register}/AL ||| None | 0 | None ||| N/A | N/A
		0x1805BAEF9 je short 00000001805BAF1Eh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805BAEFB mov rax,[rsi+20h]		; DEBUG: {Register}/RAX {Memory}/None ||| RSI | 32 | None ||| N/A | N/A
		0x1805BAEFF test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805BAF02 je short 00000001805BAF4Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805BAF04 cmp ebx,[rax+18h]		; DEBUG: {Register}/EBX {Memory}/None ||| RAX | 24 | None ||| N/A | N/A
		0x1805BAF07 jae short 00000001805BAF57h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805BAF09 mov rcx,[rdi+rax]		; DEBUG: {Register}/RCX {Memory}/None ||| RDI | 0 | RAX ||| N/A | N/A
		0x1805BAF0D test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x1805BAF10 je short 00000001805BAF4Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805BAF12 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805BAF15 movzx edx,r14b		; DEBUG: {Register}/EDX {Register}/R14L ||| None | 0 | None ||| N/A | N/A
		0x1805BAF19 call 0000000180B22710h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805BAF1E mov rax,[rsi+20h]		; DEBUG: {Register}/RAX {Memory}/None ||| RSI | 32 | None ||| N/A | N/A
		0x1805BAF22 inc ebx		; DEBUG: {Register}/EBX {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805BAF24 mov r8d,ebx		; DEBUG: {Register}/R8D {Register}/EBX ||| None | 0 | None ||| N/A | N/A
		0x1805BAF27 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805BAF2A test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805BAF2D je short 00000001805BAF4Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805BAF2F jmp near ptr 00000001805BAEA1h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805BAF34 mov rdi,[rsp+38h]		; DEBUG: {Register}/RDI {Memory}/None ||| RSP | 56 | None ||| N/A | N/A
		0x1805BAF39 mov rbp,[rsp+30h]		; DEBUG: {Register}/RBP {Memory}/None ||| RSP | 48 | None ||| N/A | N/A
		0x1805BAF3E mov rbx,[rsp+40h]		; DEBUG: {Register}/RBX {Memory}/None ||| RSP | 64 | None ||| N/A | N/A
		0x1805BAF43 mov rsi,[rsp+48h]		; DEBUG: {Register}/RSI {Memory}/None ||| RSP | 72 | None ||| N/A | N/A
		0x1805BAF48 add rsp,20h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 32
		0x1805BAF4C pop r14		; DEBUG: {Register}/R14 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805BAF4E ret		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805BAF4F xor ecx,ecx		; DEBUG: {Register}/ECX {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x1805BAF51 call 000000018012BDA0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805BAF56 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.Void SceneFlagObject_MoveObjects::SetActive(System.Boolean):
		End of function at 0x1805BAF57
		Absolute End is at 0x1805BAF57
		Identified Jump Destination addresses:

		0x1805BAE5A: Saves the content of r14 to the stack
		0x1805BAE60: Compares {Unknown Global at 0x18183ED4C, first ten bytes are [60 61 103 1 240 219 1 0 91 220], or as chars "<=gðÛ [Ü"} and 0
		0x1805BAE67: Copies {'active' (function parameter, type System.Boolean)} from rdx into r14
		0x1805BAE6B: Copies {'this' (function parameter, type SceneFlagObject_MoveObjects)} from rcx into rsi
		0x1805BAE6E: Jumps to 0x1805BAE82 if {Unknown Global at 0x18183ED4C, first ten bytes are [60 61 103 1 240 219 1 0 91 220], or as chars "<=gðÛ [Ü"} != 0

		0x1805BAE70: Loads string "ñ^" into register rcx as constant {'constant3' (constant value of type Cpp2IL.Core.Analysis.ResultModels.Il2CppString)}
		0x1805BAE76: Attempts to load the il2cpp metadata for this method (method id 0) and init it cpp-side.

		0x1805BAE82: [!] Reads field m_moveObjects from {'this' (function parameter, type SceneFlagObject_MoveObjects)} and stores in a new local {'m_moveObjects' (type MoveObjectIntaraction[])}

		0x1805BAE86: Clears register rbx, yielding zero-local {'local3' (type System.Int32)}
		0x1805BAE8D: Copies {'local3' (type System.Int32)} from rbx into r8
		0x1805BAE95: [!] Compares {'m_moveObjects' (type MoveObjectIntaraction[])} and 0
		0x1805BAE98: Jumps to 0x1805BAF4F (which throws a NRE) if m_moveObjects equals 0. Implicitly present in managed code, so ignored here.
		0x1805BAE9E: Copies {'m_moveObjects' (type MoveObjectIntaraction[])} from rax into rcx

		Potential Loop Start (0x1805BAEA1):
		0x1805BAEA1: [!] Compares {'local3' (type System.Int32)} and {Property System.Int32 System.Array::Length() on {'m_moveObjects' (type MoveObjectIntaraction[])}}
		0x1805BAEA5: Jumps to 0x1805BAF34 if {'local3' (type System.Int32)} is greater than or equal to {Property System.Int32 System.Array::Length() on {'m_moveObjects' (type MoveObjectIntaraction[])}} ;  - Increasing indentation - is while loop, unimportant is False

		0x1805BAEAB: [!] Compares {'m_moveObjects' (type MoveObjectIntaraction[])} and 0
		0x1805BAEAE: Jumps to 0x1805BAF4F (which throws a NRE) if m_moveObjects equals 0. Implicitly present in managed code, so ignored here.
		0x1805BAEB4: Copies {'local3' (type System.Int32)} from rbx into rax
		0x1805BAEB7: [!] Compares {'local3' (type System.Int32)} and {Property System.Int32 System.Array::Length() on {'m_moveObjects' (type MoveObjectIntaraction[])}}
		0x1805BAEBA: Jumps to 0x1805BAF6A (which throws a NRE) if {'local3' (type System.Int32)} is greater than or equal to {Property System.Int32 System.Array::Length() on {'m_moveObjects' (type MoveObjectIntaraction[])}}. Implicitly present in managed code, so ignored here.
		0x1805BAEC8: [!] Reads a value from the array {'m_moveObjects' (type MoveObjectIntaraction[])} at an index specified by the value in , into a new local {'local4' (type MoveObjectIntaraction)}

		0x1805BAECC: Loads the type definition for managed type UnityEngine.Object as a constant "Object" in rcx
		0x1805BAED3: Compares "{il2cpp field on {'Object' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" and 2
		0x1805BAEDA: Jumps to 0x1805BAEEA if "{il2cpp field on {'Object' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" equals 2

		0x1805BAEDC: Compares "{il2cpp field on {'Object' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" and 0
		0x1805BAEE3: Jumps to 0x1805BAEEA if "{il2cpp field on {'Object' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" != 0

		0x1805BAEE5: Calls the il2cpp cctor for the type UnityEngine.Object
		0x1805BAEED: Clears register rdx, yielding zero-local {'local6' (type System.Int32)}
		0x1805BAEEF: Copies {'local4' (type MoveObjectIntaraction)} from rbp into rcx
		0x1805BAEF2: [!] Calls static managed method System.Boolean UnityEngine.Object::op_Inequality(UnityEngine.Object,UnityEngine.Object) with arguments [{'local4' (type MoveObjectIntaraction)}, {'local6' (type System.Int32)}] and stores the result in {'boolean' (type System.Boolean)}

		0x1805BAEF7: [!] Compares {'boolean' (type System.Boolean)} and False
		0x1805BAEF9: Jumps to 0x1805BAF1E (which is an if statement's body) if boolean equals False ;  - Increasing indentation - is standard if, unimportant is False

		0x1805BAEFB: [!] Reads field m_moveObjects from {'this' (function parameter, type SceneFlagObject_MoveObjects)} and stores in a new local {'m_moveObjects2' (type MoveObjectIntaraction[])}

		0x1805BAEFF: [!] Compares {'m_moveObjects2' (type MoveObjectIntaraction[])} and 0
		0x1805BAF02: Jumps to 0x1805BAF4F (which throws a NRE) if m_moveObjects2 equals 0. Implicitly present in managed code, so ignored here.
		0x1805BAF04: [!] Compares {'local3' (type System.Int32)} and {Property System.Int32 System.Array::Length() on {'m_moveObjects2' (type MoveObjectIntaraction[])}}
		0x1805BAF07: Jumps to 0x1805BAF57 (which throws a NRE) if {'local3' (type System.Int32)} is greater than or equal to {Property System.Int32 System.Array::Length() on {'m_moveObjects2' (type MoveObjectIntaraction[])}}. Implicitly present in managed code, so ignored here.
		0x1805BAF09: [!] Reads a value from the array {'m_moveObjects2' (type MoveObjectIntaraction[])} at an index specified by the value in , into a new local {'local9' (type MoveObjectIntaraction)}

		0x1805BAF0D: [!] Compares {'local9' (type MoveObjectIntaraction)} and 0
		0x1805BAF10: Jumps to 0x1805BAF4F (which throws a NRE) if local9 equals 0. Implicitly present in managed code, so ignored here.
		0x1805BAF15: Copies {'active' (function parameter, type System.Boolean)} from r14 into rdx
		0x1805BAF19: [!] Calls managed method System.Void UnityEngine.Behaviour::set_enabled(System.Boolean) on instance {'local9' (type MoveObjectIntaraction)} with arguments [{'active' (function parameter, type System.Boolean)}]

		0x1805BAF1E: [!] Reads field m_moveObjects from {'this' (function parameter, type SceneFlagObject_MoveObjects)} and stores in a new local {'m_moveObjects3' (type MoveObjectIntaraction[])}

		0x1805BAF22: [!] Adds 1 to the value {'local3' (type System.Int32)}, stored in rbx
		0x1805BAF24: Copies {'local3' (type System.Int32)} from rbx into r8
		0x1805BAF27: Copies {'m_moveObjects3' (type MoveObjectIntaraction[])} from rax into rcx
		0x1805BAF2A: [!] Compares {'m_moveObjects3' (type MoveObjectIntaraction[])} and 0
		0x1805BAF2D: Jumps to 0x1805BAF4F (which throws a NRE) if m_moveObjects3 equals 0. Implicitly present in managed code, so ignored here.
		0x1805BAF2F: Jumps to 0x1805BAEA1 - which is still in this function, but further up. Probably indicative that this is a loop.
		0x1805BAF34: Reads unknown value in stack, offset 56 (0x38) and stores the pointer in register rdi as new constant constant15
		0x1805BAF39: Reads unknown value in stack, offset 48 (0x30) and stores the pointer in register rbp as new constant constant16
		0x1805BAF3E: Reads unknown value in stack, offset 64 (0x40) and stores the pointer in register rbx as new constant constant17
		0x1805BAF43: Reads unknown value in stack, offset 72 (0x48) and stores the pointer in register rsi as new constant constant18
		0x1805BAF4E: [!] Returns from the function

		0x1805BAF51: [!] Constructs and throws an exception of kind System.NullReferenceException




	Generated Pseudocode:

	Declaring Type: SceneFlagObject_MoveObjects
	System.Void SetActive(System.Boolean active)
		MoveObjectIntaraction[] m_moveObjects = this.m_moveObjects
		ulong local3 = 0

		while (local3 < m_moveObjects.Length)
		    MoveObjectIntaraction local4 = m_moveObjects[]
		    ulong local6 = 0

		    System.Boolean boolean = UnityEngine.Object.op_Inequality(local4, local6) //(Object x, Object y)

		    if (boolean != False)
		        MoveObjectIntaraction[] m_moveObjects2 = this.m_moveObjects
		        MoveObjectIntaraction local9 = m_moveObjects2[]

		        local9.enabled = active
		    endif
            
		    MoveObjectIntaraction[] m_moveObjects3 = this.m_moveObjects
		    local3 += 1
		endwhile
        
		return
		throw new System.NullReferenceException()


Generated IL:
	Don't know how to write IL for Cpp2IL.Core.Analysis.Actions.x86.Important.RegOffsetArrayValueReadRegToRegAction. Aborting here.


