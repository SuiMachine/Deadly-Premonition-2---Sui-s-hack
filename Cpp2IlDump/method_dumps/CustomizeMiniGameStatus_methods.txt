Type: CustomizeMiniGameStatus

Method: System.Void CustomizeMiniGameStatus::.ctor():	Method Body (x86 ASM):
		0x180203000 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180203002 jmp near ptr 0000000180CE1E90h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180203007 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.Void CustomizeMiniGameStatus::.ctor():
		End of function at 0x180203008
		Absolute End is at 0x180203008
		Identified Jump Destination addresses:

		0x180203002: [!] Calls managed method System.Void UnityEngine.MonoBehaviour::.ctor() on instance {'this' (function parameter, type CustomizeMiniGameStatus)}

		0x180203002: [!] Returns from the function




	Generated Pseudocode:

	Declaring Type: CustomizeMiniGameStatus
	System.Void .ctor()

		base..ctor()
		return


Generated IL:
	IL_0000: ldarg.0
	IL_0001: call System.Void UnityEngine.MonoBehaviour::.ctor()
	IL_0006: ret
	

Method: System.Void CustomizeMiniGameStatus::Disp():	Method Body (x86 ASM):
		0x1803464E0 sub rsp,28h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 40
		0x1803464E4 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1803464E6 call 0000000180B29690h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1803464EB test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1803464EE je short 0000000180346501h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1803464F0 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1803464F3 mov dl,1		; DEBUG: {Register}/DL {Immediate8}/None ||| None | 0 | None ||| N/A | 1
		0x1803464F5 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1803464F8 add rsp,28h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 40
		0x1803464FC jmp near ptr 0000000180B2E5A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180346501 xor ecx,ecx		; DEBUG: {Register}/ECX {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x180346503 call 000000018012BDA0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180346508 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.Void CustomizeMiniGameStatus::Disp():
		End of function at 0x180346509
		Absolute End is at 0x180346509
		Identified Jump Destination addresses:

		0x1803464E6: [!] Calls managed method UnityEngine.GameObject UnityEngine.Component::get_gameObject() on instance {'this' (function parameter, type CustomizeMiniGameStatus)} and stores the result in {'gameObject' (type UnityEngine.GameObject)}

		0x1803464EB: [!] Compares {'gameObject' (type UnityEngine.GameObject)} and 0
		0x1803464EE: Jumps to 0x180346501 (which throws a NRE) if gameObject equals 0. Implicitly present in managed code, so ignored here.
		0x1803464F3: [!] Writes the constant 0x1 into operand True (type UInt64) in register rdx
		0x1803464F5: Copies {'gameObject' (type UnityEngine.GameObject)} from rax into rcx
		0x1803464FC: [!] Calls managed method System.Void UnityEngine.GameObject::SetActive(System.Boolean) on instance {'gameObject' (type UnityEngine.GameObject)} with arguments [True]

		0x1803464FC: [!] Returns from the function

		0x180346503: [!] Constructs and throws an exception of kind System.NullReferenceException




	Generated Pseudocode:

	Declaring Type: CustomizeMiniGameStatus
	System.Void Disp()

		UnityEngine.GameObject gameObject = base.gameObject

		gameObject.SetActive(True) //(Boolean value)
		return
		throw new System.NullReferenceException()


Generated IL:
	IL_0000: ldarg.0
	IL_0001: call UnityEngine.GameObject UnityEngine.Component::get_gameObject()
	IL_0006: ldc.i4.1
	IL_0007: call System.Void UnityEngine.GameObject::SetActive(System.Boolean)
	IL_000c: ret
	IL_000d: newobj System.Void System.NullReferenceException::.ctor()
	IL_0012: throw
	

Method: System.Void CustomizeMiniGameStatus::UnDisp():	Method Body (x86 ASM):
		0x180257A10 sub rsp,28h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 40
		0x180257A14 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180257A16 call 0000000180B29690h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180257A1B test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180257A1E je short 0000000180257A31h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180257A20 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x180257A23 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180257A25 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180257A28 add rsp,28h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 40
		0x180257A2C jmp near ptr 0000000180B2E5A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180257A31 xor ecx,ecx		; DEBUG: {Register}/ECX {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x180257A33 call 000000018012BDA0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180257A38 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.Void CustomizeMiniGameStatus::UnDisp():
		End of function at 0x180257A39
		Absolute End is at 0x180257A39
		Identified Jump Destination addresses:

		0x180257A16: [!] Calls managed method UnityEngine.GameObject UnityEngine.Component::get_gameObject() on instance {'this' (function parameter, type CustomizeMiniGameStatus)} and stores the result in {'gameObject' (type UnityEngine.GameObject)}

		0x180257A1B: [!] Compares {'gameObject' (type UnityEngine.GameObject)} and 0
		0x180257A1E: Jumps to 0x180257A31 (which throws a NRE) if gameObject equals 0. Implicitly present in managed code, so ignored here.
		0x180257A23: Clears register rdx, yielding zero-local {'local4' (type System.Int32)}
		0x180257A25: Copies {'gameObject' (type UnityEngine.GameObject)} from rax into rcx
		0x180257A2C: [!] Calls managed method System.Void UnityEngine.GameObject::SetActive(System.Boolean) on instance {'gameObject' (type UnityEngine.GameObject)} with arguments [{'local4' (type System.Int32)}]

		0x180257A2C: [!] Returns from the function

		0x180257A33: [!] Constructs and throws an exception of kind System.NullReferenceException




	Generated Pseudocode:

	Declaring Type: CustomizeMiniGameStatus
	System.Void UnDisp()

		UnityEngine.GameObject gameObject = base.gameObject
		ulong local4 = 0

		gameObject.SetActive(local4) //(Boolean value)
		return
		throw new System.NullReferenceException()


Generated IL:
	IL_0000: ldarg.0
	IL_0001: call UnityEngine.GameObject UnityEngine.Component::get_gameObject()
	IL_0006: stloc.0
	IL_0007: ldc.i4.0
	IL_0008: stloc.1
	IL_0009: ldloc.0
	IL_000a: ldloc.1
	IL_000b: call System.Void UnityEngine.GameObject::SetActive(System.Boolean)
	IL_0010: ret
	IL_0011: newobj System.Void System.NullReferenceException::.ctor()
	IL_0016: throw
	

Method: System.Void CustomizeMiniGameStatus::SetCustomizeInfo(MiniGameCustomInfo):	Method Body (x86 ASM):
		0x1804A1D40 push rbx		; DEBUG: {Register}/RBX {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1804A1D42 push rsi		; DEBUG: {Register}/RSI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1804A1D43 push r13		; DEBUG: {Register}/R13 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1804A1D45 push r14		; DEBUG: {Register}/R14 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1804A1D47 sub rsp,98h		; DEBUG: {Register}/RSP {Immediate32to64}/None ||| None | 0 | None ||| N/A | 152
		0x1804A1D4E cmp byte ptr [18183E619h],0		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6467872281 | None ||| N/A | 0
		0x1804A1D55 mov r13,rdx		; DEBUG: {Register}/R13 {Register}/RDX ||| None | 0 | None ||| N/A | N/A
		0x1804A1D58 mov r14,rcx		; DEBUG: {Register}/R14 {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x1804A1D5B jne short 00000001804A1D6Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A1D5D mov ecx,[1814B8A40h]		; DEBUG: {Register}/ECX {Memory}/None ||| RIP | 6464178752 | None ||| N/A | N/A
		0x1804A1D63 call 00000001800FEB90h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A1D68 mov byte ptr [18183E619h],1		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6467872281 | None ||| N/A | 1
		0x1804A1D6F mov rsi,[r14+20h]		; DEBUG: {Register}/RSI {Memory}/None ||| R14 | 32 | None ||| N/A | N/A
		0x1804A1D73 xor ebx,ebx		; DEBUG: {Register}/EBX {Register}/EBX ||| None | 0 | None ||| N/A | N/A
		0x1804A1D75 mov [rsp+0C8h],rbp		; DEBUG: {Memory}/None {Register}/RBP ||| RSP | 200 | None ||| N/A | N/A
		0x1804A1D7D mov [rsp+0D0h],rdi		; DEBUG: {Memory}/None {Register}/RDI ||| RSP | 208 | None ||| N/A | N/A
		0x1804A1D85 mov [rsp+0D8h],r12		; DEBUG: {Memory}/None {Register}/R12 ||| RSP | 216 | None ||| N/A | N/A
		0x1804A1D8D mov [rsp+90h],r15		; DEBUG: {Memory}/None {Register}/R15 ||| RSP | 144 | None ||| N/A | N/A
		0x1804A1D95 movaps [rsp+80h],xmm6		; DEBUG: {Memory}/None {Register}/XMM6 ||| RSP | 128 | None ||| N/A | N/A
		0x1804A1D9D movaps [rsp+70h],xmm7		; DEBUG: {Memory}/None {Register}/XMM7 ||| RSP | 112 | None ||| N/A | N/A
		0x1804A1DA2 movaps [rsp+60h],xmm8		; DEBUG: {Memory}/None {Register}/XMM8 ||| RSP | 96 | None ||| N/A | N/A
		0x1804A1DA8 movaps [rsp+50h],xmm9		; DEBUG: {Memory}/None {Register}/XMM9 ||| RSP | 80 | None ||| N/A | N/A
		0x1804A1DAE mov [rsp+0C0h],ebx		; DEBUG: {Memory}/None {Register}/EBX ||| RSP | 192 | None ||| N/A | N/A
		0x1804A1DB5 test rsi,rsi		; DEBUG: {Register}/RSI {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x1804A1DB8 je short 00000001804A1DEDh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A1DBA mov edi,ebx		; DEBUG: {Register}/EDI {Register}/EBX ||| None | 0 | None ||| N/A | N/A
		0x1804A1DBC mov ecx,ebx		; DEBUG: {Register}/ECX {Register}/EBX ||| None | 0 | None ||| N/A | N/A
		0x1804A1DBE xchg ax,ax		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1804A1DC0 mov eax,[rsi+18h]		; DEBUG: {Register}/EAX {Memory}/None ||| RSI | 24 | None ||| N/A | N/A
		0x1804A1DC3 cmp ecx,eax		; DEBUG: {Register}/ECX {Register}/EAX ||| None | 0 | None ||| N/A | N/A
		0x1804A1DC5 jge short 00000001804A1DEDh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A1DC7 cmp edi,eax		; DEBUG: {Register}/EDI {Register}/EAX ||| None | 0 | None ||| N/A | N/A
		0x1804A1DC9 jae near ptr 00000001804A21ADh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A1DCF movsxd rax,edi		; DEBUG: {Register}/RAX {Register}/EDI ||| None | 0 | None ||| N/A | N/A
		0x1804A1DD2 mov rcx,[rsi+rax*8+20h]		; DEBUG: {Register}/RCX {Memory}/None ||| RSI | 32 | RAX ||| N/A | N/A
		0x1804A1DD7 test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x1804A1DDA je near ptr 00000001804A21C0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A1DE0 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1804A1DE2 call 00000001807260F0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A1DE7 inc edi		; DEBUG: {Register}/EDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1804A1DE9 mov ecx,edi		; DEBUG: {Register}/ECX {Register}/EDI ||| None | 0 | None ||| N/A | N/A
		0x1804A1DEB jmp short 00000001804A1DC0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A1DED movss xmm8,dword ptr [181261F50h]		; DEBUG: {Register}/XMM8 {Memory}/None ||| RIP | 6461726544 | None ||| N/A | N/A
		0x1804A1DF6 mov edi,ebx		; DEBUG: {Register}/EDI {Register}/EBX ||| None | 0 | None ||| N/A | N/A
		0x1804A1DF8 movss xmm9,dword ptr [181261D44h]		; DEBUG: {Register}/XMM9 {Memory}/None ||| RIP | 6461726020 | None ||| N/A | N/A
		0x1804A1E01 xorps xmm7,xmm7		; DEBUG: {Register}/XMM7 {Register}/XMM7 ||| None | 0 | None ||| N/A | N/A
		0x1804A1E04 test r13,r13		; DEBUG: {Register}/R13 {Register}/R13 ||| None | 0 | None ||| N/A | N/A
		0x1804A1E07 je near ptr 00000001804A21C0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A1E0D xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1804A1E10 mov edx,edi		; DEBUG: {Register}/EDX {Register}/EDI ||| None | 0 | None ||| N/A | N/A
		0x1804A1E12 mov rcx,r13		; DEBUG: {Register}/RCX {Register}/R13 ||| None | 0 | None ||| N/A | N/A
		0x1804A1E15 call 000000018029AA10h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A1E1A mov rcx,[18188DA20h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468196896 | None ||| N/A | N/A
		0x1804A1E21 movd xmm6,eax		; DEBUG: {Register}/XMM6 {Register}/EAX ||| None | 0 | None ||| N/A | N/A
		0x1804A1E25 test byte ptr [rcx+127h],2		; DEBUG: {Memory}/None {Immediate8}/None ||| RCX | 295 | None ||| N/A | 2
		0x1804A1E2C cvtdq2ps xmm6,xmm6		; DEBUG: {Register}/XMM6 {Register}/XMM6 ||| None | 0 | None ||| N/A | N/A
		0x1804A1E2F je short 00000001804A1E3Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A1E31 cmp dword ptr [rcx+0D8h],0		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RCX | 216 | None ||| N/A | 0
		0x1804A1E38 jne short 00000001804A1E3Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A1E3A call 000000018010EAF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A1E3F xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1804A1E41 movaps xmm0,xmm6		; DEBUG: {Register}/XMM0 {Register}/XMM6 ||| None | 0 | None ||| N/A | N/A
		0x1804A1E44 call 0000000180E9C850h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A1E49 mov [rsp+0C0h],eax		; DEBUG: {Memory}/None {Register}/EAX ||| RSP | 192 | None ||| N/A | N/A
		0x1804A1E50 mov rax,[r14+18h]		; DEBUG: {Register}/RAX {Memory}/None ||| R14 | 24 | None ||| N/A | N/A
		0x1804A1E54 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1804A1E57 je near ptr 00000001804A21C0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A1E5D mov r15d,edi		; DEBUG: {Register}/R15D {Register}/EDI ||| None | 0 | None ||| N/A | N/A
		0x1804A1E60 cmp edi,[rax+18h]		; DEBUG: {Register}/EDI {Memory}/None ||| RAX | 24 | None ||| N/A | N/A
		0x1804A1E63 jae near ptr 00000001804A2260h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A1E69 mov rsi,[rax+r15*8+20h]		; DEBUG: {Register}/RSI {Memory}/None ||| RAX | 32 | R15 ||| N/A | N/A
		0x1804A1E6E lea rcx,[rsp+30h]		; DEBUG: {Register}/RCX {Memory}/None ||| RSP | 48 | None ||| N/A | N/A
		0x1804A1E73 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1804A1E75 call 0000000180B28BA0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A1E7A test rsi,rsi		; DEBUG: {Register}/RSI {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x1804A1E7D je near ptr 00000001804A21C0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A1E83 movups xmm0,[rax]		; DEBUG: {Register}/XMM0 {Memory}/None ||| RAX | 0 | None ||| N/A | N/A
		0x1804A1E86 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1804A1E89 lea rdx,[rsp+20h]		; DEBUG: {Register}/RDX {Memory}/None ||| RSP | 32 | None ||| N/A | N/A
		0x1804A1E8E mov rcx,rsi		; DEBUG: {Register}/RCX {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x1804A1E91 movaps [rsp+20h],xmm0		; DEBUG: {Memory}/None {Register}/XMM0 ||| RSP | 32 | None ||| N/A | N/A
		0x1804A1E96 call 0000000181198A80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A1E9B mov rax,[r14+18h]		; DEBUG: {Register}/RAX {Memory}/None ||| R14 | 24 | None ||| N/A | N/A
		0x1804A1E9F test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1804A1EA2 je near ptr 00000001804A21C0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A1EA8 cmp ebx,[rax+18h]		; DEBUG: {Register}/EBX {Memory}/None ||| RAX | 24 | None ||| N/A | N/A
		0x1804A1EAB jae near ptr 00000001804A224Dh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A1EB1 movsxd rbp,ebx		; DEBUG: {Register}/RBP {Register}/EBX ||| None | 0 | None ||| N/A | N/A
		0x1804A1EB4 mov rsi,[rax+rbp*8+20h]		; DEBUG: {Register}/RSI {Memory}/None ||| RAX | 32 | RBP ||| N/A | N/A
		0x1804A1EB9 mov rax,[18189D898h]		; DEBUG: {Register}/RAX {Memory}/None ||| RIP | 6468262040 | None ||| N/A | N/A
		0x1804A1EC0 test byte ptr [rax+127h],2		; DEBUG: {Memory}/None {Immediate8}/None ||| RAX | 295 | None ||| N/A | 2
		0x1804A1EC7 je short 00000001804A1EE1h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A1EC9 cmp dword ptr [rax+0D8h],0		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RAX | 216 | None ||| N/A | 0
		0x1804A1ED0 jne short 00000001804A1EE1h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A1ED2 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1804A1ED5 call 000000018010EAF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A1EDA mov rax,[18189D898h]		; DEBUG: {Register}/RAX {Memory}/None ||| RIP | 6468262040 | None ||| N/A | N/A
		0x1804A1EE1 mov rax,[rax+0B8h]		; DEBUG: {Register}/RAX {Memory}/None ||| RAX | 184 | None ||| N/A | N/A
		0x1804A1EE8 mov r8,[rax]		; DEBUG: {Register}/R8 {Memory}/None ||| RAX | 0 | None ||| N/A | N/A
		0x1804A1EEB test r8,r8		; DEBUG: {Register}/R8 {Register}/R8 ||| None | 0 | None ||| N/A | N/A
		0x1804A1EEE je near ptr 00000001804A21C0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A1EF4 cmp edi,[r8+18h]		; DEBUG: {Register}/EDI {Memory}/None ||| R8 | 24 | None ||| N/A | N/A
		0x1804A1EF8 jae near ptr 00000001804A223Ah		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A1EFE mov ecx,[r8+r15*4+20h]		; DEBUG: {Register}/ECX {Memory}/None ||| R8 | 32 | R15 ||| N/A | N/A
		0x1804A1F03 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1804A1F05 call 00000001802D1410h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A1F0A test rsi,rsi		; DEBUG: {Register}/RSI {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x1804A1F0D je near ptr 00000001804A21C0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A1F13 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1804A1F16 mov rdx,rax		; DEBUG: {Register}/RDX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1804A1F19 mov rcx,rsi		; DEBUG: {Register}/RCX {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x1804A1F1C call 000000018060D730h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A1F21 movaps xmm0,xmm6		; DEBUG: {Register}/XMM0 {Register}/XMM6 ||| None | 0 | None ||| N/A | N/A
		0x1804A1F24 andps xmm0,xmm8		; DEBUG: {Register}/XMM0 {Register}/XMM8 ||| None | 0 | None ||| N/A | N/A
		0x1804A1F28 comiss xmm9,xmm0		; DEBUG: {Register}/XMM9 {Register}/XMM0 ||| None | 0 | None ||| N/A | N/A
		0x1804A1F2C ja near ptr 00000001804A20B5h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A1F32 comiss xmm6,xmm7		; DEBUG: {Register}/XMM6 {Register}/XMM7 ||| None | 0 | None ||| N/A | N/A
		0x1804A1F35 mov rax,[r14+18h]		; DEBUG: {Register}/RAX {Memory}/None ||| R14 | 24 | None ||| N/A | N/A
		0x1804A1F39 ja near ptr 00000001804A2005h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A1F3F test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1804A1F42 je near ptr 00000001804A21C0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A1F48 cmp ebx,[rax+18h]		; DEBUG: {Register}/EBX {Memory}/None ||| RAX | 24 | None ||| N/A | N/A
		0x1804A1F4B jae near ptr 00000001804A21DBh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A1F51 mov rsi,[rax+rbp*8+20h]		; DEBUG: {Register}/RSI {Memory}/None ||| RAX | 32 | RBP ||| N/A | N/A
		0x1804A1F56 test rsi,rsi		; DEBUG: {Register}/RSI {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x1804A1F59 je near ptr 00000001804A21C0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A1F5F xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1804A1F61 mov rcx,rsi		; DEBUG: {Register}/RCX {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x1804A1F64 call 000000018060CC90h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A1F69 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1804A1F6B lea rcx,[rsp+0C0h]		; DEBUG: {Register}/RCX {Memory}/None ||| RSP | 192 | None ||| N/A | N/A
		0x1804A1F73 mov r15,rax		; DEBUG: {Register}/R15 {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1804A1F76 call 0000000180E86110h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A1F7B mov rcx,[181883F70h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468157296 | None ||| N/A | N/A
		0x1804A1F82 mov r12,rax		; DEBUG: {Register}/R12 {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1804A1F85 test byte ptr [rcx+127h],2		; DEBUG: {Memory}/None {Immediate8}/None ||| RCX | 295 | None ||| N/A | 2
		0x1804A1F8C je short 00000001804A1F9Ch		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A1F8E cmp dword ptr [rcx+0D8h],0		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RCX | 216 | None ||| N/A | 0
		0x1804A1F95 jne short 00000001804A1F9Ch		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A1F97 call 000000018010EAF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A1F9C xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1804A1F9F mov rdx,r12		; DEBUG: {Register}/RDX {Register}/R12 ||| None | 0 | None ||| N/A | N/A
		0x1804A1FA2 mov rcx,r15		; DEBUG: {Register}/RCX {Register}/R15 ||| None | 0 | None ||| N/A | N/A
		0x1804A1FA5 call 0000000180D4D090h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A1FAA xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1804A1FAD mov rdx,rax		; DEBUG: {Register}/RDX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1804A1FB0 mov rcx,rsi		; DEBUG: {Register}/RCX {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x1804A1FB3 call 000000018060D730h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A1FB8 mov rax,[r14+18h]		; DEBUG: {Register}/RAX {Memory}/None ||| R14 | 24 | None ||| N/A | N/A
		0x1804A1FBC test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1804A1FBF je near ptr 00000001804A21C0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A1FC5 cmp ebx,[rax+18h]		; DEBUG: {Register}/EBX {Memory}/None ||| RAX | 24 | None ||| N/A | N/A
		0x1804A1FC8 jae near ptr 00000001804A21C8h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A1FCE mov rsi,[rax+rbp*8+20h]		; DEBUG: {Register}/RSI {Memory}/None ||| RAX | 32 | RBP ||| N/A | N/A
		0x1804A1FD3 lea rcx,[rsp+40h]		; DEBUG: {Register}/RCX {Memory}/None ||| RSP | 64 | None ||| N/A | N/A
		0x1804A1FD8 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1804A1FDA call 0000000180B28B80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A1FDF test rsi,rsi		; DEBUG: {Register}/RSI {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x1804A1FE2 je near ptr 00000001804A21C0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A1FE8 movups xmm0,[rax]		; DEBUG: {Register}/XMM0 {Memory}/None ||| RAX | 0 | None ||| N/A | N/A
		0x1804A1FEB xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1804A1FEE lea rdx,[rsp+20h]		; DEBUG: {Register}/RDX {Memory}/None ||| RSP | 32 | None ||| N/A | N/A
		0x1804A1FF3 mov rcx,rsi		; DEBUG: {Register}/RCX {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x1804A1FF6 movaps [rsp+20h],xmm0		; DEBUG: {Memory}/None {Register}/XMM0 ||| RSP | 32 | None ||| N/A | N/A
		0x1804A1FFB call 0000000181198A80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A2000 jmp near ptr 00000001804A2085h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A2005 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1804A2008 je near ptr 00000001804A21C0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A200E cmp ebx,[rax+18h]		; DEBUG: {Register}/EBX {Memory}/None ||| RAX | 24 | None ||| N/A | N/A
		0x1804A2011 jae near ptr 00000001804A2201h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A2017 mov rsi,[rax+rbp*8+20h]		; DEBUG: {Register}/RSI {Memory}/None ||| RAX | 32 | RBP ||| N/A | N/A
		0x1804A201C test rsi,rsi		; DEBUG: {Register}/RSI {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x1804A201F je near ptr 00000001804A21C0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A2025 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1804A2027 mov rcx,rsi		; DEBUG: {Register}/RCX {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x1804A202A call 000000018060CC90h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A202F xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1804A2031 lea rcx,[rsp+0C0h]		; DEBUG: {Register}/RCX {Memory}/None ||| RSP | 192 | None ||| N/A | N/A
		0x1804A2039 mov r15,rax		; DEBUG: {Register}/R15 {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1804A203C call 0000000180E86110h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A2041 mov rcx,[181883F70h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468157296 | None ||| N/A | N/A
		0x1804A2048 mov r12,rax		; DEBUG: {Register}/R12 {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1804A204B test byte ptr [rcx+127h],2		; DEBUG: {Memory}/None {Immediate8}/None ||| RCX | 295 | None ||| N/A | 2
		0x1804A2052 je short 00000001804A2062h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A2054 cmp dword ptr [rcx+0D8h],0		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RCX | 216 | None ||| N/A | 0
		0x1804A205B jne short 00000001804A2062h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A205D call 000000018010EAF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A2062 mov rdx,[18187FCB0h]		; DEBUG: {Register}/RDX {Memory}/None ||| RIP | 6468140208 | None ||| N/A | N/A
		0x1804A2069 xor r9d,r9d		; DEBUG: {Register}/R9D {Register}/R9D ||| None | 0 | None ||| N/A | N/A
		0x1804A206C mov r8,r12		; DEBUG: {Register}/R8 {Register}/R12 ||| None | 0 | None ||| N/A | N/A
		0x1804A206F mov rcx,r15		; DEBUG: {Register}/RCX {Register}/R15 ||| None | 0 | None ||| N/A | N/A
		0x1804A2072 call 0000000180D4D6E0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A2077 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1804A207A mov rdx,rax		; DEBUG: {Register}/RDX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1804A207D mov rcx,rsi		; DEBUG: {Register}/RCX {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x1804A2080 call 000000018060D730h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A2085 mov rax,[r14+20h]		; DEBUG: {Register}/RAX {Memory}/None ||| R14 | 32 | None ||| N/A | N/A
		0x1804A2089 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1804A208C je short 00000001804A20B3h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A208E cmp ebx,[rax+18h]		; DEBUG: {Register}/EBX {Memory}/None ||| RAX | 24 | None ||| N/A | N/A
		0x1804A2091 jge short 00000001804A20B3h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A2093 jae near ptr 00000001804A21EEh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A2099 mov rcx,[rax+rbp*8+20h]		; DEBUG: {Register}/RCX {Memory}/None ||| RAX | 32 | RBP ||| N/A | N/A
		0x1804A209E test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x1804A20A1 je near ptr 00000001804A21C0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A20A7 cvttss2si edx,xmm6		; DEBUG: {Register}/EDX {Register}/XMM6 ||| None | 0 | None ||| N/A | N/A
		0x1804A20AB xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1804A20AE call 00000001807261D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A20B3 inc ebx		; DEBUG: {Register}/EBX {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1804A20B5 inc edi		; DEBUG: {Register}/EDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1804A20B7 cmp edi,8		; DEBUG: {Register}/EDI {Immediate8to32}/None ||| None | 0 | None ||| N/A | 8
		0x1804A20BA jl near ptr 00000001804A1E04h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A20C0 mov rax,[r14+18h]		; DEBUG: {Register}/RAX {Memory}/None ||| R14 | 24 | None ||| N/A | N/A
		0x1804A20C4 mov edx,ebx		; DEBUG: {Register}/EDX {Register}/EBX ||| None | 0 | None ||| N/A | N/A
		0x1804A20C6 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1804A20C9 je near ptr 00000001804A21C0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A20CF mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1804A20D2 cmp edx,[rax+18h]		; DEBUG: {Register}/EDX {Memory}/None ||| RAX | 24 | None ||| N/A | N/A
		0x1804A20D5 jge near ptr 00000001804A2166h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A20DB test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x1804A20DE je near ptr 00000001804A21C0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A20E4 movsxd rdi,ebx		; DEBUG: {Register}/RDI {Register}/EBX ||| None | 0 | None ||| N/A | N/A
		0x1804A20E7 cmp ebx,[rcx+18h]		; DEBUG: {Register}/EBX {Memory}/None ||| RCX | 24 | None ||| N/A | N/A
		0x1804A20EA jae near ptr 00000001804A2227h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A20F0 mov rsi,[rcx+rdi*8+20h]		; DEBUG: {Register}/RSI {Memory}/None ||| RCX | 32 | RDI ||| N/A | N/A
		0x1804A20F5 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1804A20F7 lea rcx,[rsp+40h]		; DEBUG: {Register}/RCX {Memory}/None ||| RSP | 64 | None ||| N/A | N/A
		0x1804A20FC call 0000000180B28BA0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A2101 test rsi,rsi		; DEBUG: {Register}/RSI {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x1804A2104 je near ptr 00000001804A21C0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A210A movups xmm0,[rax]		; DEBUG: {Register}/XMM0 {Memory}/None ||| RAX | 0 | None ||| N/A | N/A
		0x1804A210D xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1804A2110 lea rdx,[rsp+20h]		; DEBUG: {Register}/RDX {Memory}/None ||| RSP | 32 | None ||| N/A | N/A
		0x1804A2115 mov rcx,rsi		; DEBUG: {Register}/RCX {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x1804A2118 movaps [rsp+20h],xmm0		; DEBUG: {Memory}/None {Register}/XMM0 ||| RSP | 32 | None ||| N/A | N/A
		0x1804A211D call 0000000181198A80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A2122 mov rax,[r14+18h]		; DEBUG: {Register}/RAX {Memory}/None ||| R14 | 24 | None ||| N/A | N/A
		0x1804A2126 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1804A2129 je near ptr 00000001804A21C0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A212F cmp ebx,[rax+18h]		; DEBUG: {Register}/EBX {Memory}/None ||| RAX | 24 | None ||| N/A | N/A
		0x1804A2132 jae near ptr 00000001804A2214h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A2138 mov rcx,[rax+rdi*8+20h]		; DEBUG: {Register}/RCX {Memory}/None ||| RAX | 32 | RDI ||| N/A | N/A
		0x1804A213D test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x1804A2140 je short 00000001804A21C0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A2142 mov rdx,[18186A698h]		; DEBUG: {Register}/RDX {Memory}/None ||| RIP | 6468052632 | None ||| N/A | N/A
		0x1804A2149 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1804A214C call 000000018060D730h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A2151 mov rax,[r14+18h]		; DEBUG: {Register}/RAX {Memory}/None ||| R14 | 24 | None ||| N/A | N/A
		0x1804A2155 inc ebx		; DEBUG: {Register}/EBX {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1804A2157 mov edx,ebx		; DEBUG: {Register}/EDX {Register}/EBX ||| None | 0 | None ||| N/A | N/A
		0x1804A2159 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1804A215C test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1804A215F je short 00000001804A21C0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A2161 jmp near ptr 00000001804A20D2h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A2166 movaps xmm9,[rsp+50h]		; DEBUG: {Register}/XMM9 {Memory}/None ||| RSP | 80 | None ||| N/A | N/A
		0x1804A216C movaps xmm8,[rsp+60h]		; DEBUG: {Register}/XMM8 {Memory}/None ||| RSP | 96 | None ||| N/A | N/A
		0x1804A2172 movaps xmm7,[rsp+70h]		; DEBUG: {Register}/XMM7 {Memory}/None ||| RSP | 112 | None ||| N/A | N/A
		0x1804A2177 movaps xmm6,[rsp+80h]		; DEBUG: {Register}/XMM6 {Memory}/None ||| RSP | 128 | None ||| N/A | N/A
		0x1804A217F mov r15,[rsp+90h]		; DEBUG: {Register}/R15 {Memory}/None ||| RSP | 144 | None ||| N/A | N/A
		0x1804A2187 mov r12,[rsp+0D8h]		; DEBUG: {Register}/R12 {Memory}/None ||| RSP | 216 | None ||| N/A | N/A
		0x1804A218F mov rdi,[rsp+0D0h]		; DEBUG: {Register}/RDI {Memory}/None ||| RSP | 208 | None ||| N/A | N/A
		0x1804A2197 mov rbp,[rsp+0C8h]		; DEBUG: {Register}/RBP {Memory}/None ||| RSP | 200 | None ||| N/A | N/A
		0x1804A219F add rsp,98h		; DEBUG: {Register}/RSP {Immediate32to64}/None ||| None | 0 | None ||| N/A | 152
		0x1804A21A6 pop r14		; DEBUG: {Register}/R14 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1804A21A8 pop r13		; DEBUG: {Register}/R13 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1804A21AA pop rsi		; DEBUG: {Register}/RSI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1804A21AB pop rbx		; DEBUG: {Register}/RBX {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1804A21AC ret		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1804A21AD call 000000018012A7F0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A21B2 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1804A21B5 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1804A21B8 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1804A21BA call 000000018012BD50h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A21BF int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.Void CustomizeMiniGameStatus::SetCustomizeInfo(MiniGameCustomInfo):
		End of function at 0x1804A21C0
		Absolute End is at 0x1804A21C0
		Identified Jump Destination addresses:
			0x1804A2085
		0x1804A1D40: Saves the content of rbx to the stack
		0x1804A1D42: Saves the content of rsi to the stack
		0x1804A1D43: Saves the content of r13 to the stack
		0x1804A1D45: Saves the content of r14 to the stack
		0x1804A1D4E: Compares {Unknown Global at 0x18183E619, first ten bytes are [158 1 0 221 158 1 0 84 62 103], or as chars " Ý T>g"} and 0
		0x1804A1D55: Copies {'info' (function parameter, type MiniGameCustomInfo)} from rdx into r13
		0x1804A1D58: Copies {'this' (function parameter, type CustomizeMiniGameStatus)} from rcx into r14
		0x1804A1D5B: Jumps to 0x1804A1D6F if {Unknown Global at 0x18183E619, first ten bytes are [158 1 0 221 158 1 0 84 62 103], or as chars " Ý T>g"} != 0

		0x1804A1D5D: Loads string "r" into register rcx as constant {'constant3' (constant value of type Cpp2IL.Core.Analysis.ResultModels.Il2CppString)}
		0x1804A1D63: Attempts to load the il2cpp metadata for this method (method id 0) and init it cpp-side.

		0x1804A1D6F: [!] Reads field m_effectIcon from {'this' (function parameter, type CustomizeMiniGameStatus)} and stores in a new local {'m_effectIcon' (type UICustomizeStatusIcon[])}

		0x1804A1D73: Clears register rbx, yielding zero-local {'local3' (type System.Int32)}
		0x1804A1DAE: Moves local3 (type System.Int32) from register rbx to the stack at offset 192 (0xC0)
		0x1804A1DB5: [!] Compares {'m_effectIcon' (type UICustomizeStatusIcon[])} and 0
		0x1804A1DB8: Jumps to 0x1804A1DED (which is an if statement's body) if m_effectIcon equals 0 ;  - Increasing indentation - is standard if, unimportant is False

		0x1804A1DBA: Copies {'local3' (type System.Int32)} from rbx into rdi
		0x1804A1DBC: Copies {'local3' (type System.Int32)} from rbx into rcx

		Potential Loop Start (0x1804A1DC0):
		0x1804A1DC0: Reads the length of the array "{'m_effectIcon' (type UICustomizeStatusIcon[])}" and stores it in new local {'length' (type System.Int32)} in register rax
		0x1804A1DC3: [!] Compares {'local3' (type System.Int32)} and {'length' (type System.Int32)}
		0x1804A1DC5: Jumps to 0x1804A1DED (which is an if statement's body) if {'local3' (type System.Int32)} is greater than or equal to {'length' (type System.Int32)} ;  - Increasing indentation - is standard if, unimportant is False

		0x1804A1DC7: [!] Compares {'local3' (type System.Int32)} and {'length' (type System.Int32)}
		0x1804A1DC9: Jumps to 0x1804A21AD (which throws a NRE) if {'local3' (type System.Int32)} is greater than or equal to {'length' (type System.Int32)}. Implicitly present in managed code, so ignored here.
		0x1804A1DCF: Copies {'local3' (type System.Int32)} from rdi into rax
		0x1804A1DD2: Copies the element in the array {'m_effectIcon' (type UICustomizeStatusIcon[])} at the index specified by {'local3' (type System.Int32)} into new local {'uICustomizeStatusIcon' (type UICustomizeStatusIcon)}
		0x1804A1DD7: [!] Compares {'uICustomizeStatusIcon' (type UICustomizeStatusIcon)} and 0
		0x1804A1DDA: Jumps to 0x1804A21C0 (which throws a NRE) if uICustomizeStatusIcon equals 0. Implicitly present in managed code, so ignored here.
		0x1804A1DE2: [!] Calls managed method System.Void UICustomizeStatusIcon::Init() on instance {'uICustomizeStatusIcon' (type UICustomizeStatusIcon)}

		0x1804A1DE7: [!] Adds 1 to the value {'local3' (type System.Int32)}, stored in rdi
		0x1804A1DE9: Copies {'local3' (type System.Int32)} from rdi into rcx
		0x1804A1DEB: Jumps to 0x1804A1DC0 - which is still in this function, but further up. Probably indicative that this is a loop.
		0x1804A1DED: Reads {Unknown Global at 0x181261F50, first ten bytes are [255 255 255 127 255 255 255 127 255 255], or as chars "ÿÿÿÿÿÿÿÿ"} into register xmm8 as a constant constant6
		0x1804A1DF6: Copies {'local3' (type System.Int32)} from rbx into rdi
		0x1804A1DF8: Reads {Unknown Global at 0x181261D44, first ten bytes are [10 215 35 60 205 204 76 61 123 20], or as chars "
×#<ÍÌL={"} into register xmm9 as a constant constant7
		0x1804A1E01: Clears register xmm7, yielding zero-local {'local7' (type System.Int32)}
		0x1804A1E04: [!] Compares {'info' (function parameter, type MiniGameCustomInfo)} and 0
		0x1804A1E07: Jumps to 0x1804A21C0 (which throws a NRE) if info equals 0. Implicitly present in managed code, so ignored here.
		0x1804A1E10: Copies {'local3' (type System.Int32)} from rdi into rdx
		0x1804A1E12: Copies {'info' (function parameter, type MiniGameCustomInfo)} from r13 into rcx
		0x1804A1E15: [!] Calls managed method System.Int32 MiniGameCustomInfo::GetLvParam(EMinigameParamCustom) on instance {'info' (function parameter, type MiniGameCustomInfo)} with arguments [{'local3' (type System.Int32)}] and stores the result in {'lvParam' (type System.Int32)}

		0x1804A1E1A: Loads the type definition for managed type UnityEngine.Mathf as a constant "Mathf" in rcx
		0x1804A1E25: Compares "{il2cpp field on {'Mathf' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" and 2
		0x1804A1E2F: Jumps to 0x1804A1E3F if "{il2cpp field on {'Mathf' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" equals 2

		0x1804A1E31: Compares "{il2cpp field on {'Mathf' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" and 0
		0x1804A1E38: Jumps to 0x1804A1E3F if "{il2cpp field on {'Mathf' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" != 0

		0x1804A1E3A: Calls the il2cpp cctor for the type UnityEngine.Mathf
		0x1804A1E44: [!] Calls static managed method System.Int32 UnityEngine.Mathf::RoundToInt(System.Single) and stores the result in {'int32' (type System.Int32)} ;  - parameters do not match, but there is only one function at this address.

		0x1804A1E49: Moves int32 (type System.Int32) from register rax to the stack at offset 192 (0xC0)
		0x1804A1E50: [!] Reads field m_effectLabel from {'this' (function parameter, type CustomizeMiniGameStatus)} and stores in a new local {'m_effectLabel' (type UILabel[])}

		0x1804A1E54: [!] Compares {'m_effectLabel' (type UILabel[])} and 0
		0x1804A1E57: Jumps to 0x1804A21C0 (which throws a NRE) if m_effectLabel equals 0. Implicitly present in managed code, so ignored here.
		0x1804A1E5D: Copies {'local3' (type System.Int32)} from rdi into r15
		0x1804A1E60: [!] Compares {'local3' (type System.Int32)} and {Property System.Int32 System.Array::Length() on {'m_effectLabel' (type UILabel[])}}
		0x1804A1E63: Jumps to 0x1804A2260 (which throws a NRE) if {'local3' (type System.Int32)} is greater than or equal to {Property System.Int32 System.Array::Length() on {'m_effectLabel' (type UILabel[])}}. Implicitly present in managed code, so ignored here.
		0x1804A1E69: Copies the element in the array {'m_effectLabel' (type UILabel[])} at the index specified by {'local3' (type System.Int32)} into new local {'uILabel' (type UILabel)}
		0x1804A1E6E: Loads a pointer to stack offset 0x30 into register rcx as new constant constant15
		0x1804A1E75: [!] Calls static managed method UnityEngine.Color UnityEngine.Color::get_white() and stores the result in {'white' (type UnityEngine.Color)}

		0x1804A1E7A: [!] Compares {'uILabel' (type UILabel)} and 0
		0x1804A1E7D: Jumps to 0x1804A21C0 (which throws a NRE) if uILabel equals 0. Implicitly present in managed code, so ignored here.
		0x1804A1E83: Loads the class pointer from white into a constant constant17 in register xmm0
		0x1804A1E89: Loads a pointer to stack offset 0x20 into register rdx as new constant constant18
		0x1804A1E8E: Copies {'uILabel' (type UILabel)} from rsi into rcx
		0x1804A1E91: Moves constant17 (type Cpp2IL.Core.Analysis.Il2CppClassIdentifier) from register xmm0 to the stack at offset 32 (0x20) as a new local local17
		0x1804A1E96: [!] Calls managed method System.Void UIWidget::set_color(UnityEngine.Color) on instance {'uILabel' (type UILabel)} ;  - parameters do not match, but there is only one function at this address.

		0x1804A1E9B: [!] Reads field m_effectLabel from {'this' (function parameter, type CustomizeMiniGameStatus)} and stores in a new local {'m_effectLabel2' (type UILabel[])}

		0x1804A1E9F: [!] Compares {'m_effectLabel2' (type UILabel[])} and 0
		0x1804A1EA2: Jumps to 0x1804A21C0 (which throws a NRE) if m_effectLabel2 equals 0. Implicitly present in managed code, so ignored here.
		0x1804A1EA8: [!] Compares {'local3' (type System.Int32)} and {Property System.Int32 System.Array::Length() on {'m_effectLabel2' (type UILabel[])}}
		0x1804A1EAB: Jumps to 0x1804A224D (which throws a NRE) if {'local3' (type System.Int32)} is greater than or equal to {Property System.Int32 System.Array::Length() on {'m_effectLabel2' (type UILabel[])}}. Implicitly present in managed code, so ignored here.
		0x1804A1EB1: Copies {'local3' (type System.Int32)} from rbx into rbp
		0x1804A1EB4: Copies the element in the array {'m_effectLabel2' (type UILabel[])} at the index specified by {'local3' (type System.Int32)} into new local {'uILabel2' (type UILabel)}
		0x1804A1EB9: Loads the type definition for managed type CustomizeMiniGameStatus as a constant "CustomizeMiniGameStatus" in rax
		0x1804A1EC0: Compares "{il2cpp field on {'CustomizeMiniGameStatus' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" and 2
		0x1804A1EC7: Jumps to 0x1804A1EE1 if "{il2cpp field on {'CustomizeMiniGameStatus' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" equals 2

		0x1804A1EC9: Compares "{il2cpp field on {'CustomizeMiniGameStatus' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" and 0
		0x1804A1ED0: Jumps to 0x1804A1EE1 if "{il2cpp field on {'CustomizeMiniGameStatus' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" != 0

		0x1804A1ED2: Copies {'CustomizeMiniGameStatus' (constant value of type Mono.Cecil.TypeReference)} from rax into rcx
		0x1804A1ED5: Calls the il2cpp cctor for the type CustomizeMiniGameStatus
		0x1804A1EDA: Loads the type definition for managed type CustomizeMiniGameStatus as a constant "CustomizeMiniGameStatus" in rax
		0x1804A1EE1: Loads the pointer to the static fields for CustomizeMiniGameStatus and stores it in constant26 in register rax
		0x1804A1EE8: [!] Reads the static field EDisplay[] CustomizeMiniGameStatus::scCustomizeTypeName into new local scCustomizeTypeName
		0x1804A1EEB: [!] Compares {'scCustomizeTypeName' (type EDisplay[])} and 0
		0x1804A1EEE: Jumps to 0x1804A21C0 (which throws a NRE) if scCustomizeTypeName equals 0. Implicitly present in managed code, so ignored here.
		0x1804A1EF4: [!] Compares {'local3' (type System.Int32)} and {Property System.Int32 System.Array::Length() on {'scCustomizeTypeName' (type EDisplay[])}}
		0x1804A1EF8: Jumps to 0x1804A223A (which throws a NRE) if {'local3' (type System.Int32)} is greater than or equal to {Property System.Int32 System.Array::Length() on {'scCustomizeTypeName' (type EDisplay[])}}. Implicitly present in managed code, so ignored here.
		0x1804A1EFE: Copies the element in the array {'scCustomizeTypeName' (type EDisplay[])} at the index specified by {'local3' (type System.Int32)} into new local {'eDisplay' (type EDisplay)}
		0x1804A1F05: [!] Calls static managed method System.String DisplayManager::GetMessage(EDisplay) with arguments [{'eDisplay' (type EDisplay)}] and stores the result in {'message' (type System.String)}

		0x1804A1F0A: [!] Compares {'uILabel2' (type UILabel)} and 0
		0x1804A1F0D: Jumps to 0x1804A21C0 (which throws a NRE) if uILabel2 equals 0. Implicitly present in managed code, so ignored here.
		0x1804A1F16: Copies {'message' (type System.String)} from rax into rdx
		0x1804A1F19: Copies {'uILabel2' (type UILabel)} from rsi into rcx
		0x1804A1F1C: [!] Calls managed method System.Void UILabel::set_text(System.String) on instance {'uILabel2' (type UILabel)} with arguments [{'message' (type System.String)}]

		0x1804A1F28: Compares {Unknown Global at 0x181261D44, first ten bytes are [10 215 35 60 205 204 76 61 123 20], or as chars "
×#<ÍÌL={"} and {'constant17' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)}
		0x1804A1F2C: Jumps to 0x1804A20B5 if {Unknown Global at 0x181261D44, first ten bytes are [10 215 35 60 205 204 76 61 123 20], or as chars "
×#<ÍÌL={"} is greater than {'constant17' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)}

		0x1804A1F32: [!] Compares  and {'local7' (type System.Int32)}
		0x1804A1F35: [!] Reads field m_effectLabel from {'this' (function parameter, type CustomizeMiniGameStatus)} and stores in a new local {'m_effectLabel3' (type UILabel[])}

		0x1804A1F39: Jumps to 0x1804A2005 if  is greater than {'local7' (type System.Int32)} ;  - Increasing indentation - is if-else, unimportant is False

		0x1804A1F3F: [!] Compares {'m_effectLabel3' (type UILabel[])} and 0
		0x1804A1F42: Jumps to 0x1804A21C0 (which throws a NRE) if m_effectLabel3 equals 0. Implicitly present in managed code, so ignored here.
		0x1804A1F48: [!] Compares {'local3' (type System.Int32)} and {Property System.Int32 System.Array::Length() on {'m_effectLabel3' (type UILabel[])}}
		0x1804A1F4B: Jumps to 0x1804A21DB (which throws a NRE) if {'local3' (type System.Int32)} is greater than or equal to {Property System.Int32 System.Array::Length() on {'m_effectLabel3' (type UILabel[])}}. Implicitly present in managed code, so ignored here.
		0x1804A1F51: Copies the element in the array {'m_effectLabel3' (type UILabel[])} at the index specified by {'local3' (type System.Int32)} into new local {'uILabel3' (type UILabel)}
		0x1804A1F56: [!] Compares {'uILabel3' (type UILabel)} and 0
		0x1804A1F59: Jumps to 0x1804A21C0 (which throws a NRE) if uILabel3 equals 0. Implicitly present in managed code, so ignored here.
		0x1804A1F61: Copies {'uILabel3' (type UILabel)} from rsi into rcx
		0x1804A1F64: [!] Calls managed method System.String UILabel::get_text() on instance {'uILabel3' (type UILabel)} and stores the result in {'text' (type System.String)}

		0x1804A1F6B: Loads a pointer to stack offset 0xC0 into register rcx as new constant constant31
		0x1804A1F73: Copies {'text' (type System.String)} from rax into r15
		0x1804A1F7B: Loads the type definition for managed type System.String as a constant "String" in rcx
		0x1804A1F82: Copies {'text' (type System.String)} from rax into r12
		0x1804A1F85: Compares "{il2cpp field on {'String' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" and 2
		0x1804A1F8C: Jumps to 0x1804A1F9C if "{il2cpp field on {'String' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" equals 2

		0x1804A1F8E: Compares "{il2cpp field on {'String' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" and 0
		0x1804A1F95: Jumps to 0x1804A1F9C if "{il2cpp field on {'String' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" != 0

		0x1804A1F97: Calls the il2cpp cctor for the type System.String
		0x1804A1F9F: Copies {'text' (type System.String)} from r12 into rdx
		0x1804A1FA2: Copies {'text' (type System.String)} from r15 into rcx
		0x1804A1FA5: [!] Calls static managed method System.String System.String::Concat(System.String,System.String) with arguments [{'text' (type System.String)}, {'text' (type System.String)}] and stores the result in {'string' (type System.String)}

		0x1804A1FAD: Copies {'string' (type System.String)} from rax into rdx
		0x1804A1FB0: Copies {'uILabel3' (type UILabel)} from rsi into rcx
		0x1804A1FB3: [!] Calls managed method System.Void UILabel::set_text(System.String) on instance {'uILabel3' (type UILabel)} with arguments [{'string' (type System.String)}]

		0x1804A1FB8: [!] Reads field m_effectLabel from {'this' (function parameter, type CustomizeMiniGameStatus)} and stores in a new local {'m_effectLabel4' (type UILabel[])}

		0x1804A1FBC: [!] Compares {'m_effectLabel4' (type UILabel[])} and 0
		0x1804A1FBF: Jumps to 0x1804A21C0 (which throws a NRE) if m_effectLabel4 equals 0. Implicitly present in managed code, so ignored here.
		0x1804A1FC5: [!] Compares {'local3' (type System.Int32)} and {Property System.Int32 System.Array::Length() on {'m_effectLabel4' (type UILabel[])}}
		0x1804A1FC8: Jumps to 0x1804A21C8 (which throws a NRE) if {'local3' (type System.Int32)} is greater than or equal to {Property System.Int32 System.Array::Length() on {'m_effectLabel4' (type UILabel[])}}. Implicitly present in managed code, so ignored here.
		0x1804A1FCE: Copies the element in the array {'m_effectLabel4' (type UILabel[])} at the index specified by {'local3' (type System.Int32)} into new local {'uILabel4' (type UILabel)}
		0x1804A1FD3: Loads a pointer to stack offset 0x40 into register rcx as new constant constant38
		0x1804A1FDA: [!] Calls static managed method UnityEngine.Color UnityEngine.Color::get_red() and stores the result in {'red' (type UnityEngine.Color)}

		0x1804A1FDF: [!] Compares {'uILabel4' (type UILabel)} and 0
		0x1804A1FE2: Jumps to 0x1804A21C0 (which throws a NRE) if uILabel4 equals 0. Implicitly present in managed code, so ignored here.
		0x1804A1FE8: Loads the class pointer from red into a constant constant40 in register xmm0
		0x1804A1FEE: Loads a pointer to stack offset 0x20 into register rdx as new constant constant41
		0x1804A1FF3: Copies {'uILabel4' (type UILabel)} from rsi into rcx
		0x1804A1FF6: Moves constant40 (type Cpp2IL.Core.Analysis.Il2CppClassIdentifier) from register xmm0 to the stack at offset 32 (0x20) as a new local local38
		0x1804A1FFB: [!] Calls managed method System.Void UIWidget::set_color(UnityEngine.Color) on instance {'uILabel4' (type UILabel)} ;  - parameters do not match, but there is only one function at this address.

		0x1804A2000: Jumps to 0x1804A2085 (which is an function-local jump destination)

		0x1804A2005: [!] Compares {'m_effectLabel3' (type UILabel[])} and 0
		0x1804A2008: Jumps to 0x1804A21C0 (which throws a NRE) if m_effectLabel3 equals 0. Implicitly present in managed code, so ignored here.
		0x1804A200E: [!] Compares {'local3' (type System.Int32)} and {Property System.Int32 System.Array::Length() on {'m_effectLabel3' (type UILabel[])}}
		0x1804A2011: Jumps to 0x1804A2201 (which throws a NRE) if {'local3' (type System.Int32)} is greater than or equal to {Property System.Int32 System.Array::Length() on {'m_effectLabel3' (type UILabel[])}}. Implicitly present in managed code, so ignored here.
		0x1804A2017: Copies the element in the array {'m_effectLabel3' (type UILabel[])} at the index specified by {'local3' (type System.Int32)} into new local {'uILabel5' (type UILabel)}
		0x1804A201C: [!] Compares {'uILabel5' (type UILabel)} and 0
		0x1804A201F: Jumps to 0x1804A21C0 (which throws a NRE) if uILabel5 equals 0. Implicitly present in managed code, so ignored here.
		0x1804A2027: Copies {'uILabel5' (type UILabel)} from rsi into rcx
		0x1804A202A: [!] Calls managed method System.String UILabel::get_text() on instance {'uILabel5' (type UILabel)} and stores the result in {'text2' (type System.String)}

		0x1804A2031: Loads a pointer to stack offset 0xC0 into register rcx as new constant constant44
		0x1804A2039: Copies {'text2' (type System.String)} from rax into r15
		0x1804A2041: Loads the type definition for managed type System.String as a constant "String" in rcx
		0x1804A2048: Copies {'text2' (type System.String)} from rax into r12
		0x1804A204B: Compares "{il2cpp field on {'String' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" and 2
		0x1804A2052: Jumps to 0x1804A2062 if "{il2cpp field on {'String' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" equals 2

		0x1804A2054: Compares "{il2cpp field on {'String' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" and 0
		0x1804A205B: Jumps to 0x1804A2062 if "{il2cpp field on {'String' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" != 0

		0x1804A205D: Calls the il2cpp cctor for the type System.String
		0x1804A2062: Loads the string literal "+" as a constant "constant50" in rdx
		0x1804A206C: Copies {'text2' (type System.String)} from r12 into r8
		0x1804A206F: Copies {'text2' (type System.String)} from r15 into rcx
		0x1804A2072: [!] Calls static managed method System.String System.String::Concat(System.String,System.String,System.String) with arguments [{'text2' (type System.String)}, "+", {'text2' (type System.String)}] and stores the result in {'string2' (type System.String)}

		0x1804A207A: Copies {'string2' (type System.String)} from rax into rdx
		0x1804A207D: Copies {'uILabel5' (type UILabel)} from rsi into rcx
		0x1804A2080: [!] Calls managed method System.Void UILabel::set_text(System.String) on instance {'uILabel5' (type UILabel)} with arguments [{'string2' (type System.String)}]


		End Of If-Else Block (at 0x1804A2085) where the else started at 0x1804A2005
		0x1804A2085: [!] Reads field m_effectIcon from {'this' (function parameter, type CustomizeMiniGameStatus)} and stores in a new local {'m_effectIcon2' (type UICustomizeStatusIcon[])}

		0x1804A2089: [!] Compares {'m_effectIcon2' (type UICustomizeStatusIcon[])} and 0
		0x1804A208C: Jumps to 0x1804A20B3 if m_effectIcon2 equals 0 ;  - This is probably a goto, jumping to 0x1804A20B3 which is after end of current block @ 0x1804A2085 (started at 0x1804A2005)

		0x1804A208E: [!] Compares {'local3' (type System.Int32)} and {Property System.Int32 System.Array::Length() on {'m_effectIcon2' (type UICustomizeStatusIcon[])}}
		0x1804A2091: Jumps to 0x1804A20B3 if {'local3' (type System.Int32)} is greater than or equal to {Property System.Int32 System.Array::Length() on {'m_effectIcon2' (type UICustomizeStatusIcon[])}} ;  - This is probably a goto, jumping to 0x1804A20B3 which is after end of current block @ 0x1804A2085 (started at 0x1804A2005)

		0x1804A2093: Jumps to 0x1804A21EE (which throws a NRE) if {'local3' (type System.Int32)} is greater than or equal to {Property System.Int32 System.Array::Length() on {'m_effectIcon2' (type UICustomizeStatusIcon[])}}. Implicitly present in managed code, so ignored here.
		0x1804A2099: Copies the element in the array {'m_effectIcon2' (type UICustomizeStatusIcon[])} at the index specified by {'local3' (type System.Int32)} into new local {'uICustomizeStatusIcon2' (type UICustomizeStatusIcon)}
		0x1804A209E: [!] Compares {'uICustomizeStatusIcon2' (type UICustomizeStatusIcon)} and 0
		0x1804A20A1: Jumps to 0x1804A21C0 (which throws a NRE) if uICustomizeStatusIcon2 equals 0. Implicitly present in managed code, so ignored here.
		0x1804A20AE: [!] Calls managed method System.Void UICustomizeStatusIcon::SetIcon(System.Int32) on instance {'uICustomizeStatusIcon2' (type UICustomizeStatusIcon)} ;  - parameters do not match, but there is only one function at this address.

		0x1804A20B3: [!] Adds 1 to the value {'local3' (type System.Int32)}, stored in rbx
		0x1804A20B5: [!] Adds 1 to the value {'local3' (type System.Int32)}, stored in rdi
		0x1804A20B7: [!] Compares {'local3' (type System.Int32)} and 8
		0x1804A20C0: [!] Reads field m_effectLabel from {'this' (function parameter, type CustomizeMiniGameStatus)} and stores in a new local {'m_effectLabel5' (type UILabel[])}

		0x1804A20C4: Copies {'local3' (type System.Int32)} from rbx into rdx
		0x1804A20C6: [!] Compares {'m_effectLabel5' (type UILabel[])} and 0
		0x1804A20C9: Jumps to 0x1804A21C0 (which throws a NRE) if m_effectLabel5 equals 0. Implicitly present in managed code, so ignored here.
		0x1804A20CF: Copies {'m_effectLabel5' (type UILabel[])} from rax into rcx

		Potential Loop Start (0x1804A20D2):
		0x1804A20D2: [!] Compares {'local3' (type System.Int32)} and {Property System.Int32 System.Array::Length() on {'m_effectLabel5' (type UILabel[])}}
		0x1804A20D5: Jumps to 0x1804A2166 if {'local3' (type System.Int32)} is greater than or equal to {Property System.Int32 System.Array::Length() on {'m_effectLabel5' (type UILabel[])}} ;  - Increasing indentation - is while loop, unimportant is False

		0x1804A20DB: [!] Compares {'m_effectLabel5' (type UILabel[])} and 0
		0x1804A20DE: Jumps to 0x1804A21C0 (which throws a NRE) if m_effectLabel5 equals 0. Implicitly present in managed code, so ignored here.
		0x1804A20E4: Copies {'local3' (type System.Int32)} from rbx into rdi
		0x1804A20E7: [!] Compares {'local3' (type System.Int32)} and {Property System.Int32 System.Array::Length() on {'m_effectLabel5' (type UILabel[])}}
		0x1804A20EA: Jumps to 0x1804A2227 (which throws a NRE) if {'local3' (type System.Int32)} is greater than or equal to {Property System.Int32 System.Array::Length() on {'m_effectLabel5' (type UILabel[])}}. Implicitly present in managed code, so ignored here.
		0x1804A20F0: Copies the element in the array {'m_effectLabel5' (type UILabel[])} at the index specified by {'local3' (type System.Int32)} into new local {'uILabel6' (type UILabel)}
		0x1804A20F7: Loads a pointer to stack offset 0x40 into register rcx as new constant constant56
		0x1804A20FC: [!] Calls static managed method UnityEngine.Color UnityEngine.Color::get_white() and stores the result in {'white2' (type UnityEngine.Color)}

		0x1804A2101: [!] Compares {'uILabel6' (type UILabel)} and 0
		0x1804A2104: Jumps to 0x1804A21C0 (which throws a NRE) if uILabel6 equals 0. Implicitly present in managed code, so ignored here.
		0x1804A210A: Loads the class pointer from white2 into a constant constant58 in register xmm0
		0x1804A2110: Loads a pointer to stack offset 0x20 into register rdx as new constant constant59
		0x1804A2115: Copies {'uILabel6' (type UILabel)} from rsi into rcx
		0x1804A2118: Moves constant58 (type Cpp2IL.Core.Analysis.Il2CppClassIdentifier) from register xmm0 to the stack at offset 32 (0x20) as a new local local54
		0x1804A211D: [!] Calls managed method System.Void UIWidget::set_color(UnityEngine.Color) on instance {'uILabel6' (type UILabel)} ;  - parameters do not match, but there is only one function at this address.

		0x1804A2122: [!] Reads field m_effectLabel from {'this' (function parameter, type CustomizeMiniGameStatus)} and stores in a new local {'m_effectLabel6' (type UILabel[])}

		0x1804A2126: [!] Compares {'m_effectLabel6' (type UILabel[])} and 0
		0x1804A2129: Jumps to 0x1804A21C0 (which throws a NRE) if m_effectLabel6 equals 0. Implicitly present in managed code, so ignored here.
		0x1804A212F: [!] Compares {'local3' (type System.Int32)} and {Property System.Int32 System.Array::Length() on {'m_effectLabel6' (type UILabel[])}}
		0x1804A2132: Jumps to 0x1804A2214 (which throws a NRE) if {'local3' (type System.Int32)} is greater than or equal to {Property System.Int32 System.Array::Length() on {'m_effectLabel6' (type UILabel[])}}. Implicitly present in managed code, so ignored here.
		0x1804A2138: Copies the element in the array {'m_effectLabel6' (type UILabel[])} at the index specified by {'local3' (type System.Int32)} into new local {'uILabel7' (type UILabel)}
		0x1804A213D: [!] Compares {'uILabel7' (type UILabel)} and 0
		0x1804A2140: Jumps to 0x1804A21C0 (which throws a NRE) if uILabel7 equals 0. Implicitly present in managed code, so ignored here.
		0x1804A2142: Loads the string literal "-----" as a constant "constant62" in rdx
		0x1804A214C: [!] Calls managed method System.Void UILabel::set_text(System.String) on instance {'uILabel7' (type UILabel)} with arguments ["-----"]

		0x1804A2151: [!] Reads field m_effectLabel from {'this' (function parameter, type CustomizeMiniGameStatus)} and stores in a new local {'m_effectLabel7' (type UILabel[])}

		0x1804A2155: [!] Adds 1 to the value {'local3' (type System.Int32)}, stored in rbx
		0x1804A2157: Copies {'local3' (type System.Int32)} from rbx into rdx
		0x1804A2159: Copies {'m_effectLabel7' (type UILabel[])} from rax into rcx
		0x1804A215C: [!] Compares {'m_effectLabel7' (type UILabel[])} and 0
		0x1804A215F: Jumps to 0x1804A21C0 (which throws a NRE) if m_effectLabel7 equals 0. Implicitly present in managed code, so ignored here.
		0x1804A2161: Jumps to 0x1804A20D2 - which is still in this function, but further up. Probably indicative that this is a loop.
		0x1804A2166: Reads unknown value in stack, offset 80 (0x50) and stores the pointer in register xmm9 as new constant constant64
		0x1804A216C: Reads unknown value in stack, offset 96 (0x60) and stores the pointer in register xmm8 as new constant constant65
		0x1804A2172: Reads unknown value in stack, offset 112 (0x70) and stores the pointer in register xmm7 as new constant constant66
		0x1804A2177: Reads unknown value in stack, offset 128 (0x80) and stores the pointer in register xmm6 as new constant constant67
		0x1804A217F: Reads unknown value in stack, offset 144 (0x90) and stores the pointer in register r15 as new constant constant68
		0x1804A2187: Reads unknown value in stack, offset 216 (0xD8) and stores the pointer in register r12 as new constant constant69
		0x1804A218F: Reads unknown value in stack, offset 208 (0xD0) and stores the pointer in register rdi as new constant constant70
		0x1804A2197: Reads unknown value in stack, offset 200 (0xC8) and stores the pointer in register rbp as new constant constant71
		0x1804A21AC: [!] Returns from the function

		0x1804A21AD: [!] Constructs and throws an exception of kind System.IndexOutOfRangeException

		0x1804A21B2: Copies {'local59' (type System.IndexOutOfRangeException)} from rax into rcx
		0x1804A21BA: [!] Throws {'local59' (type System.IndexOutOfRangeException)}



	Generated Pseudocode:

	Declaring Type: CustomizeMiniGameStatus
	System.Void SetCustomizeInfo(MiniGameCustomInfo info)
		UICustomizeStatusIcon[] m_effectIcon = this.m_effectIcon
		ulong local3 = 0

		if (m_effectIcon != 0)
		    System.Int32 length = m_effectIcon.Length

		    if (local3 < length)
		        UICustomizeStatusIcon uICustomizeStatusIcon = m_effectIcon[local3]

		        uICustomizeStatusIcon.Init()
		        local3 += 1
		    endif
            
		    ulong local7 = 0

		    System.Int32 lvParam = info.GetLvParam(local3) //(EMinigameParamCustom type)

		    System.Int32 int32 = UnityEngine.Mathf.RoundToInt()
		    UILabel[] m_effectLabel = this.m_effectLabel
		    UILabel uILabel = m_effectLabel[local3]

		    UnityEngine.Color white = UnityEngine.Color.white

		    uILabel.set_color()
		    UILabel[] m_effectLabel2 = this.m_effectLabel
		    UILabel uILabel2 = m_effectLabel2[local3]
		    EDisplay[] scCustomizeTypeName = CustomizeMiniGameStatus.scCustomizeTypeName
		    EDisplay eDisplay = scCustomizeTypeName[local3]

		    System.String message = DisplayManager.GetMessage(eDisplay) //(EDisplay msgId)

		    uILabel2.text = message
		    UILabel[] m_effectLabel3 = this.m_effectLabel

		    if ( <= local7)
		        UILabel uILabel3 = m_effectLabel3[local3]

		        System.String text = uILabel3.text

		        System.String string = System.String.Concat(text, text) //(String str0, String str1)

		        uILabel3.text = string
		        UILabel[] m_effectLabel4 = this.m_effectLabel
		        UILabel uILabel4 = m_effectLabel4[local3]

		        UnityEngine.Color red = UnityEngine.Color.red

		        uILabel4.set_color()
		    else
		        UILabel uILabel5 = m_effectLabel3[local3]

		        System.String text2 = uILabel5.text

		        System.String string2 = System.String.Concat(text2, "+", text2) //(String str0, String str1, String str2)

		        uILabel5.text = string2
		    endif
            
		    UICustomizeStatusIcon[] m_effectIcon2 = this.m_effectIcon

		    if (m_effectIcon2 == 0)
                goto INSN_1804A20B3
            endif

		    if (local3 >= m_effectIcon2.Length)
                goto INSN_1804A20B3
            endif
		    UICustomizeStatusIcon uICustomizeStatusIcon2 = m_effectIcon2[local3]

		    uICustomizeStatusIcon2.SetIcon()

		    INSN_1804A20B3:
		    local3 += 1
		    local3 += 1
		endwhile
        
		goto INSN_1804A21C0
        
		UILabel[] m_effectLabel5 = this.m_effectLabel

		while (local3 < m_effectLabel5.Length)
		    UILabel uILabel6 = m_effectLabel5[local3]

		    UnityEngine.Color white2 = UnityEngine.Color.white

		    uILabel6.set_color()
		    UILabel[] m_effectLabel6 = this.m_effectLabel
		    UILabel uILabel7 = m_effectLabel6[local3]

		    uILabel7.text = "-----"
		    UILabel[] m_effectLabel7 = this.m_effectLabel
		    local3 += 1
		endwhile
        
		return
		throw new System.IndexOutOfRangeException()
		throw local59


Generated IL:
	Action of type Cpp2IL.Core.Analysis.Actions.x86.Important.CallManagedFunctionAction at (0x1804A1E44) is corrupt (Couldn't get arguments, or actual count (-1) is not equal to expected count (1)) and cannot be created as IL. Aborting here.


Method: System.Void CustomizeMiniGameStatus::InActiveCorrectParam():	Method Body (x86 ASM):
		0x180490510 push rbx		; DEBUG: {Register}/RBX {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180490512 sub rsp,20h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 32
		0x180490516 mov rbx,rcx		; DEBUG: {Register}/RBX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x180490519 mov rcx,[rcx+50h]		; DEBUG: {Register}/RCX {Memory}/None ||| RCX | 80 | None ||| N/A | N/A
		0x18049051D test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x180490520 je short 0000000180490544h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180490522 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x180490525 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180490527 call 0000000180B2E5A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18049052C mov rcx,[rbx+58h]		; DEBUG: {Register}/RCX {Memory}/None ||| RBX | 88 | None ||| N/A | N/A
		0x180490530 test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x180490533 je short 0000000180490544h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180490535 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x180490538 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18049053A add rsp,20h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 32
		0x18049053E pop rbx		; DEBUG: {Register}/RBX {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18049053F jmp near ptr 0000000180B2E5A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180490544 xor ecx,ecx		; DEBUG: {Register}/ECX {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x180490546 call 000000018012BDA0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18049054B int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.Void CustomizeMiniGameStatus::InActiveCorrectParam():
		End of function at 0x18049054C
		Absolute End is at 0x18049054C
		Identified Jump Destination addresses:

		0x180490510: Saves the content of rbx to the stack
		0x180490516: Copies {'this' (function parameter, type CustomizeMiniGameStatus)} from rcx into rbx
		0x180490519: [!] Reads field m_afterCorrectionObj from {'this' (function parameter, type CustomizeMiniGameStatus)} and stores in a new local {'m_afterCorrectionObj' (type UnityEngine.GameObject)}

		0x18049051D: [!] Compares {'m_afterCorrectionObj' (type UnityEngine.GameObject)} and 0
		0x180490520: Jumps to 0x180490544 (which throws a NRE) if m_afterCorrectionObj equals 0. Implicitly present in managed code, so ignored here.
		0x180490525: Clears register rdx, yielding zero-local {'local3' (type System.Int32)}
		0x180490527: [!] Calls managed method System.Void UnityEngine.GameObject::SetActive(System.Boolean) on instance {'m_afterCorrectionObj' (type UnityEngine.GameObject)} with arguments [{'local3' (type System.Int32)}]

		0x18049052C: [!] Reads field m_arrowObj from {'this' (function parameter, type CustomizeMiniGameStatus)} and stores in a new local {'m_arrowObj' (type UnityEngine.GameObject)}

		0x180490530: [!] Compares {'m_arrowObj' (type UnityEngine.GameObject)} and 0
		0x180490533: Jumps to 0x180490544 (which throws a NRE) if m_arrowObj equals 0. Implicitly present in managed code, so ignored here.
		0x180490538: Clears register rdx, yielding zero-local {'local6' (type System.Int32)}
		0x18049053F: [!] Calls managed method System.Void UnityEngine.GameObject::SetActive(System.Boolean) on instance {'m_arrowObj' (type UnityEngine.GameObject)} with arguments [{'local6' (type System.Int32)}]

		0x18049053F: [!] Returns from the function

		0x180490546: [!] Constructs and throws an exception of kind System.NullReferenceException




	Generated Pseudocode:

	Declaring Type: CustomizeMiniGameStatus
	System.Void InActiveCorrectParam()
		UnityEngine.GameObject m_afterCorrectionObj = this.m_afterCorrectionObj
		ulong local3 = 0

		m_afterCorrectionObj.SetActive(local3) //(Boolean value)
		UnityEngine.GameObject m_arrowObj = this.m_arrowObj
		ulong local6 = 0

		m_arrowObj.SetActive(local6) //(Boolean value)
		return
		throw new System.NullReferenceException()


Generated IL:
	IL_0000: ldarg.0
	IL_0001: ldfld UnityEngine.GameObject CustomizeMiniGameStatus::m_afterCorrectionObj
	IL_0006: stloc.0
	IL_0007: ldc.i4.0
	IL_0008: stloc.1
	IL_0009: ldloc.0
	IL_000a: ldloc.1
	IL_000b: call System.Void UnityEngine.GameObject::SetActive(System.Boolean)
	IL_0010: ldarg.0
	IL_0011: ldfld UnityEngine.GameObject CustomizeMiniGameStatus::m_arrowObj
	IL_0016: stloc.2
	IL_0017: ldc.i4.0
	IL_0018: stloc.3
	IL_0019: ldloc.2
	IL_001a: ldloc.3
	IL_001b: call System.Void UnityEngine.GameObject::SetActive(System.Boolean)
	IL_0020: ret
	IL_0021: newobj System.Void System.NullReferenceException::.ctor()
	IL_0026: throw
	

Method: System.Void CustomizeMiniGameStatus::SetCorrectParam(MiniGameCustomInfo,MiniGameCustomInfo):	Method Body (x86 ASM):
		0x1804A1760 mov [rsp+10h],rdx		; DEBUG: {Memory}/None {Register}/RDX ||| RSP | 16 | None ||| N/A | N/A
		0x1804A1765 push rbx		; DEBUG: {Register}/RBX {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1804A1766 push rbp		; DEBUG: {Register}/RBP {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1804A1767 push rdi		; DEBUG: {Register}/RDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1804A1768 push r13		; DEBUG: {Register}/R13 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1804A176A sub rsp,0B8h		; DEBUG: {Register}/RSP {Immediate32to64}/None ||| None | 0 | None ||| N/A | 184
		0x1804A1771 cmp byte ptr [18183E61Ah],0		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6467872282 | None ||| N/A | 0
		0x1804A1778 mov r13,r8		; DEBUG: {Register}/R13 {Register}/R8 ||| None | 0 | None ||| N/A | N/A
		0x1804A177B mov rdi,rdx		; DEBUG: {Register}/RDI {Register}/RDX ||| None | 0 | None ||| N/A | N/A
		0x1804A177E mov rbp,rcx		; DEBUG: {Register}/RBP {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x1804A1781 jne short 00000001804A1795h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A1783 mov ecx,[1814B8A3Ch]		; DEBUG: {Register}/ECX {Memory}/None ||| RIP | 6464178748 | None ||| N/A | N/A
		0x1804A1789 call 00000001800FEB90h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A178E mov byte ptr [18183E61Ah],1		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6467872282 | None ||| N/A | 1
		0x1804A1795 mov rcx,[rbp+50h]		; DEBUG: {Register}/RCX {Memory}/None ||| RBP | 80 | None ||| N/A | N/A
		0x1804A1799 xor ebx,ebx		; DEBUG: {Register}/EBX {Register}/EBX ||| None | 0 | None ||| N/A | N/A
		0x1804A179B mov [rsp+0F0h],rsi		; DEBUG: {Memory}/None {Register}/RSI ||| RSP | 240 | None ||| N/A | N/A
		0x1804A17A3 mov [rsp+0B0h],r12		; DEBUG: {Memory}/None {Register}/R12 ||| RSP | 176 | None ||| N/A | N/A
		0x1804A17AB mov [rsp+0A8h],r14		; DEBUG: {Memory}/None {Register}/R14 ||| RSP | 168 | None ||| N/A | N/A
		0x1804A17B3 mov [rsp+0A0h],r15		; DEBUG: {Memory}/None {Register}/R15 ||| RSP | 160 | None ||| N/A | N/A
		0x1804A17BB movaps [rsp+90h],xmm6		; DEBUG: {Memory}/None {Register}/XMM6 ||| RSP | 144 | None ||| N/A | N/A
		0x1804A17C3 movaps [rsp+80h],xmm7		; DEBUG: {Memory}/None {Register}/XMM7 ||| RSP | 128 | None ||| N/A | N/A
		0x1804A17CB movaps [rsp+70h],xmm8		; DEBUG: {Memory}/None {Register}/XMM8 ||| RSP | 112 | None ||| N/A | N/A
		0x1804A17D1 movaps [rsp+60h],xmm9		; DEBUG: {Memory}/None {Register}/XMM9 ||| RSP | 96 | None ||| N/A | N/A
		0x1804A17D7 movaps [rsp+50h],xmm10		; DEBUG: {Memory}/None {Register}/XMM10 ||| RSP | 80 | None ||| N/A | N/A
		0x1804A17DD mov [rsp+0E0h],ebx		; DEBUG: {Memory}/None {Register}/EBX ||| RSP | 224 | None ||| N/A | N/A
		0x1804A17E4 test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x1804A17E7 je near ptr 00000001804A1CCEh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A17ED xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1804A17F0 mov dl,1		; DEBUG: {Register}/DL {Immediate8}/None ||| None | 0 | None ||| N/A | 1
		0x1804A17F2 call 0000000180B2E5A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A17F7 mov rcx,[rbp+58h]		; DEBUG: {Register}/RCX {Memory}/None ||| RBP | 88 | None ||| N/A | N/A
		0x1804A17FB test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x1804A17FE je near ptr 00000001804A1CCEh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A1804 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1804A1807 mov dl,1		; DEBUG: {Register}/DL {Immediate8}/None ||| None | 0 | None ||| N/A | 1
		0x1804A1809 call 0000000180B2E5A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A180E mov rsi,[rbp+30h]		; DEBUG: {Register}/RSI {Memory}/None ||| RBP | 48 | None ||| N/A | N/A
		0x1804A1812 test rsi,rsi		; DEBUG: {Register}/RSI {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x1804A1815 je short 00000001804A1855h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A1817 mov edi,ebx		; DEBUG: {Register}/EDI {Register}/EBX ||| None | 0 | None ||| N/A | N/A
		0x1804A1819 mov ecx,ebx		; DEBUG: {Register}/ECX {Register}/EBX ||| None | 0 | None ||| N/A | N/A
		0x1804A181B nop dword ptr [rax+rax]		; DEBUG: {Memory}/None {Register}/None ||| RAX | 0 | RAX ||| N/A | N/A
		0x1804A1820 mov eax,[rsi+18h]		; DEBUG: {Register}/EAX {Memory}/None ||| RSI | 24 | None ||| N/A | N/A
		0x1804A1823 cmp ecx,eax		; DEBUG: {Register}/ECX {Register}/EAX ||| None | 0 | None ||| N/A | N/A
		0x1804A1825 jge short 00000001804A184Dh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A1827 cmp edi,eax		; DEBUG: {Register}/EDI {Register}/EAX ||| None | 0 | None ||| N/A | N/A
		0x1804A1829 jae near ptr 00000001804A1C6Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A182F movsxd rax,edi		; DEBUG: {Register}/RAX {Register}/EDI ||| None | 0 | None ||| N/A | N/A
		0x1804A1832 mov rcx,[rsi+rax*8+20h]		; DEBUG: {Register}/RCX {Memory}/None ||| RSI | 32 | RAX ||| N/A | N/A
		0x1804A1837 test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x1804A183A je near ptr 00000001804A1CCEh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A1840 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1804A1842 call 00000001807260F0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A1847 inc edi		; DEBUG: {Register}/EDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1804A1849 mov ecx,edi		; DEBUG: {Register}/ECX {Register}/EDI ||| None | 0 | None ||| N/A | N/A
		0x1804A184B jmp short 00000001804A1820h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A184D mov rdi,[rsp+0E8h]		; DEBUG: {Register}/RDI {Memory}/None ||| RSP | 232 | None ||| N/A | N/A
		0x1804A1855 movss xmm8,dword ptr [181261F50h]		; DEBUG: {Register}/XMM8 {Memory}/None ||| RIP | 6461726544 | None ||| N/A | N/A
		0x1804A185E mov esi,ebx		; DEBUG: {Register}/ESI {Register}/EBX ||| None | 0 | None ||| N/A | N/A
		0x1804A1860 movss xmm9,dword ptr [181261D44h]		; DEBUG: {Register}/XMM9 {Memory}/None ||| RIP | 6461726020 | None ||| N/A | N/A
		0x1804A1869 xorps xmm10,xmm10		; DEBUG: {Register}/XMM10 {Register}/XMM10 ||| None | 0 | None ||| N/A | N/A
		0x1804A186D nop dword ptr [rax]		; DEBUG: {Memory}/None {Register}/None ||| RAX | 0 | None ||| N/A | N/A
		0x1804A1870 test r13,r13		; DEBUG: {Register}/R13 {Register}/R13 ||| None | 0 | None ||| N/A | N/A
		0x1804A1873 je near ptr 00000001804A1CCEh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A1879 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1804A187C mov edx,esi		; DEBUG: {Register}/EDX {Register}/ESI ||| None | 0 | None ||| N/A | N/A
		0x1804A187E mov rcx,r13		; DEBUG: {Register}/RCX {Register}/R13 ||| None | 0 | None ||| N/A | N/A
		0x1804A1881 call 000000018029AA10h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A1886 movd xmm6,eax		; DEBUG: {Register}/XMM6 {Register}/EAX ||| None | 0 | None ||| N/A | N/A
		0x1804A188A cvtdq2ps xmm6,xmm6		; DEBUG: {Register}/XMM6 {Register}/XMM6 ||| None | 0 | None ||| N/A | N/A
		0x1804A188D test rdi,rdi		; DEBUG: {Register}/RDI {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x1804A1890 je near ptr 00000001804A1CCEh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A1896 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1804A1899 mov edx,esi		; DEBUG: {Register}/EDX {Register}/ESI ||| None | 0 | None ||| N/A | N/A
		0x1804A189B mov rcx,rdi		; DEBUG: {Register}/RCX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x1804A189E call 000000018029AA10h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A18A3 mov rcx,[18188DA20h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468196896 | None ||| N/A | N/A
		0x1804A18AA movd xmm7,eax		; DEBUG: {Register}/XMM7 {Register}/EAX ||| None | 0 | None ||| N/A | N/A
		0x1804A18AE test byte ptr [rcx+127h],2		; DEBUG: {Memory}/None {Immediate8}/None ||| RCX | 295 | None ||| N/A | 2
		0x1804A18B5 cvtdq2ps xmm7,xmm7		; DEBUG: {Register}/XMM7 {Register}/XMM7 ||| None | 0 | None ||| N/A | N/A
		0x1804A18B8 je short 00000001804A18C8h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A18BA cmp dword ptr [rcx+0D8h],0		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RCX | 216 | None ||| N/A | 0
		0x1804A18C1 jne short 00000001804A18C8h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A18C3 call 000000018010EAF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A18C8 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1804A18CA movaps xmm0,xmm6		; DEBUG: {Register}/XMM0 {Register}/XMM6 ||| None | 0 | None ||| N/A | N/A
		0x1804A18CD call 0000000180E9C850h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A18D2 mov [rsp+0E0h],eax		; DEBUG: {Memory}/None {Register}/EAX ||| RSP | 224 | None ||| N/A | N/A
		0x1804A18D9 mov rax,[rbp+28h]		; DEBUG: {Register}/RAX {Memory}/None ||| RBP | 40 | None ||| N/A | N/A
		0x1804A18DD test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1804A18E0 je near ptr 00000001804A1CCEh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A18E6 mov r14d,esi		; DEBUG: {Register}/R14D {Register}/ESI ||| None | 0 | None ||| N/A | N/A
		0x1804A18E9 cmp esi,[rax+18h]		; DEBUG: {Register}/ESI {Memory}/None ||| RAX | 24 | None ||| N/A | N/A
		0x1804A18EC jae near ptr 00000001804A1D22h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A18F2 mov rdi,[rax+r14*8+20h]		; DEBUG: {Register}/RDI {Memory}/None ||| RAX | 32 | R14 ||| N/A | N/A
		0x1804A18F7 lea rcx,[rsp+30h]		; DEBUG: {Register}/RCX {Memory}/None ||| RSP | 48 | None ||| N/A | N/A
		0x1804A18FC xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1804A18FE call 0000000180B28BA0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A1903 test rdi,rdi		; DEBUG: {Register}/RDI {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x1804A1906 je near ptr 00000001804A1CCEh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A190C movups xmm0,[rax]		; DEBUG: {Register}/XMM0 {Memory}/None ||| RAX | 0 | None ||| N/A | N/A
		0x1804A190F xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1804A1912 lea rdx,[rsp+20h]		; DEBUG: {Register}/RDX {Memory}/None ||| RSP | 32 | None ||| N/A | N/A
		0x1804A1917 mov rcx,rdi		; DEBUG: {Register}/RCX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x1804A191A movaps [rsp+20h],xmm0		; DEBUG: {Memory}/None {Register}/XMM0 ||| RSP | 32 | None ||| N/A | N/A
		0x1804A191F call 0000000181198A80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A1924 mov rax,[rbp+28h]		; DEBUG: {Register}/RAX {Memory}/None ||| RBP | 40 | None ||| N/A | N/A
		0x1804A1928 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1804A192B je near ptr 00000001804A1CCEh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A1931 cmp ebx,[rax+18h]		; DEBUG: {Register}/EBX {Memory}/None ||| RAX | 24 | None ||| N/A | N/A
		0x1804A1934 jae near ptr 00000001804A1D0Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A193A movsxd r12,ebx		; DEBUG: {Register}/R12 {Register}/EBX ||| None | 0 | None ||| N/A | N/A
		0x1804A193D mov rdi,[rax+r12*8+20h]		; DEBUG: {Register}/RDI {Memory}/None ||| RAX | 32 | R12 ||| N/A | N/A
		0x1804A1942 mov rax,[18189D898h]		; DEBUG: {Register}/RAX {Memory}/None ||| RIP | 6468262040 | None ||| N/A | N/A
		0x1804A1949 test byte ptr [rax+127h],2		; DEBUG: {Memory}/None {Immediate8}/None ||| RAX | 295 | None ||| N/A | 2
		0x1804A1950 je short 00000001804A196Ah		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A1952 cmp dword ptr [rax+0D8h],0		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RAX | 216 | None ||| N/A | 0
		0x1804A1959 jne short 00000001804A196Ah		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A195B mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1804A195E call 000000018010EAF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A1963 mov rax,[18189D898h]		; DEBUG: {Register}/RAX {Memory}/None ||| RIP | 6468262040 | None ||| N/A | N/A
		0x1804A196A mov rax,[rax+0B8h]		; DEBUG: {Register}/RAX {Memory}/None ||| RAX | 184 | None ||| N/A | N/A
		0x1804A1971 mov r8,[rax]		; DEBUG: {Register}/R8 {Memory}/None ||| RAX | 0 | None ||| N/A | N/A
		0x1804A1974 test r8,r8		; DEBUG: {Register}/R8 {Register}/R8 ||| None | 0 | None ||| N/A | N/A
		0x1804A1977 je near ptr 00000001804A1CCEh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A197D cmp esi,[r8+18h]		; DEBUG: {Register}/ESI {Memory}/None ||| R8 | 24 | None ||| N/A | N/A
		0x1804A1981 jae near ptr 00000001804A1CFCh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A1987 mov ecx,[r8+r14*4+20h]		; DEBUG: {Register}/ECX {Memory}/None ||| R8 | 32 | R14 ||| N/A | N/A
		0x1804A198C xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1804A198E call 00000001802D1410h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A1993 test rdi,rdi		; DEBUG: {Register}/RDI {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x1804A1996 je near ptr 00000001804A1CCEh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A199C xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1804A199F mov rdx,rax		; DEBUG: {Register}/RDX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1804A19A2 mov rcx,rdi		; DEBUG: {Register}/RCX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x1804A19A5 call 000000018060D730h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A19AA movaps xmm0,xmm6		; DEBUG: {Register}/XMM0 {Register}/XMM6 ||| None | 0 | None ||| N/A | N/A
		0x1804A19AD andps xmm0,xmm8		; DEBUG: {Register}/XMM0 {Register}/XMM8 ||| None | 0 | None ||| N/A | N/A
		0x1804A19B1 comiss xmm9,xmm0		; DEBUG: {Register}/XMM9 {Register}/XMM0 ||| None | 0 | None ||| N/A | N/A
		0x1804A19B5 ja near ptr 00000001804A1B5Eh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A19BB comiss xmm6,xmm10		; DEBUG: {Register}/XMM6 {Register}/XMM10 ||| None | 0 | None ||| N/A | N/A
		0x1804A19BF mov rax,[rbp+28h]		; DEBUG: {Register}/RAX {Memory}/None ||| RBP | 40 | None ||| N/A | N/A
		0x1804A19C3 ja short 00000001804A1A32h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A19C5 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1804A19C8 je near ptr 00000001804A1CCEh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A19CE cmp ebx,[rax+18h]		; DEBUG: {Register}/EBX {Memory}/None ||| RAX | 24 | None ||| N/A | N/A
		0x1804A19D1 jae near ptr 00000001804A1C82h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A19D7 mov rdi,[rax+r12*8+20h]		; DEBUG: {Register}/RDI {Memory}/None ||| RAX | 32 | R12 ||| N/A | N/A
		0x1804A19DC test rdi,rdi		; DEBUG: {Register}/RDI {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x1804A19DF je near ptr 00000001804A1CCEh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A19E5 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1804A19E7 mov rcx,rdi		; DEBUG: {Register}/RCX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x1804A19EA call 000000018060CC90h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A19EF xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1804A19F1 lea rcx,[rsp+0E0h]		; DEBUG: {Register}/RCX {Memory}/None ||| RSP | 224 | None ||| N/A | N/A
		0x1804A19F9 mov r14,rax		; DEBUG: {Register}/R14 {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1804A19FC call 0000000180E86110h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A1A01 mov rcx,[181883F70h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468157296 | None ||| N/A | N/A
		0x1804A1A08 mov r15,rax		; DEBUG: {Register}/R15 {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1804A1A0B test byte ptr [rcx+127h],2		; DEBUG: {Memory}/None {Immediate8}/None ||| RCX | 295 | None ||| N/A | 2
		0x1804A1A12 je short 00000001804A1A22h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A1A14 cmp dword ptr [rcx+0D8h],0		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RCX | 216 | None ||| N/A | 0
		0x1804A1A1B jne short 00000001804A1A22h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A1A1D call 000000018010EAF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A1A22 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1804A1A25 mov rdx,r15		; DEBUG: {Register}/RDX {Register}/R15 ||| None | 0 | None ||| N/A | N/A
		0x1804A1A28 mov rcx,r14		; DEBUG: {Register}/RCX {Register}/R14 ||| None | 0 | None ||| N/A | N/A
		0x1804A1A2B call 0000000180D4D090h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A1A30 jmp short 00000001804A1AA4h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A1A32 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1804A1A35 je near ptr 00000001804A1CCEh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A1A3B cmp ebx,[rax+18h]		; DEBUG: {Register}/EBX {Memory}/None ||| RAX | 24 | None ||| N/A | N/A
		0x1804A1A3E jae near ptr 00000001804A1CBBh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A1A44 mov rdi,[rax+r12*8+20h]		; DEBUG: {Register}/RDI {Memory}/None ||| RAX | 32 | R12 ||| N/A | N/A
		0x1804A1A49 test rdi,rdi		; DEBUG: {Register}/RDI {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x1804A1A4C je near ptr 00000001804A1CCEh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A1A52 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1804A1A54 mov rcx,rdi		; DEBUG: {Register}/RCX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x1804A1A57 call 000000018060CC90h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A1A5C xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1804A1A5E lea rcx,[rsp+0E0h]		; DEBUG: {Register}/RCX {Memory}/None ||| RSP | 224 | None ||| N/A | N/A
		0x1804A1A66 mov r14,rax		; DEBUG: {Register}/R14 {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1804A1A69 call 0000000180E86110h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A1A6E mov rcx,[181883F70h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468157296 | None ||| N/A | N/A
		0x1804A1A75 mov r15,rax		; DEBUG: {Register}/R15 {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1804A1A78 test byte ptr [rcx+127h],2		; DEBUG: {Memory}/None {Immediate8}/None ||| RCX | 295 | None ||| N/A | 2
		0x1804A1A7F je short 00000001804A1A8Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A1A81 cmp dword ptr [rcx+0D8h],0		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RCX | 216 | None ||| N/A | 0
		0x1804A1A88 jne short 00000001804A1A8Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A1A8A call 000000018010EAF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A1A8F mov rdx,[18187FCB0h]		; DEBUG: {Register}/RDX {Memory}/None ||| RIP | 6468140208 | None ||| N/A | N/A
		0x1804A1A96 xor r9d,r9d		; DEBUG: {Register}/R9D {Register}/R9D ||| None | 0 | None ||| N/A | N/A
		0x1804A1A99 mov r8,r15		; DEBUG: {Register}/R8 {Register}/R15 ||| None | 0 | None ||| N/A | N/A
		0x1804A1A9C mov rcx,r14		; DEBUG: {Register}/RCX {Register}/R14 ||| None | 0 | None ||| N/A | N/A
		0x1804A1A9F call 0000000180D4D6E0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A1AA4 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1804A1AA7 mov rdx,rax		; DEBUG: {Register}/RDX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1804A1AAA mov rcx,rdi		; DEBUG: {Register}/RCX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x1804A1AAD call 000000018060D730h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A1AB2 comiss xmm7,xmm6		; DEBUG: {Register}/XMM7 {Register}/XMM6 ||| None | 0 | None ||| N/A | N/A
		0x1804A1AB5 jbe short 00000001804A1B2Eh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A1AB7 mov rcx,[18188DA20h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468196896 | None ||| N/A | N/A
		0x1804A1ABE test byte ptr [rcx+127h],2		; DEBUG: {Memory}/None {Immediate8}/None ||| RCX | 295 | None ||| N/A | 2
		0x1804A1AC5 je short 00000001804A1AD5h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A1AC7 cmp dword ptr [rcx+0D8h],0		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RCX | 216 | None ||| N/A | 0
		0x1804A1ACE jne short 00000001804A1AD5h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A1AD0 call 000000018010EAF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A1AD5 movaps xmm0,xmm6		; DEBUG: {Register}/XMM0 {Register}/XMM6 ||| None | 0 | None ||| N/A | N/A
		0x1804A1AD8 subss xmm0,xmm7		; DEBUG: {Register}/XMM0 {Register}/XMM7 ||| None | 0 | None ||| N/A | N/A
		0x1804A1ADC andps xmm0,xmm8		; DEBUG: {Register}/XMM0 {Register}/XMM8 ||| None | 0 | None ||| N/A | N/A
		0x1804A1AE0 comiss xmm0,xmm9		; DEBUG: {Register}/XMM0 {Register}/XMM9 ||| None | 0 | None ||| N/A | N/A
		0x1804A1AE4 jbe short 00000001804A1B2Eh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A1AE6 mov rax,[rbp+28h]		; DEBUG: {Register}/RAX {Memory}/None ||| RBP | 40 | None ||| N/A | N/A
		0x1804A1AEA test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1804A1AED je near ptr 00000001804A1CCEh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A1AF3 cmp ebx,[rax+18h]		; DEBUG: {Register}/EBX {Memory}/None ||| RAX | 24 | None ||| N/A | N/A
		0x1804A1AF6 jae near ptr 00000001804A1C95h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A1AFC mov rdi,[rax+r12*8+20h]		; DEBUG: {Register}/RDI {Memory}/None ||| RAX | 32 | R12 ||| N/A | N/A
		0x1804A1B01 lea rcx,[rsp+40h]		; DEBUG: {Register}/RCX {Memory}/None ||| RSP | 64 | None ||| N/A | N/A
		0x1804A1B06 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1804A1B08 call 0000000180B28B80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A1B0D test rdi,rdi		; DEBUG: {Register}/RDI {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x1804A1B10 je near ptr 00000001804A1CCEh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A1B16 movups xmm0,[rax]		; DEBUG: {Register}/XMM0 {Memory}/None ||| RAX | 0 | None ||| N/A | N/A
		0x1804A1B19 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1804A1B1C lea rdx,[rsp+20h]		; DEBUG: {Register}/RDX {Memory}/None ||| RSP | 32 | None ||| N/A | N/A
		0x1804A1B21 mov rcx,rdi		; DEBUG: {Register}/RCX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x1804A1B24 movaps [rsp+20h],xmm0		; DEBUG: {Memory}/None {Register}/XMM0 ||| RSP | 32 | None ||| N/A | N/A
		0x1804A1B29 call 0000000181198A80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A1B2E mov rax,[rbp+30h]		; DEBUG: {Register}/RAX {Memory}/None ||| RBP | 48 | None ||| N/A | N/A
		0x1804A1B32 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1804A1B35 je short 00000001804A1B5Ch		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A1B37 cmp ebx,[rax+18h]		; DEBUG: {Register}/EBX {Memory}/None ||| RAX | 24 | None ||| N/A | N/A
		0x1804A1B3A jge short 00000001804A1B5Ch		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A1B3C jae near ptr 00000001804A1CA8h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A1B42 mov rcx,[rax+r12*8+20h]		; DEBUG: {Register}/RCX {Memory}/None ||| RAX | 32 | R12 ||| N/A | N/A
		0x1804A1B47 test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x1804A1B4A je near ptr 00000001804A1CCEh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A1B50 cvttss2si edx,xmm6		; DEBUG: {Register}/EDX {Register}/XMM6 ||| None | 0 | None ||| N/A | N/A
		0x1804A1B54 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1804A1B57 call 00000001807261D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A1B5C inc ebx		; DEBUG: {Register}/EBX {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1804A1B5E inc esi		; DEBUG: {Register}/ESI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1804A1B60 cmp esi,8		; DEBUG: {Register}/ESI {Immediate8to32}/None ||| None | 0 | None ||| N/A | 8
		0x1804A1B63 jge short 00000001804A1B72h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A1B65 mov rdi,[rsp+0E8h]		; DEBUG: {Register}/RDI {Memory}/None ||| RSP | 232 | None ||| N/A | N/A
		0x1804A1B6D jmp near ptr 00000001804A1870h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A1B72 mov rax,[rbp+28h]		; DEBUG: {Register}/RAX {Memory}/None ||| RBP | 40 | None ||| N/A | N/A
		0x1804A1B76 mov edx,ebx		; DEBUG: {Register}/EDX {Register}/EBX ||| None | 0 | None ||| N/A | N/A
		0x1804A1B78 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1804A1B7B je near ptr 00000001804A1CCEh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A1B81 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1804A1B84 cmp edx,[rax+18h]		; DEBUG: {Register}/EDX {Memory}/None ||| RAX | 24 | None ||| N/A | N/A
		0x1804A1B87 jge near ptr 00000001804A1C20h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A1B8D test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x1804A1B90 je near ptr 00000001804A1CCEh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A1B96 movsxd rdi,ebx		; DEBUG: {Register}/RDI {Register}/EBX ||| None | 0 | None ||| N/A | N/A
		0x1804A1B99 cmp ebx,[rcx+18h]		; DEBUG: {Register}/EBX {Memory}/None ||| RCX | 24 | None ||| N/A | N/A
		0x1804A1B9C jae near ptr 00000001804A1CE9h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A1BA2 mov rsi,[rcx+rdi*8+20h]		; DEBUG: {Register}/RSI {Memory}/None ||| RCX | 32 | RDI ||| N/A | N/A
		0x1804A1BA7 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1804A1BA9 lea rcx,[rsp+40h]		; DEBUG: {Register}/RCX {Memory}/None ||| RSP | 64 | None ||| N/A | N/A
		0x1804A1BAE call 0000000180B28BA0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A1BB3 test rsi,rsi		; DEBUG: {Register}/RSI {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x1804A1BB6 je near ptr 00000001804A1CCEh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A1BBC movups xmm0,[rax]		; DEBUG: {Register}/XMM0 {Memory}/None ||| RAX | 0 | None ||| N/A | N/A
		0x1804A1BBF xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1804A1BC2 lea rdx,[rsp+20h]		; DEBUG: {Register}/RDX {Memory}/None ||| RSP | 32 | None ||| N/A | N/A
		0x1804A1BC7 mov rcx,rsi		; DEBUG: {Register}/RCX {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x1804A1BCA movaps [rsp+20h],xmm0		; DEBUG: {Memory}/None {Register}/XMM0 ||| RSP | 32 | None ||| N/A | N/A
		0x1804A1BCF call 0000000181198A80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A1BD4 mov rax,[rbp+28h]		; DEBUG: {Register}/RAX {Memory}/None ||| RBP | 40 | None ||| N/A | N/A
		0x1804A1BD8 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1804A1BDB je near ptr 00000001804A1CCEh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A1BE1 cmp ebx,[rax+18h]		; DEBUG: {Register}/EBX {Memory}/None ||| RAX | 24 | None ||| N/A | N/A
		0x1804A1BE4 jae near ptr 00000001804A1CD6h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A1BEA mov rcx,[rax+rdi*8+20h]		; DEBUG: {Register}/RCX {Memory}/None ||| RAX | 32 | RDI ||| N/A | N/A
		0x1804A1BEF test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x1804A1BF2 je near ptr 00000001804A1CCEh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A1BF8 mov rdx,[18186A698h]		; DEBUG: {Register}/RDX {Memory}/None ||| RIP | 6468052632 | None ||| N/A | N/A
		0x1804A1BFF xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1804A1C02 call 000000018060D730h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A1C07 mov rax,[rbp+28h]		; DEBUG: {Register}/RAX {Memory}/None ||| RBP | 40 | None ||| N/A | N/A
		0x1804A1C0B inc ebx		; DEBUG: {Register}/EBX {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1804A1C0D mov edx,ebx		; DEBUG: {Register}/EDX {Register}/EBX ||| None | 0 | None ||| N/A | N/A
		0x1804A1C0F mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1804A1C12 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1804A1C15 je near ptr 00000001804A1CCEh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A1C1B jmp near ptr 00000001804A1B84h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A1C20 movaps xmm10,[rsp+50h]		; DEBUG: {Register}/XMM10 {Memory}/None ||| RSP | 80 | None ||| N/A | N/A
		0x1804A1C26 movaps xmm9,[rsp+60h]		; DEBUG: {Register}/XMM9 {Memory}/None ||| RSP | 96 | None ||| N/A | N/A
		0x1804A1C2C movaps xmm8,[rsp+70h]		; DEBUG: {Register}/XMM8 {Memory}/None ||| RSP | 112 | None ||| N/A | N/A
		0x1804A1C32 movaps xmm7,[rsp+80h]		; DEBUG: {Register}/XMM7 {Memory}/None ||| RSP | 128 | None ||| N/A | N/A
		0x1804A1C3A movaps xmm6,[rsp+90h]		; DEBUG: {Register}/XMM6 {Memory}/None ||| RSP | 144 | None ||| N/A | N/A
		0x1804A1C42 mov r15,[rsp+0A0h]		; DEBUG: {Register}/R15 {Memory}/None ||| RSP | 160 | None ||| N/A | N/A
		0x1804A1C4A mov r14,[rsp+0A8h]		; DEBUG: {Register}/R14 {Memory}/None ||| RSP | 168 | None ||| N/A | N/A
		0x1804A1C52 mov r12,[rsp+0B0h]		; DEBUG: {Register}/R12 {Memory}/None ||| RSP | 176 | None ||| N/A | N/A
		0x1804A1C5A mov rsi,[rsp+0F0h]		; DEBUG: {Register}/RSI {Memory}/None ||| RSP | 240 | None ||| N/A | N/A
		0x1804A1C62 add rsp,0B8h		; DEBUG: {Register}/RSP {Immediate32to64}/None ||| None | 0 | None ||| N/A | 184
		0x1804A1C69 pop r13		; DEBUG: {Register}/R13 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1804A1C6B pop rdi		; DEBUG: {Register}/RDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1804A1C6C pop rbp		; DEBUG: {Register}/RBP {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1804A1C6D pop rbx		; DEBUG: {Register}/RBX {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1804A1C6E ret		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1804A1C6F call 000000018012A7F0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A1C74 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1804A1C77 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1804A1C7A xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1804A1C7C call 000000018012BD50h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A1C81 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.Void CustomizeMiniGameStatus::SetCorrectParam(MiniGameCustomInfo,MiniGameCustomInfo):
		End of function at 0x1804A1C82
		Absolute End is at 0x1804A1C82
		Identified Jump Destination addresses:
			0x1804A1AA4
		0x1804A1760: Moves nowInfo (type MiniGameCustomInfo) from register rdx to the stack at offset 16 (0x10)
		0x1804A1765: Saves the content of rbx to the stack
		0x1804A1766: Saves the content of rbp to the stack
		0x1804A1767: Saves the content of rdi to the stack
		0x1804A1768: Saves the content of r13 to the stack
		0x1804A1771: Compares {Unknown Global at 0x18183E61A, first ten bytes are [1 0 221 158 1 0 84 62 103 1], or as chars " Ý T>g"} and 0
		0x1804A1778: Copies {'correctInfo' (function parameter, type MiniGameCustomInfo)} from r8 into r13
		0x1804A177B: Copies {'nowInfo' (function parameter, type MiniGameCustomInfo)} from rdx into rdi
		0x1804A177E: Copies {'this' (function parameter, type CustomizeMiniGameStatus)} from rcx into rbp
		0x1804A1781: Jumps to 0x1804A1795 if {Unknown Global at 0x18183E61A, first ten bytes are [1 0 221 158 1 0 84 62 103 1], or as chars " Ý T>g"} != 0

		0x1804A1783: Loads string "q" into register rcx as constant {'constant3' (constant value of type Cpp2IL.Core.Analysis.ResultModels.Il2CppString)}
		0x1804A1789: Attempts to load the il2cpp metadata for this method (method id 0) and init it cpp-side.

		0x1804A1795: [!] Reads field m_afterCorrectionObj from {'this' (function parameter, type CustomizeMiniGameStatus)} and stores in a new local {'m_afterCorrectionObj' (type UnityEngine.GameObject)}

		0x1804A1799: Clears register rbx, yielding zero-local {'local4' (type System.Int32)}
		0x1804A17DD: Moves local4 (type System.Int32) from register rbx to the stack at offset 224 (0xE0)
		0x1804A17E4: [!] Compares {'m_afterCorrectionObj' (type UnityEngine.GameObject)} and 0
		0x1804A17E7: Jumps to 0x1804A1CCE (which throws a NRE) if m_afterCorrectionObj equals 0. Implicitly present in managed code, so ignored here.
		0x1804A17F0: [!] Writes the constant 0x1 into operand True (type UInt64) in register rdx
		0x1804A17F2: [!] Calls managed method System.Void UnityEngine.GameObject::SetActive(System.Boolean) on instance {'m_afterCorrectionObj' (type UnityEngine.GameObject)} with arguments [True]

		0x1804A17F7: [!] Reads field m_arrowObj from {'this' (function parameter, type CustomizeMiniGameStatus)} and stores in a new local {'m_arrowObj' (type UnityEngine.GameObject)}

		0x1804A17FB: [!] Compares {'m_arrowObj' (type UnityEngine.GameObject)} and 0
		0x1804A17FE: Jumps to 0x1804A1CCE (which throws a NRE) if m_arrowObj equals 0. Implicitly present in managed code, so ignored here.
		0x1804A1807: [!] Writes the constant 0x1 into operand True (type UInt64) in register rdx
		0x1804A1809: [!] Calls managed method System.Void UnityEngine.GameObject::SetActive(System.Boolean) on instance {'m_arrowObj' (type UnityEngine.GameObject)} with arguments [True]

		0x1804A180E: [!] Reads field m_correctIcon from {'this' (function parameter, type CustomizeMiniGameStatus)} and stores in a new local {'m_correctIcon' (type UICustomizeStatusIcon[])}

		0x1804A1812: [!] Compares {'m_correctIcon' (type UICustomizeStatusIcon[])} and 0
		0x1804A1815: Jumps to 0x1804A1855 (which is an if statement's body) if m_correctIcon equals 0 ;  - Increasing indentation - is standard if, unimportant is False

		0x1804A1817: Copies {'local4' (type System.Int32)} from rbx into rdi
		0x1804A1819: Copies {'local4' (type System.Int32)} from rbx into rcx

		Potential Loop Start (0x1804A1820):
		0x1804A1820: Reads the length of the array "{'m_correctIcon' (type UICustomizeStatusIcon[])}" and stores it in new local {'length' (type System.Int32)} in register rax
		0x1804A1823: [!] Compares {'local4' (type System.Int32)} and {'length' (type System.Int32)}
		0x1804A1825: Jumps to 0x1804A184D (which is an if statement's body) if {'local4' (type System.Int32)} is greater than or equal to {'length' (type System.Int32)} ;  - Increasing indentation - is standard if, unimportant is False

		0x1804A1827: [!] Compares {'local4' (type System.Int32)} and {'length' (type System.Int32)}
		0x1804A1829: Jumps to 0x1804A1C6F (which throws a NRE) if {'local4' (type System.Int32)} is greater than or equal to {'length' (type System.Int32)}. Implicitly present in managed code, so ignored here.
		0x1804A182F: Copies {'local4' (type System.Int32)} from rdi into rax
		0x1804A1832: Copies the element in the array {'m_correctIcon' (type UICustomizeStatusIcon[])} at the index specified by {'local4' (type System.Int32)} into new local {'uICustomizeStatusIcon' (type UICustomizeStatusIcon)}
		0x1804A1837: [!] Compares {'uICustomizeStatusIcon' (type UICustomizeStatusIcon)} and 0
		0x1804A183A: Jumps to 0x1804A1CCE (which throws a NRE) if uICustomizeStatusIcon equals 0. Implicitly present in managed code, so ignored here.
		0x1804A1842: [!] Calls managed method System.Void UICustomizeStatusIcon::Init() on instance {'uICustomizeStatusIcon' (type UICustomizeStatusIcon)}

		0x1804A1847: [!] Adds 1 to the value {'local4' (type System.Int32)}, stored in rdi
		0x1804A1849: Copies {'local4' (type System.Int32)} from rdi into rcx
		0x1804A184B: Jumps to 0x1804A1820 - which is still in this function, but further up. Probably indicative that this is a loop.
		0x1804A184D: Reads unknown value in stack, offset 232 (0xE8) and stores the pointer in register rdi as new constant constant10
		0x1804A1855: Reads {Unknown Global at 0x181261F50, first ten bytes are [255 255 255 127 255 255 255 127 255 255], or as chars "ÿÿÿÿÿÿÿÿ"} into register xmm8 as a constant constant11
		0x1804A185E: Copies {'local4' (type System.Int32)} from rbx into rsi
		0x1804A1860: Reads {Unknown Global at 0x181261D44, first ten bytes are [10 215 35 60 205 204 76 61 123 20], or as chars "
×#<ÍÌL={"} into register xmm9 as a constant constant12
		0x1804A1869: Clears register xmm10, yielding zero-local {'local12' (type System.Int32)}

		Potential Loop Start (0x1804A1870):
		0x1804A1870: [!] Compares {'correctInfo' (function parameter, type MiniGameCustomInfo)} and 0
		0x1804A1873: Jumps to 0x1804A1CCE (which throws a NRE) if correctInfo equals 0. Implicitly present in managed code, so ignored here.
		0x1804A187C: Copies {'local4' (type System.Int32)} from rsi into rdx
		0x1804A187E: Copies {'correctInfo' (function parameter, type MiniGameCustomInfo)} from r13 into rcx
		0x1804A1881: [!] Calls managed method System.Int32 MiniGameCustomInfo::GetLvParam(EMinigameParamCustom) on instance {'correctInfo' (function parameter, type MiniGameCustomInfo)} with arguments [{'local4' (type System.Int32)}] and stores the result in {'lvParam' (type System.Int32)}

		0x1804A188D: [!] Compares {'nowInfo' (function parameter, type MiniGameCustomInfo)} and 0
		0x1804A1890: Jumps to 0x1804A1CCE (which throws a NRE) if nowInfo equals 0. Implicitly present in managed code, so ignored here.
		0x1804A1899: Copies {'local4' (type System.Int32)} from rsi into rdx
		0x1804A189B: Copies {'nowInfo' (function parameter, type MiniGameCustomInfo)} from rdi into rcx
		0x1804A189E: [!] Calls managed method System.Int32 MiniGameCustomInfo::GetLvParam(EMinigameParamCustom) on instance {'nowInfo' (function parameter, type MiniGameCustomInfo)} with arguments [{'local4' (type System.Int32)}] and stores the result in {'lvParam2' (type System.Int32)}

		0x1804A18A3: Loads the type definition for managed type UnityEngine.Mathf as a constant "Mathf" in rcx
		0x1804A18AE: Compares "{il2cpp field on {'Mathf' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" and 2
		0x1804A18B8: Jumps to 0x1804A18C8 if "{il2cpp field on {'Mathf' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" equals 2

		0x1804A18BA: Compares "{il2cpp field on {'Mathf' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" and 0
		0x1804A18C1: Jumps to 0x1804A18C8 if "{il2cpp field on {'Mathf' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" != 0

		0x1804A18C3: Calls the il2cpp cctor for the type UnityEngine.Mathf
		0x1804A18CD: [!] Calls static managed method System.Int32 UnityEngine.Mathf::RoundToInt(System.Single) and stores the result in {'int32' (type System.Int32)} ;  - parameters do not match, but there is only one function at this address.

		0x1804A18D2: Moves int32 (type System.Int32) from register rax to the stack at offset 224 (0xE0)
		0x1804A18D9: [!] Reads field m_correctLabel from {'this' (function parameter, type CustomizeMiniGameStatus)} and stores in a new local {'m_correctLabel' (type UILabel[])}

		0x1804A18DD: [!] Compares {'m_correctLabel' (type UILabel[])} and 0
		0x1804A18E0: Jumps to 0x1804A1CCE (which throws a NRE) if m_correctLabel equals 0. Implicitly present in managed code, so ignored here.
		0x1804A18E6: Copies {'local4' (type System.Int32)} from rsi into r14
		0x1804A18E9: [!] Compares {'local4' (type System.Int32)} and {Property System.Int32 System.Array::Length() on {'m_correctLabel' (type UILabel[])}}
		0x1804A18EC: Jumps to 0x1804A1D22 (which throws a NRE) if {'local4' (type System.Int32)} is greater than or equal to {Property System.Int32 System.Array::Length() on {'m_correctLabel' (type UILabel[])}}. Implicitly present in managed code, so ignored here.
		0x1804A18F2: Copies the element in the array {'m_correctLabel' (type UILabel[])} at the index specified by {'local4' (type System.Int32)} into new local {'uILabel' (type UILabel)}
		0x1804A18F7: Loads a pointer to stack offset 0x30 into register rcx as new constant constant21
		0x1804A18FE: [!] Calls static managed method UnityEngine.Color UnityEngine.Color::get_white() and stores the result in {'white' (type UnityEngine.Color)}

		0x1804A1903: [!] Compares {'uILabel' (type UILabel)} and 0
		0x1804A1906: Jumps to 0x1804A1CCE (which throws a NRE) if uILabel equals 0. Implicitly present in managed code, so ignored here.
		0x1804A190C: Loads the class pointer from white into a constant constant23 in register xmm0
		0x1804A1912: Loads a pointer to stack offset 0x20 into register rdx as new constant constant24
		0x1804A1917: Copies {'uILabel' (type UILabel)} from rdi into rcx
		0x1804A191A: Moves constant23 (type Cpp2IL.Core.Analysis.Il2CppClassIdentifier) from register xmm0 to the stack at offset 32 (0x20) as a new local local24
		0x1804A191F: [!] Calls managed method System.Void UIWidget::set_color(UnityEngine.Color) on instance {'uILabel' (type UILabel)} ;  - parameters do not match, but there is only one function at this address.

		0x1804A1924: [!] Reads field m_correctLabel from {'this' (function parameter, type CustomizeMiniGameStatus)} and stores in a new local {'m_correctLabel2' (type UILabel[])}

		0x1804A1928: [!] Compares {'m_correctLabel2' (type UILabel[])} and 0
		0x1804A192B: Jumps to 0x1804A1CCE (which throws a NRE) if m_correctLabel2 equals 0. Implicitly present in managed code, so ignored here.
		0x1804A1931: [!] Compares {'local4' (type System.Int32)} and {Property System.Int32 System.Array::Length() on {'m_correctLabel2' (type UILabel[])}}
		0x1804A1934: Jumps to 0x1804A1D0F (which throws a NRE) if {'local4' (type System.Int32)} is greater than or equal to {Property System.Int32 System.Array::Length() on {'m_correctLabel2' (type UILabel[])}}. Implicitly present in managed code, so ignored here.
		0x1804A193A: Copies {'local4' (type System.Int32)} from rbx into r12
		0x1804A193D: Copies the element in the array {'m_correctLabel2' (type UILabel[])} at the index specified by {'local4' (type System.Int32)} into new local {'uILabel2' (type UILabel)}
		0x1804A1942: Loads the type definition for managed type CustomizeMiniGameStatus as a constant "CustomizeMiniGameStatus" in rax
		0x1804A1949: Compares "{il2cpp field on {'CustomizeMiniGameStatus' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" and 2
		0x1804A1950: Jumps to 0x1804A196A if "{il2cpp field on {'CustomizeMiniGameStatus' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" equals 2

		0x1804A1952: Compares "{il2cpp field on {'CustomizeMiniGameStatus' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" and 0
		0x1804A1959: Jumps to 0x1804A196A if "{il2cpp field on {'CustomizeMiniGameStatus' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" != 0

		0x1804A195B: Copies {'CustomizeMiniGameStatus' (constant value of type Mono.Cecil.TypeReference)} from rax into rcx
		0x1804A195E: Calls the il2cpp cctor for the type CustomizeMiniGameStatus
		0x1804A1963: Loads the type definition for managed type CustomizeMiniGameStatus as a constant "CustomizeMiniGameStatus" in rax
		0x1804A196A: Loads the pointer to the static fields for CustomizeMiniGameStatus and stores it in constant32 in register rax
		0x1804A1971: [!] Reads the static field EDisplay[] CustomizeMiniGameStatus::scCustomizeTypeName into new local scCustomizeTypeName
		0x1804A1974: [!] Compares {'scCustomizeTypeName' (type EDisplay[])} and 0
		0x1804A1977: Jumps to 0x1804A1CCE (which throws a NRE) if scCustomizeTypeName equals 0. Implicitly present in managed code, so ignored here.
		0x1804A197D: [!] Compares {'local4' (type System.Int32)} and {Property System.Int32 System.Array::Length() on {'scCustomizeTypeName' (type EDisplay[])}}
		0x1804A1981: Jumps to 0x1804A1CFC (which throws a NRE) if {'local4' (type System.Int32)} is greater than or equal to {Property System.Int32 System.Array::Length() on {'scCustomizeTypeName' (type EDisplay[])}}. Implicitly present in managed code, so ignored here.
		0x1804A1987: Copies the element in the array {'scCustomizeTypeName' (type EDisplay[])} at the index specified by {'local4' (type System.Int32)} into new local {'eDisplay' (type EDisplay)}
		0x1804A198E: [!] Calls static managed method System.String DisplayManager::GetMessage(EDisplay) with arguments [{'eDisplay' (type EDisplay)}] and stores the result in {'message' (type System.String)}

		0x1804A1993: [!] Compares {'uILabel2' (type UILabel)} and 0
		0x1804A1996: Jumps to 0x1804A1CCE (which throws a NRE) if uILabel2 equals 0. Implicitly present in managed code, so ignored here.
		0x1804A199F: Copies {'message' (type System.String)} from rax into rdx
		0x1804A19A2: Copies {'uILabel2' (type UILabel)} from rdi into rcx
		0x1804A19A5: [!] Calls managed method System.Void UILabel::set_text(System.String) on instance {'uILabel2' (type UILabel)} with arguments [{'message' (type System.String)}]

		0x1804A19B1: Compares {Unknown Global at 0x181261D44, first ten bytes are [10 215 35 60 205 204 76 61 123 20], or as chars "
×#<ÍÌL={"} and {'constant23' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)}
		0x1804A19B5: Jumps to 0x1804A1B5E if {Unknown Global at 0x181261D44, first ten bytes are [10 215 35 60 205 204 76 61 123 20], or as chars "
×#<ÍÌL={"} is greater than {'constant23' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)}

		0x1804A19BB: [!] Compares  and {'local12' (type System.Int32)}
		0x1804A19BF: [!] Reads field m_correctLabel from {'this' (function parameter, type CustomizeMiniGameStatus)} and stores in a new local {'m_correctLabel3' (type UILabel[])}

		0x1804A19C3: Jumps to 0x1804A1A32 if  is greater than {'local12' (type System.Int32)} ;  - Increasing indentation - is if-else, unimportant is False

		0x1804A19C5: [!] Compares {'m_correctLabel3' (type UILabel[])} and 0
		0x1804A19C8: Jumps to 0x1804A1CCE (which throws a NRE) if m_correctLabel3 equals 0. Implicitly present in managed code, so ignored here.
		0x1804A19CE: [!] Compares {'local4' (type System.Int32)} and {Property System.Int32 System.Array::Length() on {'m_correctLabel3' (type UILabel[])}}
		0x1804A19D1: Jumps to 0x1804A1C82 (which throws a NRE) if {'local4' (type System.Int32)} is greater than or equal to {Property System.Int32 System.Array::Length() on {'m_correctLabel3' (type UILabel[])}}. Implicitly present in managed code, so ignored here.
		0x1804A19D7: Copies the element in the array {'m_correctLabel3' (type UILabel[])} at the index specified by {'local4' (type System.Int32)} into new local {'uILabel3' (type UILabel)}
		0x1804A19DC: [!] Compares {'uILabel3' (type UILabel)} and 0
		0x1804A19DF: Jumps to 0x1804A1CCE (which throws a NRE) if uILabel3 equals 0. Implicitly present in managed code, so ignored here.
		0x1804A19E7: Copies {'uILabel3' (type UILabel)} from rdi into rcx
		0x1804A19EA: [!] Calls managed method System.String UILabel::get_text() on instance {'uILabel3' (type UILabel)} and stores the result in {'text' (type System.String)}

		0x1804A19F1: Loads a pointer to stack offset 0xE0 into register rcx as new constant constant37
		0x1804A19F9: Copies {'text' (type System.String)} from rax into r14
		0x1804A1A01: Loads the type definition for managed type System.String as a constant "String" in rcx
		0x1804A1A08: Copies {'text' (type System.String)} from rax into r15
		0x1804A1A0B: Compares "{il2cpp field on {'String' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" and 2
		0x1804A1A12: Jumps to 0x1804A1A22 if "{il2cpp field on {'String' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" equals 2

		0x1804A1A14: Compares "{il2cpp field on {'String' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" and 0
		0x1804A1A1B: Jumps to 0x1804A1A22 if "{il2cpp field on {'String' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" != 0

		0x1804A1A1D: Calls the il2cpp cctor for the type System.String
		0x1804A1A25: Copies {'text' (type System.String)} from r15 into rdx
		0x1804A1A28: Copies {'text' (type System.String)} from r14 into rcx
		0x1804A1A2B: [!] Calls static managed method System.String System.String::Concat(System.String,System.String) with arguments [{'text' (type System.String)}, {'text' (type System.String)}] and stores the result in {'string' (type System.String)}

		0x1804A1A30: Jumps to 0x1804A1AA4 (which is an function-local jump destination)

		0x1804A1A32: [!] Compares {'m_correctLabel3' (type UILabel[])} and 0
		0x1804A1A35: Jumps to 0x1804A1CCE (which throws a NRE) if m_correctLabel3 equals 0. Implicitly present in managed code, so ignored here.
		0x1804A1A3B: [!] Compares {'local4' (type System.Int32)} and {Property System.Int32 System.Array::Length() on {'m_correctLabel3' (type UILabel[])}}
		0x1804A1A3E: Jumps to 0x1804A1CBB (which throws a NRE) if {'local4' (type System.Int32)} is greater than or equal to {Property System.Int32 System.Array::Length() on {'m_correctLabel3' (type UILabel[])}}. Implicitly present in managed code, so ignored here.
		0x1804A1A44: Copies the element in the array {'m_correctLabel3' (type UILabel[])} at the index specified by {'local4' (type System.Int32)} into new local {'uILabel4' (type UILabel)}
		0x1804A1A49: [!] Compares {'uILabel4' (type UILabel)} and 0
		0x1804A1A4C: Jumps to 0x1804A1CCE (which throws a NRE) if uILabel4 equals 0. Implicitly present in managed code, so ignored here.
		0x1804A1A54: Copies {'uILabel4' (type UILabel)} from rdi into rcx
		0x1804A1A57: [!] Calls managed method System.String UILabel::get_text() on instance {'uILabel4' (type UILabel)} and stores the result in {'text2' (type System.String)}

		0x1804A1A5E: Loads a pointer to stack offset 0xE0 into register rcx as new constant constant45
		0x1804A1A66: Copies {'text2' (type System.String)} from rax into r14
		0x1804A1A6E: Loads the type definition for managed type System.String as a constant "String" in rcx
		0x1804A1A75: Copies {'text2' (type System.String)} from rax into r15
		0x1804A1A78: Compares "{il2cpp field on {'String' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" and 2
		0x1804A1A7F: Jumps to 0x1804A1A8F if "{il2cpp field on {'String' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" equals 2

		0x1804A1A81: Compares "{il2cpp field on {'String' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" and 0
		0x1804A1A88: Jumps to 0x1804A1A8F if "{il2cpp field on {'String' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" != 0

		0x1804A1A8A: Calls the il2cpp cctor for the type System.String
		0x1804A1A8F: Loads the string literal "+" as a constant "constant51" in rdx
		0x1804A1A99: Copies {'text2' (type System.String)} from r15 into r8
		0x1804A1A9C: Copies {'text2' (type System.String)} from r14 into rcx
		0x1804A1A9F: [!] Calls static managed method System.String System.String::Concat(System.String,System.String,System.String) with arguments [{'text2' (type System.String)}, "+", {'text2' (type System.String)}] and stores the result in {'string2' (type System.String)}


		End Of If-Else Block (at 0x1804A1AA4) where the else started at 0x1804A1A32
		0x1804A1AA7: Copies {'string2' (type System.String)} from rax into rdx
		0x1804A1AAA: Copies {'uILabel4' (type UILabel)} from rdi into rcx
		0x1804A1AAD: [!] Calls managed method System.Void UILabel::set_text(System.String) on instance {'uILabel4' (type UILabel)} with arguments [{'string2' (type System.String)}]

		0x1804A1AB2: [!] Compares  against itself
		0x1804A1AB5: Jumps to 0x1804A1B2E if  is less than or equal to  ;  - This is probably a goto, jumping to 0x1804A1B2E which is after end of current block @ 0x1804A1AA4 (started at 0x1804A1A32)

		0x1804A1AB7: Loads the type definition for managed type UnityEngine.Mathf as a constant "Mathf" in rcx
		0x1804A1ABE: Compares "{il2cpp field on {'Mathf' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" and 2
		0x1804A1AC5: Jumps to 0x1804A1AD5 if "{il2cpp field on {'Mathf' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" equals 2 ;  - This is probably a goto, jumping to 0x1804A1AD5 which is after end of current block @ 0x1804A1AA4 (started at 0x1804A1A32)

		0x1804A1AC7: Compares "{il2cpp field on {'Mathf' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" and 0
		0x1804A1ACE: Jumps to 0x1804A1AD5 if "{il2cpp field on {'Mathf' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" != 0 ;  - This is probably a goto, jumping to 0x1804A1AD5 which is after end of current block @ 0x1804A1AA4 (started at 0x1804A1A32)

		0x1804A1AD0: Calls the il2cpp cctor for the type UnityEngine.Mathf
		0x1804A1AE0: Compares {'constant23' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} and {Unknown Global at 0x181261D44, first ten bytes are [10 215 35 60 205 204 76 61 123 20], or as chars "
×#<ÍÌL={"}
		0x1804A1AE4: Jumps to 0x1804A1B2E if {'constant23' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} is less than or equal to {Unknown Global at 0x181261D44, first ten bytes are [10 215 35 60 205 204 76 61 123 20], or as chars "
×#<ÍÌL={"} ;  - This is probably a goto, jumping to 0x1804A1B2E which is after end of current block @ 0x1804A1AA4 (started at 0x1804A1A32)

		0x1804A1AE6: [!] Reads field m_correctLabel from {'this' (function parameter, type CustomizeMiniGameStatus)} and stores in a new local {'m_correctLabel4' (type UILabel[])}

		0x1804A1AEA: [!] Compares {'m_correctLabel4' (type UILabel[])} and 0
		0x1804A1AED: Jumps to 0x1804A1CCE (which throws a NRE) if m_correctLabel4 equals 0. Implicitly present in managed code, so ignored here.
		0x1804A1AF3: [!] Compares {'local4' (type System.Int32)} and {Property System.Int32 System.Array::Length() on {'m_correctLabel4' (type UILabel[])}}
		0x1804A1AF6: Jumps to 0x1804A1C95 (which throws a NRE) if {'local4' (type System.Int32)} is greater than or equal to {Property System.Int32 System.Array::Length() on {'m_correctLabel4' (type UILabel[])}}. Implicitly present in managed code, so ignored here.
		0x1804A1AFC: Copies the element in the array {'m_correctLabel4' (type UILabel[])} at the index specified by {'local4' (type System.Int32)} into new local {'uILabel5' (type UILabel)}
		0x1804A1B01: Loads a pointer to stack offset 0x40 into register rcx as new constant constant58
		0x1804A1B08: [!] Calls static managed method UnityEngine.Color UnityEngine.Color::get_red() and stores the result in {'red' (type UnityEngine.Color)}

		0x1804A1B0D: [!] Compares {'uILabel5' (type UILabel)} and 0
		0x1804A1B10: Jumps to 0x1804A1CCE (which throws a NRE) if uILabel5 equals 0. Implicitly present in managed code, so ignored here.
		0x1804A1B16: Loads the class pointer from red into a constant constant60 in register xmm0
		0x1804A1B1C: Loads a pointer to stack offset 0x20 into register rdx as new constant constant61
		0x1804A1B21: Copies {'uILabel5' (type UILabel)} from rdi into rcx
		0x1804A1B24: Moves constant60 (type Cpp2IL.Core.Analysis.Il2CppClassIdentifier) from register xmm0 to the stack at offset 32 (0x20) as a new local local51
		0x1804A1B29: [!] Calls managed method System.Void UIWidget::set_color(UnityEngine.Color) on instance {'uILabel5' (type UILabel)} ;  - parameters do not match, but there is only one function at this address.

		0x1804A1B2E: [!] Reads field m_correctIcon from {'this' (function parameter, type CustomizeMiniGameStatus)} and stores in a new local {'m_correctIcon2' (type UICustomizeStatusIcon[])}

		0x1804A1B32: [!] Compares {'m_correctIcon2' (type UICustomizeStatusIcon[])} and 0
		0x1804A1B35: Jumps to 0x1804A1B5C if m_correctIcon2 equals 0 ;  - This is probably a goto, jumping to 0x1804A1B5C which is after end of current block @ 0x1804A1AA4 (started at 0x1804A1A32)

		0x1804A1B37: [!] Compares {'local4' (type System.Int32)} and {Property System.Int32 System.Array::Length() on {'m_correctIcon2' (type UICustomizeStatusIcon[])}}
		0x1804A1B3A: Jumps to 0x1804A1B5C if {'local4' (type System.Int32)} is greater than or equal to {Property System.Int32 System.Array::Length() on {'m_correctIcon2' (type UICustomizeStatusIcon[])}} ;  - This is probably a goto, jumping to 0x1804A1B5C which is after end of current block @ 0x1804A1AA4 (started at 0x1804A1A32)

		0x1804A1B3C: Jumps to 0x1804A1CA8 (which throws a NRE) if {'local4' (type System.Int32)} is greater than or equal to {Property System.Int32 System.Array::Length() on {'m_correctIcon2' (type UICustomizeStatusIcon[])}}. Implicitly present in managed code, so ignored here.
		0x1804A1B42: Copies the element in the array {'m_correctIcon2' (type UICustomizeStatusIcon[])} at the index specified by {'local4' (type System.Int32)} into new local {'uICustomizeStatusIcon2' (type UICustomizeStatusIcon)}
		0x1804A1B47: [!] Compares {'uICustomizeStatusIcon2' (type UICustomizeStatusIcon)} and 0
		0x1804A1B4A: Jumps to 0x1804A1CCE (which throws a NRE) if uICustomizeStatusIcon2 equals 0. Implicitly present in managed code, so ignored here.
		0x1804A1B57: [!] Calls managed method System.Void UICustomizeStatusIcon::SetIcon(System.Int32) on instance {'uICustomizeStatusIcon2' (type UICustomizeStatusIcon)} ;  - parameters do not match, but there is only one function at this address.

		0x1804A1B5C: [!] Adds 1 to the value {'local4' (type System.Int32)}, stored in rbx
		0x1804A1B5E: [!] Adds 1 to the value {'local4' (type System.Int32)}, stored in rsi
		0x1804A1B60: [!] Compares {'local4' (type System.Int32)} and 8
		0x1804A1B63: Jumps to 0x1804A1B72 if {'local4' (type System.Int32)} is greater than or equal to 8 ;  - This is probably a goto, jumping to 0x1804A1B72 which is after end of current block @ 0x1804A1AA4 (started at 0x1804A1A32)

		0x1804A1B65: Reads unknown value in stack, offset 232 (0xE8) and stores the pointer in register rdi as new constant constant65
		0x1804A1B6D: Jumps to 0x1804A1870 - which is still in this function, but further up. Probably indicative that this is a loop.
		0x1804A1B72: [!] Reads field m_correctLabel from {'this' (function parameter, type CustomizeMiniGameStatus)} and stores in a new local {'m_correctLabel5' (type UILabel[])}

		0x1804A1B76: Copies {'local4' (type System.Int32)} from rbx into rdx
		0x1804A1B78: [!] Compares {'m_correctLabel5' (type UILabel[])} and 0
		0x1804A1B7B: Jumps to 0x1804A1CCE (which throws a NRE) if m_correctLabel5 equals 0. Implicitly present in managed code, so ignored here.
		0x1804A1B81: Copies {'m_correctLabel5' (type UILabel[])} from rax into rcx

		Potential Loop Start (0x1804A1B84):
		0x1804A1B84: [!] Compares {'local4' (type System.Int32)} and {Property System.Int32 System.Array::Length() on {'m_correctLabel5' (type UILabel[])}}
		0x1804A1B87: Jumps to 0x1804A1C20 if {'local4' (type System.Int32)} is greater than or equal to {Property System.Int32 System.Array::Length() on {'m_correctLabel5' (type UILabel[])}} ;  - Increasing indentation - is while loop, unimportant is False

		0x1804A1B8D: [!] Compares {'m_correctLabel5' (type UILabel[])} and 0
		0x1804A1B90: Jumps to 0x1804A1CCE (which throws a NRE) if m_correctLabel5 equals 0. Implicitly present in managed code, so ignored here.
		0x1804A1B96: Copies {'local4' (type System.Int32)} from rbx into rdi
		0x1804A1B99: [!] Compares {'local4' (type System.Int32)} and {Property System.Int32 System.Array::Length() on {'m_correctLabel5' (type UILabel[])}}
		0x1804A1B9C: Jumps to 0x1804A1CE9 (which throws a NRE) if {'local4' (type System.Int32)} is greater than or equal to {Property System.Int32 System.Array::Length() on {'m_correctLabel5' (type UILabel[])}}. Implicitly present in managed code, so ignored here.
		0x1804A1BA2: Copies the element in the array {'m_correctLabel5' (type UILabel[])} at the index specified by {'local4' (type System.Int32)} into new local {'uILabel6' (type UILabel)}
		0x1804A1BA9: Loads a pointer to stack offset 0x40 into register rcx as new constant constant68
		0x1804A1BAE: [!] Calls static managed method UnityEngine.Color UnityEngine.Color::get_white() and stores the result in {'white2' (type UnityEngine.Color)}

		0x1804A1BB3: [!] Compares {'uILabel6' (type UILabel)} and 0
		0x1804A1BB6: Jumps to 0x1804A1CCE (which throws a NRE) if uILabel6 equals 0. Implicitly present in managed code, so ignored here.
		0x1804A1BBC: Loads the class pointer from white2 into a constant constant70 in register xmm0
		0x1804A1BC2: Loads a pointer to stack offset 0x20 into register rdx as new constant constant71
		0x1804A1BC7: Copies {'uILabel6' (type UILabel)} from rsi into rcx
		0x1804A1BCA: Moves constant70 (type Cpp2IL.Core.Analysis.Il2CppClassIdentifier) from register xmm0 to the stack at offset 32 (0x20) as a new local local60
		0x1804A1BCF: [!] Calls managed method System.Void UIWidget::set_color(UnityEngine.Color) on instance {'uILabel6' (type UILabel)} ;  - parameters do not match, but there is only one function at this address.

		0x1804A1BD4: [!] Reads field m_correctLabel from {'this' (function parameter, type CustomizeMiniGameStatus)} and stores in a new local {'m_correctLabel6' (type UILabel[])}

		0x1804A1BD8: [!] Compares {'m_correctLabel6' (type UILabel[])} and 0
		0x1804A1BDB: Jumps to 0x1804A1CCE (which throws a NRE) if m_correctLabel6 equals 0. Implicitly present in managed code, so ignored here.
		0x1804A1BE1: [!] Compares {'local4' (type System.Int32)} and {Property System.Int32 System.Array::Length() on {'m_correctLabel6' (type UILabel[])}}
		0x1804A1BE4: Jumps to 0x1804A1CD6 (which throws a NRE) if {'local4' (type System.Int32)} is greater than or equal to {Property System.Int32 System.Array::Length() on {'m_correctLabel6' (type UILabel[])}}. Implicitly present in managed code, so ignored here.
		0x1804A1BEA: Copies the element in the array {'m_correctLabel6' (type UILabel[])} at the index specified by {'local4' (type System.Int32)} into new local {'uILabel7' (type UILabel)}
		0x1804A1BEF: [!] Compares {'uILabel7' (type UILabel)} and 0
		0x1804A1BF2: Jumps to 0x1804A1CCE (which throws a NRE) if uILabel7 equals 0. Implicitly present in managed code, so ignored here.
		0x1804A1BF8: Loads the string literal "-----" as a constant "constant74" in rdx
		0x1804A1C02: [!] Calls managed method System.Void UILabel::set_text(System.String) on instance {'uILabel7' (type UILabel)} with arguments ["-----"]

		0x1804A1C07: [!] Reads field m_correctLabel from {'this' (function parameter, type CustomizeMiniGameStatus)} and stores in a new local {'m_correctLabel7' (type UILabel[])}

		0x1804A1C0B: [!] Adds 1 to the value {'local4' (type System.Int32)}, stored in rbx
		0x1804A1C0D: Copies {'local4' (type System.Int32)} from rbx into rdx
		0x1804A1C0F: Copies {'m_correctLabel7' (type UILabel[])} from rax into rcx
		0x1804A1C12: [!] Compares {'m_correctLabel7' (type UILabel[])} and 0
		0x1804A1C15: Jumps to 0x1804A1CCE (which throws a NRE) if m_correctLabel7 equals 0. Implicitly present in managed code, so ignored here.
		0x1804A1C1B: Jumps to 0x1804A1B84 - which is still in this function, but further up. Probably indicative that this is a loop.
		0x1804A1C20: Reads unknown value in stack, offset 80 (0x50) and stores the pointer in register xmm10 as new constant constant76
		0x1804A1C26: Reads unknown value in stack, offset 96 (0x60) and stores the pointer in register xmm9 as new constant constant77
		0x1804A1C2C: Reads unknown value in stack, offset 112 (0x70) and stores the pointer in register xmm8 as new constant constant78
		0x1804A1C32: Reads unknown value in stack, offset 128 (0x80) and stores the pointer in register xmm7 as new constant constant79
		0x1804A1C3A: Reads unknown value in stack, offset 144 (0x90) and stores the pointer in register xmm6 as new constant constant80
		0x1804A1C42: Reads unknown value in stack, offset 160 (0xA0) and stores the pointer in register r15 as new constant constant81
		0x1804A1C4A: Reads unknown value in stack, offset 168 (0xA8) and stores the pointer in register r14 as new constant constant82
		0x1804A1C52: Reads unknown value in stack, offset 176 (0xB0) and stores the pointer in register r12 as new constant constant83
		0x1804A1C5A: Reads unknown value in stack, offset 240 (0xF0) and stores the pointer in register rsi as new constant constant84
		0x1804A1C6E: [!] Returns from the function

		0x1804A1C6F: [!] Constructs and throws an exception of kind System.IndexOutOfRangeException

		0x1804A1C74: Copies {'local65' (type System.IndexOutOfRangeException)} from rax into rcx
		0x1804A1C7C: [!] Throws {'local65' (type System.IndexOutOfRangeException)}



	Generated Pseudocode:

	Declaring Type: CustomizeMiniGameStatus
	System.Void SetCorrectParam(MiniGameCustomInfo nowInfo, MiniGameCustomInfo correctInfo)
		UnityEngine.GameObject m_afterCorrectionObj = this.m_afterCorrectionObj
		ulong local4 = 0

		m_afterCorrectionObj.SetActive(True) //(Boolean value)
		UnityEngine.GameObject m_arrowObj = this.m_arrowObj

		m_arrowObj.SetActive(True) //(Boolean value)
		UICustomizeStatusIcon[] m_correctIcon = this.m_correctIcon

		if (m_correctIcon != 0)
		    System.Int32 length = m_correctIcon.Length

		    if (local4 < length)
		        UICustomizeStatusIcon uICustomizeStatusIcon = m_correctIcon[local4]

		        uICustomizeStatusIcon.Init()
		        local4 += 1
		    endif
            
		endif
        
		ulong local12 = 0

		System.Int32 lvParam = correctInfo.GetLvParam(local4) //(EMinigameParamCustom type)

		System.Int32 lvParam2 = nowInfo.GetLvParam(local4) //(EMinigameParamCustom type)

		System.Int32 int32 = UnityEngine.Mathf.RoundToInt()
		UILabel[] m_correctLabel = this.m_correctLabel
		UILabel uILabel = m_correctLabel[local4]

		UnityEngine.Color white = UnityEngine.Color.white

		uILabel.set_color()
		UILabel[] m_correctLabel2 = this.m_correctLabel
		UILabel uILabel2 = m_correctLabel2[local4]
		EDisplay[] scCustomizeTypeName = CustomizeMiniGameStatus.scCustomizeTypeName
		EDisplay eDisplay = scCustomizeTypeName[local4]

		System.String message = DisplayManager.GetMessage(eDisplay) //(EDisplay msgId)

		uILabel2.text = message
		UILabel[] m_correctLabel3 = this.m_correctLabel

		if ( <= local12)
		    UILabel uILabel3 = m_correctLabel3[local4]

		    System.String text = uILabel3.text

		    System.String string = System.String.Concat(text, text) //(String str0, String str1)
		else
		    UILabel uILabel4 = m_correctLabel3[local4]

		    System.String text2 = uILabel4.text

		    System.String string2 = System.String.Concat(text2, "+", text2) //(String str0, String str1, String str2)
		endif
        

		uILabel4.text = string2

		if ( <= )
            goto INSN_1804A1B2E
        endif
		UILabel[] m_correctLabel4 = this.m_correctLabel
		UILabel uILabel5 = m_correctLabel4[local4]

		UnityEngine.Color red = UnityEngine.Color.red

		uILabel5.set_color()

		INSN_1804A1B2E:
		UICustomizeStatusIcon[] m_correctIcon2 = this.m_correctIcon

		if (m_correctIcon2 == 0)
            goto INSN_1804A1B5C
        endif

		if (local4 >= m_correctIcon2.Length)
            goto INSN_1804A1B5C
        endif
		UICustomizeStatusIcon uICustomizeStatusIcon2 = m_correctIcon2[local4]

		uICustomizeStatusIcon2.SetIcon()

		INSN_1804A1B5C:
		local4 += 1
		local4 += 1

		if (local4 >= 8)
            goto INSN_1804A1B72
        endif
		endwhile
    
		goto INSN_1804A1CCE
    
		UILabel[] m_correctLabel5 = this.m_correctLabel

		while (local4 < m_correctLabel5.Length)
		UILabel uILabel6 = m_correctLabel5[local4]

		UnityEngine.Color white2 = UnityEngine.Color.white

		uILabel6.set_color()
		UILabel[] m_correctLabel6 = this.m_correctLabel
		UILabel uILabel7 = m_correctLabel6[local4]

		uILabel7.text = "-----"
		UILabel[] m_correctLabel7 = this.m_correctLabel
		local4 += 1
		endwhile
    
		return
		throw new System.IndexOutOfRangeException()
		throw local65


Generated IL:
	Action of type Cpp2IL.Core.Analysis.Actions.x86.Important.CallManagedFunctionAction at (0x1804A18CD) is corrupt (Couldn't get arguments, or actual count (-1) is not equal to expected count (1)) and cannot be created as IL. Aborting here.


Method: System.Void CustomizeMiniGameStatus::SetCustomizePos():	Method Body (x86 ASM):
		0x1804910E0 mov [rsp+8],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RSP | 8 | None ||| N/A | N/A
		0x1804910E5 push rdi		; DEBUG: {Register}/RDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1804910E6 sub rsp,40h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 64
		0x1804910EA mov rbx,rcx		; DEBUG: {Register}/RBX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x1804910ED mov rcx,[rcx+48h]		; DEBUG: {Register}/RCX {Memory}/None ||| RCX | 72 | None ||| N/A | N/A
		0x1804910F1 test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x1804910F4 je short 0000000180491147h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804910F6 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1804910F8 call 0000000180B2EA90h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804910FD mov rdx,[rbx+38h]		; DEBUG: {Register}/RDX {Memory}/None ||| RBX | 56 | None ||| N/A | N/A
		0x180491101 mov rdi,rax		; DEBUG: {Register}/RDI {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180491104 test rdx,rdx		; DEBUG: {Register}/RDX {Register}/RDX ||| None | 0 | None ||| N/A | N/A
		0x180491107 je short 0000000180491147h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180491109 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18049110C lea rcx,[rsp+30h]		; DEBUG: {Register}/RCX {Memory}/None ||| RSP | 48 | None ||| N/A | N/A
		0x180491111 call 0000000180CE2290h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180491116 test rdi,rdi		; DEBUG: {Register}/RDI {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x180491119 je short 0000000180491147h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18049111B movsd xmm0,qword ptr [rax]		; DEBUG: {Register}/XMM0 {Memory}/None ||| RAX | 0 | None ||| N/A | N/A
		0x18049111F lea rdx,[rsp+20h]		; DEBUG: {Register}/RDX {Memory}/None ||| RSP | 32 | None ||| N/A | N/A
		0x180491124 mov eax,[rax+8]		; DEBUG: {Register}/EAX {Memory}/None ||| RAX | 8 | None ||| N/A | N/A
		0x180491127 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18049112A mov rcx,rdi		; DEBUG: {Register}/RCX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x18049112D movsd qword ptr [rsp+20h],xmm0		; DEBUG: {Memory}/None {Register}/XMM0 ||| RSP | 32 | None ||| N/A | N/A
		0x180491133 mov [rsp+28h],eax		; DEBUG: {Memory}/None {Register}/EAX ||| RSP | 40 | None ||| N/A | N/A
		0x180491137 call 0000000180CE2F90h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18049113C mov rbx,[rsp+50h]		; DEBUG: {Register}/RBX {Memory}/None ||| RSP | 80 | None ||| N/A | N/A
		0x180491141 add rsp,40h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 64
		0x180491145 pop rdi		; DEBUG: {Register}/RDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180491146 ret		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180491147 xor ecx,ecx		; DEBUG: {Register}/ECX {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x180491149 call 000000018012BDA0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18049114E int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.Void CustomizeMiniGameStatus::SetCustomizePos():
		End of function at 0x18049114F
		Absolute End is at 0x18049114F
		Identified Jump Destination addresses:

		0x1804910E5: Saves the content of rdi to the stack
		0x1804910EA: Copies {'this' (function parameter, type CustomizeMiniGameStatus)} from rcx into rbx
		0x1804910ED: [!] Reads field m_infoObject from {'this' (function parameter, type CustomizeMiniGameStatus)} and stores in a new local {'m_infoObject' (type UnityEngine.GameObject)}

		0x1804910F1: [!] Compares {'m_infoObject' (type UnityEngine.GameObject)} and 0
		0x1804910F4: Jumps to 0x180491147 (which throws a NRE) if m_infoObject equals 0. Implicitly present in managed code, so ignored here.
		0x1804910F8: [!] Calls managed method UnityEngine.Transform UnityEngine.GameObject::get_transform() on instance {'m_infoObject' (type UnityEngine.GameObject)} and stores the result in {'transform' (type UnityEngine.Transform)}

		0x1804910FD: [!] Reads field m_infoPos from {'this' (function parameter, type CustomizeMiniGameStatus)} and stores in a new local {'m_infoPos' (type UnityEngine.Transform)}

		0x180491101: Copies {'transform' (type UnityEngine.Transform)} from rax into rdi
		0x180491104: [!] Compares {'m_infoPos' (type UnityEngine.Transform)} and 0
		0x180491107: Jumps to 0x180491147 (which throws a NRE) if m_infoPos equals 0. Implicitly present in managed code, so ignored here.
		0x18049110C: Loads a pointer to stack offset 0x30 into register rcx as new constant constant3
		0x180491111: [!] Calls managed method UnityEngine.Vector3 UnityEngine.Transform::get_localPosition() on instance  and stores the result in {'localPosition' (type UnityEngine.Vector3)}

		0x180491116: [!] Compares {'transform' (type UnityEngine.Transform)} and 0
		0x180491119: Jumps to 0x180491147 (which throws a NRE) if transform equals 0. Implicitly present in managed code, so ignored here.
		0x18049111F: Loads a pointer to stack offset 0x20 into register rdx as new constant constant5
		0x180491124: [!] Reads field z from {'localPosition' (type UnityEngine.Vector3)} and stores in a new local {'single' (type System.Single)}

		0x18049112A: Copies {'transform' (type UnityEngine.Transform)} from rdi into rcx
		0x180491133: Moves single (type System.Single) from register rax to the stack at offset 40 (0x28)
		0x180491137: [!] Calls managed method System.Void UnityEngine.Transform::set_localPosition(UnityEngine.Vector3) on instance {'transform' (type UnityEngine.Transform)} ;  - parameters do not match, but there is only one function at this address.

		0x18049113C: Reads unknown value in stack, offset 80 (0x50) and stores the pointer in register rbx as new constant constant6
		0x180491146: [!] Returns from the function

		0x180491149: [!] Constructs and throws an exception of kind System.NullReferenceException




	Generated Pseudocode:

	Declaring Type: CustomizeMiniGameStatus
	System.Void SetCustomizePos()
		UnityEngine.GameObject m_infoObject = this.m_infoObject

		UnityEngine.Transform transform = m_infoObject.transform
		UnityEngine.Transform m_infoPos = this.m_infoPos

		UnityEngine.Vector3 localPosition = .localPosition
		System.Single single = localPosition.z

		transform.set_localPosition()
		return
		throw new System.NullReferenceException()


Generated IL:
	Action of type Cpp2IL.Core.Analysis.Actions.x86.Important.CallManagedFunctionAction at (0x180491111) is corrupt (Method is non-static but don't have an instance) and cannot be created as IL. Aborting here.


Method: System.Void CustomizeMiniGameStatus::SetCorrectPos():	Method Body (x86 ASM):
		0x180490B30 mov [rsp+8],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RSP | 8 | None ||| N/A | N/A
		0x180490B35 push rdi		; DEBUG: {Register}/RDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180490B36 sub rsp,40h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 64
		0x180490B3A mov rbx,rcx		; DEBUG: {Register}/RBX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x180490B3D mov rcx,[rcx+48h]		; DEBUG: {Register}/RCX {Memory}/None ||| RCX | 72 | None ||| N/A | N/A
		0x180490B41 test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x180490B44 je short 0000000180490B97h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180490B46 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180490B48 call 0000000180B2EA90h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180490B4D mov rdx,[rbx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RBX | 64 | None ||| N/A | N/A
		0x180490B51 mov rdi,rax		; DEBUG: {Register}/RDI {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180490B54 test rdx,rdx		; DEBUG: {Register}/RDX {Register}/RDX ||| None | 0 | None ||| N/A | N/A
		0x180490B57 je short 0000000180490B97h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180490B59 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x180490B5C lea rcx,[rsp+30h]		; DEBUG: {Register}/RCX {Memory}/None ||| RSP | 48 | None ||| N/A | N/A
		0x180490B61 call 0000000180CE2290h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180490B66 test rdi,rdi		; DEBUG: {Register}/RDI {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x180490B69 je short 0000000180490B97h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180490B6B movsd xmm0,qword ptr [rax]		; DEBUG: {Register}/XMM0 {Memory}/None ||| RAX | 0 | None ||| N/A | N/A
		0x180490B6F lea rdx,[rsp+20h]		; DEBUG: {Register}/RDX {Memory}/None ||| RSP | 32 | None ||| N/A | N/A
		0x180490B74 mov eax,[rax+8]		; DEBUG: {Register}/EAX {Memory}/None ||| RAX | 8 | None ||| N/A | N/A
		0x180490B77 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x180490B7A mov rcx,rdi		; DEBUG: {Register}/RCX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x180490B7D movsd qword ptr [rsp+20h],xmm0		; DEBUG: {Memory}/None {Register}/XMM0 ||| RSP | 32 | None ||| N/A | N/A
		0x180490B83 mov [rsp+28h],eax		; DEBUG: {Memory}/None {Register}/EAX ||| RSP | 40 | None ||| N/A | N/A
		0x180490B87 call 0000000180CE2F90h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180490B8C mov rbx,[rsp+50h]		; DEBUG: {Register}/RBX {Memory}/None ||| RSP | 80 | None ||| N/A | N/A
		0x180490B91 add rsp,40h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 64
		0x180490B95 pop rdi		; DEBUG: {Register}/RDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180490B96 ret		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180490B97 xor ecx,ecx		; DEBUG: {Register}/ECX {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x180490B99 call 000000018012BDA0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180490B9E int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.Void CustomizeMiniGameStatus::SetCorrectPos():
		End of function at 0x180490B9F
		Absolute End is at 0x180490B9F
		Identified Jump Destination addresses:

		0x180490B35: Saves the content of rdi to the stack
		0x180490B3A: Copies {'this' (function parameter, type CustomizeMiniGameStatus)} from rcx into rbx
		0x180490B3D: [!] Reads field m_infoObject from {'this' (function parameter, type CustomizeMiniGameStatus)} and stores in a new local {'m_infoObject' (type UnityEngine.GameObject)}

		0x180490B41: [!] Compares {'m_infoObject' (type UnityEngine.GameObject)} and 0
		0x180490B44: Jumps to 0x180490B97 (which throws a NRE) if m_infoObject equals 0. Implicitly present in managed code, so ignored here.
		0x180490B48: [!] Calls managed method UnityEngine.Transform UnityEngine.GameObject::get_transform() on instance {'m_infoObject' (type UnityEngine.GameObject)} and stores the result in {'transform' (type UnityEngine.Transform)}

		0x180490B4D: [!] Reads field m_correctPos from {'this' (function parameter, type CustomizeMiniGameStatus)} and stores in a new local {'m_correctPos' (type UnityEngine.Transform)}

		0x180490B51: Copies {'transform' (type UnityEngine.Transform)} from rax into rdi
		0x180490B54: [!] Compares {'m_correctPos' (type UnityEngine.Transform)} and 0
		0x180490B57: Jumps to 0x180490B97 (which throws a NRE) if m_correctPos equals 0. Implicitly present in managed code, so ignored here.
		0x180490B5C: Loads a pointer to stack offset 0x30 into register rcx as new constant constant3
		0x180490B61: [!] Calls managed method UnityEngine.Vector3 UnityEngine.Transform::get_localPosition() on instance  and stores the result in {'localPosition' (type UnityEngine.Vector3)}

		0x180490B66: [!] Compares {'transform' (type UnityEngine.Transform)} and 0
		0x180490B69: Jumps to 0x180490B97 (which throws a NRE) if transform equals 0. Implicitly present in managed code, so ignored here.
		0x180490B6F: Loads a pointer to stack offset 0x20 into register rdx as new constant constant5
		0x180490B74: [!] Reads field z from {'localPosition' (type UnityEngine.Vector3)} and stores in a new local {'single' (type System.Single)}

		0x180490B7A: Copies {'transform' (type UnityEngine.Transform)} from rdi into rcx
		0x180490B83: Moves single (type System.Single) from register rax to the stack at offset 40 (0x28)
		0x180490B87: [!] Calls managed method System.Void UnityEngine.Transform::set_localPosition(UnityEngine.Vector3) on instance {'transform' (type UnityEngine.Transform)} ;  - parameters do not match, but there is only one function at this address.

		0x180490B8C: Reads unknown value in stack, offset 80 (0x50) and stores the pointer in register rbx as new constant constant6
		0x180490B96: [!] Returns from the function

		0x180490B99: [!] Constructs and throws an exception of kind System.NullReferenceException




	Generated Pseudocode:

	Declaring Type: CustomizeMiniGameStatus
	System.Void SetCorrectPos()
		UnityEngine.GameObject m_infoObject = this.m_infoObject

		UnityEngine.Transform transform = m_infoObject.transform
		UnityEngine.Transform m_correctPos = this.m_correctPos

		UnityEngine.Vector3 localPosition = .localPosition
		System.Single single = localPosition.z

		transform.set_localPosition()
		return
		throw new System.NullReferenceException()


Generated IL:
	Action of type Cpp2IL.Core.Analysis.Actions.x86.Important.CallManagedFunctionAction at (0x180490B61) is corrupt (Method is non-static but don't have an instance) and cannot be created as IL. Aborting here.


Method: System.Void CustomizeMiniGameStatus::.cctor():	Method Body (x86 ASM):
		0x1804A2280 push rbx		; DEBUG: {Register}/RBX {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1804A2282 sub rsp,20h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 32
		0x1804A2286 cmp byte ptr [18183E61Bh],0		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6467872283 | None ||| N/A | 0
		0x1804A228D jne short 00000001804A22A1h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A228F mov ecx,[1814B8A5Ch]		; DEBUG: {Register}/ECX {Memory}/None ||| RIP | 6464178780 | None ||| N/A | N/A
		0x1804A2295 call 00000001800FEB90h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A229A mov byte ptr [18183E61Bh],1		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6467872283 | None ||| N/A | 1
		0x1804A22A1 mov rcx,[18189B4B0h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468252848 | None ||| N/A | N/A
		0x1804A22A8 mov edx,8		; DEBUG: {Register}/EDX {Immediate32}/None ||| None | 0 | None ||| N/A | 8
		0x1804A22AD call 0000000180141320h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A22B2 mov rdx,[1818776B8h]		; DEBUG: {Register}/RDX {Memory}/None ||| RIP | 6468105912 | None ||| N/A | N/A
		0x1804A22B9 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1804A22BC mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1804A22BF mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1804A22C2 call 0000000180A71470h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804A22C7 mov rcx,[18189D898h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468262040 | None ||| N/A | N/A
		0x1804A22CE mov rdx,[rcx+0B8h]		; DEBUG: {Register}/RDX {Memory}/None ||| RCX | 184 | None ||| N/A | N/A
		0x1804A22D5 mov [rdx],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDX | 0 | None ||| N/A | N/A
		0x1804A22D8 add rsp,20h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 32
		0x1804A22DC pop rbx		; DEBUG: {Register}/RBX {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1804A22DD ret		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1804A22DE int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Static Method System.Void CustomizeMiniGameStatus::.cctor():
		End of function at 0x1804A22DF
		Absolute End is at 0x1804A22DF
		Identified Jump Destination addresses:

		0x1804A2280: Saves the content of rbx to the stack
		0x1804A2286: Compares {Unknown Global at 0x18183E61B, first ten bytes are [0 221 158 1 0 84 62 103 1 224], or as chars " Ý T>gà"} and 0
		0x1804A228D: Jumps to 0x1804A22A1 if {Unknown Global at 0x18183E61B, first ten bytes are [0 221 158 1 0 84 62 103 1 224], or as chars " Ý T>gà"} != 0

		0x1804A228F: Loads string "s" into register rcx as constant {'constant3' (constant value of type Cpp2IL.Core.Analysis.ResultModels.Il2CppString)}
		0x1804A2295: Attempts to load the il2cpp metadata for this method (method id 0) and init it cpp-side.

		0x1804A22A1: Loads the type definition for managed type EDisplay[] as a constant "EDisplay[]" in rcx
		0x1804A22A8: [!] Writes the constant 0x8 into operand 8 (type UInt64) in register rdx
		0x1804A22AD: [!] Allocates an array of type EDisplay[] of size 8 and stores the result as local0 in register rax

		0x1804A22B2: Loads the type definition for managed field <PrivateImplementationDetails>/$ArrayType=32 <PrivateImplementationDetails>::$field-18DF1E978ECB0A2F2D89F69945BAE7B58793BA44 as a constant "$field-18DF1E978ECB0A2F2D89F69945BAE7B58793BA44"
		0x1804A22BC: Copies {'local0' (type EDisplay[])} from rax into rcx
		0x1804A22BF: Copies {'local0' (type EDisplay[])} from rax into rbx
		0x1804A22C2: [!] Calls static managed method System.Void System.Runtime.CompilerServices.RuntimeHelpers::InitializeArray(System.Array,System.RuntimeFieldHandle) with arguments [{'local0' (type EDisplay[])}, <PrivateImplementationDetails>.$field-18DF1E978ECB0A2F2D89F69945BAE7B58793BA44] ;  - Initializes array containing values: [120036, 120037, 120041, 120042, 120043, 120044, 120045, 120046]

		0x1804A22C7: Loads the type definition for managed type CustomizeMiniGameStatus as a constant "CustomizeMiniGameStatus" in rcx
		0x1804A22CE: Loads the pointer to the static fields for CustomizeMiniGameStatus and stores it in constant8 in register rdx
		0x1804A22D5: [!] Sets static field CustomizeMiniGameStatus.scCustomizeTypeName to {'local0' (type EDisplay[])}
		0x1804A22DD: [!] Returns from the function




	Generated Pseudocode:

	Declaring Type: CustomizeMiniGameStatus
	static System.Void .cctor()
		EDisplay[] local0 = new EDisplay[8]

		local0 = new EDisplay[] {120036, 120037, 120041, 120042, 120043, 120044, 120045, 120046}
		CustomizeMiniGameStatus.scCustomizeTypeName = local0
		return


Generated IL:
	IL_0000: ldc.i4.8
	IL_0001: newarr EDisplay
	IL_0006: stloc.0
	IL_0007: ldloc.0
	IL_0008: ldtoken <PrivateImplementationDetails>/$ArrayType=32 <PrivateImplementationDetails>::$field-18DF1E978ECB0A2F2D89F69945BAE7B58793BA44
	IL_000d: call System.Void System.Runtime.CompilerServices.RuntimeHelpers::InitializeArray(System.Array,System.RuntimeFieldHandle)
	IL_0012: ldloc.0
	IL_0013: stsfld EDisplay[] CustomizeMiniGameStatus::scCustomizeTypeName
	IL_0018: ret
	

