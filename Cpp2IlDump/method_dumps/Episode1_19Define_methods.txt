Type: Episode1_19Define

Method: System.Void Episode1_19Define::.ctor():	Method Body (x86 ASM):
		0x1802068B0 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1802068B2 jmp near ptr 0000000180207540h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802068B7 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.Void Episode1_19Define::.ctor():
		End of function at 0x1802068B8
		Absolute End is at 0x1802068B8
		Identified Jump Destination addresses:

		0x1802068B2: [!] Calls managed method System.Void System.Object::.ctor() on instance {'this' (function parameter, type Episode1_19Define)}

		0x1802068B2: [!] Returns from the function




	Generated Pseudocode:

	Declaring Type: Episode1_19Define
	System.Void .ctor()

		base..ctor()
		return


Generated IL:
	IL_0000: ldarg.0
	IL_0001: call System.Void System.Object::.ctor()
	IL_0006: ret
	

Method: System.Void Episode1_19Define::.cctor():	Method Body (x86 ASM):
		0x1805F93E0 mov [rsp+8],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RSP | 8 | None ||| N/A | N/A
		0x1805F93E5 push rdi		; DEBUG: {Register}/RDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805F93E6 sub rsp,20h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 32
		0x1805F93EA cmp byte ptr [18183EE86h],0		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6467874438 | None ||| N/A | 0
		0x1805F93F1 jne short 00000001805F9405h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F93F3 mov ecx,[1814C7308h]		; DEBUG: {Register}/ECX {Memory}/None ||| RIP | 6464238344 | None ||| N/A | N/A
		0x1805F93F9 call 00000001800FEB90h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F93FE mov byte ptr [18183EE86h],1		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6467874438 | None ||| N/A | 1
		0x1805F9405 mov rcx,[181884F78h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468161400 | None ||| N/A | N/A
		0x1805F940C mov edx,36h		; DEBUG: {Register}/EDX {Immediate32}/None ||| None | 0 | None ||| N/A | 54
		0x1805F9411 call 0000000180141320h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9416 mov rcx,[181884228h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468157992 | None ||| N/A | N/A
		0x1805F941D mov rdi,rax		; DEBUG: {Register}/RDI {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9420 mov rbx,[18187C390h]		; DEBUG: {Register}/RBX {Memory}/None ||| RIP | 6468125584 | None ||| N/A | N/A
		0x1805F9427 test byte ptr [rcx+127h],2		; DEBUG: {Memory}/None {Immediate8}/None ||| RCX | 295 | None ||| N/A | 2
		0x1805F942E je short 00000001805F943Eh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9430 cmp dword ptr [rcx+0D8h],0		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RCX | 216 | None ||| N/A | 0
		0x1805F9437 jne short 00000001805F943Eh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9439 call 000000018010EAF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F943E xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805F9440 mov rcx,rbx		; DEBUG: {Register}/RCX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x1805F9443 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9448 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F944B test rdi,rdi		; DEBUG: {Register}/RDI {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x1805F944E je near ptr 00000001805FA10Ah		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9454 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9457 je short 00000001805F9471h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9459 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1805F945C mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F945F mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1805F9463 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9468 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F946B je near ptr 00000001805FA112h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9471 cmp dword ptr [rdi+18h],1		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 1
		0x1805F9475 jbe near ptr 00000001805FA125h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F947B mov [rdi+28h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 40 | None ||| N/A | N/A
		0x1805F947F xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805F9481 mov rcx,[18187C3A8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468125608 | None ||| N/A | N/A
		0x1805F9488 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F948D mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9490 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9493 je short 00000001805F94ADh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9495 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1805F9498 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F949B mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1805F949F call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F94A4 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F94A7 je near ptr 00000001805FA138h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F94AD cmp dword ptr [rdi+18h],2		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 2
		0x1805F94B1 jbe near ptr 00000001805FA14Bh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F94B7 mov [rdi+30h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 48 | None ||| N/A | N/A
		0x1805F94BB xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805F94BD mov rcx,[18187C3D0h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468125648 | None ||| N/A | N/A
		0x1805F94C4 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F94C9 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F94CC test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F94CF je short 00000001805F94E9h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F94D1 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1805F94D4 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F94D7 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1805F94DB call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F94E0 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F94E3 je near ptr 00000001805FA15Eh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F94E9 cmp dword ptr [rdi+18h],3		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 3
		0x1805F94ED jbe near ptr 00000001805FA171h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F94F3 mov [rdi+38h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 56 | None ||| N/A | N/A
		0x1805F94F7 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805F94F9 mov rcx,[18187C408h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468125704 | None ||| N/A | N/A
		0x1805F9500 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9505 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9508 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F950B je short 00000001805F9525h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F950D mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1805F9510 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9513 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1805F9517 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F951C test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F951F je near ptr 00000001805FA184h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9525 cmp dword ptr [rdi+18h],4		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 4
		0x1805F9529 jbe near ptr 00000001805FA197h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F952F mov [rdi+40h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 64 | None ||| N/A | N/A
		0x1805F9533 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805F9535 mov rcx,[18187C438h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468125752 | None ||| N/A | N/A
		0x1805F953C call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9541 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9544 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9547 je short 00000001805F9561h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9549 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1805F954C mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F954F mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1805F9553 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9558 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F955B je near ptr 00000001805FA1AAh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9561 cmp dword ptr [rdi+18h],5		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 5
		0x1805F9565 jbe near ptr 00000001805FA1BDh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F956B mov [rdi+48h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 72 | None ||| N/A | N/A
		0x1805F956F xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805F9571 mov rcx,[18187C440h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468125760 | None ||| N/A | N/A
		0x1805F9578 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F957D mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9580 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9583 je short 00000001805F959Dh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9585 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1805F9588 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F958B mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1805F958F call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9594 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9597 je near ptr 00000001805FA1D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F959D cmp dword ptr [rdi+18h],6		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 6
		0x1805F95A1 jbe near ptr 00000001805FA1E3h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F95A7 mov [rdi+50h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 80 | None ||| N/A | N/A
		0x1805F95AB xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805F95AD mov rcx,[18187C478h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468125816 | None ||| N/A | N/A
		0x1805F95B4 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F95B9 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F95BC test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F95BF je short 00000001805F95D9h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F95C1 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1805F95C4 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F95C7 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1805F95CB call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F95D0 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F95D3 je near ptr 00000001805FA1F6h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F95D9 cmp dword ptr [rdi+18h],7		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 7
		0x1805F95DD jbe near ptr 00000001805FA209h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F95E3 mov [rdi+58h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 88 | None ||| N/A | N/A
		0x1805F95E7 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805F95E9 mov rcx,[18187C498h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468125848 | None ||| N/A | N/A
		0x1805F95F0 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F95F5 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F95F8 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F95FB je short 00000001805F9615h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F95FD mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1805F9600 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9603 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1805F9607 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F960C test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F960F je near ptr 00000001805FA21Ch		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9615 cmp dword ptr [rdi+18h],8		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 8
		0x1805F9619 jbe near ptr 00000001805FA22Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F961F mov [rdi+60h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 96 | None ||| N/A | N/A
		0x1805F9623 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805F9625 mov rcx,[18187C4C8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468125896 | None ||| N/A | N/A
		0x1805F962C call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9631 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9634 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9637 je short 00000001805F9651h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9639 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1805F963C mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F963F mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1805F9643 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9648 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F964B je near ptr 00000001805FA242h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9651 cmp dword ptr [rdi+18h],9		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 9
		0x1805F9655 jbe near ptr 00000001805FA255h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F965B mov [rdi+68h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 104 | None ||| N/A | N/A
		0x1805F965F xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805F9661 mov rcx,[18187C4E8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468125928 | None ||| N/A | N/A
		0x1805F9668 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F966D mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9670 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9673 je short 00000001805F968Dh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9675 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1805F9678 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F967B mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1805F967F call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9684 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9687 je near ptr 00000001805FA268h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F968D cmp dword ptr [rdi+18h],0Ah		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 10
		0x1805F9691 jbe near ptr 00000001805FA27Bh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9697 mov [rdi+70h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 112 | None ||| N/A | N/A
		0x1805F969B xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805F969D mov rcx,[18187C518h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468125976 | None ||| N/A | N/A
		0x1805F96A4 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F96A9 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F96AC test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F96AF je short 00000001805F96C9h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F96B1 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1805F96B4 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F96B7 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1805F96BB call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F96C0 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F96C3 je near ptr 00000001805FA28Eh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F96C9 cmp dword ptr [rdi+18h],0Bh		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 11
		0x1805F96CD jbe near ptr 00000001805FA2A1h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F96D3 mov [rdi+78h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 120 | None ||| N/A | N/A
		0x1805F96D7 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805F96D9 mov rcx,[18187C538h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468126008 | None ||| N/A | N/A
		0x1805F96E0 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F96E5 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F96E8 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F96EB je short 00000001805F9705h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F96ED mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1805F96F0 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F96F3 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1805F96F7 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F96FC test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F96FF je near ptr 00000001805FA2B4h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9705 cmp dword ptr [rdi+18h],0Ch		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 12
		0x1805F9709 jbe near ptr 00000001805FA2C7h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F970F mov [rdi+80h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 128 | None ||| N/A | N/A
		0x1805F9716 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805F9718 mov rcx,[18187C570h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468126064 | None ||| N/A | N/A
		0x1805F971F call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9724 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9727 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F972A je short 00000001805F9744h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F972C mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1805F972F mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9732 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1805F9736 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F973B test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F973E je near ptr 00000001805FA2DAh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9744 cmp dword ptr [rdi+18h],0Dh		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 13
		0x1805F9748 jbe near ptr 00000001805FA2EDh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F974E mov [rdi+88h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 136 | None ||| N/A | N/A
		0x1805F9755 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805F9757 mov rcx,[18187C588h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468126088 | None ||| N/A | N/A
		0x1805F975E call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9763 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9766 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9769 je short 00000001805F9783h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F976B mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1805F976E mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9771 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1805F9775 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F977A test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F977D je near ptr 00000001805FA300h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9783 cmp dword ptr [rdi+18h],0Eh		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 14
		0x1805F9787 jbe near ptr 00000001805FA313h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F978D mov [rdi+90h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 144 | None ||| N/A | N/A
		0x1805F9794 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805F9796 mov rcx,[18187C5C8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468126152 | None ||| N/A | N/A
		0x1805F979D call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F97A2 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F97A5 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F97A8 je short 00000001805F97C2h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F97AA mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1805F97AD mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F97B0 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1805F97B4 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F97B9 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F97BC je near ptr 00000001805FA326h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F97C2 cmp dword ptr [rdi+18h],0Fh		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 15
		0x1805F97C6 jbe near ptr 00000001805FA339h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F97CC mov [rdi+98h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 152 | None ||| N/A | N/A
		0x1805F97D3 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805F97D5 mov rcx,[18187C5D0h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468126160 | None ||| N/A | N/A
		0x1805F97DC call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F97E1 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F97E4 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F97E7 je short 00000001805F9801h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F97E9 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1805F97EC mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F97EF mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1805F97F3 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F97F8 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F97FB je near ptr 00000001805FA34Ch		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9801 cmp dword ptr [rdi+18h],10h		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 16
		0x1805F9805 jbe near ptr 00000001805FA35Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F980B mov [rdi+0A0h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 160 | None ||| N/A | N/A
		0x1805F9812 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805F9814 mov rcx,[18187C610h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468126224 | None ||| N/A | N/A
		0x1805F981B call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9820 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9823 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9826 je short 00000001805F9840h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9828 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1805F982B mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F982E mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1805F9832 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9837 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F983A je near ptr 00000001805FA372h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9840 cmp dword ptr [rdi+18h],11h		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 17
		0x1805F9844 jbe near ptr 00000001805FA385h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F984A mov [rdi+0A8h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 168 | None ||| N/A | N/A
		0x1805F9851 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805F9853 mov rcx,[18187C628h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468126248 | None ||| N/A | N/A
		0x1805F985A call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F985F mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9862 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9865 je short 00000001805F987Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9867 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1805F986A mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F986D mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1805F9871 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9876 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9879 je near ptr 00000001805FA398h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F987F cmp dword ptr [rdi+18h],12h		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 18
		0x1805F9883 jbe near ptr 00000001805FA3ABh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9889 mov [rdi+0B0h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 176 | None ||| N/A | N/A
		0x1805F9890 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805F9892 mov rcx,[18187C668h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468126312 | None ||| N/A | N/A
		0x1805F9899 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F989E mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F98A1 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F98A4 je short 00000001805F98BEh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F98A6 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1805F98A9 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F98AC mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1805F98B0 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F98B5 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F98B8 je near ptr 00000001805FA3BEh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F98BE cmp dword ptr [rdi+18h],13h		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 19
		0x1805F98C2 jbe near ptr 00000001805FA3D1h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F98C8 mov [rdi+0B8h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 184 | None ||| N/A | N/A
		0x1805F98CF xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805F98D1 mov rcx,[18187C678h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468126328 | None ||| N/A | N/A
		0x1805F98D8 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F98DD mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F98E0 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F98E3 je short 00000001805F98FDh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F98E5 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1805F98E8 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F98EB mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1805F98EF call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F98F4 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F98F7 je near ptr 00000001805FA3E4h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F98FD cmp dword ptr [rdi+18h],14h		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 20
		0x1805F9901 jbe near ptr 00000001805FA3F7h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9907 mov [rdi+0C0h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 192 | None ||| N/A | N/A
		0x1805F990E xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805F9910 mov rcx,[18187C6A8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468126376 | None ||| N/A | N/A
		0x1805F9917 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F991C mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F991F test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9922 je short 00000001805F993Ch		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9924 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1805F9927 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F992A mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1805F992E call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9933 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9936 je near ptr 00000001805FA40Ah		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F993C cmp dword ptr [rdi+18h],15h		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 21
		0x1805F9940 jbe near ptr 00000001805FA41Dh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9946 mov [rdi+0C8h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 200 | None ||| N/A | N/A
		0x1805F994D xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805F994F mov rcx,[18187C6D0h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468126416 | None ||| N/A | N/A
		0x1805F9956 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F995B mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F995E test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9961 je short 00000001805F997Bh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9963 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1805F9966 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9969 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1805F996D call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9972 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9975 je near ptr 00000001805FA430h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F997B cmp dword ptr [rdi+18h],16h		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 22
		0x1805F997F jbe near ptr 00000001805FA443h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9985 mov [rdi+0D0h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 208 | None ||| N/A | N/A
		0x1805F998C xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805F998E mov rcx,[18187C708h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468126472 | None ||| N/A | N/A
		0x1805F9995 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F999A mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F999D test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F99A0 je short 00000001805F99BAh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F99A2 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1805F99A5 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F99A8 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1805F99AC call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F99B1 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F99B4 je near ptr 00000001805FA456h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F99BA cmp dword ptr [rdi+18h],17h		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 23
		0x1805F99BE jbe near ptr 00000001805FA469h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F99C4 mov [rdi+0D8h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 216 | None ||| N/A | N/A
		0x1805F99CB xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805F99CD mov rcx,[18187C710h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468126480 | None ||| N/A | N/A
		0x1805F99D4 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F99D9 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F99DC test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F99DF je short 00000001805F99F9h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F99E1 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1805F99E4 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F99E7 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1805F99EB call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F99F0 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F99F3 je near ptr 00000001805FA47Ch		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F99F9 cmp dword ptr [rdi+18h],18h		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 24
		0x1805F99FD jbe near ptr 00000001805FA48Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9A03 mov [rdi+0E0h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 224 | None ||| N/A | N/A
		0x1805F9A0A xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805F9A0C mov rcx,[18187C750h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468126544 | None ||| N/A | N/A
		0x1805F9A13 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9A18 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9A1B test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9A1E je short 00000001805F9A38h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9A20 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1805F9A23 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9A26 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1805F9A2A call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9A2F test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9A32 je near ptr 00000001805FA4A2h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9A38 cmp dword ptr [rdi+18h],19h		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 25
		0x1805F9A3C jbe near ptr 00000001805FA4B5h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9A42 mov [rdi+0E8h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 232 | None ||| N/A | N/A
		0x1805F9A49 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805F9A4B mov rcx,[18187C768h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468126568 | None ||| N/A | N/A
		0x1805F9A52 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9A57 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9A5A test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9A5D je short 00000001805F9A77h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9A5F mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1805F9A62 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9A65 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1805F9A69 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9A6E test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9A71 je near ptr 00000001805FA4C8h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9A77 cmp dword ptr [rdi+18h],1Ah		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 26
		0x1805F9A7B jbe near ptr 00000001805FA4DBh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9A81 mov [rdi+0F0h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 240 | None ||| N/A | N/A
		0x1805F9A88 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805F9A8A mov rcx,[18187C7A8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468126632 | None ||| N/A | N/A
		0x1805F9A91 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9A96 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9A99 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9A9C je short 00000001805F9AB6h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9A9E mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1805F9AA1 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9AA4 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1805F9AA8 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9AAD test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9AB0 je near ptr 00000001805FA4EEh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9AB6 cmp dword ptr [rdi+18h],1Bh		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 27
		0x1805F9ABA jbe near ptr 00000001805FA501h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9AC0 mov [rdi+0F8h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 248 | None ||| N/A | N/A
		0x1805F9AC7 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805F9AC9 mov rcx,[18187C7C8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468126664 | None ||| N/A | N/A
		0x1805F9AD0 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9AD5 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9AD8 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9ADB je short 00000001805F9AF5h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9ADD mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1805F9AE0 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9AE3 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1805F9AE7 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9AEC test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9AEF je near ptr 00000001805FA514h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9AF5 cmp dword ptr [rdi+18h],1Ch		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 28
		0x1805F9AF9 jbe near ptr 00000001805FA527h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9AFF mov [rdi+100h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 256 | None ||| N/A | N/A
		0x1805F9B06 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805F9B08 mov rcx,[18187C7F8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468126712 | None ||| N/A | N/A
		0x1805F9B0F call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9B14 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9B17 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9B1A je short 00000001805F9B34h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9B1C mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1805F9B1F mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9B22 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1805F9B26 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9B2B test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9B2E je near ptr 00000001805FA53Ah		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9B34 cmp dword ptr [rdi+18h],1Dh		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 29
		0x1805F9B38 jbe near ptr 00000001805FA54Dh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9B3E mov [rdi+108h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 264 | None ||| N/A | N/A
		0x1805F9B45 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805F9B47 mov rcx,[18187C808h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468126728 | None ||| N/A | N/A
		0x1805F9B4E call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9B53 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9B56 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9B59 je short 00000001805F9B73h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9B5B mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1805F9B5E mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9B61 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1805F9B65 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9B6A test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9B6D je near ptr 00000001805FA560h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9B73 cmp dword ptr [rdi+18h],1Eh		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 30
		0x1805F9B77 jbe near ptr 00000001805FA573h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9B7D mov [rdi+110h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 272 | None ||| N/A | N/A
		0x1805F9B84 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805F9B86 mov rcx,[18187C840h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468126784 | None ||| N/A | N/A
		0x1805F9B8D call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9B92 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9B95 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9B98 je short 00000001805F9BB2h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9B9A mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1805F9B9D mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9BA0 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1805F9BA4 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9BA9 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9BAC je near ptr 00000001805FA586h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9BB2 cmp dword ptr [rdi+18h],1Fh		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 31
		0x1805F9BB6 jbe near ptr 00000001805FA599h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9BBC mov [rdi+118h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 280 | None ||| N/A | N/A
		0x1805F9BC3 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805F9BC5 mov rcx,[18187C850h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468126800 | None ||| N/A | N/A
		0x1805F9BCC call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9BD1 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9BD4 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9BD7 je short 00000001805F9BF1h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9BD9 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1805F9BDC mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9BDF mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1805F9BE3 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9BE8 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9BEB je near ptr 00000001805FA5ACh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9BF1 cmp dword ptr [rdi+18h],20h		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 32
		0x1805F9BF5 jbe near ptr 00000001805FA5BFh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9BFB mov [rdi+120h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 288 | None ||| N/A | N/A
		0x1805F9C02 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805F9C04 mov rcx,[18187C888h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468126856 | None ||| N/A | N/A
		0x1805F9C0B call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9C10 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9C13 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9C16 je short 00000001805F9C30h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9C18 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1805F9C1B mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9C1E mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1805F9C22 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9C27 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9C2A je near ptr 00000001805FA5D2h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9C30 cmp dword ptr [rdi+18h],21h		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 33
		0x1805F9C34 jbe near ptr 00000001805FA5E5h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9C3A mov [rdi+128h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 296 | None ||| N/A | N/A
		0x1805F9C41 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805F9C43 mov rcx,[18187C8C0h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468126912 | None ||| N/A | N/A
		0x1805F9C4A call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9C4F mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9C52 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9C55 je short 00000001805F9C6Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9C57 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1805F9C5A mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9C5D mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1805F9C61 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9C66 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9C69 je near ptr 00000001805FA5F8h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9C6F cmp dword ptr [rdi+18h],22h		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 34
		0x1805F9C73 jbe near ptr 00000001805FA60Bh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9C79 mov [rdi+130h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 304 | None ||| N/A | N/A
		0x1805F9C80 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805F9C82 mov rcx,[18187C8E8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468126952 | None ||| N/A | N/A
		0x1805F9C89 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9C8E mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9C91 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9C94 je short 00000001805F9CAEh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9C96 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1805F9C99 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9C9C mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1805F9CA0 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9CA5 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9CA8 je near ptr 00000001805FA61Eh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9CAE cmp dword ptr [rdi+18h],23h		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 35
		0x1805F9CB2 jbe near ptr 00000001805FA631h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9CB8 mov [rdi+138h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 312 | None ||| N/A | N/A
		0x1805F9CBF xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805F9CC1 mov rcx,[18187C8F0h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468126960 | None ||| N/A | N/A
		0x1805F9CC8 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9CCD mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9CD0 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9CD3 je short 00000001805F9CEDh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9CD5 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1805F9CD8 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9CDB mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1805F9CDF call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9CE4 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9CE7 je near ptr 00000001805FA644h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9CED cmp dword ptr [rdi+18h],24h		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 36
		0x1805F9CF1 jbe near ptr 00000001805FA657h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9CF7 mov [rdi+140h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 320 | None ||| N/A | N/A
		0x1805F9CFE xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805F9D00 mov rcx,[18187C930h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468127024 | None ||| N/A | N/A
		0x1805F9D07 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9D0C mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9D0F test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9D12 je short 00000001805F9D2Ch		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9D14 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1805F9D17 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9D1A mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1805F9D1E call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9D23 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9D26 je near ptr 00000001805FA66Ah		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9D2C cmp dword ptr [rdi+18h],25h		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 37
		0x1805F9D30 jbe near ptr 00000001805FA67Dh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9D36 mov [rdi+148h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 328 | None ||| N/A | N/A
		0x1805F9D3D xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805F9D3F mov rcx,[18187C940h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468127040 | None ||| N/A | N/A
		0x1805F9D46 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9D4B mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9D4E test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9D51 je short 00000001805F9D6Bh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9D53 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1805F9D56 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9D59 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1805F9D5D call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9D62 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9D65 je near ptr 00000001805FA690h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9D6B cmp dword ptr [rdi+18h],26h		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 38
		0x1805F9D6F jbe near ptr 00000001805FA6A3h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9D75 mov [rdi+150h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 336 | None ||| N/A | N/A
		0x1805F9D7C xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805F9D7E mov rcx,[18187C970h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468127088 | None ||| N/A | N/A
		0x1805F9D85 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9D8A mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9D8D test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9D90 je short 00000001805F9DAAh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9D92 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1805F9D95 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9D98 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1805F9D9C call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9DA1 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9DA4 je near ptr 00000001805FA6B6h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9DAA cmp dword ptr [rdi+18h],27h		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 39
		0x1805F9DAE jbe near ptr 00000001805FA6C9h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9DB4 mov [rdi+158h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 344 | None ||| N/A | N/A
		0x1805F9DBB xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805F9DBD mov rcx,[18187C998h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468127128 | None ||| N/A | N/A
		0x1805F9DC4 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9DC9 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9DCC test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9DCF je short 00000001805F9DE9h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9DD1 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1805F9DD4 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9DD7 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1805F9DDB call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9DE0 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9DE3 je near ptr 00000001805FA6DCh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9DE9 cmp dword ptr [rdi+18h],28h		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 40
		0x1805F9DED jbe near ptr 00000001805FA6EFh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9DF3 mov [rdi+160h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 352 | None ||| N/A | N/A
		0x1805F9DFA xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805F9DFC mov rcx,[18187C9D0h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468127184 | None ||| N/A | N/A
		0x1805F9E03 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9E08 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9E0B test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9E0E je short 00000001805F9E28h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9E10 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1805F9E13 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9E16 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1805F9E1A call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9E1F test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9E22 je near ptr 00000001805FA702h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9E28 cmp dword ptr [rdi+18h],29h		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 41
		0x1805F9E2C jbe near ptr 00000001805FA715h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9E32 mov [rdi+168h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 360 | None ||| N/A | N/A
		0x1805F9E39 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805F9E3B mov rcx,[18187C9E0h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468127200 | None ||| N/A | N/A
		0x1805F9E42 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9E47 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9E4A test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9E4D je short 00000001805F9E67h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9E4F mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1805F9E52 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9E55 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1805F9E59 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9E5E test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9E61 je near ptr 00000001805FA728h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9E67 cmp dword ptr [rdi+18h],2Ah		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 42
		0x1805F9E6B jbe near ptr 00000001805FA73Bh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9E71 mov [rdi+170h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 368 | None ||| N/A | N/A
		0x1805F9E78 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805F9E7A mov rcx,[18187CA08h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468127240 | None ||| N/A | N/A
		0x1805F9E81 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9E86 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9E89 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9E8C je short 00000001805F9EA6h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9E8E mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1805F9E91 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9E94 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1805F9E98 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9E9D test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9EA0 je near ptr 00000001805FA74Eh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9EA6 cmp dword ptr [rdi+18h],2Bh		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 43
		0x1805F9EAA jbe near ptr 00000001805FA761h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9EB0 mov [rdi+178h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 376 | None ||| N/A | N/A
		0x1805F9EB7 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805F9EB9 mov rcx,[18187CA38h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468127288 | None ||| N/A | N/A
		0x1805F9EC0 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9EC5 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9EC8 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9ECB je short 00000001805F9EE5h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9ECD mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1805F9ED0 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9ED3 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1805F9ED7 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9EDC test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9EDF je near ptr 00000001805FA774h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9EE5 cmp dword ptr [rdi+18h],2Ch		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 44
		0x1805F9EE9 jbe near ptr 00000001805FA787h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9EEF mov [rdi+180h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 384 | None ||| N/A | N/A
		0x1805F9EF6 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805F9EF8 mov rcx,[18187CA78h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468127352 | None ||| N/A | N/A
		0x1805F9EFF call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9F04 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9F07 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9F0A je short 00000001805F9F24h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9F0C mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1805F9F0F mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9F12 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1805F9F16 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9F1B test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9F1E je near ptr 00000001805FA79Ah		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9F24 cmp dword ptr [rdi+18h],2Dh		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 45
		0x1805F9F28 jbe near ptr 00000001805FA7ADh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9F2E mov [rdi+188h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 392 | None ||| N/A | N/A
		0x1805F9F35 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805F9F37 mov rcx,[18187CA90h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468127376 | None ||| N/A | N/A
		0x1805F9F3E call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9F43 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9F46 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9F49 je short 00000001805F9F63h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9F4B mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1805F9F4E mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9F51 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1805F9F55 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9F5A test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9F5D je near ptr 00000001805FA7C0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9F63 cmp dword ptr [rdi+18h],2Eh		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 46
		0x1805F9F67 jbe near ptr 00000001805FA7D3h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9F6D mov [rdi+190h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 400 | None ||| N/A | N/A
		0x1805F9F74 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805F9F76 mov rcx,[18187CAC0h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468127424 | None ||| N/A | N/A
		0x1805F9F7D call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9F82 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9F85 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9F88 je short 00000001805F9FA2h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9F8A mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1805F9F8D mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9F90 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1805F9F94 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9F99 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9F9C je near ptr 00000001805FA7E6h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9FA2 cmp dword ptr [rdi+18h],2Fh		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 47
		0x1805F9FA6 jbe near ptr 00000001805FA7F9h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9FAC mov [rdi+198h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 408 | None ||| N/A | N/A
		0x1805F9FB3 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805F9FB5 mov rcx,[18187CAF0h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468127472 | None ||| N/A | N/A
		0x1805F9FBC call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9FC1 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9FC4 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9FC7 je short 00000001805F9FE1h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9FC9 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1805F9FCC mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9FCF mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1805F9FD3 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9FD8 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F9FDB je near ptr 00000001805FA80Ch		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9FE1 cmp dword ptr [rdi+18h],30h		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 48
		0x1805F9FE5 jbe near ptr 00000001805FA81Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F9FEB mov [rdi+1A0h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 416 | None ||| N/A | N/A
		0x1805F9FF2 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805F9FF4 mov rcx,[18187CB18h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468127512 | None ||| N/A | N/A
		0x1805F9FFB call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA000 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FA003 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FA006 je short 00000001805FA020h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA008 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1805FA00B mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FA00E mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1805FA012 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA017 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FA01A je near ptr 00000001805FA832h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA020 cmp dword ptr [rdi+18h],31h		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 49
		0x1805FA024 jbe near ptr 00000001805FA845h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA02A mov [rdi+1A8h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 424 | None ||| N/A | N/A
		0x1805FA031 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FA033 mov rcx,[18187CB38h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468127544 | None ||| N/A | N/A
		0x1805FA03A call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA03F mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FA042 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FA045 je short 00000001805FA05Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA047 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1805FA04A mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FA04D mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1805FA051 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA056 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FA059 je near ptr 00000001805FA858h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA05F cmp dword ptr [rdi+18h],32h		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 50
		0x1805FA063 jbe near ptr 00000001805FA86Bh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA069 mov [rdi+1B0h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 432 | None ||| N/A | N/A
		0x1805FA070 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FA072 mov rcx,[18187CB68h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468127592 | None ||| N/A | N/A
		0x1805FA079 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA07E mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FA081 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FA084 je short 00000001805FA09Eh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA086 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1805FA089 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FA08C mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1805FA090 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA095 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FA098 je near ptr 00000001805FA87Eh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA09E cmp dword ptr [rdi+18h],33h		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 51
		0x1805FA0A2 jbe near ptr 00000001805FA891h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA0A8 mov [rdi+1B8h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 440 | None ||| N/A | N/A
		0x1805FA0AF xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FA0B1 mov rcx,[18187CB70h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468127600 | None ||| N/A | N/A
		0x1805FA0B8 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA0BD mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FA0C0 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FA0C3 je short 00000001805FA0DDh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA0C5 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1805FA0C8 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FA0CB mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1805FA0CF call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA0D4 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FA0D7 je near ptr 00000001805FA8A4h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA0DD cmp dword ptr [rdi+18h],34h		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 52
		0x1805FA0E1 jbe near ptr 00000001805FA8B7h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA0E7 mov [rdi+1C0h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 448 | None ||| N/A | N/A
		0x1805FA0EE mov rax,[1818A1EF8h]		; DEBUG: {Register}/RAX {Memory}/None ||| RIP | 6468280056 | None ||| N/A | N/A
		0x1805FA0F5 mov rbx,[rsp+30h]		; DEBUG: {Register}/RBX {Memory}/None ||| RSP | 48 | None ||| N/A | N/A
		0x1805FA0FA mov rcx,[rax+0B8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RAX | 184 | None ||| N/A | N/A
		0x1805FA101 mov [rcx],rdi		; DEBUG: {Memory}/None {Register}/RDI ||| RCX | 0 | None ||| N/A | N/A
		0x1805FA104 add rsp,20h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 32
		0x1805FA108 pop rdi		; DEBUG: {Register}/RDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805FA109 ret		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805FA10A xor ecx,ecx		; DEBUG: {Register}/ECX {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x1805FA10C call 000000018012BDA0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA111 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805FA112 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA117 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FA11A xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805FA11D xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FA11F call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA124 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805FA138 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA13D mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FA140 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805FA143 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FA145 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA14A int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805FA15E call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA163 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FA166 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805FA169 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FA16B call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA170 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805FA184 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA189 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FA18C xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805FA18F xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FA191 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA196 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805FA1AA call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA1AF mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FA1B2 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805FA1B5 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FA1B7 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA1BC int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805FA1D0 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA1D5 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FA1D8 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805FA1DB xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FA1DD call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA1E2 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805FA1F6 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA1FB mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FA1FE xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805FA201 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FA203 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA208 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805FA21C call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA221 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FA224 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805FA227 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FA229 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA22E int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805FA242 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA247 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FA24A xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805FA24D xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FA24F call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA254 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805FA268 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA26D mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FA270 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805FA273 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FA275 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA27A int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805FA28E call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA293 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FA296 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805FA299 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FA29B call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA2A0 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805FA2B4 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA2B9 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FA2BC xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805FA2BF xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FA2C1 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA2C6 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805FA2DA call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA2DF mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FA2E2 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805FA2E5 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FA2E7 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA2EC int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805FA300 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA305 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FA308 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805FA30B xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FA30D call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA312 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805FA326 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA32B mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FA32E xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805FA331 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FA333 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA338 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805FA34C call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA351 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FA354 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805FA357 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FA359 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA35E int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805FA372 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA377 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FA37A xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805FA37D xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FA37F call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA384 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805FA398 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA39D mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FA3A0 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805FA3A3 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FA3A5 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA3AA int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805FA3BE call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA3C3 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FA3C6 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805FA3C9 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FA3CB call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA3D0 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805FA3E4 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA3E9 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FA3EC xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805FA3EF xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FA3F1 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA3F6 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805FA40A call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA40F mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FA412 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805FA415 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FA417 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA41C int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805FA430 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA435 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FA438 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805FA43B xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FA43D call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA442 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805FA456 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA45B mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FA45E xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805FA461 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FA463 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA468 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805FA47C call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA481 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FA484 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805FA487 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FA489 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA48E int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805FA4A2 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA4A7 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FA4AA xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805FA4AD xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FA4AF call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA4B4 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805FA4C8 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA4CD mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FA4D0 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805FA4D3 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FA4D5 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA4DA int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805FA4EE call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA4F3 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FA4F6 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805FA4F9 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FA4FB call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA500 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805FA514 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA519 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FA51C xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805FA51F xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FA521 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA526 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805FA53A call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA53F mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FA542 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805FA545 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FA547 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA54C int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805FA560 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA565 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FA568 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805FA56B xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FA56D call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA572 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805FA586 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA58B mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FA58E xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805FA591 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FA593 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA598 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805FA5AC call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA5B1 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FA5B4 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805FA5B7 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FA5B9 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA5BE int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805FA5D2 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA5D7 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FA5DA xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805FA5DD xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FA5DF call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA5E4 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805FA5F8 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA5FD mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FA600 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805FA603 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FA605 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA60A int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805FA61E call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA623 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FA626 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805FA629 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FA62B call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA630 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805FA644 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA649 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FA64C xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805FA64F xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FA651 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA656 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805FA66A call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA66F mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FA672 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805FA675 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FA677 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA67C int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805FA690 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA695 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FA698 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805FA69B xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FA69D call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA6A2 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805FA6B6 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA6BB mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FA6BE xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805FA6C1 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FA6C3 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA6C8 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805FA6DC call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA6E1 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FA6E4 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805FA6E7 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FA6E9 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA6EE int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805FA702 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA707 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FA70A xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805FA70D xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FA70F call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA714 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805FA728 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA72D mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FA730 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805FA733 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FA735 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA73A int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805FA74E call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA753 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FA756 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805FA759 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FA75B call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA760 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805FA774 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA779 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FA77C xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805FA77F xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FA781 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA786 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805FA79A call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA79F mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FA7A2 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805FA7A5 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FA7A7 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA7AC int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805FA7C0 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA7C5 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FA7C8 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805FA7CB xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FA7CD call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA7D2 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805FA7E6 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA7EB mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FA7EE xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805FA7F1 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FA7F3 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA7F8 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805FA80C call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA811 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FA814 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805FA817 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FA819 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA81E int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805FA832 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA837 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FA83A xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805FA83D xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FA83F call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA844 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805FA858 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA85D mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FA860 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805FA863 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FA865 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA86A int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805FA87E call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA883 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FA886 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805FA889 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FA88B call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA890 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805FA8A4 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA8A9 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FA8AC xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805FA8AF xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FA8B1 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FA8B6 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Static Method System.Void Episode1_19Define::.cctor():
		End of function at 0x1805FA8B7
		Absolute End is at 0x1805FA8B7
		Identified Jump Destination addresses:

		0x1805F93E5: Saves the content of rdi to the stack
		0x1805F93EA: Compares {Unknown Global at 0x18183EE86, first ten bytes are [103 1 64 231 1 0 163 231 1 0], or as chars "g@ç £ç "} and 0
		0x1805F93F1: Jumps to 0x1805F9405 if {Unknown Global at 0x18183EE86, first ten bytes are [103 1 64 231 1 0 163 231 1 0], or as chars "g@ç £ç "} != 0

		0x1805F93F3: Loads string "Ï+" into register rcx as constant {'constant3' (constant value of type Cpp2IL.Core.Analysis.ResultModels.Il2CppString)}
		0x1805F93F9: Attempts to load the il2cpp metadata for this method (method id 0) and init it cpp-side.

		0x1805F9405: Loads the type definition for managed type System.Type[] as a constant "Type[]" in rcx
		0x1805F940C: [!] Writes the constant 0x36 into operand 54 (type UInt64) in register rdx
		0x1805F9411: [!] Allocates an array of type System.Type[] of size 54 and stores the result as local0 in register rax

		0x1805F9416: Loads the type definition for managed type System.Type as a constant "Type" in rcx
		0x1805F941D: Copies {'local0' (type System.Type[])} from rax into rdi
		0x1805F9420: Loads the type definition for managed type ESerifEp01_19_Pol_0000 as a constant "ESerifEp01_19_Pol_0000" in rbx
		0x1805F9427: Compares "{il2cpp field on {'Type' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" and 2
		0x1805F942E: Jumps to 0x1805F943E if "{il2cpp field on {'Type' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" equals 2

		0x1805F9430: Compares "{il2cpp field on {'Type' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" and 0
		0x1805F9437: Jumps to 0x1805F943E if "{il2cpp field on {'Type' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" != 0

		0x1805F9439: Calls the il2cpp cctor for the type System.Type
		0x1805F9440: Copies {'ESerifEp01_19_Pol_0000' (constant value of type Mono.Cecil.TypeReference)} from rbx into rcx
		0x1805F9443: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEp01_19_Pol_0000' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle' (type System.Type)}

		0x1805F9448: Copies {'typeFromHandle' (type System.Type)} from rax into rbx
		0x1805F944B: [!] Compares {'local0' (type System.Type[])} and 0
		0x1805F944E: Jumps to 0x1805FA10A (which throws a NRE) if local0 equals 0. Implicitly present in managed code, so ignored here.
		0x1805F9454: [!] Compares {'typeFromHandle' (type System.Type)} and 0
		0x1805F9457: Jumps to 0x1805F9471 (which is an if statement's body) if typeFromHandle equals 0 ;  - Increasing indentation - is standard if, unimportant is False

		0x1805F9459: Loads the class pointer from local0 into a constant constant14 in register rdx
		0x1805F945C: Copies {'typeFromHandle' (type System.Type)} from rax into rcx
		0x1805F945F: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x1805F9468: [!] Compares {'typeFromHandle' (type System.Type)} and 0
		0x1805F946B: Jumps to 0x1805FA112 if typeFromHandle equals 0 ;  - This is probably a goto, jumping to 0x1805FA112 which is after end of current block @ 0x1805F9471 (started at 0x1805F9459)

		0x1805F9471: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 1
		0x1805F9475: Jumps to 0x1805FA125 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 1. Implicitly present in managed code, so ignored here.
		0x1805F947B: Sets the value at offset 1 in array local0 to {'typeFromHandle' (type System.Type)}
		0x1805F9481: Loads the type definition for managed type ESerifEp01_19_Rend_0000 as a constant "ESerifEp01_19_Rend_0000" in rcx
		0x1805F9488: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEp01_19_Rend_0000' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle2' (type System.Type)}

		0x1805F948D: Copies {'typeFromHandle2' (type System.Type)} from rax into rbx
		0x1805F9490: [!] Compares {'typeFromHandle2' (type System.Type)} and 0
		0x1805F9493: Jumps to 0x1805F94AD if typeFromHandle2 equals 0 ;  - This is probably a goto, jumping to 0x1805F94AD which is after end of current block @ 0x1805F9471 (started at 0x1805F9459)

		0x1805F9495: Loads the class pointer from local0 into a constant constant19 in register rdx
		0x1805F9498: Copies {'typeFromHandle2' (type System.Type)} from rax into rcx
		0x1805F949B: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x1805F94A4: [!] Compares {'typeFromHandle2' (type System.Type)} and 0
		0x1805F94A7: Jumps to 0x1805FA138 if typeFromHandle2 equals 0 ;  - This is probably a goto, jumping to 0x1805FA138 which is after end of current block @ 0x1805F9471 (started at 0x1805F9459)

		0x1805F94AD: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 2
		0x1805F94B1: Jumps to 0x1805FA14B (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 2. Implicitly present in managed code, so ignored here.
		0x1805F94B7: Sets the value at offset 2 in array local0 to {'typeFromHandle2' (type System.Type)}
		0x1805F94BD: Loads the type definition for managed type ESerifEp01_19_Rend_0001 as a constant "ESerifEp01_19_Rend_0001" in rcx
		0x1805F94C4: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEp01_19_Rend_0001' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle3' (type System.Type)}

		0x1805F94C9: Copies {'typeFromHandle3' (type System.Type)} from rax into rbx
		0x1805F94CC: [!] Compares {'typeFromHandle3' (type System.Type)} and 0
		0x1805F94CF: Jumps to 0x1805F94E9 if typeFromHandle3 equals 0 ;  - This is probably a goto, jumping to 0x1805F94E9 which is after end of current block @ 0x1805F9471 (started at 0x1805F9459)

		0x1805F94D1: Loads the class pointer from local0 into a constant constant24 in register rdx
		0x1805F94D4: Copies {'typeFromHandle3' (type System.Type)} from rax into rcx
		0x1805F94D7: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x1805F94E0: [!] Compares {'typeFromHandle3' (type System.Type)} and 0
		0x1805F94E3: Jumps to 0x1805FA15E if typeFromHandle3 equals 0 ;  - This is probably a goto, jumping to 0x1805FA15E which is after end of current block @ 0x1805F9471 (started at 0x1805F9459)

		0x1805F94E9: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 3
		0x1805F94ED: Jumps to 0x1805FA171 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 3. Implicitly present in managed code, so ignored here.
		0x1805F94F3: Sets the value at offset 3 in array local0 to {'typeFromHandle3' (type System.Type)}
		0x1805F94F9: Loads the type definition for managed type ESerifEp01_19_pol_0001 as a constant "ESerifEp01_19_pol_0001" in rcx
		0x1805F9500: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEp01_19_pol_0001' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle4' (type System.Type)}

		0x1805F9505: Copies {'typeFromHandle4' (type System.Type)} from rax into rbx
		0x1805F9508: [!] Compares {'typeFromHandle4' (type System.Type)} and 0
		0x1805F950B: Jumps to 0x1805F9525 if typeFromHandle4 equals 0 ;  - This is probably a goto, jumping to 0x1805F9525 which is after end of current block @ 0x1805F9471 (started at 0x1805F9459)

		0x1805F950D: Loads the class pointer from local0 into a constant constant29 in register rdx
		0x1805F9510: Copies {'typeFromHandle4' (type System.Type)} from rax into rcx
		0x1805F9513: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x1805F951C: [!] Compares {'typeFromHandle4' (type System.Type)} and 0
		0x1805F951F: Jumps to 0x1805FA184 if typeFromHandle4 equals 0 ;  - This is probably a goto, jumping to 0x1805FA184 which is after end of current block @ 0x1805F9471 (started at 0x1805F9459)

		0x1805F9525: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 4
		0x1805F9529: Jumps to 0x1805FA197 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 4. Implicitly present in managed code, so ignored here.
		0x1805F952F: Sets the value at offset 4 in array local0 to {'typeFromHandle4' (type System.Type)}
		0x1805F9535: Loads the type definition for managed type ESerifEp01_19_other_0000 as a constant "ESerifEp01_19_other_0000" in rcx
		0x1805F953C: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEp01_19_other_0000' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle5' (type System.Type)}

		0x1805F9541: Copies {'typeFromHandle5' (type System.Type)} from rax into rbx
		0x1805F9544: [!] Compares {'typeFromHandle5' (type System.Type)} and 0
		0x1805F9547: Jumps to 0x1805F9561 if typeFromHandle5 equals 0 ;  - This is probably a goto, jumping to 0x1805F9561 which is after end of current block @ 0x1805F9471 (started at 0x1805F9459)

		0x1805F9549: Loads the class pointer from local0 into a constant constant34 in register rdx
		0x1805F954C: Copies {'typeFromHandle5' (type System.Type)} from rax into rcx
		0x1805F954F: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x1805F9558: [!] Compares {'typeFromHandle5' (type System.Type)} and 0
		0x1805F955B: Jumps to 0x1805FA1AA if typeFromHandle5 equals 0 ;  - This is probably a goto, jumping to 0x1805FA1AA which is after end of current block @ 0x1805F9471 (started at 0x1805F9459)

		0x1805F9561: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 5
		0x1805F9565: Jumps to 0x1805FA1BD (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 5. Implicitly present in managed code, so ignored here.
		0x1805F956B: Sets the value at offset 5 in array local0 to {'typeFromHandle5' (type System.Type)}
		0x1805F9571: Loads the type definition for managed type ESerifEp01_19_other_0500 as a constant "ESerifEp01_19_other_0500" in rcx
		0x1805F9578: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEp01_19_other_0500' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle6' (type System.Type)}

		0x1805F957D: Copies {'typeFromHandle6' (type System.Type)} from rax into rbx
		0x1805F9580: [!] Compares {'typeFromHandle6' (type System.Type)} and 0
		0x1805F9583: Jumps to 0x1805F959D if typeFromHandle6 equals 0 ;  - This is probably a goto, jumping to 0x1805F959D which is after end of current block @ 0x1805F9471 (started at 0x1805F9459)

		0x1805F9585: Loads the class pointer from local0 into a constant constant39 in register rdx
		0x1805F9588: Copies {'typeFromHandle6' (type System.Type)} from rax into rcx
		0x1805F958B: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x1805F9594: [!] Compares {'typeFromHandle6' (type System.Type)} and 0
		0x1805F9597: Jumps to 0x1805FA1D0 if typeFromHandle6 equals 0 ;  - This is probably a goto, jumping to 0x1805FA1D0 which is after end of current block @ 0x1805F9471 (started at 0x1805F9459)

		0x1805F959D: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 6
		0x1805F95A1: Jumps to 0x1805FA1E3 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 6. Implicitly present in managed code, so ignored here.
		0x1805F95A7: Sets the value at offset 6 in array local0 to {'typeFromHandle6' (type System.Type)}
		0x1805F95AD: Loads the type definition for managed type ESerifEp01_19_other_1000 as a constant "ESerifEp01_19_other_1000" in rcx
		0x1805F95B4: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEp01_19_other_1000' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle7' (type System.Type)}

		0x1805F95B9: Copies {'typeFromHandle7' (type System.Type)} from rax into rbx
		0x1805F95BC: [!] Compares {'typeFromHandle7' (type System.Type)} and 0
		0x1805F95BF: Jumps to 0x1805F95D9 if typeFromHandle7 equals 0 ;  - This is probably a goto, jumping to 0x1805F95D9 which is after end of current block @ 0x1805F9471 (started at 0x1805F9459)

		0x1805F95C1: Loads the class pointer from local0 into a constant constant44 in register rdx
		0x1805F95C4: Copies {'typeFromHandle7' (type System.Type)} from rax into rcx
		0x1805F95C7: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x1805F95D0: [!] Compares {'typeFromHandle7' (type System.Type)} and 0
		0x1805F95D3: Jumps to 0x1805FA1F6 if typeFromHandle7 equals 0 ;  - This is probably a goto, jumping to 0x1805FA1F6 which is after end of current block @ 0x1805F9471 (started at 0x1805F9459)

		0x1805F95D9: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 7
		0x1805F95DD: Jumps to 0x1805FA209 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 7. Implicitly present in managed code, so ignored here.
		0x1805F95E3: Sets the value at offset 7 in array local0 to {'typeFromHandle7' (type System.Type)}
		0x1805F95E9: Loads the type definition for managed type ESerifEp01_19_other_1001 as a constant "ESerifEp01_19_other_1001" in rcx
		0x1805F95F0: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEp01_19_other_1001' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle8' (type System.Type)}

		0x1805F95F5: Copies {'typeFromHandle8' (type System.Type)} from rax into rbx
		0x1805F95F8: [!] Compares {'typeFromHandle8' (type System.Type)} and 0
		0x1805F95FB: Jumps to 0x1805F9615 if typeFromHandle8 equals 0 ;  - This is probably a goto, jumping to 0x1805F9615 which is after end of current block @ 0x1805F9471 (started at 0x1805F9459)

		0x1805F95FD: Loads the class pointer from local0 into a constant constant49 in register rdx
		0x1805F9600: Copies {'typeFromHandle8' (type System.Type)} from rax into rcx
		0x1805F9603: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x1805F960C: [!] Compares {'typeFromHandle8' (type System.Type)} and 0
		0x1805F960F: Jumps to 0x1805FA21C if typeFromHandle8 equals 0 ;  - This is probably a goto, jumping to 0x1805FA21C which is after end of current block @ 0x1805F9471 (started at 0x1805F9459)

		0x1805F9615: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 8
		0x1805F9619: Jumps to 0x1805FA22F (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 8. Implicitly present in managed code, so ignored here.
		0x1805F961F: Sets the value at offset 8 in array local0 to {'typeFromHandle8' (type System.Type)}
		0x1805F9625: Loads the type definition for managed type ESerifEp01_19_other_1002 as a constant "ESerifEp01_19_other_1002" in rcx
		0x1805F962C: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEp01_19_other_1002' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle9' (type System.Type)}

		0x1805F9631: Copies {'typeFromHandle9' (type System.Type)} from rax into rbx
		0x1805F9634: [!] Compares {'typeFromHandle9' (type System.Type)} and 0
		0x1805F9637: Jumps to 0x1805F9651 if typeFromHandle9 equals 0 ;  - This is probably a goto, jumping to 0x1805F9651 which is after end of current block @ 0x1805F9471 (started at 0x1805F9459)

		0x1805F9639: Loads the class pointer from local0 into a constant constant54 in register rdx
		0x1805F963C: Copies {'typeFromHandle9' (type System.Type)} from rax into rcx
		0x1805F963F: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x1805F9648: [!] Compares {'typeFromHandle9' (type System.Type)} and 0
		0x1805F964B: Jumps to 0x1805FA242 if typeFromHandle9 equals 0 ;  - This is probably a goto, jumping to 0x1805FA242 which is after end of current block @ 0x1805F9471 (started at 0x1805F9459)

		0x1805F9651: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 9
		0x1805F9655: Jumps to 0x1805FA255 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 9. Implicitly present in managed code, so ignored here.
		0x1805F965B: Sets the value at offset 9 in array local0 to {'typeFromHandle9' (type System.Type)}
		0x1805F9661: Loads the type definition for managed type ESerifEp01_19_other_1003 as a constant "ESerifEp01_19_other_1003" in rcx
		0x1805F9668: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEp01_19_other_1003' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle10' (type System.Type)}

		0x1805F966D: Copies {'typeFromHandle10' (type System.Type)} from rax into rbx
		0x1805F9670: [!] Compares {'typeFromHandle10' (type System.Type)} and 0
		0x1805F9673: Jumps to 0x1805F968D if typeFromHandle10 equals 0 ;  - This is probably a goto, jumping to 0x1805F968D which is after end of current block @ 0x1805F9471 (started at 0x1805F9459)

		0x1805F9675: Loads the class pointer from local0 into a constant constant59 in register rdx
		0x1805F9678: Copies {'typeFromHandle10' (type System.Type)} from rax into rcx
		0x1805F967B: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x1805F9684: [!] Compares {'typeFromHandle10' (type System.Type)} and 0
		0x1805F9687: Jumps to 0x1805FA268 if typeFromHandle10 equals 0 ;  - This is probably a goto, jumping to 0x1805FA268 which is after end of current block @ 0x1805F9471 (started at 0x1805F9459)

		0x1805F968D: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 10
		0x1805F9691: Jumps to 0x1805FA27B (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 10. Implicitly present in managed code, so ignored here.
		0x1805F9697: Sets the value at offset 10 in array local0 to {'typeFromHandle10' (type System.Type)}
		0x1805F969D: Loads the type definition for managed type ESerifEp01_19_other_1004 as a constant "ESerifEp01_19_other_1004" in rcx
		0x1805F96A4: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEp01_19_other_1004' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle11' (type System.Type)}

		0x1805F96A9: Copies {'typeFromHandle11' (type System.Type)} from rax into rbx
		0x1805F96AC: [!] Compares {'typeFromHandle11' (type System.Type)} and 0
		0x1805F96AF: Jumps to 0x1805F96C9 if typeFromHandle11 equals 0 ;  - This is probably a goto, jumping to 0x1805F96C9 which is after end of current block @ 0x1805F9471 (started at 0x1805F9459)

		0x1805F96B1: Loads the class pointer from local0 into a constant constant64 in register rdx
		0x1805F96B4: Copies {'typeFromHandle11' (type System.Type)} from rax into rcx
		0x1805F96B7: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x1805F96C0: [!] Compares {'typeFromHandle11' (type System.Type)} and 0
		0x1805F96C3: Jumps to 0x1805FA28E if typeFromHandle11 equals 0 ;  - This is probably a goto, jumping to 0x1805FA28E which is after end of current block @ 0x1805F9471 (started at 0x1805F9459)

		0x1805F96C9: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 11
		0x1805F96CD: Jumps to 0x1805FA2A1 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 11. Implicitly present in managed code, so ignored here.
		0x1805F96D3: Sets the value at offset 11 in array local0 to {'typeFromHandle11' (type System.Type)}
		0x1805F96D9: Loads the type definition for managed type ESerifEp01_19_other_1005 as a constant "ESerifEp01_19_other_1005" in rcx
		0x1805F96E0: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEp01_19_other_1005' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle12' (type System.Type)}

		0x1805F96E5: Copies {'typeFromHandle12' (type System.Type)} from rax into rbx
		0x1805F96E8: [!] Compares {'typeFromHandle12' (type System.Type)} and 0
		0x1805F96EB: Jumps to 0x1805F9705 if typeFromHandle12 equals 0 ;  - This is probably a goto, jumping to 0x1805F9705 which is after end of current block @ 0x1805F9471 (started at 0x1805F9459)

		0x1805F96ED: Loads the class pointer from local0 into a constant constant69 in register rdx
		0x1805F96F0: Copies {'typeFromHandle12' (type System.Type)} from rax into rcx
		0x1805F96F3: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x1805F96FC: [!] Compares {'typeFromHandle12' (type System.Type)} and 0
		0x1805F96FF: Jumps to 0x1805FA2B4 if typeFromHandle12 equals 0 ;  - This is probably a goto, jumping to 0x1805FA2B4 which is after end of current block @ 0x1805F9471 (started at 0x1805F9459)

		0x1805F9705: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 12
		0x1805F9709: Jumps to 0x1805FA2C7 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 12. Implicitly present in managed code, so ignored here.
		0x1805F970F: Sets the value at offset 12 in array local0 to {'typeFromHandle12' (type System.Type)}
		0x1805F9718: Loads the type definition for managed type ESerifEp01_19_other_1006 as a constant "ESerifEp01_19_other_1006" in rcx
		0x1805F971F: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEp01_19_other_1006' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle13' (type System.Type)}

		0x1805F9724: Copies {'typeFromHandle13' (type System.Type)} from rax into rbx
		0x1805F9727: [!] Compares {'typeFromHandle13' (type System.Type)} and 0
		0x1805F972A: Jumps to 0x1805F9744 if typeFromHandle13 equals 0 ;  - This is probably a goto, jumping to 0x1805F9744 which is after end of current block @ 0x1805F9471 (started at 0x1805F9459)

		0x1805F972C: Loads the class pointer from local0 into a constant constant74 in register rdx
		0x1805F972F: Copies {'typeFromHandle13' (type System.Type)} from rax into rcx
		0x1805F9732: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x1805F973B: [!] Compares {'typeFromHandle13' (type System.Type)} and 0
		0x1805F973E: Jumps to 0x1805FA2DA if typeFromHandle13 equals 0 ;  - This is probably a goto, jumping to 0x1805FA2DA which is after end of current block @ 0x1805F9471 (started at 0x1805F9459)

		0x1805F9744: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 13
		0x1805F9748: Jumps to 0x1805FA2ED (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 13. Implicitly present in managed code, so ignored here.
		0x1805F974E: Sets the value at offset 13 in array local0 to {'typeFromHandle13' (type System.Type)}
		0x1805F9757: Loads the type definition for managed type ESerifEp01_19_other_1007 as a constant "ESerifEp01_19_other_1007" in rcx
		0x1805F975E: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEp01_19_other_1007' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle14' (type System.Type)}

		0x1805F9763: Copies {'typeFromHandle14' (type System.Type)} from rax into rbx
		0x1805F9766: [!] Compares {'typeFromHandle14' (type System.Type)} and 0
		0x1805F9769: Jumps to 0x1805F9783 if typeFromHandle14 equals 0 ;  - This is probably a goto, jumping to 0x1805F9783 which is after end of current block @ 0x1805F9471 (started at 0x1805F9459)

		0x1805F976B: Loads the class pointer from local0 into a constant constant79 in register rdx
		0x1805F976E: Copies {'typeFromHandle14' (type System.Type)} from rax into rcx
		0x1805F9771: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x1805F977A: [!] Compares {'typeFromHandle14' (type System.Type)} and 0
		0x1805F977D: Jumps to 0x1805FA300 if typeFromHandle14 equals 0 ;  - This is probably a goto, jumping to 0x1805FA300 which is after end of current block @ 0x1805F9471 (started at 0x1805F9459)

		0x1805F9783: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 14
		0x1805F9787: Jumps to 0x1805FA313 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 14. Implicitly present in managed code, so ignored here.
		0x1805F978D: Sets the value at offset 14 in array local0 to {'typeFromHandle14' (type System.Type)}
		0x1805F9796: Loads the type definition for managed type ESerifEp01_19_other_1008 as a constant "ESerifEp01_19_other_1008" in rcx
		0x1805F979D: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEp01_19_other_1008' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle15' (type System.Type)}

		0x1805F97A2: Copies {'typeFromHandle15' (type System.Type)} from rax into rbx
		0x1805F97A5: [!] Compares {'typeFromHandle15' (type System.Type)} and 0
		0x1805F97A8: Jumps to 0x1805F97C2 if typeFromHandle15 equals 0 ;  - This is probably a goto, jumping to 0x1805F97C2 which is after end of current block @ 0x1805F9471 (started at 0x1805F9459)

		0x1805F97AA: Loads the class pointer from local0 into a constant constant84 in register rdx
		0x1805F97AD: Copies {'typeFromHandle15' (type System.Type)} from rax into rcx
		0x1805F97B0: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x1805F97B9: [!] Compares {'typeFromHandle15' (type System.Type)} and 0
		0x1805F97BC: Jumps to 0x1805FA326 if typeFromHandle15 equals 0 ;  - This is probably a goto, jumping to 0x1805FA326 which is after end of current block @ 0x1805F9471 (started at 0x1805F9459)

		0x1805F97C2: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 15
		0x1805F97C6: Jumps to 0x1805FA339 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 15. Implicitly present in managed code, so ignored here.
		0x1805F97CC: Sets the value at offset 15 in array local0 to {'typeFromHandle15' (type System.Type)}
		0x1805F97D5: Loads the type definition for managed type ESerifEp01_19_Sce_0000 as a constant "ESerifEp01_19_Sce_0000" in rcx
		0x1805F97DC: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEp01_19_Sce_0000' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle16' (type System.Type)}

		0x1805F97E1: Copies {'typeFromHandle16' (type System.Type)} from rax into rbx
		0x1805F97E4: [!] Compares {'typeFromHandle16' (type System.Type)} and 0
		0x1805F97E7: Jumps to 0x1805F9801 if typeFromHandle16 equals 0 ;  - This is probably a goto, jumping to 0x1805F9801 which is after end of current block @ 0x1805F9471 (started at 0x1805F9459)

		0x1805F97E9: Loads the class pointer from local0 into a constant constant89 in register rdx
		0x1805F97EC: Copies {'typeFromHandle16' (type System.Type)} from rax into rcx
		0x1805F97EF: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x1805F97F8: [!] Compares {'typeFromHandle16' (type System.Type)} and 0
		0x1805F97FB: Jumps to 0x1805FA34C if typeFromHandle16 equals 0 ;  - This is probably a goto, jumping to 0x1805FA34C which is after end of current block @ 0x1805F9471 (started at 0x1805F9459)

		0x1805F9801: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 16
		0x1805F9805: Jumps to 0x1805FA35F (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 16. Implicitly present in managed code, so ignored here.
		0x1805F980B: Sets the value at offset 16 in array local0 to {'typeFromHandle16' (type System.Type)}
		0x1805F9814: Loads the type definition for managed type ESerifEp01_19_Sce_0001 as a constant "ESerifEp01_19_Sce_0001" in rcx
		0x1805F981B: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEp01_19_Sce_0001' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle17' (type System.Type)}

		0x1805F9820: Copies {'typeFromHandle17' (type System.Type)} from rax into rbx
		0x1805F9823: [!] Compares {'typeFromHandle17' (type System.Type)} and 0
		0x1805F9826: Jumps to 0x1805F9840 if typeFromHandle17 equals 0 ;  - This is probably a goto, jumping to 0x1805F9840 which is after end of current block @ 0x1805F9471 (started at 0x1805F9459)

		0x1805F9828: Loads the class pointer from local0 into a constant constant94 in register rdx
		0x1805F982B: Copies {'typeFromHandle17' (type System.Type)} from rax into rcx
		0x1805F982E: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x1805F9837: [!] Compares {'typeFromHandle17' (type System.Type)} and 0
		0x1805F983A: Jumps to 0x1805FA372 if typeFromHandle17 equals 0 ;  - This is probably a goto, jumping to 0x1805FA372 which is after end of current block @ 0x1805F9471 (started at 0x1805F9459)

		0x1805F9840: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 17
		0x1805F9844: Jumps to 0x1805FA385 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 17. Implicitly present in managed code, so ignored here.
		0x1805F984A: Sets the value at offset 17 in array local0 to {'typeFromHandle17' (type System.Type)}
		0x1805F9853: Loads the type definition for managed type ESerifEp01_19_other_1009 as a constant "ESerifEp01_19_other_1009" in rcx
		0x1805F985A: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEp01_19_other_1009' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle18' (type System.Type)}

		0x1805F985F: Copies {'typeFromHandle18' (type System.Type)} from rax into rbx
		0x1805F9862: [!] Compares {'typeFromHandle18' (type System.Type)} and 0
		0x1805F9865: Jumps to 0x1805F987F if typeFromHandle18 equals 0 ;  - This is probably a goto, jumping to 0x1805F987F which is after end of current block @ 0x1805F9471 (started at 0x1805F9459)

		0x1805F9867: Loads the class pointer from local0 into a constant constant99 in register rdx
		0x1805F986A: Copies {'typeFromHandle18' (type System.Type)} from rax into rcx
		0x1805F986D: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x1805F9876: [!] Compares {'typeFromHandle18' (type System.Type)} and 0
		0x1805F9879: Jumps to 0x1805FA398 if typeFromHandle18 equals 0 ;  - This is probably a goto, jumping to 0x1805FA398 which is after end of current block @ 0x1805F9471 (started at 0x1805F9459)

		0x1805F987F: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 18
		0x1805F9883: Jumps to 0x1805FA3AB (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 18. Implicitly present in managed code, so ignored here.
		0x1805F9889: Sets the value at offset 18 in array local0 to {'typeFromHandle18' (type System.Type)}
		0x1805F9892: Loads the type definition for managed type ESerifEp01_19_Sce_0002 as a constant "ESerifEp01_19_Sce_0002" in rcx
		0x1805F9899: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEp01_19_Sce_0002' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle19' (type System.Type)}

		0x1805F989E: Copies {'typeFromHandle19' (type System.Type)} from rax into rbx
		0x1805F98A1: [!] Compares {'typeFromHandle19' (type System.Type)} and 0
		0x1805F98A4: Jumps to 0x1805F98BE if typeFromHandle19 equals 0 ;  - This is probably a goto, jumping to 0x1805F98BE which is after end of current block @ 0x1805F9471 (started at 0x1805F9459)

		0x1805F98A6: Loads the class pointer from local0 into a constant constant104 in register rdx
		0x1805F98A9: Copies {'typeFromHandle19' (type System.Type)} from rax into rcx
		0x1805F98AC: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x1805F98B5: [!] Compares {'typeFromHandle19' (type System.Type)} and 0
		0x1805F98B8: Jumps to 0x1805FA3BE if typeFromHandle19 equals 0 ;  - This is probably a goto, jumping to 0x1805FA3BE which is after end of current block @ 0x1805F9471 (started at 0x1805F9459)

		0x1805F98BE: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 19
		0x1805F98C2: Jumps to 0x1805FA3D1 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 19. Implicitly present in managed code, so ignored here.
		0x1805F98C8: Sets the value at offset 19 in array local0 to {'typeFromHandle19' (type System.Type)}
		0x1805F98D1: Loads the type definition for managed type ESerifEp01_19_other_0001 as a constant "ESerifEp01_19_other_0001" in rcx
		0x1805F98D8: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEp01_19_other_0001' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle20' (type System.Type)}

		0x1805F98DD: Copies {'typeFromHandle20' (type System.Type)} from rax into rbx
		0x1805F98E0: [!] Compares {'typeFromHandle20' (type System.Type)} and 0
		0x1805F98E3: Jumps to 0x1805F98FD if typeFromHandle20 equals 0 ;  - This is probably a goto, jumping to 0x1805F98FD which is after end of current block @ 0x1805F9471 (started at 0x1805F9459)

		0x1805F98E5: Loads the class pointer from local0 into a constant constant109 in register rdx
		0x1805F98E8: Copies {'typeFromHandle20' (type System.Type)} from rax into rcx
		0x1805F98EB: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x1805F98F4: [!] Compares {'typeFromHandle20' (type System.Type)} and 0
		0x1805F98F7: Jumps to 0x1805FA3E4 if typeFromHandle20 equals 0 ;  - This is probably a goto, jumping to 0x1805FA3E4 which is after end of current block @ 0x1805F9471 (started at 0x1805F9459)

		0x1805F98FD: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 20
		0x1805F9901: Jumps to 0x1805FA3F7 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 20. Implicitly present in managed code, so ignored here.
		0x1805F9907: Sets the value at offset 20 in array local0 to {'typeFromHandle20' (type System.Type)}
		0x1805F9910: Loads the type definition for managed type ESerifEp01_19_Inter_O_0000 as a constant "ESerifEp01_19_Inter_O_0000" in rcx
		0x1805F9917: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEp01_19_Inter_O_0000' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle21' (type System.Type)}

		0x1805F991C: Copies {'typeFromHandle21' (type System.Type)} from rax into rbx
		0x1805F991F: [!] Compares {'typeFromHandle21' (type System.Type)} and 0
		0x1805F9922: Jumps to 0x1805F993C if typeFromHandle21 equals 0 ;  - This is probably a goto, jumping to 0x1805F993C which is after end of current block @ 0x1805F9471 (started at 0x1805F9459)

		0x1805F9924: Loads the class pointer from local0 into a constant constant114 in register rdx
		0x1805F9927: Copies {'typeFromHandle21' (type System.Type)} from rax into rcx
		0x1805F992A: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x1805F9933: [!] Compares {'typeFromHandle21' (type System.Type)} and 0
		0x1805F9936: Jumps to 0x1805FA40A if typeFromHandle21 equals 0 ;  - This is probably a goto, jumping to 0x1805FA40A which is after end of current block @ 0x1805F9471 (started at 0x1805F9459)

		0x1805F993C: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 21
		0x1805F9940: Jumps to 0x1805FA41D (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 21. Implicitly present in managed code, so ignored here.
		0x1805F9946: Sets the value at offset 21 in array local0 to {'typeFromHandle21' (type System.Type)}
		0x1805F994F: Loads the type definition for managed type ESerifEp01_19_Inter_T_0000 as a constant "ESerifEp01_19_Inter_T_0000" in rcx
		0x1805F9956: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEp01_19_Inter_T_0000' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle22' (type System.Type)}

		0x1805F995B: Copies {'typeFromHandle22' (type System.Type)} from rax into rbx
		0x1805F995E: [!] Compares {'typeFromHandle22' (type System.Type)} and 0
		0x1805F9961: Jumps to 0x1805F997B if typeFromHandle22 equals 0 ;  - This is probably a goto, jumping to 0x1805F997B which is after end of current block @ 0x1805F9471 (started at 0x1805F9459)

		0x1805F9963: Loads the class pointer from local0 into a constant constant119 in register rdx
		0x1805F9966: Copies {'typeFromHandle22' (type System.Type)} from rax into rcx
		0x1805F9969: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x1805F9972: [!] Compares {'typeFromHandle22' (type System.Type)} and 0
		0x1805F9975: Jumps to 0x1805FA430 if typeFromHandle22 equals 0 ;  - This is probably a goto, jumping to 0x1805FA430 which is after end of current block @ 0x1805F9471 (started at 0x1805F9459)

		0x1805F997B: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 22
		0x1805F997F: Jumps to 0x1805FA443 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 22. Implicitly present in managed code, so ignored here.
		0x1805F9985: Sets the value at offset 22 in array local0 to {'typeFromHandle22' (type System.Type)}
		0x1805F998E: Loads the type definition for managed type ESerifEp01_19_other_0002 as a constant "ESerifEp01_19_other_0002" in rcx
		0x1805F9995: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEp01_19_other_0002' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle23' (type System.Type)}

		0x1805F999A: Copies {'typeFromHandle23' (type System.Type)} from rax into rbx
		0x1805F999D: [!] Compares {'typeFromHandle23' (type System.Type)} and 0
		0x1805F99A0: Jumps to 0x1805F99BA if typeFromHandle23 equals 0 ;  - This is probably a goto, jumping to 0x1805F99BA which is after end of current block @ 0x1805F9471 (started at 0x1805F9459)

		0x1805F99A2: Loads the class pointer from local0 into a constant constant124 in register rdx
		0x1805F99A5: Copies {'typeFromHandle23' (type System.Type)} from rax into rcx
		0x1805F99A8: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x1805F99B1: [!] Compares {'typeFromHandle23' (type System.Type)} and 0
		0x1805F99B4: Jumps to 0x1805FA456 if typeFromHandle23 equals 0 ;  - This is probably a goto, jumping to 0x1805FA456 which is after end of current block @ 0x1805F9471 (started at 0x1805F9459)

		0x1805F99BA: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 23
		0x1805F99BE: Jumps to 0x1805FA469 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 23. Implicitly present in managed code, so ignored here.
		0x1805F99C4: Sets the value at offset 23 in array local0 to {'typeFromHandle23' (type System.Type)}
		0x1805F99CD: Loads the type definition for managed type ESerifEp01_19_Inter_O_0001 as a constant "ESerifEp01_19_Inter_O_0001" in rcx
		0x1805F99D4: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEp01_19_Inter_O_0001' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle24' (type System.Type)}

		0x1805F99D9: Copies {'typeFromHandle24' (type System.Type)} from rax into rbx
		0x1805F99DC: [!] Compares {'typeFromHandle24' (type System.Type)} and 0
		0x1805F99DF: Jumps to 0x1805F99F9 if typeFromHandle24 equals 0 ;  - This is probably a goto, jumping to 0x1805F99F9 which is after end of current block @ 0x1805F9471 (started at 0x1805F9459)

		0x1805F99E1: Loads the class pointer from local0 into a constant constant129 in register rdx
		0x1805F99E4: Copies {'typeFromHandle24' (type System.Type)} from rax into rcx
		0x1805F99E7: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x1805F99F0: [!] Compares {'typeFromHandle24' (type System.Type)} and 0
		0x1805F99F3: Jumps to 0x1805FA47C if typeFromHandle24 equals 0 ;  - This is probably a goto, jumping to 0x1805FA47C which is after end of current block @ 0x1805F9471 (started at 0x1805F9459)

		0x1805F99F9: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 24
		0x1805F99FD: Jumps to 0x1805FA48F (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 24. Implicitly present in managed code, so ignored here.
		0x1805F9A03: Sets the value at offset 24 in array local0 to {'typeFromHandle24' (type System.Type)}
		0x1805F9A0C: Loads the type definition for managed type ESerifEp01_19_Inter_T_0001 as a constant "ESerifEp01_19_Inter_T_0001" in rcx
		0x1805F9A13: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEp01_19_Inter_T_0001' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle25' (type System.Type)}

		0x1805F9A18: Copies {'typeFromHandle25' (type System.Type)} from rax into rbx
		0x1805F9A1B: [!] Compares {'typeFromHandle25' (type System.Type)} and 0
		0x1805F9A1E: Jumps to 0x1805F9A38 if typeFromHandle25 equals 0 ;  - This is probably a goto, jumping to 0x1805F9A38 which is after end of current block @ 0x1805F9471 (started at 0x1805F9459)

		0x1805F9A20: Loads the class pointer from local0 into a constant constant134 in register rdx
		0x1805F9A23: Copies {'typeFromHandle25' (type System.Type)} from rax into rcx
		0x1805F9A26: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x1805F9A2F: [!] Compares {'typeFromHandle25' (type System.Type)} and 0
		0x1805F9A32: Jumps to 0x1805FA4A2 if typeFromHandle25 equals 0 ;  - This is probably a goto, jumping to 0x1805FA4A2 which is after end of current block @ 0x1805F9471 (started at 0x1805F9459)

		0x1805F9A38: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 25
		0x1805F9A3C: Jumps to 0x1805FA4B5 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 25. Implicitly present in managed code, so ignored here.
		0x1805F9A42: Sets the value at offset 25 in array local0 to {'typeFromHandle25' (type System.Type)}
		0x1805F9A4B: Loads the type definition for managed type ESerifEp01_19_other_0003 as a constant "ESerifEp01_19_other_0003" in rcx
		0x1805F9A52: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEp01_19_other_0003' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle26' (type System.Type)}

		0x1805F9A57: Copies {'typeFromHandle26' (type System.Type)} from rax into rbx
		0x1805F9A5A: [!] Compares {'typeFromHandle26' (type System.Type)} and 0
		0x1805F9A5D: Jumps to 0x1805F9A77 if typeFromHandle26 equals 0 ;  - This is probably a goto, jumping to 0x1805F9A77 which is after end of current block @ 0x1805F9471 (started at 0x1805F9459)

		0x1805F9A5F: Loads the class pointer from local0 into a constant constant139 in register rdx
		0x1805F9A62: Copies {'typeFromHandle26' (type System.Type)} from rax into rcx
		0x1805F9A65: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x1805F9A6E: [!] Compares {'typeFromHandle26' (type System.Type)} and 0
		0x1805F9A71: Jumps to 0x1805FA4C8 if typeFromHandle26 equals 0 ;  - This is probably a goto, jumping to 0x1805FA4C8 which is after end of current block @ 0x1805F9471 (started at 0x1805F9459)

		0x1805F9A77: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 26
		0x1805F9A7B: Jumps to 0x1805FA4DB (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 26. Implicitly present in managed code, so ignored here.
		0x1805F9A81: Sets the value at offset 26 in array local0 to {'typeFromHandle26' (type System.Type)}
		0x1805F9A8A: Loads the type definition for managed type ESerifEp01_19_Inter_O_0002 as a constant "ESerifEp01_19_Inter_O_0002" in rcx
		0x1805F9A91: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEp01_19_Inter_O_0002' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle27' (type System.Type)}

		0x1805F9A96: Copies {'typeFromHandle27' (type System.Type)} from rax into rbx
		0x1805F9A99: [!] Compares {'typeFromHandle27' (type System.Type)} and 0
		0x1805F9A9C: Jumps to 0x1805F9AB6 if typeFromHandle27 equals 0 ;  - This is probably a goto, jumping to 0x1805F9AB6 which is after end of current block @ 0x1805F9471 (started at 0x1805F9459)

		0x1805F9A9E: Loads the class pointer from local0 into a constant constant144 in register rdx
		0x1805F9AA1: Copies {'typeFromHandle27' (type System.Type)} from rax into rcx
		0x1805F9AA4: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x1805F9AAD: [!] Compares {'typeFromHandle27' (type System.Type)} and 0
		0x1805F9AB0: Jumps to 0x1805FA4EE if typeFromHandle27 equals 0 ;  - This is probably a goto, jumping to 0x1805FA4EE which is after end of current block @ 0x1805F9471 (started at 0x1805F9459)

		0x1805F9AB6: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 27
		0x1805F9ABA: Jumps to 0x1805FA501 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 27. Implicitly present in managed code, so ignored here.
		0x1805F9AC0: Sets the value at offset 27 in array local0 to {'typeFromHandle27' (type System.Type)}
		0x1805F9AC9: Loads the type definition for managed type ESerifEp01_19_Inter_T_0002 as a constant "ESerifEp01_19_Inter_T_0002" in rcx
		0x1805F9AD0: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEp01_19_Inter_T_0002' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle28' (type System.Type)}

		0x1805F9AD5: Copies {'typeFromHandle28' (type System.Type)} from rax into rbx
		0x1805F9AD8: [!] Compares {'typeFromHandle28' (type System.Type)} and 0
		0x1805F9ADB: Jumps to 0x1805F9AF5 if typeFromHandle28 equals 0 ;  - This is probably a goto, jumping to 0x1805F9AF5 which is after end of current block @ 0x1805F9471 (started at 0x1805F9459)

		0x1805F9ADD: Loads the class pointer from local0 into a constant constant149 in register rdx
		0x1805F9AE0: Copies {'typeFromHandle28' (type System.Type)} from rax into rcx
		0x1805F9AE3: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x1805F9AEC: [!] Compares {'typeFromHandle28' (type System.Type)} and 0
		0x1805F9AEF: Jumps to 0x1805FA514 if typeFromHandle28 equals 0 ;  - This is probably a goto, jumping to 0x1805FA514 which is after end of current block @ 0x1805F9471 (started at 0x1805F9459)

		0x1805F9AF5: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 28
		0x1805F9AF9: Jumps to 0x1805FA527 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 28. Implicitly present in managed code, so ignored here.
		0x1805F9AFF: Sets the value at offset 28 in array local0 to {'typeFromHandle28' (type System.Type)}
		0x1805F9B08: Loads the type definition for managed type ESerifEp01_19_other_0004 as a constant "ESerifEp01_19_other_0004" in rcx
		0x1805F9B0F: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEp01_19_other_0004' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle29' (type System.Type)}

		0x1805F9B14: Copies {'typeFromHandle29' (type System.Type)} from rax into rbx
		0x1805F9B17: [!] Compares {'typeFromHandle29' (type System.Type)} and 0
		0x1805F9B1A: Jumps to 0x1805F9B34 if typeFromHandle29 equals 0 ;  - This is probably a goto, jumping to 0x1805F9B34 which is after end of current block @ 0x1805F9471 (started at 0x1805F9459)

		0x1805F9B1C: Loads the class pointer from local0 into a constant constant154 in register rdx
		0x1805F9B1F: Copies {'typeFromHandle29' (type System.Type)} from rax into rcx
		0x1805F9B22: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x1805F9B2B: [!] Compares {'typeFromHandle29' (type System.Type)} and 0
		0x1805F9B2E: Jumps to 0x1805FA53A if typeFromHandle29 equals 0 ;  - This is probably a goto, jumping to 0x1805FA53A which is after end of current block @ 0x1805F9471 (started at 0x1805F9459)

		0x1805F9B34: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 29
		0x1805F9B38: Jumps to 0x1805FA54D (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 29. Implicitly present in managed code, so ignored here.
		0x1805F9B3E: Sets the value at offset 29 in array local0 to {'typeFromHandle29' (type System.Type)}
		0x1805F9B47: Loads the type definition for managed type ESerifEp01_19_Inter_O_0003 as a constant "ESerifEp01_19_Inter_O_0003" in rcx
		0x1805F9B4E: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEp01_19_Inter_O_0003' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle30' (type System.Type)}

		0x1805F9B53: Copies {'typeFromHandle30' (type System.Type)} from rax into rbx
		0x1805F9B56: [!] Compares {'typeFromHandle30' (type System.Type)} and 0
		0x1805F9B59: Jumps to 0x1805F9B73 if typeFromHandle30 equals 0 ;  - This is probably a goto, jumping to 0x1805F9B73 which is after end of current block @ 0x1805F9471 (started at 0x1805F9459)

		0x1805F9B5B: Loads the class pointer from local0 into a constant constant159 in register rdx
		0x1805F9B5E: Copies {'typeFromHandle30' (type System.Type)} from rax into rcx
		0x1805F9B61: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x1805F9B6A: [!] Compares {'typeFromHandle30' (type System.Type)} and 0
		0x1805F9B6D: Jumps to 0x1805FA560 if typeFromHandle30 equals 0 ;  - This is probably a goto, jumping to 0x1805FA560 which is after end of current block @ 0x1805F9471 (started at 0x1805F9459)

		0x1805F9B73: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 30
		0x1805F9B77: Jumps to 0x1805FA573 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 30. Implicitly present in managed code, so ignored here.
		0x1805F9B7D: Sets the value at offset 30 in array local0 to {'typeFromHandle30' (type System.Type)}
		0x1805F9B86: Loads the type definition for managed type ESerifEp01_19_Inter_T_0003 as a constant "ESerifEp01_19_Inter_T_0003" in rcx
		0x1805F9B8D: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEp01_19_Inter_T_0003' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle31' (type System.Type)}

		0x1805F9B92: Copies {'typeFromHandle31' (type System.Type)} from rax into rbx
		0x1805F9B95: [!] Compares {'typeFromHandle31' (type System.Type)} and 0
		0x1805F9B98: Jumps to 0x1805F9BB2 if typeFromHandle31 equals 0 ;  - This is probably a goto, jumping to 0x1805F9BB2 which is after end of current block @ 0x1805F9471 (started at 0x1805F9459)

		0x1805F9B9A: Loads the class pointer from local0 into a constant constant164 in register rdx
		0x1805F9B9D: Copies {'typeFromHandle31' (type System.Type)} from rax into rcx
		0x1805F9BA0: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x1805F9BA9: [!] Compares {'typeFromHandle31' (type System.Type)} and 0
		0x1805F9BAC: Jumps to 0x1805FA586 if typeFromHandle31 equals 0 ;  - This is probably a goto, jumping to 0x1805FA586 which is after end of current block @ 0x1805F9471 (started at 0x1805F9459)

		0x1805F9BB2: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 31
		0x1805F9BB6: Jumps to 0x1805FA599 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 31. Implicitly present in managed code, so ignored here.
		0x1805F9BBC: Sets the value at offset 31 in array local0 to {'typeFromHandle31' (type System.Type)}
		0x1805F9BC5: Loads the type definition for managed type ESerifEp01_19_Inter_O_0004 as a constant "ESerifEp01_19_Inter_O_0004" in rcx
		0x1805F9BCC: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEp01_19_Inter_O_0004' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle32' (type System.Type)}

		0x1805F9BD1: Copies {'typeFromHandle32' (type System.Type)} from rax into rbx
		0x1805F9BD4: [!] Compares {'typeFromHandle32' (type System.Type)} and 0
		0x1805F9BD7: Jumps to 0x1805F9BF1 if typeFromHandle32 equals 0 ;  - This is probably a goto, jumping to 0x1805F9BF1 which is after end of current block @ 0x1805F9471 (started at 0x1805F9459)

		0x1805F9BD9: Loads the class pointer from local0 into a constant constant169 in register rdx
		0x1805F9BDC: Copies {'typeFromHandle32' (type System.Type)} from rax into rcx
		0x1805F9BDF: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x1805F9BE8: [!] Compares {'typeFromHandle32' (type System.Type)} and 0
		0x1805F9BEB: Jumps to 0x1805FA5AC if typeFromHandle32 equals 0 ;  - This is probably a goto, jumping to 0x1805FA5AC which is after end of current block @ 0x1805F9471 (started at 0x1805F9459)

		0x1805F9BF1: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 32
		0x1805F9BF5: Jumps to 0x1805FA5BF (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 32. Implicitly present in managed code, so ignored here.
		0x1805F9BFB: Sets the value at offset 32 in array local0 to {'typeFromHandle32' (type System.Type)}
		0x1805F9C04: Loads the type definition for managed type ESerifEp01_19_Inter_T_0004 as a constant "ESerifEp01_19_Inter_T_0004" in rcx
		0x1805F9C0B: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEp01_19_Inter_T_0004' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle33' (type System.Type)}

		0x1805F9C10: Copies {'typeFromHandle33' (type System.Type)} from rax into rbx
		0x1805F9C13: [!] Compares {'typeFromHandle33' (type System.Type)} and 0
		0x1805F9C16: Jumps to 0x1805F9C30 if typeFromHandle33 equals 0 ;  - This is probably a goto, jumping to 0x1805F9C30 which is after end of current block @ 0x1805F9471 (started at 0x1805F9459)

		0x1805F9C18: Loads the class pointer from local0 into a constant constant174 in register rdx
		0x1805F9C1B: Copies {'typeFromHandle33' (type System.Type)} from rax into rcx
		0x1805F9C1E: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x1805F9C27: [!] Compares {'typeFromHandle33' (type System.Type)} and 0
		0x1805F9C2A: Jumps to 0x1805FA5D2 if typeFromHandle33 equals 0 ;  - This is probably a goto, jumping to 0x1805FA5D2 which is after end of current block @ 0x1805F9471 (started at 0x1805F9459)

		0x1805F9C30: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 33
		0x1805F9C34: Jumps to 0x1805FA5E5 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 33. Implicitly present in managed code, so ignored here.
		0x1805F9C3A: Sets the value at offset 33 in array local0 to {'typeFromHandle33' (type System.Type)}
		0x1805F9C43: Loads the type definition for managed type ESerifEp01_19_other_0005 as a constant "ESerifEp01_19_other_0005" in rcx
		0x1805F9C4A: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEp01_19_other_0005' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle34' (type System.Type)}

		0x1805F9C4F: Copies {'typeFromHandle34' (type System.Type)} from rax into rbx
		0x1805F9C52: [!] Compares {'typeFromHandle34' (type System.Type)} and 0
		0x1805F9C55: Jumps to 0x1805F9C6F if typeFromHandle34 equals 0 ;  - This is probably a goto, jumping to 0x1805F9C6F which is after end of current block @ 0x1805F9471 (started at 0x1805F9459)

		0x1805F9C57: Loads the class pointer from local0 into a constant constant179 in register rdx
		0x1805F9C5A: Copies {'typeFromHandle34' (type System.Type)} from rax into rcx
		0x1805F9C5D: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x1805F9C66: [!] Compares {'typeFromHandle34' (type System.Type)} and 0
		0x1805F9C69: Jumps to 0x1805FA5F8 if typeFromHandle34 equals 0 ;  - This is probably a goto, jumping to 0x1805FA5F8 which is after end of current block @ 0x1805F9471 (started at 0x1805F9459)

		0x1805F9C6F: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 34
		0x1805F9C73: Jumps to 0x1805FA60B (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 34. Implicitly present in managed code, so ignored here.
		0x1805F9C79: Sets the value at offset 34 in array local0 to {'typeFromHandle34' (type System.Type)}
		0x1805F9C82: Loads the type definition for managed type ESerifEp01_19_Inter_O_0005 as a constant "ESerifEp01_19_Inter_O_0005" in rcx
		0x1805F9C89: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEp01_19_Inter_O_0005' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle35' (type System.Type)}

		0x1805F9C8E: Copies {'typeFromHandle35' (type System.Type)} from rax into rbx
		0x1805F9C91: [!] Compares {'typeFromHandle35' (type System.Type)} and 0
		0x1805F9C94: Jumps to 0x1805F9CAE if typeFromHandle35 equals 0 ;  - This is probably a goto, jumping to 0x1805F9CAE which is after end of current block @ 0x1805F9471 (started at 0x1805F9459)

		0x1805F9C96: Loads the class pointer from local0 into a constant constant184 in register rdx
		0x1805F9C99: Copies {'typeFromHandle35' (type System.Type)} from rax into rcx
		0x1805F9C9C: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x1805F9CA5: [!] Compares {'typeFromHandle35' (type System.Type)} and 0
		0x1805F9CA8: Jumps to 0x1805FA61E if typeFromHandle35 equals 0 ;  - This is probably a goto, jumping to 0x1805FA61E which is after end of current block @ 0x1805F9471 (started at 0x1805F9459)

		0x1805F9CAE: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 35
		0x1805F9CB2: Jumps to 0x1805FA631 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 35. Implicitly present in managed code, so ignored here.
		0x1805F9CB8: Sets the value at offset 35 in array local0 to {'typeFromHandle35' (type System.Type)}
		0x1805F9CC1: Loads the type definition for managed type ESerifEp01_19_Inter_T_0005 as a constant "ESerifEp01_19_Inter_T_0005" in rcx
		0x1805F9CC8: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEp01_19_Inter_T_0005' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle36' (type System.Type)}

		0x1805F9CCD: Copies {'typeFromHandle36' (type System.Type)} from rax into rbx
		0x1805F9CD0: [!] Compares {'typeFromHandle36' (type System.Type)} and 0
		0x1805F9CD3: Jumps to 0x1805F9CED if typeFromHandle36 equals 0 ;  - This is probably a goto, jumping to 0x1805F9CED which is after end of current block @ 0x1805F9471 (started at 0x1805F9459)

		0x1805F9CD5: Loads the class pointer from local0 into a constant constant189 in register rdx
		0x1805F9CD8: Copies {'typeFromHandle36' (type System.Type)} from rax into rcx
		0x1805F9CDB: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x1805F9CE4: [!] Compares {'typeFromHandle36' (type System.Type)} and 0
		0x1805F9CE7: Jumps to 0x1805FA644 if typeFromHandle36 equals 0 ;  - This is probably a goto, jumping to 0x1805FA644 which is after end of current block @ 0x1805F9471 (started at 0x1805F9459)

		0x1805F9CED: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 36
		0x1805F9CF1: Jumps to 0x1805FA657 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 36. Implicitly present in managed code, so ignored here.
		0x1805F9CF7: Sets the value at offset 36 in array local0 to {'typeFromHandle36' (type System.Type)}
		0x1805F9D00: Loads the type definition for managed type ESerifEp01_19_other_0006 as a constant "ESerifEp01_19_other_0006" in rcx
		0x1805F9D07: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEp01_19_other_0006' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle37' (type System.Type)}

		0x1805F9D0C: Copies {'typeFromHandle37' (type System.Type)} from rax into rbx
		0x1805F9D0F: [!] Compares {'typeFromHandle37' (type System.Type)} and 0
		0x1805F9D12: Jumps to 0x1805F9D2C if typeFromHandle37 equals 0 ;  - This is probably a goto, jumping to 0x1805F9D2C which is after end of current block @ 0x1805F9471 (started at 0x1805F9459)

		0x1805F9D14: Loads the class pointer from local0 into a constant constant194 in register rdx
		0x1805F9D17: Copies {'typeFromHandle37' (type System.Type)} from rax into rcx
		0x1805F9D1A: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x1805F9D23: [!] Compares {'typeFromHandle37' (type System.Type)} and 0
		0x1805F9D26: Jumps to 0x1805FA66A if typeFromHandle37 equals 0 ;  - This is probably a goto, jumping to 0x1805FA66A which is after end of current block @ 0x1805F9471 (started at 0x1805F9459)

		0x1805F9D2C: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 37
		0x1805F9D30: Jumps to 0x1805FA67D (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 37. Implicitly present in managed code, so ignored here.
		0x1805F9D36: Sets the value at offset 37 in array local0 to {'typeFromHandle37' (type System.Type)}
		0x1805F9D3F: Loads the type definition for managed type ESerifEp01_19_Inter_O_0006 as a constant "ESerifEp01_19_Inter_O_0006" in rcx
		0x1805F9D46: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEp01_19_Inter_O_0006' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle38' (type System.Type)}

		0x1805F9D4B: Copies {'typeFromHandle38' (type System.Type)} from rax into rbx
		0x1805F9D4E: [!] Compares {'typeFromHandle38' (type System.Type)} and 0
		0x1805F9D51: Jumps to 0x1805F9D6B if typeFromHandle38 equals 0 ;  - This is probably a goto, jumping to 0x1805F9D6B which is after end of current block @ 0x1805F9471 (started at 0x1805F9459)

		0x1805F9D53: Loads the class pointer from local0 into a constant constant199 in register rdx
		0x1805F9D56: Copies {'typeFromHandle38' (type System.Type)} from rax into rcx
		0x1805F9D59: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x1805F9D62: [!] Compares {'typeFromHandle38' (type System.Type)} and 0
		0x1805F9D65: Jumps to 0x1805FA690 if typeFromHandle38 equals 0 ;  - This is probably a goto, jumping to 0x1805FA690 which is after end of current block @ 0x1805F9471 (started at 0x1805F9459)

		0x1805F9D6B: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 38
		0x1805F9D6F: Jumps to 0x1805FA6A3 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 38. Implicitly present in managed code, so ignored here.
		0x1805F9D75: Sets the value at offset 38 in array local0 to {'typeFromHandle38' (type System.Type)}
		0x1805F9D7E: Loads the type definition for managed type ESerifEp01_19_Inter_T_0006 as a constant "ESerifEp01_19_Inter_T_0006" in rcx
		0x1805F9D85: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEp01_19_Inter_T_0006' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle39' (type System.Type)}

		0x1805F9D8A: Copies {'typeFromHandle39' (type System.Type)} from rax into rbx
		0x1805F9D8D: [!] Compares {'typeFromHandle39' (type System.Type)} and 0
		0x1805F9D90: Jumps to 0x1805F9DAA if typeFromHandle39 equals 0 ;  - This is probably a goto, jumping to 0x1805F9DAA which is after end of current block @ 0x1805F9471 (started at 0x1805F9459)

		0x1805F9D92: Loads the class pointer from local0 into a constant constant204 in register rdx
		0x1805F9D95: Copies {'typeFromHandle39' (type System.Type)} from rax into rcx
		0x1805F9D98: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x1805F9DA1: [!] Compares {'typeFromHandle39' (type System.Type)} and 0
		0x1805F9DA4: Jumps to 0x1805FA6B6 if typeFromHandle39 equals 0 ;  - This is probably a goto, jumping to 0x1805FA6B6 which is after end of current block @ 0x1805F9471 (started at 0x1805F9459)

		0x1805F9DAA: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 39
		0x1805F9DAE: Jumps to 0x1805FA6C9 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 39. Implicitly present in managed code, so ignored here.
		0x1805F9DB4: Sets the value at offset 39 in array local0 to {'typeFromHandle39' (type System.Type)}
		0x1805F9DBD: Loads the type definition for managed type ESerifEp01_19_Sce_0003 as a constant "ESerifEp01_19_Sce_0003" in rcx
		0x1805F9DC4: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEp01_19_Sce_0003' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle40' (type System.Type)}

		0x1805F9DC9: Copies {'typeFromHandle40' (type System.Type)} from rax into rbx
		0x1805F9DCC: [!] Compares {'typeFromHandle40' (type System.Type)} and 0
		0x1805F9DCF: Jumps to 0x1805F9DE9 if typeFromHandle40 equals 0 ;  - This is probably a goto, jumping to 0x1805F9DE9 which is after end of current block @ 0x1805F9471 (started at 0x1805F9459)

		0x1805F9DD1: Loads the class pointer from local0 into a constant constant209 in register rdx
		0x1805F9DD4: Copies {'typeFromHandle40' (type System.Type)} from rax into rcx
		0x1805F9DD7: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x1805F9DE0: [!] Compares {'typeFromHandle40' (type System.Type)} and 0
		0x1805F9DE3: Jumps to 0x1805FA6DC if typeFromHandle40 equals 0 ;  - This is probably a goto, jumping to 0x1805FA6DC which is after end of current block @ 0x1805F9471 (started at 0x1805F9459)

		0x1805F9DE9: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 40
		0x1805F9DED: Jumps to 0x1805FA6EF (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 40. Implicitly present in managed code, so ignored here.
		0x1805F9DF3: Sets the value at offset 40 in array local0 to {'typeFromHandle40' (type System.Type)}
		0x1805F9DFC: Loads the type definition for managed type ESerifEp01_19_other_0007 as a constant "ESerifEp01_19_other_0007" in rcx
		0x1805F9E03: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEp01_19_other_0007' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle41' (type System.Type)}

		0x1805F9E08: Copies {'typeFromHandle41' (type System.Type)} from rax into rbx
		0x1805F9E0B: [!] Compares {'typeFromHandle41' (type System.Type)} and 0
		0x1805F9E0E: Jumps to 0x1805F9E28 if typeFromHandle41 equals 0 ;  - This is probably a goto, jumping to 0x1805F9E28 which is after end of current block @ 0x1805F9471 (started at 0x1805F9459)

		0x1805F9E10: Loads the class pointer from local0 into a constant constant214 in register rdx
		0x1805F9E13: Copies {'typeFromHandle41' (type System.Type)} from rax into rcx
		0x1805F9E16: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x1805F9E1F: [!] Compares {'typeFromHandle41' (type System.Type)} and 0
		0x1805F9E22: Jumps to 0x1805FA702 if typeFromHandle41 equals 0 ;  - This is probably a goto, jumping to 0x1805FA702 which is after end of current block @ 0x1805F9471 (started at 0x1805F9459)

		0x1805F9E28: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 41
		0x1805F9E2C: Jumps to 0x1805FA715 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 41. Implicitly present in managed code, so ignored here.
		0x1805F9E32: Sets the value at offset 41 in array local0 to {'typeFromHandle41' (type System.Type)}
		0x1805F9E3B: Loads the type definition for managed type ESerifEp01_19_Inter_O_0007 as a constant "ESerifEp01_19_Inter_O_0007" in rcx
		0x1805F9E42: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEp01_19_Inter_O_0007' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle42' (type System.Type)}

		0x1805F9E47: Copies {'typeFromHandle42' (type System.Type)} from rax into rbx
		0x1805F9E4A: [!] Compares {'typeFromHandle42' (type System.Type)} and 0
		0x1805F9E4D: Jumps to 0x1805F9E67 if typeFromHandle42 equals 0 ;  - This is probably a goto, jumping to 0x1805F9E67 which is after end of current block @ 0x1805F9471 (started at 0x1805F9459)

		0x1805F9E4F: Loads the class pointer from local0 into a constant constant219 in register rdx
		0x1805F9E52: Copies {'typeFromHandle42' (type System.Type)} from rax into rcx
		0x1805F9E55: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x1805F9E5E: [!] Compares {'typeFromHandle42' (type System.Type)} and 0
		0x1805F9E61: Jumps to 0x1805FA728 if typeFromHandle42 equals 0 ;  - This is probably a goto, jumping to 0x1805FA728 which is after end of current block @ 0x1805F9471 (started at 0x1805F9459)

		0x1805F9E67: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 42
		0x1805F9E6B: Jumps to 0x1805FA73B (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 42. Implicitly present in managed code, so ignored here.
		0x1805F9E71: Sets the value at offset 42 in array local0 to {'typeFromHandle42' (type System.Type)}
		0x1805F9E7A: Loads the type definition for managed type ESerifEp01_19_Inter_T_0007 as a constant "ESerifEp01_19_Inter_T_0007" in rcx
		0x1805F9E81: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEp01_19_Inter_T_0007' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle43' (type System.Type)}

		0x1805F9E86: Copies {'typeFromHandle43' (type System.Type)} from rax into rbx
		0x1805F9E89: [!] Compares {'typeFromHandle43' (type System.Type)} and 0
		0x1805F9E8C: Jumps to 0x1805F9EA6 if typeFromHandle43 equals 0 ;  - This is probably a goto, jumping to 0x1805F9EA6 which is after end of current block @ 0x1805F9471 (started at 0x1805F9459)

		0x1805F9E8E: Loads the class pointer from local0 into a constant constant224 in register rdx
		0x1805F9E91: Copies {'typeFromHandle43' (type System.Type)} from rax into rcx
		0x1805F9E94: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x1805F9E9D: [!] Compares {'typeFromHandle43' (type System.Type)} and 0
		0x1805F9EA0: Jumps to 0x1805FA74E if typeFromHandle43 equals 0 ;  - This is probably a goto, jumping to 0x1805FA74E which is after end of current block @ 0x1805F9471 (started at 0x1805F9459)

		0x1805F9EA6: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 43
		0x1805F9EAA: Jumps to 0x1805FA761 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 43. Implicitly present in managed code, so ignored here.
		0x1805F9EB0: Sets the value at offset 43 in array local0 to {'typeFromHandle43' (type System.Type)}
		0x1805F9EB9: Loads the type definition for managed type ESerifEp01_19_other_0008 as a constant "ESerifEp01_19_other_0008" in rcx
		0x1805F9EC0: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEp01_19_other_0008' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle44' (type System.Type)}

		0x1805F9EC5: Copies {'typeFromHandle44' (type System.Type)} from rax into rbx
		0x1805F9EC8: [!] Compares {'typeFromHandle44' (type System.Type)} and 0
		0x1805F9ECB: Jumps to 0x1805F9EE5 if typeFromHandle44 equals 0 ;  - This is probably a goto, jumping to 0x1805F9EE5 which is after end of current block @ 0x1805F9471 (started at 0x1805F9459)

		0x1805F9ECD: Loads the class pointer from local0 into a constant constant229 in register rdx
		0x1805F9ED0: Copies {'typeFromHandle44' (type System.Type)} from rax into rcx
		0x1805F9ED3: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x1805F9EDC: [!] Compares {'typeFromHandle44' (type System.Type)} and 0
		0x1805F9EDF: Jumps to 0x1805FA774 if typeFromHandle44 equals 0 ;  - This is probably a goto, jumping to 0x1805FA774 which is after end of current block @ 0x1805F9471 (started at 0x1805F9459)

		0x1805F9EE5: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 44
		0x1805F9EE9: Jumps to 0x1805FA787 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 44. Implicitly present in managed code, so ignored here.
		0x1805F9EEF: Sets the value at offset 44 in array local0 to {'typeFromHandle44' (type System.Type)}
		0x1805F9EF8: Loads the type definition for managed type ESerifEp01_19_Inter_O_0008 as a constant "ESerifEp01_19_Inter_O_0008" in rcx
		0x1805F9EFF: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEp01_19_Inter_O_0008' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle45' (type System.Type)}

		0x1805F9F04: Copies {'typeFromHandle45' (type System.Type)} from rax into rbx
		0x1805F9F07: [!] Compares {'typeFromHandle45' (type System.Type)} and 0
		0x1805F9F0A: Jumps to 0x1805F9F24 if typeFromHandle45 equals 0 ;  - This is probably a goto, jumping to 0x1805F9F24 which is after end of current block @ 0x1805F9471 (started at 0x1805F9459)

		0x1805F9F0C: Loads the class pointer from local0 into a constant constant234 in register rdx
		0x1805F9F0F: Copies {'typeFromHandle45' (type System.Type)} from rax into rcx
		0x1805F9F12: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x1805F9F1B: [!] Compares {'typeFromHandle45' (type System.Type)} and 0
		0x1805F9F1E: Jumps to 0x1805FA79A if typeFromHandle45 equals 0 ;  - This is probably a goto, jumping to 0x1805FA79A which is after end of current block @ 0x1805F9471 (started at 0x1805F9459)

		0x1805F9F24: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 45
		0x1805F9F28: Jumps to 0x1805FA7AD (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 45. Implicitly present in managed code, so ignored here.
		0x1805F9F2E: Sets the value at offset 45 in array local0 to {'typeFromHandle45' (type System.Type)}
		0x1805F9F37: Loads the type definition for managed type ESerifEp01_19_Inter_T_0008 as a constant "ESerifEp01_19_Inter_T_0008" in rcx
		0x1805F9F3E: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEp01_19_Inter_T_0008' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle46' (type System.Type)}

		0x1805F9F43: Copies {'typeFromHandle46' (type System.Type)} from rax into rbx
		0x1805F9F46: [!] Compares {'typeFromHandle46' (type System.Type)} and 0
		0x1805F9F49: Jumps to 0x1805F9F63 if typeFromHandle46 equals 0 ;  - This is probably a goto, jumping to 0x1805F9F63 which is after end of current block @ 0x1805F9471 (started at 0x1805F9459)

		0x1805F9F4B: Loads the class pointer from local0 into a constant constant239 in register rdx
		0x1805F9F4E: Copies {'typeFromHandle46' (type System.Type)} from rax into rcx
		0x1805F9F51: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x1805F9F5A: [!] Compares {'typeFromHandle46' (type System.Type)} and 0
		0x1805F9F5D: Jumps to 0x1805FA7C0 if typeFromHandle46 equals 0 ;  - This is probably a goto, jumping to 0x1805FA7C0 which is after end of current block @ 0x1805F9471 (started at 0x1805F9459)

		0x1805F9F63: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 46
		0x1805F9F67: Jumps to 0x1805FA7D3 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 46. Implicitly present in managed code, so ignored here.
		0x1805F9F6D: Sets the value at offset 46 in array local0 to {'typeFromHandle46' (type System.Type)}
		0x1805F9F76: Loads the type definition for managed type ESerifEp01_19_other_0009 as a constant "ESerifEp01_19_other_0009" in rcx
		0x1805F9F7D: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEp01_19_other_0009' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle47' (type System.Type)}

		0x1805F9F82: Copies {'typeFromHandle47' (type System.Type)} from rax into rbx
		0x1805F9F85: [!] Compares {'typeFromHandle47' (type System.Type)} and 0
		0x1805F9F88: Jumps to 0x1805F9FA2 if typeFromHandle47 equals 0 ;  - This is probably a goto, jumping to 0x1805F9FA2 which is after end of current block @ 0x1805F9471 (started at 0x1805F9459)

		0x1805F9F8A: Loads the class pointer from local0 into a constant constant244 in register rdx
		0x1805F9F8D: Copies {'typeFromHandle47' (type System.Type)} from rax into rcx
		0x1805F9F90: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x1805F9F99: [!] Compares {'typeFromHandle47' (type System.Type)} and 0
		0x1805F9F9C: Jumps to 0x1805FA7E6 if typeFromHandle47 equals 0 ;  - This is probably a goto, jumping to 0x1805FA7E6 which is after end of current block @ 0x1805F9471 (started at 0x1805F9459)

		0x1805F9FA2: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 47
		0x1805F9FA6: Jumps to 0x1805FA7F9 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 47. Implicitly present in managed code, so ignored here.
		0x1805F9FAC: Sets the value at offset 47 in array local0 to {'typeFromHandle47' (type System.Type)}
		0x1805F9FB5: Loads the type definition for managed type ESerifEp01_19_Inter_O_0009 as a constant "ESerifEp01_19_Inter_O_0009" in rcx
		0x1805F9FBC: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEp01_19_Inter_O_0009' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle48' (type System.Type)}

		0x1805F9FC1: Copies {'typeFromHandle48' (type System.Type)} from rax into rbx
		0x1805F9FC4: [!] Compares {'typeFromHandle48' (type System.Type)} and 0
		0x1805F9FC7: Jumps to 0x1805F9FE1 if typeFromHandle48 equals 0 ;  - This is probably a goto, jumping to 0x1805F9FE1 which is after end of current block @ 0x1805F9471 (started at 0x1805F9459)

		0x1805F9FC9: Loads the class pointer from local0 into a constant constant249 in register rdx
		0x1805F9FCC: Copies {'typeFromHandle48' (type System.Type)} from rax into rcx
		0x1805F9FCF: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x1805F9FD8: [!] Compares {'typeFromHandle48' (type System.Type)} and 0
		0x1805F9FDB: Jumps to 0x1805FA80C if typeFromHandle48 equals 0 ;  - This is probably a goto, jumping to 0x1805FA80C which is after end of current block @ 0x1805F9471 (started at 0x1805F9459)

		0x1805F9FE1: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 48
		0x1805F9FE5: Jumps to 0x1805FA81F (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 48. Implicitly present in managed code, so ignored here.
		0x1805F9FEB: Sets the value at offset 48 in array local0 to {'typeFromHandle48' (type System.Type)}
		0x1805F9FF4: Loads the type definition for managed type ESerifEp01_19_Inter_T_0009 as a constant "ESerifEp01_19_Inter_T_0009" in rcx
		0x1805F9FFB: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEp01_19_Inter_T_0009' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle49' (type System.Type)}

		0x1805FA000: Copies {'typeFromHandle49' (type System.Type)} from rax into rbx
		0x1805FA003: [!] Compares {'typeFromHandle49' (type System.Type)} and 0
		0x1805FA006: Jumps to 0x1805FA020 if typeFromHandle49 equals 0 ;  - This is probably a goto, jumping to 0x1805FA020 which is after end of current block @ 0x1805F9471 (started at 0x1805F9459)

		0x1805FA008: Loads the class pointer from local0 into a constant constant254 in register rdx
		0x1805FA00B: Copies {'typeFromHandle49' (type System.Type)} from rax into rcx
		0x1805FA00E: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x1805FA017: [!] Compares {'typeFromHandle49' (type System.Type)} and 0
		0x1805FA01A: Jumps to 0x1805FA832 if typeFromHandle49 equals 0 ;  - This is probably a goto, jumping to 0x1805FA832 which is after end of current block @ 0x1805F9471 (started at 0x1805F9459)

		0x1805FA020: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 49
		0x1805FA024: Jumps to 0x1805FA845 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 49. Implicitly present in managed code, so ignored here.
		0x1805FA02A: Sets the value at offset 49 in array local0 to {'typeFromHandle49' (type System.Type)}
		0x1805FA033: Loads the type definition for managed type ESerifEp01_19_Sce_0004 as a constant "ESerifEp01_19_Sce_0004" in rcx
		0x1805FA03A: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEp01_19_Sce_0004' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle50' (type System.Type)}

		0x1805FA03F: Copies {'typeFromHandle50' (type System.Type)} from rax into rbx
		0x1805FA042: [!] Compares {'typeFromHandle50' (type System.Type)} and 0
		0x1805FA045: Jumps to 0x1805FA05F if typeFromHandle50 equals 0 ;  - This is probably a goto, jumping to 0x1805FA05F which is after end of current block @ 0x1805F9471 (started at 0x1805F9459)

		0x1805FA047: Loads the class pointer from local0 into a constant constant259 in register rdx
		0x1805FA04A: Copies {'typeFromHandle50' (type System.Type)} from rax into rcx
		0x1805FA04D: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x1805FA056: [!] Compares {'typeFromHandle50' (type System.Type)} and 0
		0x1805FA059: Jumps to 0x1805FA858 if typeFromHandle50 equals 0 ;  - This is probably a goto, jumping to 0x1805FA858 which is after end of current block @ 0x1805F9471 (started at 0x1805F9459)

		0x1805FA05F: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 50
		0x1805FA063: Jumps to 0x1805FA86B (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 50. Implicitly present in managed code, so ignored here.
		0x1805FA069: Sets the value at offset 50 in array local0 to {'typeFromHandle50' (type System.Type)}
		0x1805FA072: Loads the type definition for managed type ESerifEp01_19_Inter_O_0010 as a constant "ESerifEp01_19_Inter_O_0010" in rcx
		0x1805FA079: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEp01_19_Inter_O_0010' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle51' (type System.Type)}

		0x1805FA07E: Copies {'typeFromHandle51' (type System.Type)} from rax into rbx
		0x1805FA081: [!] Compares {'typeFromHandle51' (type System.Type)} and 0
		0x1805FA084: Jumps to 0x1805FA09E if typeFromHandle51 equals 0 ;  - This is probably a goto, jumping to 0x1805FA09E which is after end of current block @ 0x1805F9471 (started at 0x1805F9459)

		0x1805FA086: Loads the class pointer from local0 into a constant constant264 in register rdx
		0x1805FA089: Copies {'typeFromHandle51' (type System.Type)} from rax into rcx
		0x1805FA08C: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x1805FA095: [!] Compares {'typeFromHandle51' (type System.Type)} and 0
		0x1805FA098: Jumps to 0x1805FA87E if typeFromHandle51 equals 0 ;  - This is probably a goto, jumping to 0x1805FA87E which is after end of current block @ 0x1805F9471 (started at 0x1805F9459)

		0x1805FA09E: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 51
		0x1805FA0A2: Jumps to 0x1805FA891 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 51. Implicitly present in managed code, so ignored here.
		0x1805FA0A8: Sets the value at offset 51 in array local0 to {'typeFromHandle51' (type System.Type)}
		0x1805FA0B1: Loads the type definition for managed type ESerifEp01_19_Inter_T_0010 as a constant "ESerifEp01_19_Inter_T_0010" in rcx
		0x1805FA0B8: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEp01_19_Inter_T_0010' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle52' (type System.Type)}

		0x1805FA0BD: Copies {'typeFromHandle52' (type System.Type)} from rax into rbx
		0x1805FA0C0: [!] Compares {'typeFromHandle52' (type System.Type)} and 0
		0x1805FA0C3: Jumps to 0x1805FA0DD if typeFromHandle52 equals 0 ;  - This is probably a goto, jumping to 0x1805FA0DD which is after end of current block @ 0x1805F9471 (started at 0x1805F9459)

		0x1805FA0C5: Loads the class pointer from local0 into a constant constant269 in register rdx
		0x1805FA0C8: Copies {'typeFromHandle52' (type System.Type)} from rax into rcx
		0x1805FA0CB: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x1805FA0D4: [!] Compares {'typeFromHandle52' (type System.Type)} and 0
		0x1805FA0D7: Jumps to 0x1805FA8A4 if typeFromHandle52 equals 0 ;  - This is probably a goto, jumping to 0x1805FA8A4 which is after end of current block @ 0x1805F9471 (started at 0x1805F9459)

		0x1805FA0DD: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 52
		0x1805FA0E1: Jumps to 0x1805FA8B7 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 52. Implicitly present in managed code, so ignored here.
		0x1805FA0E7: Sets the value at offset 52 in array local0 to {'typeFromHandle52' (type System.Type)}
		0x1805FA0EE: Loads the type definition for managed type Episode1_19Define as a constant "Episode1_19Define" in rax
		0x1805FA0F5: Reads unknown value in stack, offset 48 (0x30) and stores the pointer in register rbx as new constant constant273
		0x1805FA0FA: Loads the pointer to the static fields for Episode1_19Define and stores it in constant274 in register rcx
		0x1805FA101: [!] Sets static field . to {'local0' (type System.Type[])}
		0x1805FA109: [!] Returns from the function

		0x1805FA10C: [!] Constructs and throws an exception of kind System.NullReferenceException

		0x1805FA117: Copies {'local106' (type System.NullReferenceException)} from rax into rcx
		0x1805FA13D: Copies {'local106' (type System.NullReferenceException)} from rax into rcx
		0x1805FA163: Copies {'local106' (type System.NullReferenceException)} from rax into rcx
		0x1805FA189: Copies {'local106' (type System.NullReferenceException)} from rax into rcx
		0x1805FA1AF: Copies {'local106' (type System.NullReferenceException)} from rax into rcx
		0x1805FA1D5: Copies {'local106' (type System.NullReferenceException)} from rax into rcx
		0x1805FA1FB: Copies {'local106' (type System.NullReferenceException)} from rax into rcx
		0x1805FA221: Copies {'local106' (type System.NullReferenceException)} from rax into rcx
		0x1805FA247: Copies {'local106' (type System.NullReferenceException)} from rax into rcx
		0x1805FA26D: Copies {'local106' (type System.NullReferenceException)} from rax into rcx
		0x1805FA293: Copies {'local106' (type System.NullReferenceException)} from rax into rcx
		0x1805FA2B9: Copies {'local106' (type System.NullReferenceException)} from rax into rcx
		0x1805FA2DF: Copies {'local106' (type System.NullReferenceException)} from rax into rcx
		0x1805FA305: Copies {'local106' (type System.NullReferenceException)} from rax into rcx
		0x1805FA32B: Copies {'local106' (type System.NullReferenceException)} from rax into rcx
		0x1805FA351: Copies {'local106' (type System.NullReferenceException)} from rax into rcx
		0x1805FA377: Copies {'local106' (type System.NullReferenceException)} from rax into rcx
		0x1805FA39D: Copies {'local106' (type System.NullReferenceException)} from rax into rcx
		0x1805FA3C3: Copies {'local106' (type System.NullReferenceException)} from rax into rcx
		0x1805FA3E9: Copies {'local106' (type System.NullReferenceException)} from rax into rcx
		0x1805FA40F: Copies {'local106' (type System.NullReferenceException)} from rax into rcx
		0x1805FA435: Copies {'local106' (type System.NullReferenceException)} from rax into rcx
		0x1805FA45B: Copies {'local106' (type System.NullReferenceException)} from rax into rcx
		0x1805FA481: Copies {'local106' (type System.NullReferenceException)} from rax into rcx
		0x1805FA4A7: Copies {'local106' (type System.NullReferenceException)} from rax into rcx
		0x1805FA4CD: Copies {'local106' (type System.NullReferenceException)} from rax into rcx
		0x1805FA4F3: Copies {'local106' (type System.NullReferenceException)} from rax into rcx
		0x1805FA519: Copies {'local106' (type System.NullReferenceException)} from rax into rcx
		0x1805FA53F: Copies {'local106' (type System.NullReferenceException)} from rax into rcx
		0x1805FA565: Copies {'local106' (type System.NullReferenceException)} from rax into rcx
		0x1805FA58B: Copies {'local106' (type System.NullReferenceException)} from rax into rcx
		0x1805FA5B1: Copies {'local106' (type System.NullReferenceException)} from rax into rcx
		0x1805FA5D7: Copies {'local106' (type System.NullReferenceException)} from rax into rcx
		0x1805FA5FD: Copies {'local106' (type System.NullReferenceException)} from rax into rcx
		0x1805FA623: Copies {'local106' (type System.NullReferenceException)} from rax into rcx
		0x1805FA649: Copies {'local106' (type System.NullReferenceException)} from rax into rcx
		0x1805FA66F: Copies {'local106' (type System.NullReferenceException)} from rax into rcx
		0x1805FA695: Copies {'local106' (type System.NullReferenceException)} from rax into rcx
		0x1805FA6BB: Copies {'local106' (type System.NullReferenceException)} from rax into rcx
		0x1805FA6E1: Copies {'local106' (type System.NullReferenceException)} from rax into rcx
		0x1805FA707: Copies {'local106' (type System.NullReferenceException)} from rax into rcx
		0x1805FA72D: Copies {'local106' (type System.NullReferenceException)} from rax into rcx
		0x1805FA753: Copies {'local106' (type System.NullReferenceException)} from rax into rcx
		0x1805FA779: Copies {'local106' (type System.NullReferenceException)} from rax into rcx
		0x1805FA79F: Copies {'local106' (type System.NullReferenceException)} from rax into rcx
		0x1805FA7C5: Copies {'local106' (type System.NullReferenceException)} from rax into rcx
		0x1805FA7EB: Copies {'local106' (type System.NullReferenceException)} from rax into rcx
		0x1805FA811: Copies {'local106' (type System.NullReferenceException)} from rax into rcx
		0x1805FA837: Copies {'local106' (type System.NullReferenceException)} from rax into rcx
		0x1805FA85D: Copies {'local106' (type System.NullReferenceException)} from rax into rcx
		0x1805FA883: Copies {'local106' (type System.NullReferenceException)} from rax into rcx
		0x1805FA8A9: Copies {'local106' (type System.NullReferenceException)} from rax into rcx



	Generated Pseudocode:

	Declaring Type: Episode1_19Define
	static System.Void .cctor()
		System.Type[] local0 = new System.Type[54]

		System.Type typeFromHandle = System.Type.GetTypeFromHandle({'ESerifEp01_19_Pol_0000' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle != 0)

		    if (typeFromHandle == 0)
                goto INSN_1805FA112
            endif
		endif
        
		local0[1] = typeFromHandle

		System.Type typeFromHandle2 = System.Type.GetTypeFromHandle({'ESerifEp01_19_Rend_0000' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle2 == 0)
            goto INSN_1805F94AD
        endif

		if (typeFromHandle2 == 0)
            goto INSN_1805FA138
        endif

		INSN_1805F94AD:
		local0[2] = typeFromHandle2

		System.Type typeFromHandle3 = System.Type.GetTypeFromHandle({'ESerifEp01_19_Rend_0001' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle3 == 0)
            goto INSN_1805F94E9
        endif

		if (typeFromHandle3 == 0)
            goto INSN_1805FA15E
        endif

		INSN_1805F94E9:
		local0[3] = typeFromHandle3

		System.Type typeFromHandle4 = System.Type.GetTypeFromHandle({'ESerifEp01_19_pol_0001' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle4 == 0)
            goto INSN_1805F9525
        endif

		if (typeFromHandle4 == 0)
            goto INSN_1805FA184
        endif

		INSN_1805F9525:
		local0[4] = typeFromHandle4

		System.Type typeFromHandle5 = System.Type.GetTypeFromHandle({'ESerifEp01_19_other_0000' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle5 == 0)
            goto INSN_1805F9561
        endif

		if (typeFromHandle5 == 0)
            goto INSN_1805FA1AA
        endif

		INSN_1805F9561:
		local0[5] = typeFromHandle5

		System.Type typeFromHandle6 = System.Type.GetTypeFromHandle({'ESerifEp01_19_other_0500' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle6 == 0)
            goto INSN_1805F959D
        endif

		if (typeFromHandle6 == 0)
            goto INSN_1805FA1D0
        endif

		INSN_1805F959D:
		local0[6] = typeFromHandle6

		System.Type typeFromHandle7 = System.Type.GetTypeFromHandle({'ESerifEp01_19_other_1000' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle7 == 0)
            goto INSN_1805F95D9
        endif

		if (typeFromHandle7 == 0)
            goto INSN_1805FA1F6
        endif

		INSN_1805F95D9:
		local0[7] = typeFromHandle7

		System.Type typeFromHandle8 = System.Type.GetTypeFromHandle({'ESerifEp01_19_other_1001' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle8 == 0)
            goto INSN_1805F9615
        endif

		if (typeFromHandle8 == 0)
            goto INSN_1805FA21C
        endif

		INSN_1805F9615:
		local0[8] = typeFromHandle8

		System.Type typeFromHandle9 = System.Type.GetTypeFromHandle({'ESerifEp01_19_other_1002' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle9 == 0)
            goto INSN_1805F9651
        endif

		if (typeFromHandle9 == 0)
            goto INSN_1805FA242
        endif

		INSN_1805F9651:
		local0[9] = typeFromHandle9

		System.Type typeFromHandle10 = System.Type.GetTypeFromHandle({'ESerifEp01_19_other_1003' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle10 == 0)
            goto INSN_1805F968D
        endif

		if (typeFromHandle10 == 0)
            goto INSN_1805FA268
        endif

		INSN_1805F968D:
		local0[10] = typeFromHandle10

		System.Type typeFromHandle11 = System.Type.GetTypeFromHandle({'ESerifEp01_19_other_1004' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle11 == 0)
            goto INSN_1805F96C9
        endif

		if (typeFromHandle11 == 0)
            goto INSN_1805FA28E
        endif

		INSN_1805F96C9:
		local0[11] = typeFromHandle11

		System.Type typeFromHandle12 = System.Type.GetTypeFromHandle({'ESerifEp01_19_other_1005' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle12 == 0)
            goto INSN_1805F9705
        endif

		if (typeFromHandle12 == 0)
            goto INSN_1805FA2B4
        endif

		INSN_1805F9705:
		local0[12] = typeFromHandle12

		System.Type typeFromHandle13 = System.Type.GetTypeFromHandle({'ESerifEp01_19_other_1006' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle13 == 0)
            goto INSN_1805F9744
        endif

		if (typeFromHandle13 == 0)
            goto INSN_1805FA2DA
        endif

		INSN_1805F9744:
		local0[13] = typeFromHandle13

		System.Type typeFromHandle14 = System.Type.GetTypeFromHandle({'ESerifEp01_19_other_1007' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle14 == 0)
            goto INSN_1805F9783
        endif

		if (typeFromHandle14 == 0)
            goto INSN_1805FA300
        endif

		INSN_1805F9783:
		local0[14] = typeFromHandle14

		System.Type typeFromHandle15 = System.Type.GetTypeFromHandle({'ESerifEp01_19_other_1008' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle15 == 0)
            goto INSN_1805F97C2
        endif

		if (typeFromHandle15 == 0)
            goto INSN_1805FA326
        endif

		INSN_1805F97C2:
		local0[15] = typeFromHandle15

		System.Type typeFromHandle16 = System.Type.GetTypeFromHandle({'ESerifEp01_19_Sce_0000' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle16 == 0)
            goto INSN_1805F9801
        endif

		if (typeFromHandle16 == 0)
            goto INSN_1805FA34C
        endif

		INSN_1805F9801:
		local0[16] = typeFromHandle16

		System.Type typeFromHandle17 = System.Type.GetTypeFromHandle({'ESerifEp01_19_Sce_0001' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle17 == 0)
            goto INSN_1805F9840
        endif

		if (typeFromHandle17 == 0)
            goto INSN_1805FA372
        endif

		INSN_1805F9840:
		local0[17] = typeFromHandle17

		System.Type typeFromHandle18 = System.Type.GetTypeFromHandle({'ESerifEp01_19_other_1009' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle18 == 0)
            goto INSN_1805F987F
        endif

		if (typeFromHandle18 == 0)
            goto INSN_1805FA398
        endif

		INSN_1805F987F:
		local0[18] = typeFromHandle18

		System.Type typeFromHandle19 = System.Type.GetTypeFromHandle({'ESerifEp01_19_Sce_0002' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle19 == 0)
            goto INSN_1805F98BE
        endif

		if (typeFromHandle19 == 0)
            goto INSN_1805FA3BE
        endif

		INSN_1805F98BE:
		local0[19] = typeFromHandle19

		System.Type typeFromHandle20 = System.Type.GetTypeFromHandle({'ESerifEp01_19_other_0001' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle20 == 0)
            goto INSN_1805F98FD
        endif

		if (typeFromHandle20 == 0)
            goto INSN_1805FA3E4
        endif

		INSN_1805F98FD:
		local0[20] = typeFromHandle20

		System.Type typeFromHandle21 = System.Type.GetTypeFromHandle({'ESerifEp01_19_Inter_O_0000' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle21 == 0)
            goto INSN_1805F993C
        endif

		if (typeFromHandle21 == 0)
            goto INSN_1805FA40A
        endif

		INSN_1805F993C:
		local0[21] = typeFromHandle21

		System.Type typeFromHandle22 = System.Type.GetTypeFromHandle({'ESerifEp01_19_Inter_T_0000' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle22 == 0)
            goto INSN_1805F997B
        endif

		if (typeFromHandle22 == 0)
            goto INSN_1805FA430
        endif

		INSN_1805F997B:
		local0[22] = typeFromHandle22

		System.Type typeFromHandle23 = System.Type.GetTypeFromHandle({'ESerifEp01_19_other_0002' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle23 == 0)
            goto INSN_1805F99BA
        endif

		if (typeFromHandle23 == 0)
            goto INSN_1805FA456
        endif

		INSN_1805F99BA:
		local0[23] = typeFromHandle23

		System.Type typeFromHandle24 = System.Type.GetTypeFromHandle({'ESerifEp01_19_Inter_O_0001' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle24 == 0)
            goto INSN_1805F99F9
        endif

		if (typeFromHandle24 == 0)
            goto INSN_1805FA47C
        endif

		INSN_1805F99F9:
		local0[24] = typeFromHandle24

		System.Type typeFromHandle25 = System.Type.GetTypeFromHandle({'ESerifEp01_19_Inter_T_0001' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle25 == 0)
            goto INSN_1805F9A38
        endif

		if (typeFromHandle25 == 0)
            goto INSN_1805FA4A2
        endif

		INSN_1805F9A38:
		local0[25] = typeFromHandle25

		System.Type typeFromHandle26 = System.Type.GetTypeFromHandle({'ESerifEp01_19_other_0003' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle26 == 0)
            goto INSN_1805F9A77
        endif

		if (typeFromHandle26 == 0)
            goto INSN_1805FA4C8
        endif

		INSN_1805F9A77:
		local0[26] = typeFromHandle26

		System.Type typeFromHandle27 = System.Type.GetTypeFromHandle({'ESerifEp01_19_Inter_O_0002' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle27 == 0)
            goto INSN_1805F9AB6
        endif

		if (typeFromHandle27 == 0)
            goto INSN_1805FA4EE
        endif

		INSN_1805F9AB6:
		local0[27] = typeFromHandle27

		System.Type typeFromHandle28 = System.Type.GetTypeFromHandle({'ESerifEp01_19_Inter_T_0002' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle28 == 0)
            goto INSN_1805F9AF5
        endif

		if (typeFromHandle28 == 0)
            goto INSN_1805FA514
        endif

		INSN_1805F9AF5:
		local0[28] = typeFromHandle28

		System.Type typeFromHandle29 = System.Type.GetTypeFromHandle({'ESerifEp01_19_other_0004' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle29 == 0)
            goto INSN_1805F9B34
        endif

		if (typeFromHandle29 == 0)
            goto INSN_1805FA53A
        endif

		INSN_1805F9B34:
		local0[29] = typeFromHandle29

		System.Type typeFromHandle30 = System.Type.GetTypeFromHandle({'ESerifEp01_19_Inter_O_0003' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle30 == 0)
            goto INSN_1805F9B73
        endif

		if (typeFromHandle30 == 0)
            goto INSN_1805FA560
        endif

		INSN_1805F9B73:
		local0[30] = typeFromHandle30

		System.Type typeFromHandle31 = System.Type.GetTypeFromHandle({'ESerifEp01_19_Inter_T_0003' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle31 == 0)
            goto INSN_1805F9BB2
        endif

		if (typeFromHandle31 == 0)
            goto INSN_1805FA586
        endif

		INSN_1805F9BB2:
		local0[31] = typeFromHandle31

		System.Type typeFromHandle32 = System.Type.GetTypeFromHandle({'ESerifEp01_19_Inter_O_0004' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle32 == 0)
            goto INSN_1805F9BF1
        endif

		if (typeFromHandle32 == 0)
            goto INSN_1805FA5AC
        endif

		INSN_1805F9BF1:
		local0[32] = typeFromHandle32

		System.Type typeFromHandle33 = System.Type.GetTypeFromHandle({'ESerifEp01_19_Inter_T_0004' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle33 == 0)
            goto INSN_1805F9C30
        endif

		if (typeFromHandle33 == 0)
            goto INSN_1805FA5D2
        endif

		INSN_1805F9C30:
		local0[33] = typeFromHandle33

		System.Type typeFromHandle34 = System.Type.GetTypeFromHandle({'ESerifEp01_19_other_0005' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle34 == 0)
            goto INSN_1805F9C6F
        endif

		if (typeFromHandle34 == 0)
            goto INSN_1805FA5F8
        endif

		INSN_1805F9C6F:
		local0[34] = typeFromHandle34

		System.Type typeFromHandle35 = System.Type.GetTypeFromHandle({'ESerifEp01_19_Inter_O_0005' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle35 == 0)
            goto INSN_1805F9CAE
        endif

		if (typeFromHandle35 == 0)
            goto INSN_1805FA61E
        endif

		INSN_1805F9CAE:
		local0[35] = typeFromHandle35

		System.Type typeFromHandle36 = System.Type.GetTypeFromHandle({'ESerifEp01_19_Inter_T_0005' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle36 == 0)
            goto INSN_1805F9CED
        endif

		if (typeFromHandle36 == 0)
            goto INSN_1805FA644
        endif

		INSN_1805F9CED:
		local0[36] = typeFromHandle36

		System.Type typeFromHandle37 = System.Type.GetTypeFromHandle({'ESerifEp01_19_other_0006' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle37 == 0)
            goto INSN_1805F9D2C
        endif

		if (typeFromHandle37 == 0)
            goto INSN_1805FA66A
        endif

		INSN_1805F9D2C:
		local0[37] = typeFromHandle37

		System.Type typeFromHandle38 = System.Type.GetTypeFromHandle({'ESerifEp01_19_Inter_O_0006' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle38 == 0)
            goto INSN_1805F9D6B
        endif

		if (typeFromHandle38 == 0)
            goto INSN_1805FA690
        endif

		INSN_1805F9D6B:
		local0[38] = typeFromHandle38

		System.Type typeFromHandle39 = System.Type.GetTypeFromHandle({'ESerifEp01_19_Inter_T_0006' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle39 == 0)
            goto INSN_1805F9DAA
        endif

		if (typeFromHandle39 == 0)
            goto INSN_1805FA6B6
        endif

		INSN_1805F9DAA:
		local0[39] = typeFromHandle39

		System.Type typeFromHandle40 = System.Type.GetTypeFromHandle({'ESerifEp01_19_Sce_0003' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle40 == 0)
            goto INSN_1805F9DE9
        endif

		if (typeFromHandle40 == 0)
            goto INSN_1805FA6DC
        endif

		INSN_1805F9DE9:
		local0[40] = typeFromHandle40

		System.Type typeFromHandle41 = System.Type.GetTypeFromHandle({'ESerifEp01_19_other_0007' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle41 == 0)
            goto INSN_1805F9E28
        endif

		if (typeFromHandle41 == 0)
            goto INSN_1805FA702
        endif

		INSN_1805F9E28:
		local0[41] = typeFromHandle41

		System.Type typeFromHandle42 = System.Type.GetTypeFromHandle({'ESerifEp01_19_Inter_O_0007' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle42 == 0)
            goto INSN_1805F9E67
        endif

		if (typeFromHandle42 == 0)
            goto INSN_1805FA728
        endif

		INSN_1805F9E67:
		local0[42] = typeFromHandle42

		System.Type typeFromHandle43 = System.Type.GetTypeFromHandle({'ESerifEp01_19_Inter_T_0007' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle43 == 0)
            goto INSN_1805F9EA6
        endif

		if (typeFromHandle43 == 0)
            goto INSN_1805FA74E
        endif

		INSN_1805F9EA6:
		local0[43] = typeFromHandle43

		System.Type typeFromHandle44 = System.Type.GetTypeFromHandle({'ESerifEp01_19_other_0008' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle44 == 0)
            goto INSN_1805F9EE5
        endif

		if (typeFromHandle44 == 0)
            goto INSN_1805FA774
        endif

		INSN_1805F9EE5:
		local0[44] = typeFromHandle44

		System.Type typeFromHandle45 = System.Type.GetTypeFromHandle({'ESerifEp01_19_Inter_O_0008' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle45 == 0)
            goto INSN_1805F9F24
        endif

		if (typeFromHandle45 == 0)
            goto INSN_1805FA79A
        endif

		INSN_1805F9F24:
		local0[45] = typeFromHandle45

		System.Type typeFromHandle46 = System.Type.GetTypeFromHandle({'ESerifEp01_19_Inter_T_0008' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle46 == 0)
            goto INSN_1805F9F63
        endif

		if (typeFromHandle46 == 0)
            goto INSN_1805FA7C0
        endif

		INSN_1805F9F63:
		local0[46] = typeFromHandle46

		System.Type typeFromHandle47 = System.Type.GetTypeFromHandle({'ESerifEp01_19_other_0009' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle47 == 0)
            goto INSN_1805F9FA2
        endif

		if (typeFromHandle47 == 0)
            goto INSN_1805FA7E6
        endif

		INSN_1805F9FA2:
		local0[47] = typeFromHandle47

		System.Type typeFromHandle48 = System.Type.GetTypeFromHandle({'ESerifEp01_19_Inter_O_0009' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle48 == 0)
            goto INSN_1805F9FE1
        endif

		if (typeFromHandle48 == 0)
            goto INSN_1805FA80C
        endif

		INSN_1805F9FE1:
		local0[48] = typeFromHandle48

		System.Type typeFromHandle49 = System.Type.GetTypeFromHandle({'ESerifEp01_19_Inter_T_0009' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle49 == 0)
            goto INSN_1805FA020
        endif

		if (typeFromHandle49 == 0)
            goto INSN_1805FA832
        endif

		INSN_1805FA020:
		local0[49] = typeFromHandle49

		System.Type typeFromHandle50 = System.Type.GetTypeFromHandle({'ESerifEp01_19_Sce_0004' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle50 == 0)
            goto INSN_1805FA05F
        endif

		if (typeFromHandle50 == 0)
            goto INSN_1805FA858
        endif

		INSN_1805FA05F:
		local0[50] = typeFromHandle50

		System.Type typeFromHandle51 = System.Type.GetTypeFromHandle({'ESerifEp01_19_Inter_O_0010' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle51 == 0)
            goto INSN_1805FA09E
        endif

		if (typeFromHandle51 == 0)
            goto INSN_1805FA87E
        endif

		INSN_1805FA09E:
		local0[51] = typeFromHandle51

		System.Type typeFromHandle52 = System.Type.GetTypeFromHandle({'ESerifEp01_19_Inter_T_0010' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle52 == 0)
            goto INSN_1805FA0DD
        endif

		if (typeFromHandle52 == 0)
            goto INSN_1805FA8A4
        endif

		INSN_1805FA0DD:
		local0[52] = typeFromHandle52
		. = local0
		return
		throw new System.NullReferenceException()

		INSN_1805FA112:

		INSN_1805FA138:

		INSN_1805FA15E:

		INSN_1805FA184:

		INSN_1805FA1AA:

		INSN_1805FA1D0:

		INSN_1805FA1F6:

		INSN_1805FA21C:

		INSN_1805FA242:

		INSN_1805FA268:

		INSN_1805FA28E:

		INSN_1805FA2B4:

		INSN_1805FA2DA:

		INSN_1805FA300:

		INSN_1805FA326:

		INSN_1805FA34C:

		INSN_1805FA372:

		INSN_1805FA398:

		INSN_1805FA3BE:

		INSN_1805FA3E4:

		INSN_1805FA40A:

		INSN_1805FA430:

		INSN_1805FA456:

		INSN_1805FA47C:

		INSN_1805FA4A2:

		INSN_1805FA4C8:

		INSN_1805FA4EE:

		INSN_1805FA514:

		INSN_1805FA53A:

		INSN_1805FA560:

		INSN_1805FA586:

		INSN_1805FA5AC:

		INSN_1805FA5D2:

		INSN_1805FA5F8:

		INSN_1805FA61E:

		INSN_1805FA644:

		INSN_1805FA66A:

		INSN_1805FA690:

		INSN_1805FA6B6:

		INSN_1805FA6DC:

		INSN_1805FA702:

		INSN_1805FA728:

		INSN_1805FA74E:

		INSN_1805FA774:

		INSN_1805FA79A:

		INSN_1805FA7C0:

		INSN_1805FA7E6:

		INSN_1805FA80C:

		INSN_1805FA832:

		INSN_1805FA858:

		INSN_1805FA87E:

		INSN_1805FA8A4:


Generated IL:
	Action of type Cpp2IL.Core.Analysis.Actions.x86.Important.RegToStaticFieldAction at (0x1805FA101) is corrupt (No further info) and cannot be created as IL. Aborting here.


