Type: CreatePipelineDelegate

Method: System.Void Cinemachine.CinemachineVirtualCamera/CreatePipelineDelegate::.ctor(System.Object,System.IntPtr):	Method Body (x86 ASM):
		0x1802ED440 mov rax,[r8]		; DEBUG: {Register}/RAX {Memory}/None ||| R8 | 0 | None ||| N/A | N/A
		0x1802ED443 mov [rcx+10h],rax		; DEBUG: {Memory}/None {Register}/RAX ||| RCX | 16 | None ||| N/A | N/A
		0x1802ED447 mov [rcx+28h],r8		; DEBUG: {Memory}/None {Register}/R8 ||| RCX | 40 | None ||| N/A | N/A
		0x1802ED44B mov [rcx+20h],rdx		; DEBUG: {Memory}/None {Register}/RDX ||| RCX | 32 | None ||| N/A | N/A
		0x1802ED44F ret		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.Void Cinemachine.CinemachineVirtualCamera/CreatePipelineDelegate::.ctor(System.Object,System.IntPtr):
		End of function at 0x1802ED450
		Absolute End is at 0x1802ED450
		Identified Jump Destination addresses:

		0x1802ED440: Loads the class pointer from method into a constant constant1 in register rax
		0x1802ED443: [!] Sets the field method_ptr (Type System.IntPtr) on local {'this' (function parameter, type Cinemachine.CinemachineVirtualCamera/CreatePipelineDelegate)} to the value stored in {'constant1' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)}
		0x1802ED447: [!] Sets the field method (Type System.IntPtr) on local {'this' (function parameter, type Cinemachine.CinemachineVirtualCamera/CreatePipelineDelegate)} to the value stored in {'method' (function parameter, type System.IntPtr)}
		0x1802ED44B: [!] Sets the field m_target (Type System.Object) on local {'this' (function parameter, type Cinemachine.CinemachineVirtualCamera/CreatePipelineDelegate)} to the value stored in {'object' (function parameter, type System.Object)}
		0x1802ED44F: [!] Returns from the function




	Generated Pseudocode:

	Declaring Type: Cinemachine.CinemachineVirtualCamera/CreatePipelineDelegate
	System.Void .ctor(System.Object object, System.IntPtr method)
		this.method_ptr = constant1
		this.method = method
		this.m_target = object
		return


Generated IL:
	Action of type Cpp2IL.Core.Analysis.Actions.x86.Important.RegToFieldAction at (0x1802ED443) is corrupt (ConstantDefinition: Don't know how to get IL to load a Cpp2IL.Core.Analysis.Il2CppClassIdentifier) and cannot be created as IL. Aborting here.


Method: UnityEngine.Transform Cinemachine.CinemachineVirtualCamera/CreatePipelineDelegate::Invoke(Cinemachine.CinemachineVirtualCamera,System.String,Cinemachine.CinemachineComponentBase[]):	Method Body (x86 ASM):
		0x1808BD600 mov [rsp+8],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RSP | 8 | None ||| N/A | N/A
		0x1808BD605 mov [rsp+10h],rbp		; DEBUG: {Memory}/None {Register}/RBP ||| RSP | 16 | None ||| N/A | N/A
		0x1808BD60A mov [rsp+18h],rsi		; DEBUG: {Memory}/None {Register}/RSI ||| RSP | 24 | None ||| N/A | N/A
		0x1808BD60F push rdi		; DEBUG: {Register}/RDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1808BD610 push r12		; DEBUG: {Register}/R12 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1808BD612 push r13		; DEBUG: {Register}/R13 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1808BD614 push r14		; DEBUG: {Register}/R14 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1808BD616 push r15		; DEBUG: {Register}/R15 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1808BD618 sub rsp,30h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 48
		0x1808BD61C mov rbp,rcx		; DEBUG: {Register}/RBP {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x1808BD61F xor ebx,ebx		; DEBUG: {Register}/EBX {Register}/EBX ||| None | 0 | None ||| N/A | N/A
		0x1808BD621 mov rcx,[rcx+58h]		; DEBUG: {Register}/RCX {Memory}/None ||| RCX | 88 | None ||| N/A | N/A
		0x1808BD625 mov r12,r9		; DEBUG: {Register}/R12 {Register}/R9 ||| None | 0 | None ||| N/A | N/A
		0x1808BD628 mov r13,r8		; DEBUG: {Register}/R13 {Register}/R8 ||| None | 0 | None ||| N/A | N/A
		0x1808BD62B mov r14,rdx		; DEBUG: {Register}/R14 {Register}/RDX ||| None | 0 | None ||| N/A | N/A
		0x1808BD62E test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x1808BD631 je short 00000001808BD645h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BD633 mov rax,[rsp+80h]		; DEBUG: {Register}/RAX {Memory}/None ||| RSP | 128 | None ||| N/A | N/A
		0x1808BD63B mov [rsp+20h],rax		; DEBUG: {Memory}/None {Register}/RAX ||| RSP | 32 | None ||| N/A | N/A
		0x1808BD640 call 00000001808BD600h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BD645 mov rdi,[rbp+28h]		; DEBUG: {Register}/RDI {Memory}/None ||| RBP | 40 | None ||| N/A | N/A
		0x1808BD649 mov eax,0FFFFh		; DEBUG: {Register}/EAX {Immediate32}/None ||| None | 0 | None ||| N/A | 65535
		0x1808BD64E mov r15,[rbp+10h]		; DEBUG: {Register}/R15 {Memory}/None ||| RBP | 16 | None ||| N/A | N/A
		0x1808BD652 mov rsi,[rbp+20h]		; DEBUG: {Register}/RSI {Memory}/None ||| RBP | 32 | None ||| N/A | N/A
		0x1808BD656 cmp [rdi+48h],ax		; DEBUG: {Memory}/None {Register}/AX ||| RDI | 72 | None ||| N/A | N/A
		0x1808BD65A jne short 00000001808BD664h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BD65C mov rcx,rdi		; DEBUG: {Register}/RCX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x1808BD65F call 00000001801102D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BD664 mov rcx,rdi		; DEBUG: {Register}/RCX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x1808BD667 call 0000000180141DF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BD66C movzx ecx,byte ptr [rdi+4Ah]		; DEBUG: {Register}/ECX {Memory}/None ||| RDI | 74 | None ||| N/A | N/A
		0x1808BD670 test al,al		; DEBUG: {Register}/AL {Register}/AL ||| None | 0 | None ||| N/A | N/A
		0x1808BD672 jne short 00000001808BD691h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BD674 cmp cl,3		; DEBUG: {Register}/CL {Immediate8}/None ||| None | 0 | None ||| N/A | 3
		0x1808BD677 jne near ptr 00000001808BDA65h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BD67D mov r9,rdi		; DEBUG: {Register}/R9 {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x1808BD680 mov r8,r12		; DEBUG: {Register}/R8 {Register}/R12 ||| None | 0 | None ||| N/A | N/A
		0x1808BD683 mov rdx,r13		; DEBUG: {Register}/RDX {Register}/R13 ||| None | 0 | None ||| N/A | N/A
		0x1808BD686 mov rcx,r14		; DEBUG: {Register}/RCX {Register}/R14 ||| None | 0 | None ||| N/A | N/A
		0x1808BD689 call r15		; DEBUG: {Register}/R15 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1808BD68C jmp near ptr 00000001808BDA79h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BD691 movzx eax,word ptr [rdi+48h]		; DEBUG: {Register}/EAX {Memory}/None ||| RDI | 72 | None ||| N/A | N/A
		0x1808BD695 cmp cl,3		; DEBUG: {Register}/CL {Immediate8}/None ||| None | 0 | None ||| N/A | 3
		0x1808BD698 mov ecx,0FFFFh		; DEBUG: {Register}/ECX {Immediate32}/None ||| None | 0 | None ||| N/A | 65535
		0x1808BD69D je near ptr 00000001808BD88Eh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BD6A3 cmp ax,cx		; DEBUG: {Register}/AX {Register}/CX ||| None | 0 | None ||| N/A | N/A
		0x1808BD6A6 je short 00000001808BD67Dh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BD6A8 test rsi,rsi		; DEBUG: {Register}/RSI {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x1808BD6AB je short 00000001808BD6BCh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BD6AD mov rax,[rsi]		; DEBUG: {Register}/RAX {Memory}/None ||| RSI | 0 | None ||| N/A | N/A
		0x1808BD6B0 test dword ptr [rax+108h],100h		; DEBUG: {Memory}/None {Immediate32}/None ||| RAX | 264 | None ||| N/A | 256
		0x1808BD6BA jne short 00000001808BD67Dh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BD6BC cmp [rbp+18h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RBP | 24 | None ||| N/A | N/A
		0x1808BD6C0 je short 00000001808BD67Dh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BD6C2 test rsi,rsi		; DEBUG: {Register}/RSI {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x1808BD6C5 je short 00000001808BD6DAh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BD6C7 mov rax,[rsi]		; DEBUG: {Register}/RAX {Memory}/None ||| RSI | 0 | None ||| N/A | N/A
		0x1808BD6CA test dword ptr [rax+108h],100h		; DEBUG: {Memory}/None {Immediate32}/None ||| RAX | 264 | None ||| N/A | 256
		0x1808BD6D4 jne near ptr 00000001808BDA7Ch		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BD6DA mov rcx,rdi		; DEBUG: {Register}/RCX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x1808BD6DD call 0000000180141DC0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BD6E2 mov rcx,rdi		; DEBUG: {Register}/RCX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x1808BD6E5 test al,al		; DEBUG: {Register}/AL {Register}/AL ||| None | 0 | None ||| N/A | N/A
		0x1808BD6E7 je near ptr 00000001808BD7BFh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BD6ED call 000000018005DA10h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BD6F2 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1808BD6F5 call 00000001800F6DD0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BD6FA movzx ecx,word ptr [rdi+48h]		; DEBUG: {Register}/ECX {Memory}/None ||| RDI | 72 | None ||| N/A | N/A
		0x1808BD6FE test al,al		; DEBUG: {Register}/AL {Register}/AL ||| None | 0 | None ||| N/A | N/A
		0x1808BD700 je near ptr 00000001808BD792h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BD706 mov r10,[r14]		; DEBUG: {Register}/R10 {Memory}/None ||| R14 | 0 | None ||| N/A | N/A
		0x1808BD709 mov r11d,ecx		; DEBUG: {Register}/R11D {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x1808BD70C mov r9,[rdi+18h]		; DEBUG: {Register}/R9 {Memory}/None ||| RDI | 24 | None ||| N/A | N/A
		0x1808BD710 movzx edx,word ptr [r10+11Eh]		; DEBUG: {Register}/EDX {Memory}/None ||| R10 | 286 | None ||| N/A | N/A
		0x1808BD718 cmp bx,dx		; DEBUG: {Register}/BX {Register}/DX ||| None | 0 | None ||| N/A | N/A
		0x1808BD71B jae short 00000001808BD746h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BD71D mov r8,[r10+0B0h]		; DEBUG: {Register}/R8 {Memory}/None ||| R10 | 176 | None ||| N/A | N/A
		0x1808BD724 nop dword ptr [rax]		; DEBUG: {Memory}/None {Register}/None ||| RAX | 0 | None ||| N/A | N/A
		0x1808BD728 nop dword ptr [rax+rax]		; DEBUG: {Memory}/None {Register}/None ||| RAX | 0 | RAX ||| N/A | N/A
		0x1808BD730 movzx ecx,bx		; DEBUG: {Register}/ECX {Register}/BX ||| None | 0 | None ||| N/A | N/A
		0x1808BD733 mov eax,ecx		; DEBUG: {Register}/EAX {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x1808BD735 add rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1808BD738 cmp [r8+rax*8],r9		; DEBUG: {Memory}/None {Register}/R9 ||| R8 | 0 | RAX ||| N/A | N/A
		0x1808BD73C je short 00000001808BD777h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BD73E inc bx		; DEBUG: {Register}/BX {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1808BD741 cmp bx,dx		; DEBUG: {Register}/BX {Register}/DX ||| None | 0 | None ||| N/A | N/A
		0x1808BD744 jb short 00000001808BD730h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BD746 mov r8d,r11d		; DEBUG: {Register}/R8D {Register}/R11D ||| None | 0 | None ||| N/A | N/A
		0x1808BD749 mov rdx,r9		; DEBUG: {Register}/RDX {Register}/R9 ||| None | 0 | None ||| N/A | N/A
		0x1808BD74C mov rcx,r14		; DEBUG: {Register}/RCX {Register}/R14 ||| None | 0 | None ||| N/A | N/A
		0x1808BD74F call 00000001800F5B10h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BD754 mov rcx,[rax+8]		; DEBUG: {Register}/RCX {Memory}/None ||| RAX | 8 | None ||| N/A | N/A
		0x1808BD758 mov rdx,rdi		; DEBUG: {Register}/RDX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x1808BD75B call 000000018010EE60h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BD760 mov r9,rax		; DEBUG: {Register}/R9 {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1808BD763 mov r8,r12		; DEBUG: {Register}/R8 {Register}/R12 ||| None | 0 | None ||| N/A | N/A
		0x1808BD766 mov rdx,r13		; DEBUG: {Register}/RDX {Register}/R13 ||| None | 0 | None ||| N/A | N/A
		0x1808BD769 mov rcx,r14		; DEBUG: {Register}/RCX {Register}/R14 ||| None | 0 | None ||| N/A | N/A
		0x1808BD76C mov r10,[rax]		; DEBUG: {Register}/R10 {Memory}/None ||| RAX | 0 | None ||| N/A | N/A
		0x1808BD76F call r10		; DEBUG: {Register}/R10 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1808BD772 jmp near ptr 00000001808BDA79h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BD777 add rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x1808BD77A lea rax,[r10+128h]		; DEBUG: {Register}/RAX {Memory}/None ||| R10 | 296 | None ||| N/A | N/A
		0x1808BD781 mov ecx,[r8+rcx*8+8]		; DEBUG: {Register}/ECX {Memory}/None ||| R8 | 8 | RCX ||| N/A | N/A
		0x1808BD786 add ecx,r11d		; DEBUG: {Register}/ECX {Register}/R11D ||| None | 0 | None ||| N/A | N/A
		0x1808BD789 shl rcx,4		; DEBUG: {Register}/RCX {Immediate8}/None ||| None | 0 | None ||| N/A | 4
		0x1808BD78D add rax,rcx		; DEBUG: {Register}/RAX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x1808BD790 jmp short 00000001808BD754h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BD792 mov rax,[r14]		; DEBUG: {Register}/RAX {Memory}/None ||| R14 | 0 | None ||| N/A | N/A
		0x1808BD795 add rcx,13h		; DEBUG: {Register}/RCX {Immediate8to64}/None ||| None | 0 | None ||| N/A | 19
		0x1808BD799 add rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x1808BD79C mov rdx,rdi		; DEBUG: {Register}/RDX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x1808BD79F mov rcx,[rax+rcx*8]		; DEBUG: {Register}/RCX {Memory}/None ||| RAX | 0 | RCX ||| N/A | N/A
		0x1808BD7A3 call 000000018010EE60h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BD7A8 mov r9,rax		; DEBUG: {Register}/R9 {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1808BD7AB mov r8,r12		; DEBUG: {Register}/R8 {Register}/R12 ||| None | 0 | None ||| N/A | N/A
		0x1808BD7AE mov rdx,r13		; DEBUG: {Register}/RDX {Register}/R13 ||| None | 0 | None ||| N/A | N/A
		0x1808BD7B1 mov rcx,r14		; DEBUG: {Register}/RCX {Register}/R14 ||| None | 0 | None ||| N/A | N/A
		0x1808BD7B4 mov r10,[rax]		; DEBUG: {Register}/R10 {Memory}/None ||| RAX | 0 | None ||| N/A | N/A
		0x1808BD7B7 call r10		; DEBUG: {Register}/R10 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1808BD7BA jmp near ptr 00000001808BDA79h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BD7BF call 000000018005DA10h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BD7C4 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1808BD7C7 call 00000001800F6DD0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BD7CC test al,al		; DEBUG: {Register}/AL {Register}/AL ||| None | 0 | None ||| N/A | N/A
		0x1808BD7CE je near ptr 00000001808BD865h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BD7D4 mov rcx,rdi		; DEBUG: {Register}/RCX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x1808BD7D7 call 000000018005DA10h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BD7DC mov r10,[r14]		; DEBUG: {Register}/R10 {Memory}/None ||| R14 | 0 | None ||| N/A | N/A
		0x1808BD7DF mov r9,rax		; DEBUG: {Register}/R9 {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1808BD7E2 movzx r11d,word ptr [rdi+48h]		; DEBUG: {Register}/R11D {Memory}/None ||| RDI | 72 | None ||| N/A | N/A
		0x1808BD7E7 movzx r8d,word ptr [r10+11Eh]		; DEBUG: {Register}/R8D {Memory}/None ||| R10 | 286 | None ||| N/A | N/A
		0x1808BD7EF cmp bx,r8w		; DEBUG: {Register}/BX {Register}/R8W ||| None | 0 | None ||| N/A | N/A
		0x1808BD7F3 jae short 00000001808BD817h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BD7F5 mov rdx,[r10+0B0h]		; DEBUG: {Register}/RDX {Memory}/None ||| R10 | 176 | None ||| N/A | N/A
		0x1808BD7FC nop dword ptr [rax]		; DEBUG: {Memory}/None {Register}/None ||| RAX | 0 | None ||| N/A | N/A
		0x1808BD800 movzx ecx,bx		; DEBUG: {Register}/ECX {Register}/BX ||| None | 0 | None ||| N/A | N/A
		0x1808BD803 mov eax,ecx		; DEBUG: {Register}/EAX {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x1808BD805 add rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1808BD808 cmp [rdx+rax*8],r9		; DEBUG: {Memory}/None {Register}/R9 ||| RDX | 0 | RAX ||| N/A | N/A
		0x1808BD80C je short 00000001808BD839h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BD80E inc bx		; DEBUG: {Register}/BX {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1808BD811 cmp bx,r8w		; DEBUG: {Register}/BX {Register}/R8W ||| None | 0 | None ||| N/A | N/A
		0x1808BD815 jb short 00000001808BD800h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BD817 mov r8d,r11d		; DEBUG: {Register}/R8D {Register}/R11D ||| None | 0 | None ||| N/A | N/A
		0x1808BD81A mov rdx,r9		; DEBUG: {Register}/RDX {Register}/R9 ||| None | 0 | None ||| N/A | N/A
		0x1808BD81D mov rcx,r14		; DEBUG: {Register}/RCX {Register}/R14 ||| None | 0 | None ||| N/A | N/A
		0x1808BD820 call 00000001800F5B10h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BD825 mov r8,r12		; DEBUG: {Register}/R8 {Register}/R12 ||| None | 0 | None ||| N/A | N/A
		0x1808BD828 mov rdx,r13		; DEBUG: {Register}/RDX {Register}/R13 ||| None | 0 | None ||| N/A | N/A
		0x1808BD82B mov rcx,r14		; DEBUG: {Register}/RCX {Register}/R14 ||| None | 0 | None ||| N/A | N/A
		0x1808BD82E mov r9,[rax+8]		; DEBUG: {Register}/R9 {Memory}/None ||| RAX | 8 | None ||| N/A | N/A
		0x1808BD832 call qword ptr [rax]		; DEBUG: {Memory}/None {Register}/None ||| RAX | 0 | None ||| N/A | N/A
		0x1808BD834 jmp near ptr 00000001808BDA79h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BD839 add rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x1808BD83C lea rax,[r10+128h]		; DEBUG: {Register}/RAX {Memory}/None ||| R10 | 296 | None ||| N/A | N/A
		0x1808BD843 mov r8,r12		; DEBUG: {Register}/R8 {Register}/R12 ||| None | 0 | None ||| N/A | N/A
		0x1808BD846 mov ecx,[rdx+rcx*8+8]		; DEBUG: {Register}/ECX {Memory}/None ||| RDX | 8 | RCX ||| N/A | N/A
		0x1808BD84A mov rdx,r13		; DEBUG: {Register}/RDX {Register}/R13 ||| None | 0 | None ||| N/A | N/A
		0x1808BD84D add ecx,r11d		; DEBUG: {Register}/ECX {Register}/R11D ||| None | 0 | None ||| N/A | N/A
		0x1808BD850 shl rcx,4		; DEBUG: {Register}/RCX {Immediate8}/None ||| None | 0 | None ||| N/A | 4
		0x1808BD854 add rax,rcx		; DEBUG: {Register}/RAX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x1808BD857 mov rcx,r14		; DEBUG: {Register}/RCX {Register}/R14 ||| None | 0 | None ||| N/A | N/A
		0x1808BD85A mov r9,[rax+8]		; DEBUG: {Register}/R9 {Memory}/None ||| RAX | 8 | None ||| N/A | N/A
		0x1808BD85E call qword ptr [rax]		; DEBUG: {Memory}/None {Register}/None ||| RAX | 0 | None ||| N/A | N/A
		0x1808BD860 jmp near ptr 00000001808BDA79h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BD865 movzx r10d,word ptr [rdi+48h]		; DEBUG: {Register}/R10D {Memory}/None ||| RDI | 72 | None ||| N/A | N/A
		0x1808BD86A mov r8,r12		; DEBUG: {Register}/R8 {Register}/R12 ||| None | 0 | None ||| N/A | N/A
		0x1808BD86D mov rax,[r14]		; DEBUG: {Register}/RAX {Memory}/None ||| R14 | 0 | None ||| N/A | N/A
		0x1808BD870 add r10,r10		; DEBUG: {Register}/R10 {Register}/R10 ||| None | 0 | None ||| N/A | N/A
		0x1808BD873 mov rdx,r13		; DEBUG: {Register}/RDX {Register}/R13 ||| None | 0 | None ||| N/A | N/A
		0x1808BD876 mov rcx,r14		; DEBUG: {Register}/RCX {Register}/R14 ||| None | 0 | None ||| N/A | N/A
		0x1808BD879 mov r9,[rax+r10*8+130h]		; DEBUG: {Register}/R9 {Memory}/None ||| RAX | 304 | R10 ||| N/A | N/A
		0x1808BD881 call qword ptr [rax+r10*8+128h]		; DEBUG: {Memory}/None {Register}/None ||| RAX | 296 | R10 ||| N/A | N/A
		0x1808BD889 jmp near ptr 00000001808BDA79h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BD88E cmp ax,cx		; DEBUG: {Register}/AX {Register}/CX ||| None | 0 | None ||| N/A | N/A
		0x1808BD891 je near ptr 00000001808BDA65h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BD897 test rsi,rsi		; DEBUG: {Register}/RSI {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x1808BD89A je short 00000001808BD8AFh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BD89C mov rax,[rsi]		; DEBUG: {Register}/RAX {Memory}/None ||| RSI | 0 | None ||| N/A | N/A
		0x1808BD89F test dword ptr [rax+108h],100h		; DEBUG: {Memory}/None {Immediate32}/None ||| RAX | 264 | None ||| N/A | 256
		0x1808BD8A9 jne near ptr 00000001808BDA65h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BD8AF cmp [rbp+18h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RBP | 24 | None ||| N/A | N/A
		0x1808BD8B3 je near ptr 00000001808BDA65h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BD8B9 test rsi,rsi		; DEBUG: {Register}/RSI {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x1808BD8BC je near ptr 00000001808BD67Dh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BD8C2 mov rax,[rsi]		; DEBUG: {Register}/RAX {Memory}/None ||| RSI | 0 | None ||| N/A | N/A
		0x1808BD8C5 test dword ptr [rax+108h],100h		; DEBUG: {Memory}/None {Immediate32}/None ||| RAX | 264 | None ||| N/A | 256
		0x1808BD8CF jne near ptr 00000001808BDA7Ch		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BD8D5 mov rcx,rdi		; DEBUG: {Register}/RCX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x1808BD8D8 call 0000000180141DC0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BD8DD mov rcx,rdi		; DEBUG: {Register}/RCX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x1808BD8E0 test al,al		; DEBUG: {Register}/AL {Register}/AL ||| None | 0 | None ||| N/A | N/A
		0x1808BD8E2 je near ptr 00000001808BD997h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BD8E8 call 000000018005DA10h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BD8ED mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1808BD8F0 call 00000001800F6DD0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BD8F5 movzx ecx,word ptr [rdi+48h]		; DEBUG: {Register}/ECX {Memory}/None ||| RDI | 72 | None ||| N/A | N/A
		0x1808BD8F9 test al,al		; DEBUG: {Register}/AL {Register}/AL ||| None | 0 | None ||| N/A | N/A
		0x1808BD8FB je near ptr 00000001808BD987h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BD901 mov r10,[rsi]		; DEBUG: {Register}/R10 {Memory}/None ||| RSI | 0 | None ||| N/A | N/A
		0x1808BD904 mov r11d,ecx		; DEBUG: {Register}/R11D {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x1808BD907 mov r9,[rdi+18h]		; DEBUG: {Register}/R9 {Memory}/None ||| RDI | 24 | None ||| N/A | N/A
		0x1808BD90B movzx edx,word ptr [r10+11Eh]		; DEBUG: {Register}/EDX {Memory}/None ||| R10 | 286 | None ||| N/A | N/A
		0x1808BD913 cmp bx,dx		; DEBUG: {Register}/BX {Register}/DX ||| None | 0 | None ||| N/A | N/A
		0x1808BD916 jae short 00000001808BD936h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BD918 mov r8,[r10+0B0h]		; DEBUG: {Register}/R8 {Memory}/None ||| R10 | 176 | None ||| N/A | N/A
		0x1808BD91F nop		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1808BD920 movzx ecx,bx		; DEBUG: {Register}/ECX {Register}/BX ||| None | 0 | None ||| N/A | N/A
		0x1808BD923 mov eax,ecx		; DEBUG: {Register}/EAX {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x1808BD925 add rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1808BD928 cmp [r8+rax*8],r9		; DEBUG: {Memory}/None {Register}/R9 ||| R8 | 0 | RAX ||| N/A | N/A
		0x1808BD92C je short 00000001808BD96Ch		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BD92E inc bx		; DEBUG: {Register}/BX {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1808BD931 cmp bx,dx		; DEBUG: {Register}/BX {Register}/DX ||| None | 0 | None ||| N/A | N/A
		0x1808BD934 jb short 00000001808BD920h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BD936 mov r8d,r11d		; DEBUG: {Register}/R8D {Register}/R11D ||| None | 0 | None ||| N/A | N/A
		0x1808BD939 mov rdx,r9		; DEBUG: {Register}/RDX {Register}/R9 ||| None | 0 | None ||| N/A | N/A
		0x1808BD93C mov rcx,rsi		; DEBUG: {Register}/RCX {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x1808BD93F call 00000001800F5B10h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BD944 mov rcx,[rax+8]		; DEBUG: {Register}/RCX {Memory}/None ||| RAX | 8 | None ||| N/A | N/A
		0x1808BD948 mov rdx,rdi		; DEBUG: {Register}/RDX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x1808BD94B call 000000018010EE60h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BD950 mov r9,r12		; DEBUG: {Register}/R9 {Register}/R12 ||| None | 0 | None ||| N/A | N/A
		0x1808BD953 mov [rsp+20h],rax		; DEBUG: {Memory}/None {Register}/RAX ||| RSP | 32 | None ||| N/A | N/A
		0x1808BD958 mov r8,r13		; DEBUG: {Register}/R8 {Register}/R13 ||| None | 0 | None ||| N/A | N/A
		0x1808BD95B mov rdx,r14		; DEBUG: {Register}/RDX {Register}/R14 ||| None | 0 | None ||| N/A | N/A
		0x1808BD95E mov rcx,rsi		; DEBUG: {Register}/RCX {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x1808BD961 mov r10,[rax]		; DEBUG: {Register}/R10 {Memory}/None ||| RAX | 0 | None ||| N/A | N/A
		0x1808BD964 call r10		; DEBUG: {Register}/R10 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1808BD967 jmp near ptr 00000001808BDA79h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BD96C add rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x1808BD96F lea rax,[r10+128h]		; DEBUG: {Register}/RAX {Memory}/None ||| R10 | 296 | None ||| N/A | N/A
		0x1808BD976 mov ecx,[r8+rcx*8+8]		; DEBUG: {Register}/ECX {Memory}/None ||| R8 | 8 | RCX ||| N/A | N/A
		0x1808BD97B add ecx,r11d		; DEBUG: {Register}/ECX {Register}/R11D ||| None | 0 | None ||| N/A | N/A
		0x1808BD97E shl rcx,4		; DEBUG: {Register}/RCX {Immediate8}/None ||| None | 0 | None ||| N/A | 4
		0x1808BD982 add rax,rcx		; DEBUG: {Register}/RAX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x1808BD985 jmp short 00000001808BD944h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BD987 mov rax,[rsi]		; DEBUG: {Register}/RAX {Memory}/None ||| RSI | 0 | None ||| N/A | N/A
		0x1808BD98A add rcx,13h		; DEBUG: {Register}/RCX {Immediate8to64}/None ||| None | 0 | None ||| N/A | 19
		0x1808BD98E add rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x1808BD991 mov rcx,[rax+rcx*8]		; DEBUG: {Register}/RCX {Memory}/None ||| RAX | 0 | RCX ||| N/A | N/A
		0x1808BD995 jmp short 00000001808BD948h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BD997 call 000000018005DA10h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BD99C mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1808BD99F call 00000001800F6DD0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BD9A4 test al,al		; DEBUG: {Register}/AL {Register}/AL ||| None | 0 | None ||| N/A | N/A
		0x1808BD9A6 je near ptr 00000001808BDA38h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BD9AC mov rcx,rdi		; DEBUG: {Register}/RCX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x1808BD9AF call 000000018005DA10h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BD9B4 mov r10,[rsi]		; DEBUG: {Register}/R10 {Memory}/None ||| RSI | 0 | None ||| N/A | N/A
		0x1808BD9B7 mov r9,rax		; DEBUG: {Register}/R9 {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1808BD9BA movzx r11d,word ptr [rdi+48h]		; DEBUG: {Register}/R11D {Memory}/None ||| RDI | 72 | None ||| N/A | N/A
		0x1808BD9BF movzx r8d,word ptr [r10+11Eh]		; DEBUG: {Register}/R8D {Memory}/None ||| R10 | 286 | None ||| N/A | N/A
		0x1808BD9C7 cmp bx,r8w		; DEBUG: {Register}/BX {Register}/R8W ||| None | 0 | None ||| N/A | N/A
		0x1808BD9CB jae short 00000001808BD9F7h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BD9CD mov rdx,[r10+0B0h]		; DEBUG: {Register}/RDX {Memory}/None ||| R10 | 176 | None ||| N/A | N/A
		0x1808BD9D4 nop dword ptr [rax]		; DEBUG: {Memory}/None {Register}/None ||| RAX | 0 | None ||| N/A | N/A
		0x1808BD9D8 nop dword ptr [rax+rax]		; DEBUG: {Memory}/None {Register}/None ||| RAX | 0 | RAX ||| N/A | N/A
		0x1808BD9E0 movzx ecx,bx		; DEBUG: {Register}/ECX {Register}/BX ||| None | 0 | None ||| N/A | N/A
		0x1808BD9E3 mov eax,ecx		; DEBUG: {Register}/EAX {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x1808BD9E5 add rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1808BD9E8 cmp [rdx+rax*8],r9		; DEBUG: {Memory}/None {Register}/R9 ||| RDX | 0 | RAX ||| N/A | N/A
		0x1808BD9EC je short 00000001808BDA1Eh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BD9EE inc bx		; DEBUG: {Register}/BX {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1808BD9F1 cmp bx,r8w		; DEBUG: {Register}/BX {Register}/R8W ||| None | 0 | None ||| N/A | N/A
		0x1808BD9F5 jb short 00000001808BD9E0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BD9F7 mov r8d,r11d		; DEBUG: {Register}/R8D {Register}/R11D ||| None | 0 | None ||| N/A | N/A
		0x1808BD9FA mov rdx,r9		; DEBUG: {Register}/RDX {Register}/R9 ||| None | 0 | None ||| N/A | N/A
		0x1808BD9FD mov rcx,rsi		; DEBUG: {Register}/RCX {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x1808BDA00 call 00000001800F5B10h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BDA05 mov rcx,[rax+8]		; DEBUG: {Register}/RCX {Memory}/None ||| RAX | 8 | None ||| N/A | N/A
		0x1808BDA09 mov r9,r12		; DEBUG: {Register}/R9 {Register}/R12 ||| None | 0 | None ||| N/A | N/A
		0x1808BDA0C mov [rsp+20h],rcx		; DEBUG: {Memory}/None {Register}/RCX ||| RSP | 32 | None ||| N/A | N/A
		0x1808BDA11 mov r8,r13		; DEBUG: {Register}/R8 {Register}/R13 ||| None | 0 | None ||| N/A | N/A
		0x1808BDA14 mov rcx,rsi		; DEBUG: {Register}/RCX {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x1808BDA17 mov rdx,r14		; DEBUG: {Register}/RDX {Register}/R14 ||| None | 0 | None ||| N/A | N/A
		0x1808BDA1A call qword ptr [rax]		; DEBUG: {Memory}/None {Register}/None ||| RAX | 0 | None ||| N/A | N/A
		0x1808BDA1C jmp short 00000001808BDA79h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BDA1E add rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x1808BDA21 lea rax,[r10+128h]		; DEBUG: {Register}/RAX {Memory}/None ||| R10 | 296 | None ||| N/A | N/A
		0x1808BDA28 mov ecx,[rdx+rcx*8+8]		; DEBUG: {Register}/ECX {Memory}/None ||| RDX | 8 | RCX ||| N/A | N/A
		0x1808BDA2C add ecx,r11d		; DEBUG: {Register}/ECX {Register}/R11D ||| None | 0 | None ||| N/A | N/A
		0x1808BDA2F shl rcx,4		; DEBUG: {Register}/RCX {Immediate8}/None ||| None | 0 | None ||| N/A | 4
		0x1808BDA33 add rax,rcx		; DEBUG: {Register}/RAX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x1808BDA36 jmp short 00000001808BDA05h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BDA38 movzx r10d,word ptr [rdi+48h]		; DEBUG: {Register}/R10D {Memory}/None ||| RDI | 72 | None ||| N/A | N/A
		0x1808BDA3D mov r9,r12		; DEBUG: {Register}/R9 {Register}/R12 ||| None | 0 | None ||| N/A | N/A
		0x1808BDA40 shl r10,4		; DEBUG: {Register}/R10 {Immediate8}/None ||| None | 0 | None ||| N/A | 4
		0x1808BDA44 mov r8,r13		; DEBUG: {Register}/R8 {Register}/R13 ||| None | 0 | None ||| N/A | N/A
		0x1808BDA47 add r10,[rsi]		; DEBUG: {Register}/R10 {Memory}/None ||| RSI | 0 | None ||| N/A | N/A
		0x1808BDA4A mov rdx,r14		; DEBUG: {Register}/RDX {Register}/R14 ||| None | 0 | None ||| N/A | N/A
		0x1808BDA4D mov rcx,rsi		; DEBUG: {Register}/RCX {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x1808BDA50 mov rax,[r10+130h]		; DEBUG: {Register}/RAX {Memory}/None ||| R10 | 304 | None ||| N/A | N/A
		0x1808BDA57 mov [rsp+20h],rax		; DEBUG: {Memory}/None {Register}/RAX ||| RSP | 32 | None ||| N/A | N/A
		0x1808BDA5C call qword ptr [r10+128h]		; DEBUG: {Memory}/None {Register}/None ||| R10 | 296 | None ||| N/A | N/A
		0x1808BDA63 jmp short 00000001808BDA79h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BDA65 mov r9,r12		; DEBUG: {Register}/R9 {Register}/R12 ||| None | 0 | None ||| N/A | N/A
		0x1808BDA68 mov [rsp+20h],rdi		; DEBUG: {Memory}/None {Register}/RDI ||| RSP | 32 | None ||| N/A | N/A
		0x1808BDA6D mov r8,r13		; DEBUG: {Register}/R8 {Register}/R13 ||| None | 0 | None ||| N/A | N/A
		0x1808BDA70 mov rdx,r14		; DEBUG: {Register}/RDX {Register}/R14 ||| None | 0 | None ||| N/A | N/A
		0x1808BDA73 mov rcx,rsi		; DEBUG: {Register}/RCX {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x1808BDA76 call r15		; DEBUG: {Register}/R15 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1808BDA79 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1808BDA7C mov rbp,[rsp+68h]		; DEBUG: {Register}/RBP {Memory}/None ||| RSP | 104 | None ||| N/A | N/A
		0x1808BDA81 mov rax,rbx		; DEBUG: {Register}/RAX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x1808BDA84 mov rbx,[rsp+60h]		; DEBUG: {Register}/RBX {Memory}/None ||| RSP | 96 | None ||| N/A | N/A
		0x1808BDA89 mov rsi,[rsp+70h]		; DEBUG: {Register}/RSI {Memory}/None ||| RSP | 112 | None ||| N/A | N/A
		0x1808BDA8E add rsp,30h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 48
		0x1808BDA92 pop r15		; DEBUG: {Register}/R15 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1808BDA94 pop r14		; DEBUG: {Register}/R14 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1808BDA96 pop r13		; DEBUG: {Register}/R13 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1808BDA98 pop r12		; DEBUG: {Register}/R12 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1808BDA9A pop rdi		; DEBUG: {Register}/RDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1808BDA9B ret		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1808BDA9C int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method UnityEngine.Transform Cinemachine.CinemachineVirtualCamera/CreatePipelineDelegate::Invoke(Cinemachine.CinemachineVirtualCamera,System.String,Cinemachine.CinemachineComponentBase[]):
		End of function at 0x1808BDA9D
		Absolute End is at 0x1808BDA9D
		Identified Jump Destination addresses:
			0x1808BDA79
		0x1808BD60F: Saves the content of rdi to the stack
		0x1808BD610: Saves the content of r12 to the stack
		0x1808BD612: Saves the content of r13 to the stack
		0x1808BD614: Saves the content of r14 to the stack
		0x1808BD616: Saves the content of r15 to the stack
		0x1808BD61C: Copies {'this' (function parameter, type Cinemachine.CinemachineVirtualCamera/CreatePipelineDelegate)} from rcx into rbp
		0x1808BD61F: Clears register rbx, yielding zero-local {'local4' (type System.Int32)}
		0x1808BD621: [!] Reads field prev from {'this' (function parameter, type Cinemachine.CinemachineVirtualCamera/CreatePipelineDelegate)} and stores in a new local {'prev' (type System.MulticastDelegate)}

		0x1808BD625: Copies {'copyFrom' (function parameter, type Cinemachine.CinemachineComponentBase[])} from r9 into r12
		0x1808BD628: Copies {'name' (function parameter, type System.String)} from r8 into r13
		0x1808BD62B: Copies {'vcam' (function parameter, type Cinemachine.CinemachineVirtualCamera)} from rdx into r14
		0x1808BD62E: [!] Compares {'prev' (type System.MulticastDelegate)} and 0
		0x1808BD631: Jumps to 0x1808BD645 (which is an if statement's body) if prev equals 0 ;  - Increasing indentation - is standard if, unimportant is False

		0x1808BD633: Reads unknown value in stack, offset 128 (0x80) and stores the pointer in register rax as new constant constant2
		0x1808BD63B: Moves constant2 (type Cpp2IL.Core.Analysis.ResultModels.StackPointer) from register rax to the stack at offset 32 (0x20) as a new local local6
		0x1808BD640: [!] Calls managed method  on instance {'prev' (type System.MulticastDelegate)} ;  - Failed to resolve any matching method (there are 2 at this address)

		0x1808BD645: [!] Reads field method from {'this' (function parameter, type Cinemachine.CinemachineVirtualCamera/CreatePipelineDelegate)} and stores in a new local {'method' (type System.IntPtr)}

		0x1808BD649: [!] Writes the constant 0xFFFF into operand {'local8' (type System.UInt32)} (type UInt64) in register rax
		0x1808BD652: [!] Reads field m_target from {'this' (function parameter, type Cinemachine.CinemachineVirtualCamera/CreatePipelineDelegate)} and stores in a new local {'m_target' (type System.Object)}

		0x1808BD656: [!] Compares  and {'local8' (type System.UInt32)}
		0x1808BD65A: Jumps to 0x1808BD664 if  != {'local8' (type System.UInt32)} ;  - This is probably a goto, jumping to 0x1808BD664 which is after end of current block @ 0x1808BD645 (started at 0x1808BD633)

		0x1808BD65C: Copies {'method' (type System.IntPtr)} from rdi into rcx
		0x1808BD65F: [!] Constructs and throws an exception of kind System.ExecutionEngineException

		0x1808BD664: Copies {'method' (type System.IntPtr)} from rdi into rcx
		0x1808BD66C: [!] Reads field  from {'method' (type System.IntPtr)} and stores in a new local 

		0x1808BD670: [!] Compares {'local11' (type System.ExecutionEngineException)} and 0
		0x1808BD672: Jumps to 0x1808BD691 if {'local11' (type System.ExecutionEngineException)} != 0 ;  - This is probably a goto, jumping to 0x1808BD691 which is after end of current block @ 0x1808BD645 (started at 0x1808BD633)

		0x1808BD674: [!] Compares {'method' (type System.IntPtr)} and 3
		0x1808BD677: Jumps to 0x1808BDA65 if {'method' (type System.IntPtr)} != 3 ;  - This is probably a goto, jumping to 0x1808BDA65 which is after end of current block @ 0x1808BD645 (started at 0x1808BD633)

		0x1808BD67D: Copies {'method' (type System.IntPtr)} from rdi into r9
		0x1808BD680: Copies {'copyFrom' (function parameter, type Cinemachine.CinemachineComponentBase[])} from r12 into r8
		0x1808BD683: Copies {'name' (function parameter, type System.String)} from r13 into rdx
		0x1808BD686: Copies {'vcam' (function parameter, type Cinemachine.CinemachineVirtualCamera)} from r14 into rcx
		0x1808BD68C: Jumps to 0x1808BDA79 (which is an function-local jump destination)

		0x1808BD691: [!] Reads field  from {'method' (type System.IntPtr)} and stores in a new local 

		0x1808BD695: [!] Compares {'vcam' (function parameter, type Cinemachine.CinemachineVirtualCamera)} and 3
		0x1808BD698: [!] Writes the constant 0xFFFF into operand {'local12' (type System.UInt32)} (type UInt64) in register rcx
		0x1808BD69D: Jumps to 0x1808BD88E if vcam equals 3 ;  - This is probably a goto, jumping to 0x1808BD88E which is after end of current block @ 0x1808BD645 (started at 0x1808BD633)

		0x1808BD6A3: [!] Compares {'local11' (type System.ExecutionEngineException)} and {'local12' (type System.UInt32)}
		0x1808BD6A6: Jumps to 0x1808BD67D if local11 equals local12 ;  - This is probably a goto, jumping to 0x1808BD67D which is after end of current block @ 0x1808BD645 (started at 0x1808BD633)

		0x1808BD6A8: [!] Compares {'m_target' (type System.Object)} and 0
		0x1808BD6AB: Jumps to 0x1808BD6BC if m_target equals 0 ;  - This is probably a goto, jumping to 0x1808BD6BC which is after end of current block @ 0x1808BD645 (started at 0x1808BD633)

		0x1808BD6AD: Loads the class pointer from m_target into a constant constant7 in register rax
		0x1808BD6B0: Compares "{il2cpp field on {'constant7' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)}, offset 0x108}" and 256
		0x1808BD6BA: Jumps to 0x1808BD67D if "{il2cpp field on {'constant7' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)}, offset 0x108}" != 256 ;  - This is probably a goto, jumping to 0x1808BD67D which is after end of current block @ 0x1808BD645 (started at 0x1808BD633)

		0x1808BD6BC: [!] Compares  and {'local4' (type System.Int32)}
		0x1808BD6C0: Jumps to 0x1808BD67D if  equals local4 ;  - This is probably a goto, jumping to 0x1808BD67D which is after end of current block @ 0x1808BD645 (started at 0x1808BD633)

		0x1808BD6C2: [!] Compares {'m_target' (type System.Object)} and 0
		0x1808BD6C5: Jumps to 0x1808BD6DA if m_target equals 0 ;  - This is probably a goto, jumping to 0x1808BD6DA which is after end of current block @ 0x1808BD645 (started at 0x1808BD633)

		0x1808BD6C7: Loads the class pointer from m_target into a constant constant11 in register rax
		0x1808BD6CA: Compares "{il2cpp field on {'constant11' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)}, offset 0x108}" and 256
		0x1808BD6D4: Jumps to 0x1808BDA7C if "{il2cpp field on {'constant11' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)}, offset 0x108}" != 256 ;  - This is probably a goto, jumping to 0x1808BDA7C which is after end of current block @ 0x1808BD645 (started at 0x1808BD633)

		0x1808BD6DA: Copies {'method' (type System.IntPtr)} from rdi into rcx
		0x1808BD6E2: Copies {'method' (type System.IntPtr)} from rdi into rcx
		0x1808BD6E5: [!] Compares {'constant11' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} and 0
		0x1808BD6E7: Jumps to 0x1808BD7BF if constant11 equals 0 ;  - This is probably a goto, jumping to 0x1808BD7BF which is after end of current block @ 0x1808BD645 (started at 0x1808BD633)

		0x1808BD6ED: [!] Calls managed method  on instance {'method' (type System.IntPtr)} ;  - Failed to resolve any matching method (there are 3 at this address)

		0x1808BD6F2: Copies {'constant11' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} from rax into rcx
		0x1808BD6FA: [!] Reads field  from {'method' (type System.IntPtr)} and stores in a new local 

		0x1808BD6FE: [!] Compares {'constant11' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} and 0
		0x1808BD700: Jumps to 0x1808BD792 if constant11 equals 0 ;  - This is probably a goto, jumping to 0x1808BD792 which is after end of current block @ 0x1808BD645 (started at 0x1808BD633)

		0x1808BD706: Loads the class pointer from vcam into a constant constant16 in register r10
		0x1808BD709: Copies {'constant11' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} from rcx into r11
		0x1808BD70C: [!] Reads field  from {'method' (type System.IntPtr)} and stores in a new local 

		0x1808BD710: [!!] Reads value at unknown offset 286 (0x11E) on a klass pointer
		0x1808BD718: [!] Compares {'local4' (type System.Int32)} and {'name' (function parameter, type System.String)}
		0x1808BD71B: Jumps to 0x1808BD746 if {'local4' (type System.Int32)} is greater than or equal to {'name' (function parameter, type System.String)} ;  - This is probably a goto, jumping to 0x1808BD746 which is after end of current block @ 0x1808BD645 (started at 0x1808BD633)

		0x1808BD71D: Loads the interface offsets for the class pointer to Cinemachine.CinemachineVirtualCamera, which contains 1 offsets, and stores them as a constant constant17 in reg r8
		0x1808BD730: Copies {'local4' (type System.Int32)} from rbx into rcx
		0x1808BD733: Copies {'local4' (type System.Int32)} from rcx into rax
		0x1808BD735: [!] Adds {'local4' (type System.Int32)} and {'local4' (type System.Int32)} and stores the result in {'local4' (type System.Int32)}
		0x1808BD73C: Jumps to 0x1808BD777 if local4 equals name ;  - This is probably a goto, jumping to 0x1808BD777 which is after end of current block @ 0x1808BD645 (started at 0x1808BD633)

		0x1808BD73E: [!] Adds 1 to the value {'local4' (type System.Int32)}, stored in rbx
		0x1808BD741: [!] Compares {'local4' (type System.Int32)} and {'name' (function parameter, type System.String)}
		0x1808BD746: Copies {'constant11' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} from r11 into r8
		0x1808BD749: Copies {'method' (type System.IntPtr)} from r9 into rdx
		0x1808BD74C: Copies {'vcam' (function parameter, type Cinemachine.CinemachineVirtualCamera)} from r14 into rcx

		Potential Loop Start (0x1808BD754):
		0x1808BD754: [!] Reads field  from {'local4' (type System.Int32)} and stores in a new local 

		0x1808BD758: Copies {'method' (type System.IntPtr)} from rdi into rdx
		0x1808BD760: Copies {'local4' (type System.Int32)} from rax into r9
		0x1808BD763: Copies {'copyFrom' (function parameter, type Cinemachine.CinemachineComponentBase[])} from r12 into r8
		0x1808BD766: Copies {'name' (function parameter, type System.String)} from r13 into rdx
		0x1808BD769: Copies {'vcam' (function parameter, type Cinemachine.CinemachineVirtualCamera)} from r14 into rcx
		0x1808BD76C: Loads the class pointer from local4 into a constant constant18 in register r10
		0x1808BD772: Jumps to 0x1808BDA79 (which is an function-local jump destination)

		0x1808BD777: [!] Adds {'vcam' (function parameter, type Cinemachine.CinemachineVirtualCamera)} and {'vcam' (function parameter, type Cinemachine.CinemachineVirtualCamera)} and stores the result in {'vcam' (function parameter, type Cinemachine.CinemachineVirtualCamera)}
		0x1808BD786: [!] Adds {'vcam' (function parameter, type Cinemachine.CinemachineVirtualCamera)} and {'constant11' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} and stores the result in {'vcam' (function parameter, type Cinemachine.CinemachineVirtualCamera)}
		0x1808BD78D: [!] Adds {'local4' (type System.Int32)} and {'vcam' (function parameter, type Cinemachine.CinemachineVirtualCamera)} and stores the result in {'local4' (type System.Int32)}
		0x1808BD790: Jumps to 0x1808BD754 - which is still in this function, but further up. Probably indicative that this is a loop.
		0x1808BD792: Loads the class pointer from vcam into a constant constant19 in register rax
		0x1808BD795: Loads the pointer to the field  on {'vcam' (function parameter, type Cinemachine.CinemachineVirtualCamera)} into register rcx
		0x1808BD799: [!] Adds {'vcam' (function parameter, type Cinemachine.CinemachineVirtualCamera)} and {'vcam' (function parameter, type Cinemachine.CinemachineVirtualCamera)} and stores the result in {'vcam' (function parameter, type Cinemachine.CinemachineVirtualCamera)}
		0x1808BD79C: Copies {'method' (type System.IntPtr)} from rdi into rdx
		0x1808BD79F: [!!] Reads value at unknown offset 0 (0x0) on a klass pointer
		0x1808BD7A8: Copies {'constant19' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} from rax into r9
		0x1808BD7AB: Copies {'copyFrom' (function parameter, type Cinemachine.CinemachineComponentBase[])} from r12 into r8
		0x1808BD7AE: Copies {'name' (function parameter, type System.String)} from r13 into rdx
		0x1808BD7B1: Copies {'vcam' (function parameter, type Cinemachine.CinemachineVirtualCamera)} from r14 into rcx
		0x1808BD7B4: [!!] Reads value at unknown offset 0 (0x0) on a klass pointer
		0x1808BD7BA: Jumps to 0x1808BDA79 (which is an function-local jump destination)

		0x1808BD7BF: [!] Calls managed method  on instance {'vcam' (function parameter, type Cinemachine.CinemachineVirtualCamera)} ;  - Failed to resolve any matching method (there are 3 at this address)

		0x1808BD7C4: Copies {'constant19' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} from rax into rcx
		0x1808BD7CC: [!] Compares {'constant19' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} and 0
		0x1808BD7CE: Jumps to 0x1808BD865 if constant19 equals 0 ;  - This is probably a goto, jumping to 0x1808BD865 which is after end of current block @ 0x1808BD645 (started at 0x1808BD633)

		0x1808BD7D4: Copies {'method' (type System.IntPtr)} from rdi into rcx
		0x1808BD7D7: [!] Calls managed method  on instance {'method' (type System.IntPtr)} ;  - Failed to resolve any matching method (there are 3 at this address)

		0x1808BD7DC: Loads the class pointer from vcam into a constant constant21 in register r10
		0x1808BD7DF: Copies {'constant19' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} from rax into r9
		0x1808BD7E2: [!] Reads field  from {'method' (type System.IntPtr)} and stores in a new local 

		0x1808BD7E7: [!!] Reads value at unknown offset 286 (0x11E) on a klass pointer
		0x1808BD7EF: [!] Compares {'local4' (type System.Int32)} and {'copyFrom' (function parameter, type Cinemachine.CinemachineComponentBase[])}
		0x1808BD7F3: Jumps to 0x1808BD817 if {'local4' (type System.Int32)} is greater than or equal to {'copyFrom' (function parameter, type Cinemachine.CinemachineComponentBase[])} ;  - This is probably a goto, jumping to 0x1808BD817 which is after end of current block @ 0x1808BD645 (started at 0x1808BD633)

		0x1808BD7F5: Loads the interface offsets for the class pointer to Cinemachine.CinemachineVirtualCamera, which contains 1 offsets, and stores them as a constant constant22 in reg rdx
		0x1808BD800: Copies {'local4' (type System.Int32)} from rbx into rcx
		0x1808BD803: Copies {'local4' (type System.Int32)} from rcx into rax
		0x1808BD805: [!] Adds {'local4' (type System.Int32)} and {'local4' (type System.Int32)} and stores the result in {'local4' (type System.Int32)}
		0x1808BD80C: Jumps to 0x1808BD839 if local4 equals copyFrom ;  - This is probably a goto, jumping to 0x1808BD839 which is after end of current block @ 0x1808BD645 (started at 0x1808BD633)

		0x1808BD80E: [!] Adds 1 to the value {'local4' (type System.Int32)}, stored in rbx
		0x1808BD811: [!] Compares {'local4' (type System.Int32)} and {'copyFrom' (function parameter, type Cinemachine.CinemachineComponentBase[])}
		0x1808BD817: Copies {'constant11' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} from r11 into r8
		0x1808BD81A: Copies {'constant19' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} from r9 into rdx
		0x1808BD81D: Copies {'vcam' (function parameter, type Cinemachine.CinemachineVirtualCamera)} from r14 into rcx
		0x1808BD825: Copies {'copyFrom' (function parameter, type Cinemachine.CinemachineComponentBase[])} from r12 into r8
		0x1808BD828: Copies {'name' (function parameter, type System.String)} from r13 into rdx
		0x1808BD82B: Copies {'vcam' (function parameter, type Cinemachine.CinemachineVirtualCamera)} from r14 into rcx
		0x1808BD82E: [!] Reads field  from {'local4' (type System.Int32)} and stores in a new local 

		0x1808BD834: Jumps to 0x1808BDA79 (which is an function-local jump destination)

		0x1808BD839: [!] Adds {'vcam' (function parameter, type Cinemachine.CinemachineVirtualCamera)} and {'vcam' (function parameter, type Cinemachine.CinemachineVirtualCamera)} and stores the result in {'vcam' (function parameter, type Cinemachine.CinemachineVirtualCamera)}
		0x1808BD843: Copies {'copyFrom' (function parameter, type Cinemachine.CinemachineComponentBase[])} from r12 into r8
		0x1808BD84A: Copies {'name' (function parameter, type System.String)} from r13 into rdx
		0x1808BD84D: [!] Adds {'vcam' (function parameter, type Cinemachine.CinemachineVirtualCamera)} and {'constant11' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} and stores the result in {'vcam' (function parameter, type Cinemachine.CinemachineVirtualCamera)}
		0x1808BD854: [!] Adds {'local4' (type System.Int32)} and {'vcam' (function parameter, type Cinemachine.CinemachineVirtualCamera)} and stores the result in {'local4' (type System.Int32)}
		0x1808BD857: Copies {'vcam' (function parameter, type Cinemachine.CinemachineVirtualCamera)} from r14 into rcx
		0x1808BD85A: [!] Reads field  from {'local4' (type System.Int32)} and stores in a new local 

		0x1808BD860: Jumps to 0x1808BDA79 (which is an function-local jump destination)

		0x1808BD865: [!] Reads field  from {'method' (type System.IntPtr)} and stores in a new local 

		0x1808BD86A: Copies {'copyFrom' (function parameter, type Cinemachine.CinemachineComponentBase[])} from r12 into r8
		0x1808BD86D: Loads the class pointer from vcam into a constant constant23 in register rax
		0x1808BD870: [!] Adds  and {'constant21' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} and stores the result in 
		0x1808BD873: Copies {'name' (function parameter, type System.String)} from r13 into rdx
		0x1808BD876: Copies {'vcam' (function parameter, type Cinemachine.CinemachineVirtualCamera)} from r14 into rcx
		0x1808BD879: Loads the pointer to the implementation of virtual function  specific to Cinemachine.CinemachineVirtualCamera from the class pointer in rax, slot -1 (from memory offset 304) and stores in constant 
		0x1808BD889: Jumps to 0x1808BDA79 (which is an function-local jump destination)

		0x1808BD88E: [!] Compares {'constant23' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} and {'vcam' (function parameter, type Cinemachine.CinemachineVirtualCamera)}
		0x1808BD891: Jumps to 0x1808BDA65 if constant23 equals vcam ;  - This is probably a goto, jumping to 0x1808BDA65 which is after end of current block @ 0x1808BD645 (started at 0x1808BD633)

		0x1808BD897: [!] Compares {'m_target' (type System.Object)} and 0
		0x1808BD89A: Jumps to 0x1808BD8AF if m_target equals 0 ;  - This is probably a goto, jumping to 0x1808BD8AF which is after end of current block @ 0x1808BD645 (started at 0x1808BD633)

		0x1808BD89C: Loads the class pointer from m_target into a constant constant25 in register rax
		0x1808BD89F: Compares "{il2cpp field on {'constant25' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)}, offset 0x108}" and 256
		0x1808BD8A9: Jumps to 0x1808BDA65 if "{il2cpp field on {'constant25' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)}, offset 0x108}" != 256 ;  - This is probably a goto, jumping to 0x1808BDA65 which is after end of current block @ 0x1808BD645 (started at 0x1808BD633)

		0x1808BD8AF: [!] Compares  and {'local4' (type System.Int32)}
		0x1808BD8B3: Jumps to 0x1808BDA65 if  equals local4 ;  - This is probably a goto, jumping to 0x1808BDA65 which is after end of current block @ 0x1808BD645 (started at 0x1808BD633)

		0x1808BD8B9: [!] Compares {'m_target' (type System.Object)} and 0
		0x1808BD8BC: Jumps to 0x1808BD67D if m_target equals 0 ;  - This is probably a goto, jumping to 0x1808BD67D which is after end of current block @ 0x1808BD645 (started at 0x1808BD633)

		0x1808BD8C2: Loads the class pointer from m_target into a constant constant29 in register rax
		0x1808BD8C5: Compares "{il2cpp field on {'constant29' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)}, offset 0x108}" and 256
		0x1808BD8CF: Jumps to 0x1808BDA7C if "{il2cpp field on {'constant29' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)}, offset 0x108}" != 256 ;  - This is probably a goto, jumping to 0x1808BDA7C which is after end of current block @ 0x1808BD645 (started at 0x1808BD633)

		0x1808BD8D5: Copies {'method' (type System.IntPtr)} from rdi into rcx
		0x1808BD8DD: Copies {'method' (type System.IntPtr)} from rdi into rcx
		0x1808BD8E0: [!] Compares {'constant29' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} and 0
		0x1808BD8E2: Jumps to 0x1808BD997 if constant29 equals 0 ;  - This is probably a goto, jumping to 0x1808BD997 which is after end of current block @ 0x1808BD645 (started at 0x1808BD633)

		0x1808BD8E8: [!] Calls managed method  on instance {'method' (type System.IntPtr)} ;  - Failed to resolve any matching method (there are 3 at this address)

		0x1808BD8ED: Copies {'constant29' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} from rax into rcx
		0x1808BD8F5: [!] Reads field  from {'method' (type System.IntPtr)} and stores in a new local 

		0x1808BD8F9: [!] Compares {'constant29' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} and 0
		0x1808BD8FB: Jumps to 0x1808BD987 if constant29 equals 0 ;  - This is probably a goto, jumping to 0x1808BD987 which is after end of current block @ 0x1808BD645 (started at 0x1808BD633)

		0x1808BD901: Loads the class pointer from m_target into a constant constant34 in register r10
		0x1808BD904: Copies {'constant29' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} from rcx into r11
		0x1808BD907: [!] Reads field  from {'method' (type System.IntPtr)} and stores in a new local 

		0x1808BD90B: [!!] Reads value at unknown offset 286 (0x11E) on a klass pointer
		0x1808BD913: [!] Compares {'local4' (type System.Int32)} and {'name' (function parameter, type System.String)}
		0x1808BD916: Jumps to 0x1808BD936 if {'local4' (type System.Int32)} is greater than or equal to {'name' (function parameter, type System.String)} ;  - This is probably a goto, jumping to 0x1808BD936 which is after end of current block @ 0x1808BD645 (started at 0x1808BD633)

		0x1808BD918: Loads the interface offsets for the class pointer to System.Object, which contains 0 offsets, and stores them as a constant constant35 in reg r8
		0x1808BD920: Copies {'local4' (type System.Int32)} from rbx into rcx
		0x1808BD923: Copies {'local4' (type System.Int32)} from rcx into rax
		0x1808BD925: [!] Adds {'local4' (type System.Int32)} and {'local4' (type System.Int32)} and stores the result in {'local4' (type System.Int32)}
		0x1808BD92C: Jumps to 0x1808BD96C if local4 equals name ;  - This is probably a goto, jumping to 0x1808BD96C which is after end of current block @ 0x1808BD645 (started at 0x1808BD633)

		0x1808BD92E: [!] Adds 1 to the value {'local4' (type System.Int32)}, stored in rbx
		0x1808BD931: [!] Compares {'local4' (type System.Int32)} and {'name' (function parameter, type System.String)}
		0x1808BD936: Copies {'constant29' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} from r11 into r8
		0x1808BD939: Copies {'constant19' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} from r9 into rdx
		0x1808BD93C: Copies {'m_target' (type System.Object)} from rsi into rcx

		Potential Loop Start (0x1808BD944):
		0x1808BD944: [!] Reads field  from {'local4' (type System.Int32)} and stores in a new local 


		Potential Loop Start (0x1808BD948):
		0x1808BD948: Copies {'method' (type System.IntPtr)} from rdi into rdx
		0x1808BD950: Copies {'copyFrom' (function parameter, type Cinemachine.CinemachineComponentBase[])} from r12 into r9
		0x1808BD953: Moves local4 (type System.Int32) from register rax to the stack at offset 32 (0x20)
		0x1808BD958: Copies {'name' (function parameter, type System.String)} from r13 into r8
		0x1808BD95B: Copies {'vcam' (function parameter, type Cinemachine.CinemachineVirtualCamera)} from r14 into rdx
		0x1808BD95E: Copies {'m_target' (type System.Object)} from rsi into rcx
		0x1808BD961: Loads the class pointer from local4 into a constant constant36 in register r10
		0x1808BD967: Jumps to 0x1808BDA79 (which is an function-local jump destination)

		0x1808BD96C: [!] Adds {'m_target' (type System.Object)} and {'m_target' (type System.Object)} and stores the result in {'m_target' (type System.Object)}
		0x1808BD97B: [!] Adds {'m_target' (type System.Object)} and {'constant29' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} and stores the result in {'m_target' (type System.Object)}
		0x1808BD982: [!] Adds {'local4' (type System.Int32)} and {'m_target' (type System.Object)} and stores the result in {'local4' (type System.Int32)}
		0x1808BD985: Jumps to 0x1808BD944 - which is still in this function, but further up. Probably indicative that this is a loop.
		0x1808BD987: Loads the class pointer from m_target into a constant constant37 in register rax
		0x1808BD98A: Loads the pointer to the field  on {'m_target' (type System.Object)} into register rcx
		0x1808BD98E: [!] Adds {'m_target' (type System.Object)} and {'m_target' (type System.Object)} and stores the result in {'m_target' (type System.Object)}
		0x1808BD991: [!!] Reads value at unknown offset 0 (0x0) on a klass pointer
		0x1808BD995: Jumps to 0x1808BD948 - which is still in this function, but further up. Probably indicative that this is a loop.
		0x1808BD997: [!] Calls managed method  on instance {'m_target' (type System.Object)} ;  - Failed to resolve any matching method (there are 3 at this address)

		0x1808BD99C: Copies {'constant37' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} from rax into rcx
		0x1808BD9A4: [!] Compares {'constant37' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} and 0
		0x1808BD9A6: Jumps to 0x1808BDA38 if constant37 equals 0 ;  - This is probably a goto, jumping to 0x1808BDA38 which is after end of current block @ 0x1808BD645 (started at 0x1808BD633)

		0x1808BD9AC: Copies {'method' (type System.IntPtr)} from rdi into rcx
		0x1808BD9AF: [!] Calls managed method  on instance {'method' (type System.IntPtr)} ;  - Failed to resolve any matching method (there are 3 at this address)

		0x1808BD9B4: Loads the class pointer from m_target into a constant constant39 in register r10
		0x1808BD9B7: Copies {'constant37' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} from rax into r9
		0x1808BD9BA: [!] Reads field  from {'method' (type System.IntPtr)} and stores in a new local 

		0x1808BD9BF: [!!] Reads value at unknown offset 286 (0x11E) on a klass pointer
		0x1808BD9C7: [!] Compares {'local4' (type System.Int32)} and {'name' (function parameter, type System.String)}
		0x1808BD9CB: Jumps to 0x1808BD9F7 if {'local4' (type System.Int32)} is greater than or equal to {'name' (function parameter, type System.String)} ;  - This is probably a goto, jumping to 0x1808BD9F7 which is after end of current block @ 0x1808BD645 (started at 0x1808BD633)

		0x1808BD9CD: Loads the interface offsets for the class pointer to System.Object, which contains 0 offsets, and stores them as a constant constant40 in reg rdx
		0x1808BD9E0: Copies {'local4' (type System.Int32)} from rbx into rcx
		0x1808BD9E3: Copies {'local4' (type System.Int32)} from rcx into rax
		0x1808BD9E5: [!] Adds {'local4' (type System.Int32)} and {'local4' (type System.Int32)} and stores the result in {'local4' (type System.Int32)}
		0x1808BD9EC: Jumps to 0x1808BDA1E if local4 equals name ;  - This is probably a goto, jumping to 0x1808BDA1E which is after end of current block @ 0x1808BD645 (started at 0x1808BD633)

		0x1808BD9EE: [!] Adds 1 to the value {'local4' (type System.Int32)}, stored in rbx
		0x1808BD9F1: [!] Compares {'local4' (type System.Int32)} and {'name' (function parameter, type System.String)}
		0x1808BD9F7: Copies {'constant29' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} from r11 into r8
		0x1808BD9FA: Copies {'constant37' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} from r9 into rdx
		0x1808BD9FD: Copies {'m_target' (type System.Object)} from rsi into rcx

		Potential Loop Start (0x1808BDA05):
		0x1808BDA05: [!] Reads field  from {'local4' (type System.Int32)} and stores in a new local 

		0x1808BDA09: Copies {'copyFrom' (function parameter, type Cinemachine.CinemachineComponentBase[])} from r12 into r9
		0x1808BDA0C: Moves m_target (type System.Object) from register rcx to the stack at offset 32 (0x20)
		0x1808BDA11: Copies {'name' (function parameter, type System.String)} from r13 into r8
		0x1808BDA14: Copies {'m_target' (type System.Object)} from rsi into rcx
		0x1808BDA17: Copies {'vcam' (function parameter, type Cinemachine.CinemachineVirtualCamera)} from r14 into rdx
		0x1808BDA1C: Jumps to 0x1808BDA79 (which is an function-local jump destination)

		0x1808BDA1E: [!] Adds {'m_target' (type System.Object)} and {'m_target' (type System.Object)} and stores the result in {'m_target' (type System.Object)}
		0x1808BDA2C: [!] Adds {'m_target' (type System.Object)} and {'constant29' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} and stores the result in {'m_target' (type System.Object)}
		0x1808BDA33: [!] Adds {'local4' (type System.Int32)} and {'m_target' (type System.Object)} and stores the result in {'local4' (type System.Int32)}
		0x1808BDA36: Jumps to 0x1808BDA05 - which is still in this function, but further up. Probably indicative that this is a loop.
		0x1808BDA38: [!] Reads field  from {'method' (type System.IntPtr)} and stores in a new local 

		0x1808BDA3D: Copies {'copyFrom' (function parameter, type Cinemachine.CinemachineComponentBase[])} from r12 into r9
		0x1808BDA44: Copies {'name' (function parameter, type System.String)} from r13 into r8
		0x1808BDA4A: Copies {'vcam' (function parameter, type Cinemachine.CinemachineVirtualCamera)} from r14 into rdx
		0x1808BDA4D: Copies {'m_target' (type System.Object)} from rsi into rcx
		0x1808BDA50: Loads the pointer to the implementation of virtual function  specific to System.Object from the class pointer in r10, slot -1 (from memory offset 304) and stores in constant 
		0x1808BDA57: Moves local4 (type System.Int32) from register rax to the stack at offset 32 (0x20)
		0x1808BDA63: Jumps to 0x1808BDA79 (which is an function-local jump destination)

		0x1808BDA65: Copies {'copyFrom' (function parameter, type Cinemachine.CinemachineComponentBase[])} from r12 into r9
		0x1808BDA68: Moves method (type System.IntPtr) from register rdi to the stack at offset 32 (0x20)
		0x1808BDA6D: Copies {'name' (function parameter, type System.String)} from r13 into r8
		0x1808BDA70: Copies {'vcam' (function parameter, type Cinemachine.CinemachineVirtualCamera)} from r14 into rdx
		0x1808BDA73: Copies {'m_target' (type System.Object)} from rsi into rcx

		Jump Destination (0x1808BDA79):
		0x1808BDA79: Copies {'local4' (type System.Int32)} from rax into rbx
		0x1808BDA7C: Reads unknown value in stack, offset 104 (0x68) and stores the pointer in register rbp as new constant constant41
		0x1808BDA81: Copies {'local4' (type System.Int32)} from rbx into rax
		0x1808BDA84: Reads unknown value in stack, offset 96 (0x60) and stores the pointer in register rbx as new constant constant42
		0x1808BDA89: Reads unknown value in stack, offset 112 (0x70) and stores the pointer in register rsi as new constant constant43
		0x1808BDA9B: [!] Returns {'local4' (type System.Int32)} from the function




	Generated Pseudocode:

	Declaring Type: Cinemachine.CinemachineVirtualCamera/CreatePipelineDelegate
	UnityEngine.Transform Invoke(Cinemachine.CinemachineVirtualCamera vcam, System.String name, Cinemachine.CinemachineComponentBase[] copyFrom)
		ulong local4 = 0
		System.MulticastDelegate prev = this.prev

		if (prev != 0)

		    [instruction error - managed method being called is null]
		endif
        
		System.IntPtr method = this.method
		System.Int64 local8 = 0xFFFF
		System.Object m_target = this.m_target

		if ( != local8)
            goto INSN_1808BD664
        endif
		throw new System.ExecutionEngineException()

		INSN_1808BD664:
		  = method.

		if (local11 != 0)
            goto INSN_1808BD691
        endif

		if (method != 3)
            goto INSN_1808BDA65
        endif

		INSN_1808BD691:
		  = method.
		System.Int64 local12 = 0xFFFF

		if (vcam == 3)
            goto INSN_1808BD88E
        endif

		if (local11 == local12)
            goto INSN_1808BD67D
        endif

		if (m_target == 0)
            goto INSN_1808BD6BC
        endif

		INSN_1808BD6BC:

		if ( == local4)
            goto INSN_1808BD67D
        endif

		if (m_target == 0)
            goto INSN_1808BD6DA
        endif

		INSN_1808BD6DA:

		if (constant11 == 0)
            goto INSN_1808BD7BF
        endif

		[instruction error - managed method being called is null]
		  = method.

		if (constant11 == 0)
            goto INSN_1808BD792
        endif
		  = method.
		//UNKNOWN CLASS OFFSET READ HERE

		if (local4 >= name)
            goto INSN_1808BD746
        endif
		local4 += local4

		if (local4 == name)
            goto INSN_1808BD777
        endif
		local4 += 1

		INSN_1808BD746:
		  = local4.

		INSN_1808BD777:
		vcam += vcam
		vcam += constant11
		local4 += vcam

		INSN_1808BD792:
		vcam += vcam
		//UNKNOWN CLASS OFFSET READ HERE
		//UNKNOWN CLASS OFFSET READ HERE

		INSN_1808BD7BF:

		[instruction error - managed method being called is null]

		if (constant19 == 0)
            goto INSN_1808BD865
        endif

		[instruction error - managed method being called is null]
		  = method.
		//UNKNOWN CLASS OFFSET READ HERE

		if (local4 >= copyFrom)
            goto INSN_1808BD817
        endif
		local4 += local4

		if (local4 == copyFrom)
            goto INSN_1808BD839
        endif
		local4 += 1

		INSN_1808BD817:
		  = local4.

		INSN_1808BD839:
		vcam += vcam
		vcam += constant11
		local4 += vcam
		  = local4.

		INSN_1808BD865:
		  = method.
		 += constant21

		INSN_1808BD88E:

		if (constant23 == vcam)
            goto INSN_1808BDA65
        endif

		if (m_target == 0)
            goto INSN_1808BD8AF
        endif

		INSN_1808BD8AF:

		if ( == local4)
            goto INSN_1808BDA65
        endif

		if (m_target == 0)
            goto INSN_1808BD67D
        endif

		if (constant29 == 0)
            goto INSN_1808BD997
        endif

		[instruction error - managed method being called is null]
		  = method.

		if (constant29 == 0)
            goto INSN_1808BD987
        endif
		  = method.
		//UNKNOWN CLASS OFFSET READ HERE

		if (local4 >= name)
            goto INSN_1808BD936
        endif
		local4 += local4

		if (local4 == name)
            goto INSN_1808BD96C
        endif
		local4 += 1

		INSN_1808BD936:
		  = local4.

		INSN_1808BD96C:
		m_target += m_target
		m_target += constant29
		local4 += m_target

		INSN_1808BD987:
		m_target += m_target
		//UNKNOWN CLASS OFFSET READ HERE

		INSN_1808BD997:

		[instruction error - managed method being called is null]

		if (constant37 == 0)
            goto INSN_1808BDA38
        endif

		[instruction error - managed method being called is null]
		  = method.
		//UNKNOWN CLASS OFFSET READ HERE

		if (local4 >= name)
            goto INSN_1808BD9F7
        endif
		local4 += local4

		if (local4 == name)
            goto INSN_1808BDA1E
        endif
		local4 += 1

		INSN_1808BD9F7:
		  = local4.

		INSN_1808BDA1E:
		m_target += m_target
		m_target += constant29
		local4 += m_target

		INSN_1808BDA38:
		  = method.

		INSN_1808BDA65:
		return local4


Generated IL:
	Action of type Cpp2IL.Core.Analysis.Actions.x86.Important.CallManagedFunctionAction at (0x1808BD640) is corrupt (Don't know what method is being called) and cannot be created as IL. Aborting here.


Method: System.IAsyncResult Cinemachine.CinemachineVirtualCamera/CreatePipelineDelegate::BeginInvoke(Cinemachine.CinemachineVirtualCamera,System.String,Cinemachine.CinemachineComponentBase[],System.AsyncCallback,System.Object):	Method Body (x86 ASM):
		0x18040EF90 sub rsp,48h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 72
		0x18040EF94 mov [rsp+20h],rdx		; DEBUG: {Memory}/None {Register}/RDX ||| RSP | 32 | None ||| N/A | N/A
		0x18040EF99 lea rdx,[rsp+20h]		; DEBUG: {Register}/RDX {Memory}/None ||| RSP | 32 | None ||| N/A | N/A
		0x18040EF9E mov [rsp+28h],r8		; DEBUG: {Memory}/None {Register}/R8 ||| RSP | 40 | None ||| N/A | N/A
		0x18040EFA3 mov r8,[rsp+70h]		; DEBUG: {Register}/R8 {Memory}/None ||| RSP | 112 | None ||| N/A | N/A
		0x18040EFA8 mov [rsp+30h],r9		; DEBUG: {Memory}/None {Register}/R9 ||| RSP | 48 | None ||| N/A | N/A
		0x18040EFAD mov r9,[rsp+78h]		; DEBUG: {Register}/R9 {Memory}/None ||| RSP | 120 | None ||| N/A | N/A
		0x18040EFB2 mov qword ptr [rsp+38h],0		; DEBUG: {Memory}/None {Immediate32to64}/None ||| RSP | 56 | None ||| N/A | 0
		0x18040EFBB call 000000018010D170h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18040EFC0 add rsp,48h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 72
		0x18040EFC4 ret		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18040EFC5 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.IAsyncResult Cinemachine.CinemachineVirtualCamera/CreatePipelineDelegate::BeginInvoke(Cinemachine.CinemachineVirtualCamera,System.String,Cinemachine.CinemachineComponentBase[],System.AsyncCallback,System.Object):
		End of function at 0x18040EFC6
		Absolute End is at 0x18040EFC6
		Identified Jump Destination addresses:

		0x18040EF94: Moves vcam (type Cinemachine.CinemachineVirtualCamera) from register rdx to the stack at offset 32 (0x20)
		0x18040EF99: Loads a pointer to stack offset 0x20 into register rdx as new constant constant1
		0x18040EF9E: Moves name (type System.String) from register r8 to the stack at offset 40 (0x28)
		0x18040EFA3: Reads unknown value in stack, offset 112 (0x70) and stores the pointer in register r8 as new constant constant2
		0x18040EFA8: Moves copyFrom (type Cinemachine.CinemachineComponentBase[]) from register r9 to the stack at offset 48 (0x30)
		0x18040EFAD: Reads unknown value in stack, offset 120 (0x78) and stores the pointer in register r9 as new constant constant3
		0x18040EFB2: Moves 0 (immediate ulong value) to the stack at offset 56 as a new local local6
		0x18040EFC4: [!] Returns  from the function




	Generated Pseudocode:

	Declaring Type: Cinemachine.CinemachineVirtualCamera/CreatePipelineDelegate
	System.IAsyncResult BeginInvoke(Cinemachine.CinemachineVirtualCamera vcam, System.String name, Cinemachine.CinemachineComponentBase[] copyFrom, System.AsyncCallback callback, System.Object object)
		return 


Generated IL:
	Action of type Cpp2IL.Core.Analysis.Actions.x86.Important.ReturnFromFunctionAction at (0x18040EFC4) is corrupt (Return value is missing) and cannot be created as IL. Aborting here.


Method: UnityEngine.Transform Cinemachine.CinemachineVirtualCamera/CreatePipelineDelegate::EndInvoke(System.IAsyncResult):	Method Body (x86 ASM):
		0x1802ED1E0 mov rcx,rdx		; DEBUG: {Register}/RCX {Register}/RDX ||| None | 0 | None ||| N/A | N/A
		0x1802ED1E3 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1802ED1E5 jmp near ptr 000000018010DD90h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802ED1EA int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method UnityEngine.Transform Cinemachine.CinemachineVirtualCamera/CreatePipelineDelegate::EndInvoke(System.IAsyncResult):
		End of function at 0x1802ED1EB
		Absolute End is at 0x1802ED1EB
		Identified Jump Destination addresses:

		0x1802ED1E0: Copies {'result' (function parameter, type System.IAsyncResult)} from rdx into rcx



	Generated Pseudocode:

	Declaring Type: Cinemachine.CinemachineVirtualCamera/CreatePipelineDelegate
	UnityEngine.Transform EndInvoke(System.IAsyncResult result)


Generated IL:
	

