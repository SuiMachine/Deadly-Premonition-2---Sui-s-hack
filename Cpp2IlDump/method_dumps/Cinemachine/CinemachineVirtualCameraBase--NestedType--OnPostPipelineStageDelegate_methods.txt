Type: OnPostPipelineStageDelegate

Method: System.Void Cinemachine.CinemachineVirtualCameraBase/OnPostPipelineStageDelegate::.ctor(System.Object,System.IntPtr):	Method Body (x86 ASM):
		0x1802ED440 mov rax,[r8]		; DEBUG: {Register}/RAX {Memory}/None ||| R8 | 0 | None ||| N/A | N/A
		0x1802ED443 mov [rcx+10h],rax		; DEBUG: {Memory}/None {Register}/RAX ||| RCX | 16 | None ||| N/A | N/A
		0x1802ED447 mov [rcx+28h],r8		; DEBUG: {Memory}/None {Register}/R8 ||| RCX | 40 | None ||| N/A | N/A
		0x1802ED44B mov [rcx+20h],rdx		; DEBUG: {Memory}/None {Register}/RDX ||| RCX | 32 | None ||| N/A | N/A
		0x1802ED44F ret		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.Void Cinemachine.CinemachineVirtualCameraBase/OnPostPipelineStageDelegate::.ctor(System.Object,System.IntPtr):
		End of function at 0x1802ED450
		Absolute End is at 0x1802ED450
		Identified Jump Destination addresses:

		0x1802ED440: Loads the class pointer from method into a constant constant1 in register rax
		0x1802ED443: [!] Sets the field method_ptr (Type System.IntPtr) on local {'this' (function parameter, type Cinemachine.CinemachineVirtualCameraBase/OnPostPipelineStageDelegate)} to the value stored in {'constant1' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)}
		0x1802ED447: [!] Sets the field method (Type System.IntPtr) on local {'this' (function parameter, type Cinemachine.CinemachineVirtualCameraBase/OnPostPipelineStageDelegate)} to the value stored in {'method' (function parameter, type System.IntPtr)}
		0x1802ED44B: [!] Sets the field m_target (Type System.Object) on local {'this' (function parameter, type Cinemachine.CinemachineVirtualCameraBase/OnPostPipelineStageDelegate)} to the value stored in {'object' (function parameter, type System.Object)}
		0x1802ED44F: [!] Returns from the function




	Generated Pseudocode:

	Declaring Type: Cinemachine.CinemachineVirtualCameraBase/OnPostPipelineStageDelegate
	System.Void .ctor(System.Object object, System.IntPtr method)
		this.method_ptr = constant1
		this.method = method
		this.m_target = object
		return


Generated IL:
	Action of type Cpp2IL.Core.Analysis.Actions.x86.Important.RegToFieldAction at (0x1802ED443) is corrupt (ConstantDefinition: Don't know how to get IL to load a Cpp2IL.Core.Analysis.Il2CppClassIdentifier) and cannot be created as IL. Aborting here.


Method: System.Void Cinemachine.CinemachineVirtualCameraBase/OnPostPipelineStageDelegate::Invoke(Cinemachine.CinemachineVirtualCameraBase,Cinemachine.CinemachineCore/Stage,Cinemachine.CameraState&,System.Single):	Method Body (x86 ASM):
		0x1808BF0F0 mov [rsp+8],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RSP | 8 | None ||| N/A | N/A
		0x1808BF0F5 mov [rsp+10h],rbp		; DEBUG: {Memory}/None {Register}/RBP ||| RSP | 16 | None ||| N/A | N/A
		0x1808BF0FA mov [rsp+18h],rsi		; DEBUG: {Memory}/None {Register}/RSI ||| RSP | 24 | None ||| N/A | N/A
		0x1808BF0FF push rdi		; DEBUG: {Register}/RDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1808BF100 push r12		; DEBUG: {Register}/R12 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1808BF102 push r13		; DEBUG: {Register}/R13 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1808BF104 push r14		; DEBUG: {Register}/R14 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1808BF106 push r15		; DEBUG: {Register}/R15 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1808BF108 sub rsp,40h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 64
		0x1808BF10C mov rbp,rcx		; DEBUG: {Register}/RBP {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x1808BF10F movaps [rsp+30h],xmm6		; DEBUG: {Memory}/None {Register}/XMM6 ||| RSP | 48 | None ||| N/A | N/A
		0x1808BF114 mov rcx,[rcx+58h]		; DEBUG: {Register}/RCX {Memory}/None ||| RCX | 88 | None ||| N/A | N/A
		0x1808BF118 mov r15,r9		; DEBUG: {Register}/R15 {Register}/R9 ||| None | 0 | None ||| N/A | N/A
		0x1808BF11B movss xmm6,dword ptr [rsp+90h]		; DEBUG: {Register}/XMM6 {Memory}/None ||| RSP | 144 | None ||| N/A | N/A
		0x1808BF124 mov r12d,r8d		; DEBUG: {Register}/R12D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1808BF127 mov rsi,rdx		; DEBUG: {Register}/RSI {Register}/RDX ||| None | 0 | None ||| N/A | N/A
		0x1808BF12A test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x1808BF12D je short 00000001808BF147h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BF12F mov rax,[rsp+98h]		; DEBUG: {Register}/RAX {Memory}/None ||| RSP | 152 | None ||| N/A | N/A
		0x1808BF137 mov [rsp+28h],rax		; DEBUG: {Memory}/None {Register}/RAX ||| RSP | 40 | None ||| N/A | N/A
		0x1808BF13C movss dword ptr [rsp+20h],xmm6		; DEBUG: {Memory}/None {Register}/XMM6 ||| RSP | 32 | None ||| N/A | N/A
		0x1808BF142 call 00000001808BF0F0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BF147 mov rbx,[rbp+28h]		; DEBUG: {Register}/RBX {Memory}/None ||| RBP | 40 | None ||| N/A | N/A
		0x1808BF14B mov r13d,0FFFFh		; DEBUG: {Register}/R13D {Immediate32}/None ||| None | 0 | None ||| N/A | 65535
		0x1808BF151 mov r14,[rbp+10h]		; DEBUG: {Register}/R14 {Memory}/None ||| RBP | 16 | None ||| N/A | N/A
		0x1808BF155 mov rdi,[rbp+20h]		; DEBUG: {Register}/RDI {Memory}/None ||| RBP | 32 | None ||| N/A | N/A
		0x1808BF159 cmp [rbx+48h],r13w		; DEBUG: {Memory}/None {Register}/R13W ||| RBX | 72 | None ||| N/A | N/A
		0x1808BF15E jne short 00000001808BF168h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BF160 mov rcx,rbx		; DEBUG: {Register}/RCX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x1808BF163 call 00000001801102D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BF168 mov rcx,rbx		; DEBUG: {Register}/RCX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x1808BF16B call 0000000180141DF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BF170 movzx ecx,byte ptr [rbx+4Ah]		; DEBUG: {Register}/ECX {Memory}/None ||| RBX | 74 | None ||| N/A | N/A
		0x1808BF174 test al,al		; DEBUG: {Register}/AL {Register}/AL ||| None | 0 | None ||| N/A | N/A
		0x1808BF176 jne short 00000001808BF19Ah		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BF178 cmp cl,4		; DEBUG: {Register}/CL {Immediate8}/None ||| None | 0 | None ||| N/A | 4
		0x1808BF17B jne near ptr 00000001808BF562h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BF181 movaps xmm3,xmm6		; DEBUG: {Register}/XMM3 {Register}/XMM6 ||| None | 0 | None ||| N/A | N/A
		0x1808BF184 mov [rsp+20h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RSP | 32 | None ||| N/A | N/A
		0x1808BF189 mov r8,r15		; DEBUG: {Register}/R8 {Register}/R15 ||| None | 0 | None ||| N/A | N/A
		0x1808BF18C mov edx,r12d		; DEBUG: {Register}/EDX {Register}/R12D ||| None | 0 | None ||| N/A | N/A
		0x1808BF18F mov rcx,rsi		; DEBUG: {Register}/RCX {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x1808BF192 call r14		; DEBUG: {Register}/R14 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1808BF195 jmp near ptr 00000001808BF57Ch		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BF19A movzx eax,word ptr [rbx+48h]		; DEBUG: {Register}/EAX {Memory}/None ||| RBX | 72 | None ||| N/A | N/A
		0x1808BF19E cmp cl,4		; DEBUG: {Register}/CL {Immediate8}/None ||| None | 0 | None ||| N/A | 4
		0x1808BF1A1 je near ptr 00000001808BF37Ch		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BF1A7 cmp ax,r13w		; DEBUG: {Register}/AX {Register}/R13W ||| None | 0 | None ||| N/A | N/A
		0x1808BF1AB je short 00000001808BF181h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BF1AD test rdi,rdi		; DEBUG: {Register}/RDI {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x1808BF1B0 je short 00000001808BF1C1h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BF1B2 mov rax,[rdi]		; DEBUG: {Register}/RAX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1808BF1B5 test dword ptr [rax+108h],100h		; DEBUG: {Memory}/None {Immediate32}/None ||| RAX | 264 | None ||| N/A | 256
		0x1808BF1BF jne short 00000001808BF181h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BF1C1 cmp qword ptr [rbp+18h],0		; DEBUG: {Memory}/None {Immediate8to64}/None ||| RBP | 24 | None ||| N/A | 0
		0x1808BF1C6 je short 00000001808BF181h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BF1C8 test rdi,rdi		; DEBUG: {Register}/RDI {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x1808BF1CB je short 00000001808BF1E0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BF1CD mov rax,[rdi]		; DEBUG: {Register}/RAX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1808BF1D0 test dword ptr [rax+108h],100h		; DEBUG: {Memory}/None {Immediate32}/None ||| RAX | 264 | None ||| N/A | 256
		0x1808BF1DA jne near ptr 00000001808BF57Ch		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BF1E0 mov rcx,rbx		; DEBUG: {Register}/RCX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x1808BF1E3 call 0000000180141DC0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BF1E8 mov rcx,rbx		; DEBUG: {Register}/RCX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x1808BF1EB test al,al		; DEBUG: {Register}/AL {Register}/AL ||| None | 0 | None ||| N/A | N/A
		0x1808BF1ED je near ptr 00000001808BF2ABh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BF1F3 call 000000018005DA10h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BF1F8 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1808BF1FB call 00000001800F6DD0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BF200 movzx ecx,word ptr [rbx+48h]		; DEBUG: {Register}/ECX {Memory}/None ||| RBX | 72 | None ||| N/A | N/A
		0x1808BF204 test al,al		; DEBUG: {Register}/AL {Register}/AL ||| None | 0 | None ||| N/A | N/A
		0x1808BF206 je short 00000001808BF279h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BF208 mov r11,[rsi]		; DEBUG: {Register}/R11 {Memory}/None ||| RSI | 0 | None ||| N/A | N/A
		0x1808BF20B mov edi,ecx		; DEBUG: {Register}/EDI {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x1808BF20D mov r10,[rbx+18h]		; DEBUG: {Register}/R10 {Memory}/None ||| RBX | 24 | None ||| N/A | N/A
		0x1808BF211 xor ecx,ecx		; DEBUG: {Register}/ECX {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x1808BF213 movzx r8d,word ptr [r11+11Eh]		; DEBUG: {Register}/R8D {Memory}/None ||| R11 | 286 | None ||| N/A | N/A
		0x1808BF21B cmp cx,r8w		; DEBUG: {Register}/CX {Register}/R8W ||| None | 0 | None ||| N/A | N/A
		0x1808BF21F jae short 00000001808BF247h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BF221 mov r9,[r11+0B0h]		; DEBUG: {Register}/R9 {Memory}/None ||| R11 | 176 | None ||| N/A | N/A
		0x1808BF228 nop dword ptr [rax+rax]		; DEBUG: {Memory}/None {Register}/None ||| RAX | 0 | RAX ||| N/A | N/A
		0x1808BF230 movzx edx,cx		; DEBUG: {Register}/EDX {Register}/CX ||| None | 0 | None ||| N/A | N/A
		0x1808BF233 mov eax,edx		; DEBUG: {Register}/EAX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1808BF235 add rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1808BF238 cmp [r9+rax*8],r10		; DEBUG: {Memory}/None {Register}/R10 ||| R9 | 0 | RAX ||| N/A | N/A
		0x1808BF23C je short 00000001808BF25Bh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BF23E inc cx		; DEBUG: {Register}/CX {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1808BF241 cmp cx,r8w		; DEBUG: {Register}/CX {Register}/R8W ||| None | 0 | None ||| N/A | N/A
		0x1808BF245 jb short 00000001808BF230h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BF247 mov r8d,edi		; DEBUG: {Register}/R8D {Register}/EDI ||| None | 0 | None ||| N/A | N/A
		0x1808BF24A mov rdx,r10		; DEBUG: {Register}/RDX {Register}/R10 ||| None | 0 | None ||| N/A | N/A
		0x1808BF24D mov rcx,rsi		; DEBUG: {Register}/RCX {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x1808BF250 call 00000001800F5B10h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BF255 mov rcx,[rax+8]		; DEBUG: {Register}/RCX {Memory}/None ||| RAX | 8 | None ||| N/A | N/A
		0x1808BF259 jmp short 00000001808BF287h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BF25B add rdx,rdx		; DEBUG: {Register}/RDX {Register}/RDX ||| None | 0 | None ||| N/A | N/A
		0x1808BF25E lea rax,[r11+128h]		; DEBUG: {Register}/RAX {Memory}/None ||| R11 | 296 | None ||| N/A | N/A
		0x1808BF265 mov ecx,[r9+rdx*8+8]		; DEBUG: {Register}/ECX {Memory}/None ||| R9 | 8 | RDX ||| N/A | N/A
		0x1808BF26A add ecx,edi		; DEBUG: {Register}/ECX {Register}/EDI ||| None | 0 | None ||| N/A | N/A
		0x1808BF26C shl rcx,4		; DEBUG: {Register}/RCX {Immediate8}/None ||| None | 0 | None ||| N/A | 4
		0x1808BF270 add rax,rcx		; DEBUG: {Register}/RAX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x1808BF273 mov rcx,[rax+8]		; DEBUG: {Register}/RCX {Memory}/None ||| RAX | 8 | None ||| N/A | N/A
		0x1808BF277 jmp short 00000001808BF287h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BF279 mov rax,[rsi]		; DEBUG: {Register}/RAX {Memory}/None ||| RSI | 0 | None ||| N/A | N/A
		0x1808BF27C add rcx,13h		; DEBUG: {Register}/RCX {Immediate8to64}/None ||| None | 0 | None ||| N/A | 19
		0x1808BF280 add rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x1808BF283 mov rcx,[rax+rcx*8]		; DEBUG: {Register}/RCX {Memory}/None ||| RAX | 0 | RCX ||| N/A | N/A
		0x1808BF287 mov rdx,rbx		; DEBUG: {Register}/RDX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x1808BF28A call 000000018010EE60h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BF28F movaps xmm3,xmm6		; DEBUG: {Register}/XMM3 {Register}/XMM6 ||| None | 0 | None ||| N/A | N/A
		0x1808BF292 mov [rsp+20h],rax		; DEBUG: {Memory}/None {Register}/RAX ||| RSP | 32 | None ||| N/A | N/A
		0x1808BF297 mov r8,r15		; DEBUG: {Register}/R8 {Register}/R15 ||| None | 0 | None ||| N/A | N/A
		0x1808BF29A mov edx,r12d		; DEBUG: {Register}/EDX {Register}/R12D ||| None | 0 | None ||| N/A | N/A
		0x1808BF29D mov rcx,rsi		; DEBUG: {Register}/RCX {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x1808BF2A0 mov r9,[rax]		; DEBUG: {Register}/R9 {Memory}/None ||| RAX | 0 | None ||| N/A | N/A
		0x1808BF2A3 call r9		; DEBUG: {Register}/R9 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1808BF2A6 jmp near ptr 00000001808BF57Ch		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BF2AB call 000000018005DA10h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BF2B0 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1808BF2B3 call 00000001800F6DD0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BF2B8 test al,al		; DEBUG: {Register}/AL {Register}/AL ||| None | 0 | None ||| N/A | N/A
		0x1808BF2BA je near ptr 00000001808BF34Bh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BF2C0 mov rcx,rbx		; DEBUG: {Register}/RCX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x1808BF2C3 call 000000018005DA10h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BF2C8 mov r11,[rsi]		; DEBUG: {Register}/R11 {Memory}/None ||| RSI | 0 | None ||| N/A | N/A
		0x1808BF2CB xor ecx,ecx		; DEBUG: {Register}/ECX {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x1808BF2CD movzx ebx,word ptr [rbx+48h]		; DEBUG: {Register}/EBX {Memory}/None ||| RBX | 72 | None ||| N/A | N/A
		0x1808BF2D1 mov r10,rax		; DEBUG: {Register}/R10 {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1808BF2D4 movzx r9d,word ptr [r11+11Eh]		; DEBUG: {Register}/R9D {Memory}/None ||| R11 | 286 | None ||| N/A | N/A
		0x1808BF2DC cmp cx,r9w		; DEBUG: {Register}/CX {Register}/R9W ||| None | 0 | None ||| N/A | N/A
		0x1808BF2E0 jae short 00000001808BF307h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BF2E2 mov r8,[r11+0B0h]		; DEBUG: {Register}/R8 {Memory}/None ||| R11 | 176 | None ||| N/A | N/A
		0x1808BF2E9 nop dword ptr [rax]		; DEBUG: {Memory}/None {Register}/None ||| RAX | 0 | None ||| N/A | N/A
		0x1808BF2F0 movzx edx,cx		; DEBUG: {Register}/EDX {Register}/CX ||| None | 0 | None ||| N/A | N/A
		0x1808BF2F3 mov eax,edx		; DEBUG: {Register}/EAX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1808BF2F5 add rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1808BF2F8 cmp [r8+rax*8],r10		; DEBUG: {Memory}/None {Register}/R10 ||| R8 | 0 | RAX ||| N/A | N/A
		0x1808BF2FC je short 00000001808BF331h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BF2FE inc cx		; DEBUG: {Register}/CX {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1808BF301 cmp cx,r9w		; DEBUG: {Register}/CX {Register}/R9W ||| None | 0 | None ||| N/A | N/A
		0x1808BF305 jb short 00000001808BF2F0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BF307 mov r8d,ebx		; DEBUG: {Register}/R8D {Register}/EBX ||| None | 0 | None ||| N/A | N/A
		0x1808BF30A mov rdx,r10		; DEBUG: {Register}/RDX {Register}/R10 ||| None | 0 | None ||| N/A | N/A
		0x1808BF30D mov rcx,rsi		; DEBUG: {Register}/RCX {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x1808BF310 call 00000001800F5B10h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BF315 mov rcx,[rax+8]		; DEBUG: {Register}/RCX {Memory}/None ||| RAX | 8 | None ||| N/A | N/A
		0x1808BF319 movaps xmm3,xmm6		; DEBUG: {Register}/XMM3 {Register}/XMM6 ||| None | 0 | None ||| N/A | N/A
		0x1808BF31C mov [rsp+20h],rcx		; DEBUG: {Memory}/None {Register}/RCX ||| RSP | 32 | None ||| N/A | N/A
		0x1808BF321 mov r8,r15		; DEBUG: {Register}/R8 {Register}/R15 ||| None | 0 | None ||| N/A | N/A
		0x1808BF324 mov rcx,rsi		; DEBUG: {Register}/RCX {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x1808BF327 mov edx,r12d		; DEBUG: {Register}/EDX {Register}/R12D ||| None | 0 | None ||| N/A | N/A
		0x1808BF32A call qword ptr [rax]		; DEBUG: {Memory}/None {Register}/None ||| RAX | 0 | None ||| N/A | N/A
		0x1808BF32C jmp near ptr 00000001808BF57Ch		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BF331 add rdx,rdx		; DEBUG: {Register}/RDX {Register}/RDX ||| None | 0 | None ||| N/A | N/A
		0x1808BF334 lea rax,[r11+128h]		; DEBUG: {Register}/RAX {Memory}/None ||| R11 | 296 | None ||| N/A | N/A
		0x1808BF33B mov ecx,[r8+rdx*8+8]		; DEBUG: {Register}/ECX {Memory}/None ||| R8 | 8 | RDX ||| N/A | N/A
		0x1808BF340 add ecx,ebx		; DEBUG: {Register}/ECX {Register}/EBX ||| None | 0 | None ||| N/A | N/A
		0x1808BF342 shl rcx,4		; DEBUG: {Register}/RCX {Immediate8}/None ||| None | 0 | None ||| N/A | 4
		0x1808BF346 add rax,rcx		; DEBUG: {Register}/RAX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x1808BF349 jmp short 00000001808BF315h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BF34B movzx r10d,word ptr [rbx+48h]		; DEBUG: {Register}/R10D {Memory}/None ||| RBX | 72 | None ||| N/A | N/A
		0x1808BF350 movaps xmm3,xmm6		; DEBUG: {Register}/XMM3 {Register}/XMM6 ||| None | 0 | None ||| N/A | N/A
		0x1808BF353 mov r9,[rsi]		; DEBUG: {Register}/R9 {Memory}/None ||| RSI | 0 | None ||| N/A | N/A
		0x1808BF356 add r10,r10		; DEBUG: {Register}/R10 {Register}/R10 ||| None | 0 | None ||| N/A | N/A
		0x1808BF359 mov r8,r15		; DEBUG: {Register}/R8 {Register}/R15 ||| None | 0 | None ||| N/A | N/A
		0x1808BF35C mov edx,r12d		; DEBUG: {Register}/EDX {Register}/R12D ||| None | 0 | None ||| N/A | N/A
		0x1808BF35F mov rcx,rsi		; DEBUG: {Register}/RCX {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x1808BF362 mov rax,[r9+r10*8+130h]		; DEBUG: {Register}/RAX {Memory}/None ||| R9 | 304 | R10 ||| N/A | N/A
		0x1808BF36A mov [rsp+20h],rax		; DEBUG: {Memory}/None {Register}/RAX ||| RSP | 32 | None ||| N/A | N/A
		0x1808BF36F call qword ptr [r9+r10*8+128h]		; DEBUG: {Memory}/None {Register}/None ||| R9 | 296 | R10 ||| N/A | N/A
		0x1808BF377 jmp near ptr 00000001808BF57Ch		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BF37C cmp ax,r13w		; DEBUG: {Register}/AX {Register}/R13W ||| None | 0 | None ||| N/A | N/A
		0x1808BF380 je near ptr 00000001808BF562h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BF386 test rdi,rdi		; DEBUG: {Register}/RDI {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x1808BF389 je short 00000001808BF39Eh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BF38B mov rax,[rdi]		; DEBUG: {Register}/RAX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1808BF38E test dword ptr [rax+108h],100h		; DEBUG: {Memory}/None {Immediate32}/None ||| RAX | 264 | None ||| N/A | 256
		0x1808BF398 jne near ptr 00000001808BF562h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BF39E cmp qword ptr [rbp+18h],0		; DEBUG: {Memory}/None {Immediate8to64}/None ||| RBP | 24 | None ||| N/A | 0
		0x1808BF3A3 je near ptr 00000001808BF562h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BF3A9 test rdi,rdi		; DEBUG: {Register}/RDI {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x1808BF3AC je near ptr 00000001808BF181h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BF3B2 mov rax,[rdi]		; DEBUG: {Register}/RAX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1808BF3B5 test dword ptr [rax+108h],100h		; DEBUG: {Memory}/None {Immediate32}/None ||| RAX | 264 | None ||| N/A | 256
		0x1808BF3BF jne near ptr 00000001808BF57Ch		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BF3C5 mov rcx,rbx		; DEBUG: {Register}/RCX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x1808BF3C8 call 0000000180141DC0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BF3CD mov rcx,rbx		; DEBUG: {Register}/RCX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x1808BF3D0 test al,al		; DEBUG: {Register}/AL {Register}/AL ||| None | 0 | None ||| N/A | N/A
		0x1808BF3D2 je near ptr 00000001808BF48Eh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BF3D8 call 000000018005DA10h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BF3DD mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1808BF3E0 call 00000001800F6DD0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BF3E5 movzx ecx,word ptr [rbx+48h]		; DEBUG: {Register}/ECX {Memory}/None ||| RBX | 72 | None ||| N/A | N/A
		0x1808BF3E9 test al,al		; DEBUG: {Register}/AL {Register}/AL ||| None | 0 | None ||| N/A | N/A
		0x1808BF3EB je near ptr 00000001808BF47Eh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BF3F1 mov r11,[rdi]		; DEBUG: {Register}/R11 {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1808BF3F4 mov ebp,ecx		; DEBUG: {Register}/EBP {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x1808BF3F6 mov r10,[rbx+18h]		; DEBUG: {Register}/R10 {Memory}/None ||| RBX | 24 | None ||| N/A | N/A
		0x1808BF3FA xor ecx,ecx		; DEBUG: {Register}/ECX {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x1808BF3FC movzx r8d,word ptr [r11+11Eh]		; DEBUG: {Register}/R8D {Memory}/None ||| R11 | 286 | None ||| N/A | N/A
		0x1808BF404 cmp cx,r8w		; DEBUG: {Register}/CX {Register}/R8W ||| None | 0 | None ||| N/A | N/A
		0x1808BF408 jae short 00000001808BF428h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BF40A mov r9,[r11+0B0h]		; DEBUG: {Register}/R9 {Memory}/None ||| R11 | 176 | None ||| N/A | N/A
		0x1808BF411 movzx edx,cx		; DEBUG: {Register}/EDX {Register}/CX ||| None | 0 | None ||| N/A | N/A
		0x1808BF414 mov eax,edx		; DEBUG: {Register}/EAX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1808BF416 add rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1808BF419 cmp [r9+rax*8],r10		; DEBUG: {Memory}/None {Register}/R10 ||| R9 | 0 | RAX ||| N/A | N/A
		0x1808BF41D je short 00000001808BF464h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BF41F inc cx		; DEBUG: {Register}/CX {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1808BF422 cmp cx,r8w		; DEBUG: {Register}/CX {Register}/R8W ||| None | 0 | None ||| N/A | N/A
		0x1808BF426 jb short 00000001808BF411h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BF428 mov r8d,ebp		; DEBUG: {Register}/R8D {Register}/EBP ||| None | 0 | None ||| N/A | N/A
		0x1808BF42B mov rdx,r10		; DEBUG: {Register}/RDX {Register}/R10 ||| None | 0 | None ||| N/A | N/A
		0x1808BF42E mov rcx,rdi		; DEBUG: {Register}/RCX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x1808BF431 call 00000001800F5B10h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BF436 mov rcx,[rax+8]		; DEBUG: {Register}/RCX {Memory}/None ||| RAX | 8 | None ||| N/A | N/A
		0x1808BF43A mov rdx,rbx		; DEBUG: {Register}/RDX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x1808BF43D call 000000018010EE60h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BF442 mov [rsp+28h],rax		; DEBUG: {Memory}/None {Register}/RAX ||| RSP | 40 | None ||| N/A | N/A
		0x1808BF447 mov r9,r15		; DEBUG: {Register}/R9 {Register}/R15 ||| None | 0 | None ||| N/A | N/A
		0x1808BF44A mov r8d,r12d		; DEBUG: {Register}/R8D {Register}/R12D ||| None | 0 | None ||| N/A | N/A
		0x1808BF44D movss dword ptr [rsp+20h],xmm6		; DEBUG: {Memory}/None {Register}/XMM6 ||| RSP | 32 | None ||| N/A | N/A
		0x1808BF453 mov rdx,rsi		; DEBUG: {Register}/RDX {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x1808BF456 mov rcx,rdi		; DEBUG: {Register}/RCX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x1808BF459 mov r10,[rax]		; DEBUG: {Register}/R10 {Memory}/None ||| RAX | 0 | None ||| N/A | N/A
		0x1808BF45C call r10		; DEBUG: {Register}/R10 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1808BF45F jmp near ptr 00000001808BF57Ch		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BF464 add rdx,rdx		; DEBUG: {Register}/RDX {Register}/RDX ||| None | 0 | None ||| N/A | N/A
		0x1808BF467 lea rax,[r11+128h]		; DEBUG: {Register}/RAX {Memory}/None ||| R11 | 296 | None ||| N/A | N/A
		0x1808BF46E mov ecx,[r9+rdx*8+8]		; DEBUG: {Register}/ECX {Memory}/None ||| R9 | 8 | RDX ||| N/A | N/A
		0x1808BF473 add ecx,ebp		; DEBUG: {Register}/ECX {Register}/EBP ||| None | 0 | None ||| N/A | N/A
		0x1808BF475 shl rcx,4		; DEBUG: {Register}/RCX {Immediate8}/None ||| None | 0 | None ||| N/A | 4
		0x1808BF479 add rax,rcx		; DEBUG: {Register}/RAX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x1808BF47C jmp short 00000001808BF436h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BF47E mov rax,[rdi]		; DEBUG: {Register}/RAX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1808BF481 add rcx,13h		; DEBUG: {Register}/RCX {Immediate8to64}/None ||| None | 0 | None ||| N/A | 19
		0x1808BF485 add rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x1808BF488 mov rcx,[rax+rcx*8]		; DEBUG: {Register}/RCX {Memory}/None ||| RAX | 0 | RCX ||| N/A | N/A
		0x1808BF48C jmp short 00000001808BF43Ah		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BF48E call 000000018005DA10h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BF493 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1808BF496 call 00000001800F6DD0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BF49B test al,al		; DEBUG: {Register}/AL {Register}/AL ||| None | 0 | None ||| N/A | N/A
		0x1808BF49D je near ptr 00000001808BF52Eh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BF4A3 mov rcx,rbx		; DEBUG: {Register}/RCX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x1808BF4A6 call 000000018005DA10h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BF4AB mov r11,[rdi]		; DEBUG: {Register}/R11 {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1808BF4AE xor ecx,ecx		; DEBUG: {Register}/ECX {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x1808BF4B0 movzx ebx,word ptr [rbx+48h]		; DEBUG: {Register}/EBX {Memory}/None ||| RBX | 72 | None ||| N/A | N/A
		0x1808BF4B4 mov r10,rax		; DEBUG: {Register}/R10 {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1808BF4B7 movzx r9d,word ptr [r11+11Eh]		; DEBUG: {Register}/R9D {Memory}/None ||| R11 | 286 | None ||| N/A | N/A
		0x1808BF4BF cmp cx,r9w		; DEBUG: {Register}/CX {Register}/R9W ||| None | 0 | None ||| N/A | N/A
		0x1808BF4C3 jae short 00000001808BF4E7h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BF4C5 mov r8,[r11+0B0h]		; DEBUG: {Register}/R8 {Memory}/None ||| R11 | 176 | None ||| N/A | N/A
		0x1808BF4CC nop dword ptr [rax]		; DEBUG: {Memory}/None {Register}/None ||| RAX | 0 | None ||| N/A | N/A
		0x1808BF4D0 movzx edx,cx		; DEBUG: {Register}/EDX {Register}/CX ||| None | 0 | None ||| N/A | N/A
		0x1808BF4D3 mov eax,edx		; DEBUG: {Register}/EAX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1808BF4D5 add rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1808BF4D8 cmp [r8+rax*8],r10		; DEBUG: {Memory}/None {Register}/R10 ||| R8 | 0 | RAX ||| N/A | N/A
		0x1808BF4DC je short 00000001808BF514h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BF4DE inc cx		; DEBUG: {Register}/CX {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1808BF4E1 cmp cx,r9w		; DEBUG: {Register}/CX {Register}/R9W ||| None | 0 | None ||| N/A | N/A
		0x1808BF4E5 jb short 00000001808BF4D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BF4E7 mov r8d,ebx		; DEBUG: {Register}/R8D {Register}/EBX ||| None | 0 | None ||| N/A | N/A
		0x1808BF4EA mov rdx,r10		; DEBUG: {Register}/RDX {Register}/R10 ||| None | 0 | None ||| N/A | N/A
		0x1808BF4ED mov rcx,rdi		; DEBUG: {Register}/RCX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x1808BF4F0 call 00000001800F5B10h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BF4F5 mov rcx,[rax+8]		; DEBUG: {Register}/RCX {Memory}/None ||| RAX | 8 | None ||| N/A | N/A
		0x1808BF4F9 mov r9,r15		; DEBUG: {Register}/R9 {Register}/R15 ||| None | 0 | None ||| N/A | N/A
		0x1808BF4FC mov [rsp+28h],rcx		; DEBUG: {Memory}/None {Register}/RCX ||| RSP | 40 | None ||| N/A | N/A
		0x1808BF501 mov r8d,r12d		; DEBUG: {Register}/R8D {Register}/R12D ||| None | 0 | None ||| N/A | N/A
		0x1808BF504 mov rcx,rdi		; DEBUG: {Register}/RCX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x1808BF507 movss dword ptr [rsp+20h],xmm6		; DEBUG: {Memory}/None {Register}/XMM6 ||| RSP | 32 | None ||| N/A | N/A
		0x1808BF50D mov rdx,rsi		; DEBUG: {Register}/RDX {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x1808BF510 call qword ptr [rax]		; DEBUG: {Memory}/None {Register}/None ||| RAX | 0 | None ||| N/A | N/A
		0x1808BF512 jmp short 00000001808BF57Ch		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BF514 add rdx,rdx		; DEBUG: {Register}/RDX {Register}/RDX ||| None | 0 | None ||| N/A | N/A
		0x1808BF517 lea rax,[r11+128h]		; DEBUG: {Register}/RAX {Memory}/None ||| R11 | 296 | None ||| N/A | N/A
		0x1808BF51E mov ecx,[r8+rdx*8+8]		; DEBUG: {Register}/ECX {Memory}/None ||| R8 | 8 | RDX ||| N/A | N/A
		0x1808BF523 add ecx,ebx		; DEBUG: {Register}/ECX {Register}/EBX ||| None | 0 | None ||| N/A | N/A
		0x1808BF525 shl rcx,4		; DEBUG: {Register}/RCX {Immediate8}/None ||| None | 0 | None ||| N/A | 4
		0x1808BF529 add rax,rcx		; DEBUG: {Register}/RAX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x1808BF52C jmp short 00000001808BF4F5h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BF52E movzx r11d,word ptr [rbx+48h]		; DEBUG: {Register}/R11D {Memory}/None ||| RBX | 72 | None ||| N/A | N/A
		0x1808BF533 mov r9,r15		; DEBUG: {Register}/R9 {Register}/R15 ||| None | 0 | None ||| N/A | N/A
		0x1808BF536 mov r10,[rdi]		; DEBUG: {Register}/R10 {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1808BF539 add r11,r11		; DEBUG: {Register}/R11 {Register}/R11 ||| None | 0 | None ||| N/A | N/A
		0x1808BF53C mov r8d,r12d		; DEBUG: {Register}/R8D {Register}/R12D ||| None | 0 | None ||| N/A | N/A
		0x1808BF53F mov rdx,rsi		; DEBUG: {Register}/RDX {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x1808BF542 mov rcx,rdi		; DEBUG: {Register}/RCX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x1808BF545 mov rax,[r10+r11*8+130h]		; DEBUG: {Register}/RAX {Memory}/None ||| R10 | 304 | R11 ||| N/A | N/A
		0x1808BF54D mov [rsp+28h],rax		; DEBUG: {Memory}/None {Register}/RAX ||| RSP | 40 | None ||| N/A | N/A
		0x1808BF552 movss dword ptr [rsp+20h],xmm6		; DEBUG: {Memory}/None {Register}/XMM6 ||| RSP | 32 | None ||| N/A | N/A
		0x1808BF558 call qword ptr [r10+r11*8+128h]		; DEBUG: {Memory}/None {Register}/None ||| R10 | 296 | R11 ||| N/A | N/A
		0x1808BF560 jmp short 00000001808BF57Ch		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BF562 mov [rsp+28h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RSP | 40 | None ||| N/A | N/A
		0x1808BF567 mov r9,r15		; DEBUG: {Register}/R9 {Register}/R15 ||| None | 0 | None ||| N/A | N/A
		0x1808BF56A mov r8d,r12d		; DEBUG: {Register}/R8D {Register}/R12D ||| None | 0 | None ||| N/A | N/A
		0x1808BF56D movss dword ptr [rsp+20h],xmm6		; DEBUG: {Memory}/None {Register}/XMM6 ||| RSP | 32 | None ||| N/A | N/A
		0x1808BF573 mov rdx,rsi		; DEBUG: {Register}/RDX {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x1808BF576 mov rcx,rdi		; DEBUG: {Register}/RCX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x1808BF579 call r14		; DEBUG: {Register}/R14 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1808BF57C mov rbx,[rsp+70h]		; DEBUG: {Register}/RBX {Memory}/None ||| RSP | 112 | None ||| N/A | N/A
		0x1808BF581 mov rbp,[rsp+78h]		; DEBUG: {Register}/RBP {Memory}/None ||| RSP | 120 | None ||| N/A | N/A
		0x1808BF586 mov rsi,[rsp+80h]		; DEBUG: {Register}/RSI {Memory}/None ||| RSP | 128 | None ||| N/A | N/A
		0x1808BF58E movaps xmm6,[rsp+30h]		; DEBUG: {Register}/XMM6 {Memory}/None ||| RSP | 48 | None ||| N/A | N/A
		0x1808BF593 add rsp,40h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 64
		0x1808BF597 pop r15		; DEBUG: {Register}/R15 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1808BF599 pop r14		; DEBUG: {Register}/R14 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1808BF59B pop r13		; DEBUG: {Register}/R13 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1808BF59D pop r12		; DEBUG: {Register}/R12 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1808BF59F pop rdi		; DEBUG: {Register}/RDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1808BF5A0 ret		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1808BF5A1 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.Void Cinemachine.CinemachineVirtualCameraBase/OnPostPipelineStageDelegate::Invoke(Cinemachine.CinemachineVirtualCameraBase,Cinemachine.CinemachineCore/Stage,Cinemachine.CameraState&,System.Single):
		End of function at 0x1808BF5A2
		Absolute End is at 0x1808BF5A2
		Identified Jump Destination addresses:
			0x1808BF57C
			0x1808BF287
		0x1808BF0FF: Saves the content of rdi to the stack
		0x1808BF100: Saves the content of r12 to the stack
		0x1808BF102: Saves the content of r13 to the stack
		0x1808BF104: Saves the content of r14 to the stack
		0x1808BF106: Saves the content of r15 to the stack
		0x1808BF10C: Copies {'this' (function parameter, type Cinemachine.CinemachineVirtualCameraBase/OnPostPipelineStageDelegate)} from rcx into rbp
		0x1808BF114: [!] Reads field prev from {'this' (function parameter, type Cinemachine.CinemachineVirtualCameraBase/OnPostPipelineStageDelegate)} and stores in a new local {'prev' (type System.MulticastDelegate)}

		0x1808BF118: Copies {'newState' (function parameter, type Cinemachine.CameraState&)} from r9 into r15
		0x1808BF11B: Reads unknown value in stack, offset 144 (0x90) and stores the pointer in register xmm6 as new constant constant1
		0x1808BF124: [!] Implicitly reads field at offset 0 (which is value__) from struct stage of type Cinemachine.CinemachineCore/Stage and stores in new local {'local6' (type System.Int32)}
		0x1808BF127: Copies {'vcam' (function parameter, type Cinemachine.CinemachineVirtualCameraBase)} from rdx into rsi
		0x1808BF12A: [!] Compares {'prev' (type System.MulticastDelegate)} and 0
		0x1808BF12D: Jumps to 0x1808BF147 (which is an if statement's body) if prev equals 0 ;  - Increasing indentation - is standard if, unimportant is False

		0x1808BF12F: Reads unknown value in stack, offset 152 (0x98) and stores the pointer in register rax as new constant constant3
		0x1808BF137: Moves constant3 (type Cpp2IL.Core.Analysis.ResultModels.StackPointer) from register rax to the stack at offset 40 (0x28) as a new local local7
		0x1808BF13C: Moves constant1 (type Cpp2IL.Core.Analysis.ResultModels.StackPointer) from register xmm6 to the stack at offset 32 (0x20) as a new local local8
		0x1808BF142: [!] Calls managed method System.Void Cinemachine.CinemachineVirtualCameraBase/OnPostPipelineStageDelegate::Invoke(Cinemachine.CinemachineVirtualCameraBase,Cinemachine.CinemachineCore/Stage,Cinemachine.CameraState&,System.Single) on instance {'prev' (type System.MulticastDelegate)} ;  - parameters do not match, but there is only one function at this address. - This is an instance method, but the type of the 'this' parameter is mismatched. Expecting OnPostPipelineStageDelegate, actually System.MulticastDelegate

		0x1808BF147: [!] Reads field method from {'this' (function parameter, type Cinemachine.CinemachineVirtualCameraBase/OnPostPipelineStageDelegate)} and stores in a new local {'method' (type System.IntPtr)}

		0x1808BF14B: [!] Writes the constant 0xFFFF into operand {'local10' (type System.UInt32)} (type UInt64) in register r13
		0x1808BF155: [!] Reads field m_target from {'this' (function parameter, type Cinemachine.CinemachineVirtualCameraBase/OnPostPipelineStageDelegate)} and stores in a new local {'m_target' (type System.Object)}

		0x1808BF159: [!] Compares  and {'local10' (type System.UInt32)}
		0x1808BF15E: Jumps to 0x1808BF168 if  != {'local10' (type System.UInt32)} ;  - This is probably a goto, jumping to 0x1808BF168 which is after end of current block @ 0x1808BF147 (started at 0x1808BF12F)

		0x1808BF160: Copies {'method' (type System.IntPtr)} from rbx into rcx
		0x1808BF163: [!] Constructs and throws an exception of kind System.ExecutionEngineException

		0x1808BF168: Copies {'method' (type System.IntPtr)} from rbx into rcx
		0x1808BF170: [!] Reads field  from {'method' (type System.IntPtr)} and stores in a new local 

		0x1808BF174: [!] Compares {'local13' (type System.ExecutionEngineException)} and 0
		0x1808BF176: Jumps to 0x1808BF19A if {'local13' (type System.ExecutionEngineException)} != 0 ;  - This is probably a goto, jumping to 0x1808BF19A which is after end of current block @ 0x1808BF147 (started at 0x1808BF12F)

		0x1808BF178: [!] Compares {'method' (type System.IntPtr)} and 4
		0x1808BF17B: Jumps to 0x1808BF562 if {'method' (type System.IntPtr)} != 4 ;  - This is probably a goto, jumping to 0x1808BF562 which is after end of current block @ 0x1808BF147 (started at 0x1808BF12F)

		0x1808BF181: Copies {'constant1' (constant value of type Cpp2IL.Core.Analysis.ResultModels.StackPointer)} from xmm6 into xmm3
		0x1808BF184: Moves method (type System.IntPtr) from register rbx to the stack at offset 32 (0x20)
		0x1808BF189: Copies {'newState' (function parameter, type Cinemachine.CameraState&)} from r15 into r8
		0x1808BF18C: Copies {'local6' (type System.Int32)} from r12 into rdx
		0x1808BF18F: Copies {'vcam' (function parameter, type Cinemachine.CinemachineVirtualCameraBase)} from rsi into rcx
		0x1808BF195: Jumps to 0x1808BF57C (which is an function-local jump destination)

		0x1808BF19A: [!] Reads field  from {'method' (type System.IntPtr)} and stores in a new local 

		0x1808BF19E: [!] Compares {'vcam' (function parameter, type Cinemachine.CinemachineVirtualCameraBase)} and 4
		0x1808BF1A1: Jumps to 0x1808BF37C if vcam equals 4 ;  - This is probably a goto, jumping to 0x1808BF37C which is after end of current block @ 0x1808BF147 (started at 0x1808BF12F)

		0x1808BF1A7: [!] Compares {'local13' (type System.ExecutionEngineException)} and {'local10' (type System.UInt32)}
		0x1808BF1AB: Jumps to 0x1808BF181 if local13 equals local10 ;  - This is probably a goto, jumping to 0x1808BF181 which is after end of current block @ 0x1808BF147 (started at 0x1808BF12F)

		0x1808BF1AD: [!] Compares {'m_target' (type System.Object)} and 0
		0x1808BF1B0: Jumps to 0x1808BF1C1 if m_target equals 0 ;  - This is probably a goto, jumping to 0x1808BF1C1 which is after end of current block @ 0x1808BF147 (started at 0x1808BF12F)

		0x1808BF1B2: Loads the class pointer from m_target into a constant constant8 in register rax
		0x1808BF1B5: Compares "{il2cpp field on {'constant8' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)}, offset 0x108}" and 256
		0x1808BF1BF: Jumps to 0x1808BF181 if "{il2cpp field on {'constant8' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)}, offset 0x108}" != 256 ;  - This is probably a goto, jumping to 0x1808BF181 which is after end of current block @ 0x1808BF147 (started at 0x1808BF12F)

		0x1808BF1C1: [!] Compares  and 0
		0x1808BF1C6: Jumps to 0x1808BF181 if  equals 0 ;  - This is probably a goto, jumping to 0x1808BF181 which is after end of current block @ 0x1808BF147 (started at 0x1808BF12F)

		0x1808BF1C8: [!] Compares {'m_target' (type System.Object)} and 0
		0x1808BF1CB: Jumps to 0x1808BF1E0 if m_target equals 0 ;  - This is probably a goto, jumping to 0x1808BF1E0 which is after end of current block @ 0x1808BF147 (started at 0x1808BF12F)

		0x1808BF1CD: Loads the class pointer from m_target into a constant constant13 in register rax
		0x1808BF1D0: Compares "{il2cpp field on {'constant13' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)}, offset 0x108}" and 256
		0x1808BF1DA: Jumps to 0x1808BF57C if "{il2cpp field on {'constant13' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)}, offset 0x108}" != 256 ;  - This is probably a goto, jumping to 0x1808BF57C which is after end of current block @ 0x1808BF147 (started at 0x1808BF12F)

		0x1808BF1E0: Copies {'method' (type System.IntPtr)} from rbx into rcx
		0x1808BF1E8: Copies {'method' (type System.IntPtr)} from rbx into rcx
		0x1808BF1EB: [!] Compares {'constant13' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} and 0
		0x1808BF1ED: Jumps to 0x1808BF2AB if constant13 equals 0 ;  - This is probably a goto, jumping to 0x1808BF2AB which is after end of current block @ 0x1808BF147 (started at 0x1808BF12F)

		0x1808BF1F3: [!] Calls managed method  on instance {'method' (type System.IntPtr)} ;  - Failed to resolve any matching method (there are 3 at this address)

		0x1808BF1F8: Copies {'constant13' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} from rax into rcx
		0x1808BF200: [!] Reads field  from {'method' (type System.IntPtr)} and stores in a new local 

		0x1808BF204: [!] Compares {'constant13' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} and 0
		0x1808BF206: Jumps to 0x1808BF279 if constant13 equals 0 ;  - This is probably a goto, jumping to 0x1808BF279 which is after end of current block @ 0x1808BF147 (started at 0x1808BF12F)

		0x1808BF208: Loads the class pointer from vcam into a constant constant18 in register r11
		0x1808BF20B: Copies {'constant13' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} from rcx into rdi
		0x1808BF20D: [!] Reads field  from {'method' (type System.IntPtr)} and stores in a new local 

		0x1808BF211: Clears register rcx, yielding zero-local {'local14' (type System.Int32)}
		0x1808BF213: [!!] Reads value at unknown offset 286 (0x11E) on a klass pointer
		0x1808BF21B: [!] Compares {'local14' (type System.Int32)} and {'newState' (function parameter, type Cinemachine.CameraState&)}
		0x1808BF21F: Jumps to 0x1808BF247 if {'local14' (type System.Int32)} is greater than or equal to {'newState' (function parameter, type Cinemachine.CameraState&)} ;  - This is probably a goto, jumping to 0x1808BF247 which is after end of current block @ 0x1808BF147 (started at 0x1808BF12F)

		0x1808BF221: Loads the interface offsets for the class pointer to Cinemachine.CinemachineVirtualCameraBase, which contains 1 offsets, and stores them as a constant constant19 in reg r9
		0x1808BF230: Copies {'local14' (type System.Int32)} from rcx into rdx
		0x1808BF233: Copies {'local14' (type System.Int32)} from rdx into rax
		0x1808BF235: [!] Adds {'local14' (type System.Int32)} and {'local14' (type System.Int32)} and stores the result in {'local14' (type System.Int32)}
		0x1808BF23C: Jumps to 0x1808BF25B if local14 equals newState ;  - This is probably a goto, jumping to 0x1808BF25B which is after end of current block @ 0x1808BF147 (started at 0x1808BF12F)

		0x1808BF23E: [!] Adds 1 to the value {'local14' (type System.Int32)}, stored in rcx
		0x1808BF241: [!] Compares {'local14' (type System.Int32)} and {'newState' (function parameter, type Cinemachine.CameraState&)}
		0x1808BF247: Copies {'constant13' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} from rdi into r8
		0x1808BF24D: Copies {'vcam' (function parameter, type Cinemachine.CinemachineVirtualCameraBase)} from rsi into rcx
		0x1808BF255: [!] Reads field  from {'local14' (type System.Int32)} and stores in a new local 

		0x1808BF259: Jumps to 0x1808BF287 (which is an function-local jump destination)

		0x1808BF25B: [!] Adds {'local14' (type System.Int32)} and {'local14' (type System.Int32)} and stores the result in {'local14' (type System.Int32)}
		0x1808BF26A: [!] Adds {'vcam' (function parameter, type Cinemachine.CinemachineVirtualCameraBase)} and {'constant13' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} and stores the result in {'vcam' (function parameter, type Cinemachine.CinemachineVirtualCameraBase)}
		0x1808BF270: [!] Adds {'local14' (type System.Int32)} and {'vcam' (function parameter, type Cinemachine.CinemachineVirtualCameraBase)} and stores the result in {'local14' (type System.Int32)}
		0x1808BF273: [!] Reads field  from {'local14' (type System.Int32)} and stores in a new local 

		0x1808BF277: Jumps to 0x1808BF287 (which is an function-local jump destination)

		0x1808BF279: Loads the class pointer from vcam into a constant constant20 in register rax
		0x1808BF27C: Loads the pointer to the field  on {'vcam' (function parameter, type Cinemachine.CinemachineVirtualCameraBase)} into register rcx
		0x1808BF280: [!] Adds {'vcam' (function parameter, type Cinemachine.CinemachineVirtualCameraBase)} and {'vcam' (function parameter, type Cinemachine.CinemachineVirtualCameraBase)} and stores the result in {'vcam' (function parameter, type Cinemachine.CinemachineVirtualCameraBase)}
		0x1808BF283: [!!] Reads value at unknown offset 0 (0x0) on a klass pointer

		Jump Destination (0x1808BF287):
		0x1808BF287: Copies {'method' (type System.IntPtr)} from rbx into rdx
		0x1808BF28F: Copies {'constant1' (constant value of type Cpp2IL.Core.Analysis.ResultModels.StackPointer)} from xmm6 into xmm3
		0x1808BF292: Moves constant20 (type Cpp2IL.Core.Analysis.Il2CppClassIdentifier) from register rax to the stack at offset 32 (0x20) as a new local local15
		0x1808BF297: Copies {'newState' (function parameter, type Cinemachine.CameraState&)} from r15 into r8
		0x1808BF29A: Copies {'local6' (type System.Int32)} from r12 into rdx
		0x1808BF29D: Copies {'vcam' (function parameter, type Cinemachine.CinemachineVirtualCameraBase)} from rsi into rcx
		0x1808BF2A0: [!!] Reads value at unknown offset 0 (0x0) on a klass pointer
		0x1808BF2A6: Jumps to 0x1808BF57C (which is an function-local jump destination)

		0x1808BF2AB: [!] Calls managed method  on instance {'vcam' (function parameter, type Cinemachine.CinemachineVirtualCameraBase)} ;  - Failed to resolve any matching method (there are 3 at this address)

		0x1808BF2B0: Copies {'constant20' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} from rax into rcx
		0x1808BF2B8: [!] Compares {'constant20' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} and 0
		0x1808BF2BA: Jumps to 0x1808BF34B if constant20 equals 0 ;  - This is probably a goto, jumping to 0x1808BF34B which is after end of current block @ 0x1808BF147 (started at 0x1808BF12F)

		0x1808BF2C0: Copies {'method' (type System.IntPtr)} from rbx into rcx
		0x1808BF2C3: [!] Calls managed method  on instance {'method' (type System.IntPtr)} ;  - Failed to resolve any matching method (there are 3 at this address)

		0x1808BF2C8: Loads the class pointer from vcam into a constant constant22 in register r11
		0x1808BF2CB: Clears register rcx, yielding zero-local {'local16' (type System.Int32)}
		0x1808BF2CD: [!] Reads field  from {'method' (type System.IntPtr)} and stores in a new local 

		0x1808BF2D1: Copies {'constant20' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} from rax into r10
		0x1808BF2D4: [!!] Reads value at unknown offset 286 (0x11E) on a klass pointer
		0x1808BF2DC: [!] Compares {'local16' (type System.Int32)} and {'constant19' (constant value of type LibCpp2IL.Metadata.Il2CppInterfaceOffset[])}
		0x1808BF2E0: Jumps to 0x1808BF307 if {'local16' (type System.Int32)} is greater than or equal to {'constant19' (constant value of type LibCpp2IL.Metadata.Il2CppInterfaceOffset[])} ;  - This is probably a goto, jumping to 0x1808BF307 which is after end of current block @ 0x1808BF147 (started at 0x1808BF12F)

		0x1808BF2E2: Loads the interface offsets for the class pointer to Cinemachine.CinemachineVirtualCameraBase, which contains 1 offsets, and stores them as a constant constant23 in reg r8
		0x1808BF2F0: Copies {'local16' (type System.Int32)} from rcx into rdx
		0x1808BF2F3: Copies {'local16' (type System.Int32)} from rdx into rax
		0x1808BF2F5: [!] Adds {'local16' (type System.Int32)} and {'local16' (type System.Int32)} and stores the result in {'local16' (type System.Int32)}
		0x1808BF2FC: Jumps to 0x1808BF331 if local16 equals constant19 ;  - This is probably a goto, jumping to 0x1808BF331 which is after end of current block @ 0x1808BF147 (started at 0x1808BF12F)

		0x1808BF2FE: [!] Adds 1 to the value {'local16' (type System.Int32)}, stored in rcx
		0x1808BF301: [!] Compares {'local16' (type System.Int32)} and {'constant19' (constant value of type LibCpp2IL.Metadata.Il2CppInterfaceOffset[])}
		0x1808BF307: Copies {'method' (type System.IntPtr)} from rbx into r8
		0x1808BF30A: Copies {'constant20' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} from r10 into rdx
		0x1808BF30D: Copies {'vcam' (function parameter, type Cinemachine.CinemachineVirtualCameraBase)} from rsi into rcx

		Potential Loop Start (0x1808BF315):
		0x1808BF315: [!] Reads field  from {'local16' (type System.Int32)} and stores in a new local 

		0x1808BF319: Copies {'constant1' (constant value of type Cpp2IL.Core.Analysis.ResultModels.StackPointer)} from xmm6 into xmm3
		0x1808BF31C: Moves vcam (type Cinemachine.CinemachineVirtualCameraBase) from register rcx to the stack at offset 32 (0x20)
		0x1808BF321: Copies {'newState' (function parameter, type Cinemachine.CameraState&)} from r15 into r8
		0x1808BF324: Copies {'vcam' (function parameter, type Cinemachine.CinemachineVirtualCameraBase)} from rsi into rcx
		0x1808BF327: Copies {'local6' (type System.Int32)} from r12 into rdx
		0x1808BF32C: Jumps to 0x1808BF57C (which is an function-local jump destination)

		0x1808BF331: [!] Adds {'local6' (type System.Int32)} and {'local6' (type System.Int32)} and stores the result in {'local6' (type System.Int32)}
		0x1808BF340: [!] Adds {'vcam' (function parameter, type Cinemachine.CinemachineVirtualCameraBase)} and {'method' (type System.IntPtr)} and stores the result in {'vcam' (function parameter, type Cinemachine.CinemachineVirtualCameraBase)}
		0x1808BF346: [!] Adds {'local16' (type System.Int32)} and {'vcam' (function parameter, type Cinemachine.CinemachineVirtualCameraBase)} and stores the result in {'local16' (type System.Int32)}
		0x1808BF349: Jumps to 0x1808BF315 - which is still in this function, but further up. Probably indicative that this is a loop.
		0x1808BF34B: [!] Reads field  from {'method' (type System.IntPtr)} and stores in a new local 

		0x1808BF350: Copies {'constant1' (constant value of type Cpp2IL.Core.Analysis.ResultModels.StackPointer)} from xmm6 into xmm3
		0x1808BF353: Loads the class pointer from vcam into a constant constant24 in register r9
		0x1808BF356: [!] Adds  and {'constant20' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} and stores the result in 
		0x1808BF359: Copies {'newState' (function parameter, type Cinemachine.CameraState&)} from r15 into r8
		0x1808BF35C: Copies {'local6' (type System.Int32)} from r12 into rdx
		0x1808BF35F: Copies {'vcam' (function parameter, type Cinemachine.CinemachineVirtualCameraBase)} from rsi into rcx
		0x1808BF362: Loads the pointer to the implementation of virtual function  specific to Cinemachine.CinemachineVirtualCameraBase from the class pointer in r9, slot -1 (from memory offset 304) and stores in constant 
		0x1808BF36A: Moves local16 (type System.Int32) from register rax to the stack at offset 32 (0x20)
		0x1808BF377: Jumps to 0x1808BF57C (which is an function-local jump destination)

		0x1808BF37C: [!] Compares {'local16' (type System.Int32)} and {'local10' (type System.UInt32)}
		0x1808BF380: Jumps to 0x1808BF562 if local16 equals local10 ;  - This is probably a goto, jumping to 0x1808BF562 which is after end of current block @ 0x1808BF147 (started at 0x1808BF12F)

		0x1808BF386: [!] Compares {'constant13' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} and 0
		0x1808BF389: Jumps to 0x1808BF39E if constant13 equals 0 ;  - This is probably a goto, jumping to 0x1808BF39E which is after end of current block @ 0x1808BF147 (started at 0x1808BF12F)

		0x1808BF38B: [!!] Reads value at unknown offset 0 (0x0) on a klass pointer
		0x1808BF38E: [!] Compares  and 256
		0x1808BF398: Jumps to 0x1808BF562 if  != 256 ;  - This is probably a goto, jumping to 0x1808BF562 which is after end of current block @ 0x1808BF147 (started at 0x1808BF12F)

		0x1808BF39E: [!] Compares  and 0
		0x1808BF3A3: Jumps to 0x1808BF562 if  equals 0 ;  - This is probably a goto, jumping to 0x1808BF562 which is after end of current block @ 0x1808BF147 (started at 0x1808BF12F)

		0x1808BF3A9: [!] Compares {'constant13' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} and 0
		0x1808BF3AC: Jumps to 0x1808BF181 if constant13 equals 0 ;  - This is probably a goto, jumping to 0x1808BF181 which is after end of current block @ 0x1808BF147 (started at 0x1808BF12F)

		0x1808BF3B2: [!!] Reads value at unknown offset 0 (0x0) on a klass pointer
		0x1808BF3B5: [!] Compares  and 256
		0x1808BF3BF: Jumps to 0x1808BF57C if  != 256 ;  - This is probably a goto, jumping to 0x1808BF57C which is after end of current block @ 0x1808BF147 (started at 0x1808BF12F)

		0x1808BF3C5: Copies {'method' (type System.IntPtr)} from rbx into rcx
		0x1808BF3CD: Copies {'method' (type System.IntPtr)} from rbx into rcx
		0x1808BF3D0: [!] Compares {'local16' (type System.Int32)} and 0
		0x1808BF3D2: Jumps to 0x1808BF48E if local16 equals 0 ;  - This is probably a goto, jumping to 0x1808BF48E which is after end of current block @ 0x1808BF147 (started at 0x1808BF12F)

		0x1808BF3D8: [!] Calls managed method  on instance {'method' (type System.IntPtr)} ;  - Failed to resolve any matching method (there are 3 at this address)

		0x1808BF3DD: Copies {'local16' (type System.Int32)} from rax into rcx
		0x1808BF3E5: [!] Reads field  from {'method' (type System.IntPtr)} and stores in a new local 

		0x1808BF3E9: [!] Compares {'local16' (type System.Int32)} and 0
		0x1808BF3EB: Jumps to 0x1808BF47E if local16 equals 0 ;  - This is probably a goto, jumping to 0x1808BF47E which is after end of current block @ 0x1808BF147 (started at 0x1808BF12F)

		0x1808BF3F1: [!!] Reads value at unknown offset 0 (0x0) on a klass pointer
		0x1808BF3F4: Copies {'local16' (type System.Int32)} from rcx into rbp
		0x1808BF3F6: [!] Reads field  from {'method' (type System.IntPtr)} and stores in a new local 

		0x1808BF3FA: Clears register rcx, yielding zero-local {'local17' (type System.Int32)}
		0x1808BF3FC: [!!] Reads value at unknown offset 286 (0x11E) on a klass pointer
		0x1808BF404: [!] Compares {'local17' (type System.Int32)} and {'newState' (function parameter, type Cinemachine.CameraState&)}
		0x1808BF408: Jumps to 0x1808BF428 if {'local17' (type System.Int32)} is greater than or equal to {'newState' (function parameter, type Cinemachine.CameraState&)} ;  - This is probably a goto, jumping to 0x1808BF428 which is after end of current block @ 0x1808BF147 (started at 0x1808BF12F)

		0x1808BF40A: Loads the interface offsets for the class pointer to Cinemachine.CinemachineVirtualCameraBase, which contains 1 offsets, and stores them as a constant constant32 in reg r9
		0x1808BF411: Copies {'local17' (type System.Int32)} from rcx into rdx
		0x1808BF414: Copies {'local17' (type System.Int32)} from rdx into rax
		0x1808BF416: [!] Adds {'local17' (type System.Int32)} and {'local17' (type System.Int32)} and stores the result in {'local17' (type System.Int32)}
		0x1808BF41D: Jumps to 0x1808BF464 if local17 equals newState ;  - This is probably a goto, jumping to 0x1808BF464 which is after end of current block @ 0x1808BF147 (started at 0x1808BF12F)

		0x1808BF41F: [!] Adds 1 to the value {'local17' (type System.Int32)}, stored in rcx
		0x1808BF422: [!] Compares {'local17' (type System.Int32)} and {'newState' (function parameter, type Cinemachine.CameraState&)}
		0x1808BF428: Copies {'local16' (type System.Int32)} from rbp into r8
		0x1808BF42B: Copies {'constant20' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} from r10 into rdx
		0x1808BF42E: Copies {'constant13' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} from rdi into rcx

		Potential Loop Start (0x1808BF436):
		0x1808BF436: [!] Reads field  from {'local17' (type System.Int32)} and stores in a new local 


		Potential Loop Start (0x1808BF43A):
		0x1808BF43A: Copies {'method' (type System.IntPtr)} from rbx into rdx
		0x1808BF442: Moves local17 (type System.Int32) from register rax to the stack at offset 40 (0x28)
		0x1808BF447: Copies {'newState' (function parameter, type Cinemachine.CameraState&)} from r15 into r9
		0x1808BF44A: Copies {'local6' (type System.Int32)} from r12 into r8
		0x1808BF44D: Moves constant1 (type Cpp2IL.Core.Analysis.ResultModels.StackPointer) from register xmm6 to the stack at offset 32 (0x20) as a new local local18
		0x1808BF453: Copies {'vcam' (function parameter, type Cinemachine.CinemachineVirtualCameraBase)} from rsi into rdx
		0x1808BF456: Copies {'constant13' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} from rdi into rcx
		0x1808BF459: Loads the class pointer from local17 into a constant constant33 in register r10
		0x1808BF45F: Jumps to 0x1808BF57C (which is an function-local jump destination)

		0x1808BF464: [!] Adds {'vcam' (function parameter, type Cinemachine.CinemachineVirtualCameraBase)} and {'vcam' (function parameter, type Cinemachine.CinemachineVirtualCameraBase)} and stores the result in {'vcam' (function parameter, type Cinemachine.CinemachineVirtualCameraBase)}
		0x1808BF473: [!] Adds  and {'local16' (type System.Int32)} and stores the result in 
		0x1808BF479: [!] Adds {'local17' (type System.Int32)} and {'constant13' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} and stores the result in {'local17' (type System.Int32)}
		0x1808BF47C: Jumps to 0x1808BF436 - which is still in this function, but further up. Probably indicative that this is a loop.
		0x1808BF47E: [!!] Reads value at unknown offset 0 (0x0) on a klass pointer
		0x1808BF481: [!] Adds 19 to the value , stored in rcx
		0x1808BF485: [!] Adds  and {'constant13' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} and stores the result in 
		0x1808BF48C: Jumps to 0x1808BF43A - which is still in this function, but further up. Probably indicative that this is a loop.
		0x1808BF48E: [!] Calls managed method  on instance  ;  - Failed to resolve any matching method (there are 3 at this address)

		0x1808BF493: Copies {'local17' (type System.Int32)} from rax into rcx
		0x1808BF49B: [!] Compares {'local17' (type System.Int32)} and 0
		0x1808BF49D: Jumps to 0x1808BF52E if local17 equals 0 ;  - This is probably a goto, jumping to 0x1808BF52E which is after end of current block @ 0x1808BF147 (started at 0x1808BF12F)

		0x1808BF4A3: Copies {'method' (type System.IntPtr)} from rbx into rcx
		0x1808BF4A6: [!] Calls managed method  on instance {'method' (type System.IntPtr)} ;  - Failed to resolve any matching method (there are 3 at this address)

		0x1808BF4AB: [!!] Reads value at unknown offset 0 (0x0) on a klass pointer
		0x1808BF4AE: Clears register rcx, yielding zero-local {'local19' (type System.Int32)}
		0x1808BF4B0: [!] Reads field  from {'method' (type System.IntPtr)} and stores in a new local 

		0x1808BF4B4: Copies {'local17' (type System.Int32)} from rax into r10
		0x1808BF4B7: [!!] Reads value at unknown offset 286 (0x11E) on a klass pointer
		0x1808BF4BF: [!] Compares {'local19' (type System.Int32)} and {'newState' (function parameter, type Cinemachine.CameraState&)}
		0x1808BF4C3: Jumps to 0x1808BF4E7 if {'local19' (type System.Int32)} is greater than or equal to {'newState' (function parameter, type Cinemachine.CameraState&)} ;  - This is probably a goto, jumping to 0x1808BF4E7 which is after end of current block @ 0x1808BF147 (started at 0x1808BF12F)

		0x1808BF4C5: Loads the interface offsets for the class pointer to Cinemachine.CinemachineVirtualCameraBase, which contains 1 offsets, and stores them as a constant constant35 in reg r8
		0x1808BF4D0: Copies {'local19' (type System.Int32)} from rcx into rdx
		0x1808BF4D3: Copies {'local19' (type System.Int32)} from rdx into rax
		0x1808BF4D5: [!] Adds {'local19' (type System.Int32)} and {'local19' (type System.Int32)} and stores the result in {'local19' (type System.Int32)}
		0x1808BF4DC: Jumps to 0x1808BF514 if local19 equals newState ;  - This is probably a goto, jumping to 0x1808BF514 which is after end of current block @ 0x1808BF147 (started at 0x1808BF12F)

		0x1808BF4DE: [!] Adds 1 to the value {'local19' (type System.Int32)}, stored in rcx
		0x1808BF4E1: [!] Compares {'local19' (type System.Int32)} and {'newState' (function parameter, type Cinemachine.CameraState&)}
		0x1808BF4E7: Copies {'method' (type System.IntPtr)} from rbx into r8
		0x1808BF4EA: Copies {'local17' (type System.Int32)} from r10 into rdx
		0x1808BF4ED: Copies {'constant13' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} from rdi into rcx

		Potential Loop Start (0x1808BF4F5):
		0x1808BF4F5: [!] Reads field  from {'local19' (type System.Int32)} and stores in a new local 

		0x1808BF4F9: Copies {'newState' (function parameter, type Cinemachine.CameraState&)} from r15 into r9
		0x1808BF4FC: Moves constant13 (type Cpp2IL.Core.Analysis.Il2CppClassIdentifier) from register rcx to the stack at offset 40 (0x28) as a new local local20
		0x1808BF501: Copies {'local6' (type System.Int32)} from r12 into r8
		0x1808BF504: Copies {'constant13' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} from rdi into rcx
		0x1808BF507: Moves constant1 (type Cpp2IL.Core.Analysis.ResultModels.StackPointer) from register xmm6 to the stack at offset 32 (0x20) as a new local local21
		0x1808BF50D: Copies {'vcam' (function parameter, type Cinemachine.CinemachineVirtualCameraBase)} from rsi into rdx
		0x1808BF512: Jumps to 0x1808BF57C (which is an function-local jump destination)

		0x1808BF514: [!] Adds {'vcam' (function parameter, type Cinemachine.CinemachineVirtualCameraBase)} and {'vcam' (function parameter, type Cinemachine.CinemachineVirtualCameraBase)} and stores the result in {'vcam' (function parameter, type Cinemachine.CinemachineVirtualCameraBase)}
		0x1808BF523: [!] Adds  and {'method' (type System.IntPtr)} and stores the result in 
		0x1808BF529: [!] Adds {'local19' (type System.Int32)} and {'constant13' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} and stores the result in {'local19' (type System.Int32)}
		0x1808BF52C: Jumps to 0x1808BF4F5 - which is still in this function, but further up. Probably indicative that this is a loop.
		0x1808BF52E: [!] Reads field  from {'method' (type System.IntPtr)} and stores in a new local 

		0x1808BF533: Copies {'newState' (function parameter, type Cinemachine.CameraState&)} from r15 into r9
		0x1808BF536: [!!] Reads value at unknown offset 0 (0x0) on a klass pointer
		0x1808BF539: [!] Adds  and {'constant22' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} and stores the result in 
		0x1808BF53C: Copies {'local6' (type System.Int32)} from r12 into r8
		0x1808BF53F: Copies {'vcam' (function parameter, type Cinemachine.CinemachineVirtualCameraBase)} from rsi into rdx
		0x1808BF542: Copies {'constant13' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} from rdi into rcx
		0x1808BF54D: Moves local19 (type System.Int32) from register rax to the stack at offset 40 (0x28)
		0x1808BF552: Moves constant1 (type Cpp2IL.Core.Analysis.ResultModels.StackPointer) from register xmm6 to the stack at offset 32 (0x20) as a new local local22
		0x1808BF560: Jumps to 0x1808BF57C (which is an function-local jump destination)

		0x1808BF562: Moves method (type System.IntPtr) from register rbx to the stack at offset 40 (0x28)
		0x1808BF567: Copies {'newState' (function parameter, type Cinemachine.CameraState&)} from r15 into r9
		0x1808BF56A: Copies {'local6' (type System.Int32)} from r12 into r8
		0x1808BF56D: Moves constant1 (type Cpp2IL.Core.Analysis.ResultModels.StackPointer) from register xmm6 to the stack at offset 32 (0x20) as a new local local23
		0x1808BF573: Copies {'vcam' (function parameter, type Cinemachine.CinemachineVirtualCameraBase)} from rsi into rdx
		0x1808BF576: Copies {'constant13' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} from rdi into rcx

		Jump Destination (0x1808BF57C):
		0x1808BF57C: Reads unknown value in stack, offset 112 (0x70) and stores the pointer in register rbx as new constant constant36
		0x1808BF581: Reads unknown value in stack, offset 120 (0x78) and stores the pointer in register rbp as new constant constant37
		0x1808BF586: Reads unknown value in stack, offset 128 (0x80) and stores the pointer in register rsi as new constant constant38
		0x1808BF58E: Reads unknown value in stack, offset 48 (0x30) and stores the pointer in register xmm6 as new constant constant39
		0x1808BF5A0: [!] Returns from the function




	Generated Pseudocode:

	Declaring Type: Cinemachine.CinemachineVirtualCameraBase/OnPostPipelineStageDelegate
	System.Void Invoke(Cinemachine.CinemachineVirtualCameraBase vcam, Cinemachine.CinemachineCore/Stage stage, Cinemachine.CameraState& newState, System.Single deltaTime)
		System.MulticastDelegate prev = this.prev
		System.Int32 local6 = stage.value__

		if (prev != 0)

		    prev.Invoke()
		endif
        
		System.IntPtr method = this.method
		System.Int64 local10 = 0xFFFF
		System.Object m_target = this.m_target

		if ( != local10)
            goto INSN_1808BF168
        endif
		throw new System.ExecutionEngineException()

		INSN_1808BF168:
		  = method.

		if (local13 != 0)
            goto INSN_1808BF19A
        endif

		if (method != 4)
            goto INSN_1808BF562
        endif

		INSN_1808BF19A:
		  = method.

		if (vcam == 4)
            goto INSN_1808BF37C
        endif

		if (local13 == local10)
            goto INSN_1808BF181
        endif

		if (m_target == 0)
            goto INSN_1808BF1C1
        endif

		INSN_1808BF1C1:

		if ( == 0)
            goto INSN_1808BF181
        endif

		if (m_target == 0)
            goto INSN_1808BF1E0
        endif

		INSN_1808BF1E0:

		if (constant13 == 0)
            goto INSN_1808BF2AB
        endif

		[instruction error - managed method being called is null]
		  = method.

		if (constant13 == 0)
            goto INSN_1808BF279
        endif
		  = method.
		ulong local14 = 0
		//UNKNOWN CLASS OFFSET READ HERE

		if (local14 >= newState)
            goto INSN_1808BF247
        endif
		local14 += local14

		if (local14 == newState)
            goto INSN_1808BF25B
        endif
		local14 += 1

		INSN_1808BF247:
		  = local14.

		INSN_1808BF25B:
		local14 += local14
		vcam += constant13
		local14 += vcam
		  = local14.

		INSN_1808BF279:
		vcam += vcam
		//UNKNOWN CLASS OFFSET READ HERE
		//UNKNOWN CLASS OFFSET READ HERE

		INSN_1808BF2AB:

		[instruction error - managed method being called is null]

		if (constant20 == 0)
            goto INSN_1808BF34B
        endif

		[instruction error - managed method being called is null]
		ulong local16 = 0
		  = method.
		//UNKNOWN CLASS OFFSET READ HERE

		if (local16 >= constant19)
            goto INSN_1808BF307
        endif
		local16 += local16

		if (local16 == constant19)
            goto INSN_1808BF331
        endif
		local16 += 1

		INSN_1808BF307:
		  = local16.

		INSN_1808BF331:
		local6 += local6
		vcam += method
		local16 += vcam

		INSN_1808BF34B:
		  = method.
		 += constant20

		INSN_1808BF37C:

		if (local16 == local10)
            goto INSN_1808BF562
        endif

		if (constant13 == 0)
            goto INSN_1808BF39E
        endif
		//UNKNOWN CLASS OFFSET READ HERE

		if ( != 256)
            goto INSN_1808BF562
        endif

		INSN_1808BF39E:

		if ( == 0)
            goto INSN_1808BF562
        endif

		if (constant13 == 0)
            goto INSN_1808BF181
        endif
		//UNKNOWN CLASS OFFSET READ HERE

		if ( != 256)
            goto INSN_1808BF57C
        endif

		if (local16 == 0)
            goto INSN_1808BF48E
        endif

		[instruction error - managed method being called is null]
		  = method.

		if (local16 == 0)
            goto INSN_1808BF47E
        endif
		//UNKNOWN CLASS OFFSET READ HERE
		  = method.
		ulong local17 = 0
		//UNKNOWN CLASS OFFSET READ HERE

		if (local17 >= newState)
            goto INSN_1808BF428
        endif
		local17 += local17

		if (local17 == newState)
            goto INSN_1808BF464
        endif
		local17 += 1

		INSN_1808BF428:
		  = local17.

		INSN_1808BF464:
		vcam += vcam
		 += local16
		local17 += constant13

		INSN_1808BF47E:
		//UNKNOWN CLASS OFFSET READ HERE
		 += 19
		 += constant13

		INSN_1808BF48E:

		[instruction error - managed method being called is null]

		if (local17 == 0)
            goto INSN_1808BF52E
        endif

		[instruction error - managed method being called is null]
		//UNKNOWN CLASS OFFSET READ HERE
		ulong local19 = 0
		  = method.
		//UNKNOWN CLASS OFFSET READ HERE

		if (local19 >= newState)
            goto INSN_1808BF4E7
        endif
		local19 += local19

		if (local19 == newState)
            goto INSN_1808BF514
        endif
		local19 += 1

		INSN_1808BF4E7:
		  = local19.

		INSN_1808BF514:
		vcam += vcam
		 += method
		local19 += constant13

		INSN_1808BF52E:
		  = method.
		//UNKNOWN CLASS OFFSET READ HERE
		 += constant22

		INSN_1808BF562:

		INSN_1808BF57C:
		return


Generated IL:
	Action of type Cpp2IL.Core.Analysis.Actions.x86.Important.CallManagedFunctionAction at (0x1808BF142) is corrupt (Mismatched instance parameter. Expecting an instance of Cinemachine.CinemachineVirtualCameraBase/OnPostPipelineStageDelegate, actually {'prev' (type System.MulticastDelegate)}) and cannot be created as IL. Aborting here.


Method: System.IAsyncResult Cinemachine.CinemachineVirtualCameraBase/OnPostPipelineStageDelegate::BeginInvoke(Cinemachine.CinemachineVirtualCameraBase,Cinemachine.CinemachineCore/Stage,Cinemachine.CameraState&,System.Single,System.AsyncCallback,System.Object):	Method Body (x86 ASM):
		0x1808BF010 mov [rsp+8],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RSP | 8 | None ||| N/A | N/A
		0x1808BF015 mov [rsp+10h],rsi		; DEBUG: {Memory}/None {Register}/RSI ||| RSP | 16 | None ||| N/A | N/A
		0x1808BF01A mov [rsp+18h],r8d		; DEBUG: {Memory}/None {Register}/R8D ||| RSP | 24 | None ||| N/A | N/A
		0x1808BF01F push rdi		; DEBUG: {Register}/RDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1808BF020 sub rsp,50h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 80
		0x1808BF024 cmp byte ptr [18184208Dh],0		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6467887245 | None ||| N/A | 0
		0x1808BF02B mov rbx,r9		; DEBUG: {Register}/RBX {Register}/R9 ||| None | 0 | None ||| N/A | N/A
		0x1808BF02E mov rdi,rdx		; DEBUG: {Register}/RDI {Register}/RDX ||| None | 0 | None ||| N/A | N/A
		0x1808BF031 mov rsi,rcx		; DEBUG: {Register}/RSI {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x1808BF034 jne short 00000001808BF048h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BF036 mov ecx,[1814CAEA8h]		; DEBUG: {Register}/ECX {Memory}/None ||| RIP | 6464253608 | None ||| N/A | N/A
		0x1808BF03C call 00000001800FEB90h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BF041 mov byte ptr [18184208Dh],1		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6467887245 | None ||| N/A | 1
		0x1808BF048 mov rcx,[18189C980h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468258176 | None ||| N/A | N/A
		0x1808BF04F lea rdx,[rsp+70h]		; DEBUG: {Register}/RDX {Memory}/None ||| RSP | 112 | None ||| N/A | N/A
		0x1808BF054 mov qword ptr [rsp+40h],0		; DEBUG: {Memory}/None {Immediate32to64}/None ||| RSP | 64 | None ||| N/A | 0
		0x1808BF05D mov [rsp+20h],rdi		; DEBUG: {Memory}/None {Register}/RDI ||| RSP | 32 | None ||| N/A | N/A
		0x1808BF062 call 000000018013A7F0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BF067 mov rcx,[18189C398h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468256664 | None ||| N/A | N/A
		0x1808BF06E mov rdx,rbx		; DEBUG: {Register}/RDX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x1808BF071 mov [rsp+28h],rax		; DEBUG: {Memory}/None {Register}/RAX ||| RSP | 40 | None ||| N/A | N/A
		0x1808BF076 call 000000018013A7F0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BF07B mov rcx,[181885770h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468163440 | None ||| N/A | N/A
		0x1808BF082 lea rdx,[rsp+80h]		; DEBUG: {Register}/RDX {Memory}/None ||| RSP | 128 | None ||| N/A | N/A
		0x1808BF08A mov [rsp+30h],rax		; DEBUG: {Memory}/None {Register}/RAX ||| RSP | 48 | None ||| N/A | N/A
		0x1808BF08F call 000000018013A7F0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BF094 mov r9,[rsp+90h]		; DEBUG: {Register}/R9 {Memory}/None ||| RSP | 144 | None ||| N/A | N/A
		0x1808BF09C lea rdx,[rsp+20h]		; DEBUG: {Register}/RDX {Memory}/None ||| RSP | 32 | None ||| N/A | N/A
		0x1808BF0A1 mov r8,[rsp+88h]		; DEBUG: {Register}/R8 {Memory}/None ||| RSP | 136 | None ||| N/A | N/A
		0x1808BF0A9 mov rcx,rsi		; DEBUG: {Register}/RCX {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x1808BF0AC mov [rsp+38h],rax		; DEBUG: {Memory}/None {Register}/RAX ||| RSP | 56 | None ||| N/A | N/A
		0x1808BF0B1 call 000000018010D170h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BF0B6 mov rbx,[rsp+60h]		; DEBUG: {Register}/RBX {Memory}/None ||| RSP | 96 | None ||| N/A | N/A
		0x1808BF0BB mov rsi,[rsp+68h]		; DEBUG: {Register}/RSI {Memory}/None ||| RSP | 104 | None ||| N/A | N/A
		0x1808BF0C0 add rsp,50h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 80
		0x1808BF0C4 pop rdi		; DEBUG: {Register}/RDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1808BF0C5 ret		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1808BF0C6 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.IAsyncResult Cinemachine.CinemachineVirtualCameraBase/OnPostPipelineStageDelegate::BeginInvoke(Cinemachine.CinemachineVirtualCameraBase,Cinemachine.CinemachineCore/Stage,Cinemachine.CameraState&,System.Single,System.AsyncCallback,System.Object):
		End of function at 0x1808BF0C7
		Absolute End is at 0x1808BF0C7
		Identified Jump Destination addresses:

		0x1808BF01A: Moves stage (type Cinemachine.CinemachineCore/Stage) from register r8 to the stack at offset 24 (0x18)
		0x1808BF01F: Saves the content of rdi to the stack
		0x1808BF024: Compares {Unknown Global at 0x18184208D, first ten bytes are [148 3 0 186 148 3 0 208 60 103], or as chars " º Ð<g"} and 0
		0x1808BF02B: Copies {'newState' (function parameter, type Cinemachine.CameraState&)} from r9 into rbx
		0x1808BF02E: Copies {'vcam' (function parameter, type Cinemachine.CinemachineVirtualCameraBase)} from rdx into rdi
		0x1808BF031: Copies {'this' (function parameter, type Cinemachine.CinemachineVirtualCameraBase/OnPostPipelineStageDelegate)} from rcx into rsi
		0x1808BF034: Jumps to 0x1808BF048 if {Unknown Global at 0x18184208D, first ten bytes are [148 3 0 186 148 3 0 208 60 103], or as chars " º Ð<g"} != 0

		0x1808BF036: Reads {Unknown Global at 0x1814CAEA8, first ten bytes are [139 79 0 0 140 15 0 0 140 111], or as chars "O    o"} into register rcx as a constant constant3
		0x1808BF03C: Attempts to load the il2cpp metadata for this method (method id 20363) and init it cpp-side.

		0x1808BF048: Loads the type definition for managed type Cinemachine.CinemachineCore/Stage as a constant "Stage" in rcx
		0x1808BF04F: Loads a pointer to stack offset 0x70 into register rdx as new constant constant5
		0x1808BF054: Moves 0 (immediate ulong value) to the stack at offset 64 as a new local local7
		0x1808BF05D: Moves vcam (type Cinemachine.CinemachineVirtualCameraBase) from register rdi to the stack at offset 32 (0x20)
		0x1808BF062: Boxes a cpp primitive value  to managed type Cinemachine.CinemachineCore/Stage and stores the result in new local  in register rax.
		0x1808BF067: Loads the type definition for managed type Cinemachine.CameraState as a constant "CameraState" in rcx
		0x1808BF06E: Copies {'newState' (function parameter, type Cinemachine.CameraState&)} from rbx into rdx
		0x1808BF076: Boxes a cpp primitive value {'newState' (function parameter, type Cinemachine.CameraState&)} to managed type Cinemachine.CameraState and stores the result in new local  in register rax.
		0x1808BF07B: Loads the type definition for managed type System.Single as a constant "Single" in rcx
		0x1808BF082: Loads a pointer to stack offset 0x80 into register rdx as new constant constant8
		0x1808BF08F: Boxes a cpp primitive value  to managed type System.Single and stores the result in new local  in register rax.
		0x1808BF094: Reads unknown value in stack, offset 144 (0x90) and stores the pointer in register r9 as new constant constant9
		0x1808BF09C: Loads a pointer to stack offset 0x20 into register rdx as new constant constant10
		0x1808BF0A1: Reads unknown value in stack, offset 136 (0x88) and stores the pointer in register r8 as new constant constant11
		0x1808BF0A9: Copies {'this' (function parameter, type Cinemachine.CinemachineVirtualCameraBase/OnPostPipelineStageDelegate)} from rsi into rcx
		0x1808BF0B6: Reads unknown value in stack, offset 96 (0x60) and stores the pointer in register rbx as new constant constant12
		0x1808BF0BB: Reads unknown value in stack, offset 104 (0x68) and stores the pointer in register rsi as new constant constant13
		0x1808BF0C5: [!] Returns  from the function




	Generated Pseudocode:

	Declaring Type: Cinemachine.CinemachineVirtualCameraBase/OnPostPipelineStageDelegate
	System.IAsyncResult BeginInvoke(Cinemachine.CinemachineVirtualCameraBase vcam, Cinemachine.CinemachineCore/Stage stage, Cinemachine.CameraState& newState, System.Single deltaTime, System.AsyncCallback callback, System.Object object)
		return 


Generated IL:
	Action of type Cpp2IL.Core.Analysis.Actions.x86.Important.ReturnFromFunctionAction at (0x1808BF0C5) is corrupt (Return value is missing) and cannot be created as IL. Aborting here.


Method: System.Void Cinemachine.CinemachineVirtualCameraBase/OnPostPipelineStageDelegate::EndInvoke(Cinemachine.CameraState&,System.IAsyncResult):	Method Body (x86 ASM):
		0x1808BF0D0 sub rsp,28h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 40
		0x1808BF0D4 mov [rsp+38h],rdx		; DEBUG: {Memory}/None {Register}/RDX ||| RSP | 56 | None ||| N/A | N/A
		0x1808BF0D9 mov rcx,r8		; DEBUG: {Register}/RCX {Register}/R8 ||| None | 0 | None ||| N/A | N/A
		0x1808BF0DC lea rdx,[rsp+38h]		; DEBUG: {Register}/RDX {Memory}/None ||| RSP | 56 | None ||| N/A | N/A
		0x1808BF0E1 call 000000018010DD90h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808BF0E6 add rsp,28h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 40
		0x1808BF0EA ret		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1808BF0EB int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.Void Cinemachine.CinemachineVirtualCameraBase/OnPostPipelineStageDelegate::EndInvoke(Cinemachine.CameraState&,System.IAsyncResult):
		End of function at 0x1808BF0EC
		Absolute End is at 0x1808BF0EC
		Identified Jump Destination addresses:

		0x1808BF0D4: Moves newState (type Cinemachine.CameraState&) from register rdx to the stack at offset 56 (0x38)
		0x1808BF0D9: Copies {'result' (function parameter, type System.IAsyncResult)} from r8 into rcx
		0x1808BF0DC: Loads a pointer to stack offset 0x38 into register rdx as new constant constant1
		0x1808BF0EA: [!] Returns from the function




	Generated Pseudocode:

	Declaring Type: Cinemachine.CinemachineVirtualCameraBase/OnPostPipelineStageDelegate
	System.Void EndInvoke(Cinemachine.CameraState& newState, System.IAsyncResult result)
		return


Generated IL:
	IL_0000: ret
	

