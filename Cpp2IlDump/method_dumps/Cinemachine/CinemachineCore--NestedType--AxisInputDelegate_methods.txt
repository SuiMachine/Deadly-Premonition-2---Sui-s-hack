Type: AxisInputDelegate

Method: System.Void Cinemachine.CinemachineCore/AxisInputDelegate::.ctor(System.Object,System.IntPtr):	Method Body (x86 ASM):
		0x1802ED440 mov rax,[r8]		; DEBUG: {Register}/RAX {Memory}/None ||| R8 | 0 | None ||| N/A | N/A
		0x1802ED443 mov [rcx+10h],rax		; DEBUG: {Memory}/None {Register}/RAX ||| RCX | 16 | None ||| N/A | N/A
		0x1802ED447 mov [rcx+28h],r8		; DEBUG: {Memory}/None {Register}/R8 ||| RCX | 40 | None ||| N/A | N/A
		0x1802ED44B mov [rcx+20h],rdx		; DEBUG: {Memory}/None {Register}/RDX ||| RCX | 32 | None ||| N/A | N/A
		0x1802ED44F ret		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.Void Cinemachine.CinemachineCore/AxisInputDelegate::.ctor(System.Object,System.IntPtr):
		End of function at 0x1802ED450
		Absolute End is at 0x1802ED450
		Identified Jump Destination addresses:

		0x1802ED440: Loads the class pointer from method into a constant constant1 in register rax
		0x1802ED443: [!] Sets the field method_ptr (Type System.IntPtr) on local {'this' (function parameter, type Cinemachine.CinemachineCore/AxisInputDelegate)} to the value stored in {'constant1' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)}
		0x1802ED447: [!] Sets the field method (Type System.IntPtr) on local {'this' (function parameter, type Cinemachine.CinemachineCore/AxisInputDelegate)} to the value stored in {'method' (function parameter, type System.IntPtr)}
		0x1802ED44B: [!] Sets the field m_target (Type System.Object) on local {'this' (function parameter, type Cinemachine.CinemachineCore/AxisInputDelegate)} to the value stored in {'object' (function parameter, type System.Object)}
		0x1802ED44F: [!] Returns from the function




	Generated Pseudocode:

	Declaring Type: Cinemachine.CinemachineCore/AxisInputDelegate
	System.Void .ctor(System.Object object, System.IntPtr method)
		this.method_ptr = constant1
		this.method = method
		this.m_target = object
		return


Generated IL:
	Action of type Cpp2IL.Core.Analysis.Actions.x86.Important.RegToFieldAction at (0x1802ED443) is corrupt (ConstantDefinition: Don't know how to get IL to load a Cpp2IL.Core.Analysis.Il2CppClassIdentifier) and cannot be created as IL. Aborting here.


Method: System.Single Cinemachine.CinemachineCore/AxisInputDelegate::Invoke(System.String):	Method Body (x86 ASM):
		0x180715E30 mov [rsp+8],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RSP | 8 | None ||| N/A | N/A
		0x180715E35 mov [rsp+10h],rbp		; DEBUG: {Memory}/None {Register}/RBP ||| RSP | 16 | None ||| N/A | N/A
		0x180715E3A mov [rsp+18h],rsi		; DEBUG: {Memory}/None {Register}/RSI ||| RSP | 24 | None ||| N/A | N/A
		0x180715E3F push rdi		; DEBUG: {Register}/RDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180715E40 push r14		; DEBUG: {Register}/R14 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180715E42 push r15		; DEBUG: {Register}/R15 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180715E44 sub rsp,30h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 48
		0x180715E48 mov rbp,rcx		; DEBUG: {Register}/RBP {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x180715E4B movaps [rsp+20h],xmm6		; DEBUG: {Memory}/None {Register}/XMM6 ||| RSP | 32 | None ||| N/A | N/A
		0x180715E50 mov rcx,[rcx+58h]		; DEBUG: {Register}/RCX {Memory}/None ||| RCX | 88 | None ||| N/A | N/A
		0x180715E54 mov rsi,rdx		; DEBUG: {Register}/RSI {Register}/RDX ||| None | 0 | None ||| N/A | N/A
		0x180715E57 xorps xmm6,xmm6		; DEBUG: {Register}/XMM6 {Register}/XMM6 ||| None | 0 | None ||| N/A | N/A
		0x180715E5A test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x180715E5D je short 0000000180715E64h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180715E5F call 0000000180715E30h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180715E64 mov rbx,[rbp+28h]		; DEBUG: {Register}/RBX {Memory}/None ||| RBP | 40 | None ||| N/A | N/A
		0x180715E68 mov r15d,0FFFFh		; DEBUG: {Register}/R15D {Immediate32}/None ||| None | 0 | None ||| N/A | 65535
		0x180715E6E mov r14,[rbp+10h]		; DEBUG: {Register}/R14 {Memory}/None ||| RBP | 16 | None ||| N/A | N/A
		0x180715E72 mov rdi,[rbp+20h]		; DEBUG: {Register}/RDI {Memory}/None ||| RBP | 32 | None ||| N/A | N/A
		0x180715E76 cmp [rbx+48h],r15w		; DEBUG: {Memory}/None {Register}/R15W ||| RBX | 72 | None ||| N/A | N/A
		0x180715E7B jne short 0000000180715E85h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180715E7D mov rcx,rbx		; DEBUG: {Register}/RCX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x180715E80 call 00000001801102D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180715E85 mov rcx,rbx		; DEBUG: {Register}/RCX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x180715E88 call 0000000180141DF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180715E8D movzx ecx,byte ptr [rbx+4Ah]		; DEBUG: {Register}/ECX {Memory}/None ||| RBX | 74 | None ||| N/A | N/A
		0x180715E91 test al,al		; DEBUG: {Register}/AL {Register}/AL ||| None | 0 | None ||| N/A | N/A
		0x180715E93 jne short 0000000180715EACh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180715E95 cmp cl,1		; DEBUG: {Register}/CL {Immediate8}/None ||| None | 0 | None ||| N/A | 1
		0x180715E98 jne near ptr 000000018071624Ch		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180715E9E mov rdx,rbx		; DEBUG: {Register}/RDX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x180715EA1 mov rcx,rsi		; DEBUG: {Register}/RCX {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x180715EA4 call r14		; DEBUG: {Register}/R14 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180715EA7 jmp near ptr 0000000180716258h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180715EAC movzx eax,word ptr [rbx+48h]		; DEBUG: {Register}/EAX {Memory}/None ||| RBX | 72 | None ||| N/A | N/A
		0x180715EB0 cmp cl,1		; DEBUG: {Register}/CL {Immediate8}/None ||| None | 0 | None ||| N/A | 1
		0x180715EB3 je near ptr 000000018071606Ch		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180715EB9 cmp ax,r15w		; DEBUG: {Register}/AX {Register}/R15W ||| None | 0 | None ||| N/A | N/A
		0x180715EBD je short 0000000180715E9Eh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180715EBF test rdi,rdi		; DEBUG: {Register}/RDI {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x180715EC2 je short 0000000180715ED3h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180715EC4 mov rax,[rdi]		; DEBUG: {Register}/RAX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x180715EC7 test dword ptr [rax+108h],100h		; DEBUG: {Memory}/None {Immediate32}/None ||| RAX | 264 | None ||| N/A | 256
		0x180715ED1 jne short 0000000180715E9Eh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180715ED3 cmp qword ptr [rbp+18h],0		; DEBUG: {Memory}/None {Immediate8to64}/None ||| RBP | 24 | None ||| N/A | 0
		0x180715ED8 je short 0000000180715E9Eh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180715EDA test rdi,rdi		; DEBUG: {Register}/RDI {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x180715EDD je short 0000000180715EF2h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180715EDF mov rax,[rdi]		; DEBUG: {Register}/RAX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x180715EE2 test dword ptr [rax+108h],100h		; DEBUG: {Memory}/None {Immediate32}/None ||| RAX | 264 | None ||| N/A | 256
		0x180715EEC jne near ptr 000000018071625Bh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180715EF2 mov rcx,rbx		; DEBUG: {Register}/RCX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x180715EF5 call 0000000180141DC0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180715EFA mov rcx,rbx		; DEBUG: {Register}/RCX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x180715EFD test al,al		; DEBUG: {Register}/AL {Register}/AL ||| None | 0 | None ||| N/A | N/A
		0x180715EFF je near ptr 0000000180715FACh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180715F05 call 000000018005DA10h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180715F0A mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180715F0D call 00000001800F6DD0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180715F12 movzx ecx,word ptr [rbx+48h]		; DEBUG: {Register}/ECX {Memory}/None ||| RBX | 72 | None ||| N/A | N/A
		0x180715F16 test al,al		; DEBUG: {Register}/AL {Register}/AL ||| None | 0 | None ||| N/A | N/A
		0x180715F18 je near ptr 0000000180715F9Ch		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180715F1E mov r11,[rsi]		; DEBUG: {Register}/R11 {Memory}/None ||| RSI | 0 | None ||| N/A | N/A
		0x180715F21 mov edi,ecx		; DEBUG: {Register}/EDI {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x180715F23 mov r10,[rbx+18h]		; DEBUG: {Register}/R10 {Memory}/None ||| RBX | 24 | None ||| N/A | N/A
		0x180715F27 xor ecx,ecx		; DEBUG: {Register}/ECX {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x180715F29 movzx r8d,word ptr [r11+11Eh]		; DEBUG: {Register}/R8D {Memory}/None ||| R11 | 286 | None ||| N/A | N/A
		0x180715F31 cmp cx,r8w		; DEBUG: {Register}/CX {Register}/R8W ||| None | 0 | None ||| N/A | N/A
		0x180715F35 jae short 0000000180715F57h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180715F37 mov r9,[r11+0B0h]		; DEBUG: {Register}/R9 {Memory}/None ||| R11 | 176 | None ||| N/A | N/A
		0x180715F3E xchg ax,ax		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180715F40 movzx edx,cx		; DEBUG: {Register}/EDX {Register}/CX ||| None | 0 | None ||| N/A | N/A
		0x180715F43 mov eax,edx		; DEBUG: {Register}/EAX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180715F45 add rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180715F48 cmp [r9+rax*8],r10		; DEBUG: {Memory}/None {Register}/R10 ||| R9 | 0 | RAX ||| N/A | N/A
		0x180715F4C je short 0000000180715F82h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180715F4E inc cx		; DEBUG: {Register}/CX {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180715F51 cmp cx,r8w		; DEBUG: {Register}/CX {Register}/R8W ||| None | 0 | None ||| N/A | N/A
		0x180715F55 jb short 0000000180715F40h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180715F57 mov r8d,edi		; DEBUG: {Register}/R8D {Register}/EDI ||| None | 0 | None ||| N/A | N/A
		0x180715F5A mov rdx,r10		; DEBUG: {Register}/RDX {Register}/R10 ||| None | 0 | None ||| N/A | N/A
		0x180715F5D mov rcx,rsi		; DEBUG: {Register}/RCX {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x180715F60 call 00000001800F5B10h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180715F65 mov rcx,[rax+8]		; DEBUG: {Register}/RCX {Memory}/None ||| RAX | 8 | None ||| N/A | N/A
		0x180715F69 mov rdx,rbx		; DEBUG: {Register}/RDX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x180715F6C call 000000018010EE60h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180715F71 mov rdx,rax		; DEBUG: {Register}/RDX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180715F74 mov rcx,rsi		; DEBUG: {Register}/RCX {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x180715F77 mov r8,[rax]		; DEBUG: {Register}/R8 {Memory}/None ||| RAX | 0 | None ||| N/A | N/A
		0x180715F7A call r8		; DEBUG: {Register}/R8 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180715F7D jmp near ptr 0000000180716258h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180715F82 add rdx,rdx		; DEBUG: {Register}/RDX {Register}/RDX ||| None | 0 | None ||| N/A | N/A
		0x180715F85 lea rax,[r11+128h]		; DEBUG: {Register}/RAX {Memory}/None ||| R11 | 296 | None ||| N/A | N/A
		0x180715F8C mov ecx,[r9+rdx*8+8]		; DEBUG: {Register}/ECX {Memory}/None ||| R9 | 8 | RDX ||| N/A | N/A
		0x180715F91 add ecx,edi		; DEBUG: {Register}/ECX {Register}/EDI ||| None | 0 | None ||| N/A | N/A
		0x180715F93 shl rcx,4		; DEBUG: {Register}/RCX {Immediate8}/None ||| None | 0 | None ||| N/A | 4
		0x180715F97 add rax,rcx		; DEBUG: {Register}/RAX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x180715F9A jmp short 0000000180715F65h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180715F9C mov rax,[rsi]		; DEBUG: {Register}/RAX {Memory}/None ||| RSI | 0 | None ||| N/A | N/A
		0x180715F9F add rcx,13h		; DEBUG: {Register}/RCX {Immediate8to64}/None ||| None | 0 | None ||| N/A | 19
		0x180715FA3 add rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x180715FA6 mov rcx,[rax+rcx*8]		; DEBUG: {Register}/RCX {Memory}/None ||| RAX | 0 | RCX ||| N/A | N/A
		0x180715FAA jmp short 0000000180715F69h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180715FAC call 000000018005DA10h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180715FB1 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180715FB4 call 00000001800F6DD0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180715FB9 test al,al		; DEBUG: {Register}/AL {Register}/AL ||| None | 0 | None ||| N/A | N/A
		0x180715FBB je near ptr 0000000180716049h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180715FC1 mov rcx,rbx		; DEBUG: {Register}/RCX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x180715FC4 call 000000018005DA10h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180715FC9 mov r11,[rsi]		; DEBUG: {Register}/R11 {Memory}/None ||| RSI | 0 | None ||| N/A | N/A
		0x180715FCC xor ecx,ecx		; DEBUG: {Register}/ECX {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x180715FCE movzx ebx,word ptr [rbx+48h]		; DEBUG: {Register}/EBX {Memory}/None ||| RBX | 72 | None ||| N/A | N/A
		0x180715FD2 mov r10,rax		; DEBUG: {Register}/R10 {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180715FD5 movzx r9d,word ptr [r11+11Eh]		; DEBUG: {Register}/R9D {Memory}/None ||| R11 | 286 | None ||| N/A | N/A
		0x180715FDD cmp cx,r9w		; DEBUG: {Register}/CX {Register}/R9W ||| None | 0 | None ||| N/A | N/A
		0x180715FE1 jae short 0000000180716007h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180715FE3 mov r8,[r11+0B0h]		; DEBUG: {Register}/R8 {Memory}/None ||| R11 | 176 | None ||| N/A | N/A
		0x180715FEA nop word ptr [rax+rax]		; DEBUG: {Memory}/None {Register}/None ||| RAX | 0 | RAX ||| N/A | N/A
		0x180715FF0 movzx edx,cx		; DEBUG: {Register}/EDX {Register}/CX ||| None | 0 | None ||| N/A | N/A
		0x180715FF3 mov eax,edx		; DEBUG: {Register}/EAX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180715FF5 add rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180715FF8 cmp [r8+rax*8],r10		; DEBUG: {Memory}/None {Register}/R10 ||| R8 | 0 | RAX ||| N/A | N/A
		0x180715FFC je short 0000000180716023h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180715FFE inc cx		; DEBUG: {Register}/CX {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180716001 cmp cx,r9w		; DEBUG: {Register}/CX {Register}/R9W ||| None | 0 | None ||| N/A | N/A
		0x180716005 jb short 0000000180715FF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180716007 mov r8d,ebx		; DEBUG: {Register}/R8D {Register}/EBX ||| None | 0 | None ||| N/A | N/A
		0x18071600A mov rdx,r10		; DEBUG: {Register}/RDX {Register}/R10 ||| None | 0 | None ||| N/A | N/A
		0x18071600D mov rcx,rsi		; DEBUG: {Register}/RCX {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x180716010 call 00000001800F5B10h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180716015 mov rcx,rsi		; DEBUG: {Register}/RCX {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x180716018 mov rdx,[rax+8]		; DEBUG: {Register}/RDX {Memory}/None ||| RAX | 8 | None ||| N/A | N/A
		0x18071601C call qword ptr [rax]		; DEBUG: {Memory}/None {Register}/None ||| RAX | 0 | None ||| N/A | N/A
		0x18071601E jmp near ptr 0000000180716258h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180716023 add rdx,rdx		; DEBUG: {Register}/RDX {Register}/RDX ||| None | 0 | None ||| N/A | N/A
		0x180716026 lea rax,[r11+128h]		; DEBUG: {Register}/RAX {Memory}/None ||| R11 | 296 | None ||| N/A | N/A
		0x18071602D mov ecx,[r8+rdx*8+8]		; DEBUG: {Register}/ECX {Memory}/None ||| R8 | 8 | RDX ||| N/A | N/A
		0x180716032 add ecx,ebx		; DEBUG: {Register}/ECX {Register}/EBX ||| None | 0 | None ||| N/A | N/A
		0x180716034 shl rcx,4		; DEBUG: {Register}/RCX {Immediate8}/None ||| None | 0 | None ||| N/A | 4
		0x180716038 add rax,rcx		; DEBUG: {Register}/RAX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x18071603B mov rcx,rsi		; DEBUG: {Register}/RCX {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x18071603E mov rdx,[rax+8]		; DEBUG: {Register}/RDX {Memory}/None ||| RAX | 8 | None ||| N/A | N/A
		0x180716042 call qword ptr [rax]		; DEBUG: {Memory}/None {Register}/None ||| RAX | 0 | None ||| N/A | N/A
		0x180716044 jmp near ptr 0000000180716258h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180716049 movzx r8d,word ptr [rbx+48h]		; DEBUG: {Register}/R8D {Memory}/None ||| RBX | 72 | None ||| N/A | N/A
		0x18071604E mov rcx,rsi		; DEBUG: {Register}/RCX {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x180716051 mov rax,[rsi]		; DEBUG: {Register}/RAX {Memory}/None ||| RSI | 0 | None ||| N/A | N/A
		0x180716054 add r8,r8		; DEBUG: {Register}/R8 {Register}/R8 ||| None | 0 | None ||| N/A | N/A
		0x180716057 mov rdx,[rax+r8*8+130h]		; DEBUG: {Register}/RDX {Memory}/None ||| RAX | 304 | R8 ||| N/A | N/A
		0x18071605F call qword ptr [rax+r8*8+128h]		; DEBUG: {Memory}/None {Register}/None ||| RAX | 296 | R8 ||| N/A | N/A
		0x180716067 jmp near ptr 0000000180716258h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18071606C cmp ax,r15w		; DEBUG: {Register}/AX {Register}/R15W ||| None | 0 | None ||| N/A | N/A
		0x180716070 je near ptr 000000018071624Ch		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180716076 test rdi,rdi		; DEBUG: {Register}/RDI {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x180716079 je short 000000018071608Eh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18071607B mov rax,[rdi]		; DEBUG: {Register}/RAX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18071607E test dword ptr [rax+108h],100h		; DEBUG: {Memory}/None {Immediate32}/None ||| RAX | 264 | None ||| N/A | 256
		0x180716088 jne near ptr 000000018071624Ch		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18071608E cmp qword ptr [rbp+18h],0		; DEBUG: {Memory}/None {Immediate8to64}/None ||| RBP | 24 | None ||| N/A | 0
		0x180716093 je near ptr 000000018071624Ch		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180716099 test rdi,rdi		; DEBUG: {Register}/RDI {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x18071609C je near ptr 0000000180715E9Eh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1807160A2 mov rax,[rdi]		; DEBUG: {Register}/RAX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1807160A5 test dword ptr [rax+108h],100h		; DEBUG: {Memory}/None {Immediate32}/None ||| RAX | 264 | None ||| N/A | 256
		0x1807160AF jne near ptr 000000018071625Bh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1807160B5 mov rcx,rbx		; DEBUG: {Register}/RCX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x1807160B8 call 0000000180141DC0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1807160BD mov rcx,rbx		; DEBUG: {Register}/RCX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x1807160C0 test al,al		; DEBUG: {Register}/AL {Register}/AL ||| None | 0 | None ||| N/A | N/A
		0x1807160C2 je near ptr 000000018071618Ah		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1807160C8 call 000000018005DA10h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1807160CD mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1807160D0 call 00000001800F6DD0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1807160D5 movzx ecx,word ptr [rbx+48h]		; DEBUG: {Register}/ECX {Memory}/None ||| RBX | 72 | None ||| N/A | N/A
		0x1807160D9 test al,al		; DEBUG: {Register}/AL {Register}/AL ||| None | 0 | None ||| N/A | N/A
		0x1807160DB je near ptr 0000000180716160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1807160E1 mov r11,[rdi]		; DEBUG: {Register}/R11 {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1807160E4 mov ebp,ecx		; DEBUG: {Register}/EBP {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x1807160E6 mov r10,[rbx+18h]		; DEBUG: {Register}/R10 {Memory}/None ||| RBX | 24 | None ||| N/A | N/A
		0x1807160EA xor ecx,ecx		; DEBUG: {Register}/ECX {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x1807160EC movzx r8d,word ptr [r11+11Eh]		; DEBUG: {Register}/R8D {Memory}/None ||| R11 | 286 | None ||| N/A | N/A
		0x1807160F4 cmp cx,r8w		; DEBUG: {Register}/CX {Register}/R8W ||| None | 0 | None ||| N/A | N/A
		0x1807160F8 jae short 0000000180716118h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1807160FA mov r9,[r11+0B0h]		; DEBUG: {Register}/R9 {Memory}/None ||| R11 | 176 | None ||| N/A | N/A
		0x180716101 movzx edx,cx		; DEBUG: {Register}/EDX {Register}/CX ||| None | 0 | None ||| N/A | N/A
		0x180716104 mov eax,edx		; DEBUG: {Register}/EAX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180716106 add rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180716109 cmp [r9+rax*8],r10		; DEBUG: {Memory}/None {Register}/R10 ||| R9 | 0 | RAX ||| N/A | N/A
		0x18071610D je short 0000000180716146h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18071610F inc cx		; DEBUG: {Register}/CX {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180716112 cmp cx,r8w		; DEBUG: {Register}/CX {Register}/R8W ||| None | 0 | None ||| N/A | N/A
		0x180716116 jb short 0000000180716101h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180716118 mov r8d,ebp		; DEBUG: {Register}/R8D {Register}/EBP ||| None | 0 | None ||| N/A | N/A
		0x18071611B mov rdx,r10		; DEBUG: {Register}/RDX {Register}/R10 ||| None | 0 | None ||| N/A | N/A
		0x18071611E mov rcx,rdi		; DEBUG: {Register}/RCX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x180716121 call 00000001800F5B10h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180716126 mov rcx,[rax+8]		; DEBUG: {Register}/RCX {Memory}/None ||| RAX | 8 | None ||| N/A | N/A
		0x18071612A mov rdx,rbx		; DEBUG: {Register}/RDX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x18071612D call 000000018010EE60h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180716132 mov r8,rax		; DEBUG: {Register}/R8 {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180716135 mov rdx,rsi		; DEBUG: {Register}/RDX {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x180716138 mov rcx,rdi		; DEBUG: {Register}/RCX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x18071613B mov r9,[rax]		; DEBUG: {Register}/R9 {Memory}/None ||| RAX | 0 | None ||| N/A | N/A
		0x18071613E call r9		; DEBUG: {Register}/R9 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180716141 jmp near ptr 0000000180716258h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180716146 add rdx,rdx		; DEBUG: {Register}/RDX {Register}/RDX ||| None | 0 | None ||| N/A | N/A
		0x180716149 lea rax,[r11+128h]		; DEBUG: {Register}/RAX {Memory}/None ||| R11 | 296 | None ||| N/A | N/A
		0x180716150 mov ecx,[r9+rdx*8+8]		; DEBUG: {Register}/ECX {Memory}/None ||| R9 | 8 | RDX ||| N/A | N/A
		0x180716155 add ecx,ebp		; DEBUG: {Register}/ECX {Register}/EBP ||| None | 0 | None ||| N/A | N/A
		0x180716157 shl rcx,4		; DEBUG: {Register}/RCX {Immediate8}/None ||| None | 0 | None ||| N/A | 4
		0x18071615B add rax,rcx		; DEBUG: {Register}/RAX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x18071615E jmp short 0000000180716126h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180716160 mov rax,[rdi]		; DEBUG: {Register}/RAX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x180716163 add rcx,13h		; DEBUG: {Register}/RCX {Immediate8to64}/None ||| None | 0 | None ||| N/A | 19
		0x180716167 add rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x18071616A mov rdx,rbx		; DEBUG: {Register}/RDX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x18071616D mov rcx,[rax+rcx*8]		; DEBUG: {Register}/RCX {Memory}/None ||| RAX | 0 | RCX ||| N/A | N/A
		0x180716171 call 000000018010EE60h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180716176 mov r8,rax		; DEBUG: {Register}/R8 {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180716179 mov rdx,rsi		; DEBUG: {Register}/RDX {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x18071617C mov rcx,rdi		; DEBUG: {Register}/RCX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x18071617F mov r9,[rax]		; DEBUG: {Register}/R9 {Memory}/None ||| RAX | 0 | None ||| N/A | N/A
		0x180716182 call r9		; DEBUG: {Register}/R9 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180716185 jmp near ptr 0000000180716258h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18071618A call 000000018005DA10h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18071618F mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180716192 call 00000001800F6DD0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180716197 test al,al		; DEBUG: {Register}/AL {Register}/AL ||| None | 0 | None ||| N/A | N/A
		0x180716199 je near ptr 0000000180716229h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18071619F mov rcx,rbx		; DEBUG: {Register}/RCX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x1807161A2 call 000000018005DA10h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1807161A7 mov r11,[rdi]		; DEBUG: {Register}/R11 {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1807161AA xor ecx,ecx		; DEBUG: {Register}/ECX {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x1807161AC movzx ebx,word ptr [rbx+48h]		; DEBUG: {Register}/EBX {Memory}/None ||| RBX | 72 | None ||| N/A | N/A
		0x1807161B0 mov r10,rax		; DEBUG: {Register}/R10 {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1807161B3 movzx r9d,word ptr [r11+11Eh]		; DEBUG: {Register}/R9D {Memory}/None ||| R11 | 286 | None ||| N/A | N/A
		0x1807161BB cmp cx,r9w		; DEBUG: {Register}/CX {Register}/R9W ||| None | 0 | None ||| N/A | N/A
		0x1807161BF jae short 00000001807161E7h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1807161C1 mov r8,[r11+0B0h]		; DEBUG: {Register}/R8 {Memory}/None ||| R11 | 176 | None ||| N/A | N/A
		0x1807161C8 nop dword ptr [rax+rax]		; DEBUG: {Memory}/None {Register}/None ||| RAX | 0 | RAX ||| N/A | N/A
		0x1807161D0 movzx edx,cx		; DEBUG: {Register}/EDX {Register}/CX ||| None | 0 | None ||| N/A | N/A
		0x1807161D3 mov eax,edx		; DEBUG: {Register}/EAX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1807161D5 add rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1807161D8 cmp [r8+rax*8],r10		; DEBUG: {Memory}/None {Register}/R10 ||| R8 | 0 | RAX ||| N/A | N/A
		0x1807161DC je short 0000000180716203h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1807161DE inc cx		; DEBUG: {Register}/CX {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1807161E1 cmp cx,r9w		; DEBUG: {Register}/CX {Register}/R9W ||| None | 0 | None ||| N/A | N/A
		0x1807161E5 jb short 00000001807161D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1807161E7 mov r8d,ebx		; DEBUG: {Register}/R8D {Register}/EBX ||| None | 0 | None ||| N/A | N/A
		0x1807161EA mov rdx,r10		; DEBUG: {Register}/RDX {Register}/R10 ||| None | 0 | None ||| N/A | N/A
		0x1807161ED mov rcx,rdi		; DEBUG: {Register}/RCX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x1807161F0 call 00000001800F5B10h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1807161F5 mov rdx,rsi		; DEBUG: {Register}/RDX {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x1807161F8 mov rcx,rdi		; DEBUG: {Register}/RCX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x1807161FB mov r8,[rax+8]		; DEBUG: {Register}/R8 {Memory}/None ||| RAX | 8 | None ||| N/A | N/A
		0x1807161FF call qword ptr [rax]		; DEBUG: {Memory}/None {Register}/None ||| RAX | 0 | None ||| N/A | N/A
		0x180716201 jmp short 0000000180716258h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180716203 add rdx,rdx		; DEBUG: {Register}/RDX {Register}/RDX ||| None | 0 | None ||| N/A | N/A
		0x180716206 lea rax,[r11+128h]		; DEBUG: {Register}/RAX {Memory}/None ||| R11 | 296 | None ||| N/A | N/A
		0x18071620D mov ecx,[r8+rdx*8+8]		; DEBUG: {Register}/ECX {Memory}/None ||| R8 | 8 | RDX ||| N/A | N/A
		0x180716212 mov rdx,rsi		; DEBUG: {Register}/RDX {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x180716215 add ecx,ebx		; DEBUG: {Register}/ECX {Register}/EBX ||| None | 0 | None ||| N/A | N/A
		0x180716217 shl rcx,4		; DEBUG: {Register}/RCX {Immediate8}/None ||| None | 0 | None ||| N/A | 4
		0x18071621B add rax,rcx		; DEBUG: {Register}/RAX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x18071621E mov rcx,rdi		; DEBUG: {Register}/RCX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x180716221 mov r8,[rax+8]		; DEBUG: {Register}/R8 {Memory}/None ||| RAX | 8 | None ||| N/A | N/A
		0x180716225 call qword ptr [rax]		; DEBUG: {Memory}/None {Register}/None ||| RAX | 0 | None ||| N/A | N/A
		0x180716227 jmp short 0000000180716258h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180716229 movzx r9d,word ptr [rbx+48h]		; DEBUG: {Register}/R9D {Memory}/None ||| RBX | 72 | None ||| N/A | N/A
		0x18071622E mov rdx,rsi		; DEBUG: {Register}/RDX {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x180716231 mov rax,[rdi]		; DEBUG: {Register}/RAX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x180716234 add r9,r9		; DEBUG: {Register}/R9 {Register}/R9 ||| None | 0 | None ||| N/A | N/A
		0x180716237 mov rcx,rdi		; DEBUG: {Register}/RCX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x18071623A mov r8,[rax+r9*8+130h]		; DEBUG: {Register}/R8 {Memory}/None ||| RAX | 304 | R9 ||| N/A | N/A
		0x180716242 call qword ptr [rax+r9*8+128h]		; DEBUG: {Memory}/None {Register}/None ||| RAX | 296 | R9 ||| N/A | N/A
		0x18071624A jmp short 0000000180716258h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18071624C mov r8,rbx		; DEBUG: {Register}/R8 {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x18071624F mov rdx,rsi		; DEBUG: {Register}/RDX {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x180716252 mov rcx,rdi		; DEBUG: {Register}/RCX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x180716255 call r14		; DEBUG: {Register}/R14 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180716258 movaps xmm6,xmm0		; DEBUG: {Register}/XMM6 {Register}/XMM0 ||| None | 0 | None ||| N/A | N/A
		0x18071625B mov rbx,[rsp+50h]		; DEBUG: {Register}/RBX {Memory}/None ||| RSP | 80 | None ||| N/A | N/A
		0x180716260 movaps xmm0,xmm6		; DEBUG: {Register}/XMM0 {Register}/XMM6 ||| None | 0 | None ||| N/A | N/A
		0x180716263 movaps xmm6,[rsp+20h]		; DEBUG: {Register}/XMM6 {Memory}/None ||| RSP | 32 | None ||| N/A | N/A
		0x180716268 mov rbp,[rsp+58h]		; DEBUG: {Register}/RBP {Memory}/None ||| RSP | 88 | None ||| N/A | N/A
		0x18071626D mov rsi,[rsp+60h]		; DEBUG: {Register}/RSI {Memory}/None ||| RSP | 96 | None ||| N/A | N/A
		0x180716272 add rsp,30h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 48
		0x180716276 pop r15		; DEBUG: {Register}/R15 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180716278 pop r14		; DEBUG: {Register}/R14 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18071627A pop rdi		; DEBUG: {Register}/RDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18071627B ret		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18071627C int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.Single Cinemachine.CinemachineCore/AxisInputDelegate::Invoke(System.String):
		End of function at 0x18071627D
		Absolute End is at 0x18071627D
		Identified Jump Destination addresses:
			0x180716258
		0x180715E3F: Saves the content of rdi to the stack
		0x180715E40: Saves the content of r14 to the stack
		0x180715E42: Saves the content of r15 to the stack
		0x180715E48: Copies {'this' (function parameter, type Cinemachine.CinemachineCore/AxisInputDelegate)} from rcx into rbp
		0x180715E50: [!] Reads field prev from {'this' (function parameter, type Cinemachine.CinemachineCore/AxisInputDelegate)} and stores in a new local {'prev' (type System.MulticastDelegate)}

		0x180715E54: Copies {'axisName' (function parameter, type System.String)} from rdx into rsi
		0x180715E57: Clears register xmm6, yielding zero-local {'local3' (type System.Int32)}
		0x180715E5A: [!] Compares {'prev' (type System.MulticastDelegate)} and 0
		0x180715E5D: Jumps to 0x180715E64 (which is an if statement's body) if prev equals 0 ;  - Increasing indentation - is standard if, unimportant is False

		0x180715E5F: [!] Calls managed method  on instance {'prev' (type System.MulticastDelegate)} ;  - Failed to resolve any matching method (there are 2 at this address)

		0x180715E64: [!] Reads field method from {'this' (function parameter, type Cinemachine.CinemachineCore/AxisInputDelegate)} and stores in a new local {'method' (type System.IntPtr)}

		0x180715E68: [!] Writes the constant 0xFFFF into operand {'local5' (type System.UInt32)} (type UInt64) in register r15
		0x180715E72: [!] Reads field m_target from {'this' (function parameter, type Cinemachine.CinemachineCore/AxisInputDelegate)} and stores in a new local {'m_target' (type System.Object)}

		0x180715E76: [!] Compares  and {'local5' (type System.UInt32)}
		0x180715E7B: Jumps to 0x180715E85 if  != {'local5' (type System.UInt32)} ;  - This is probably a goto, jumping to 0x180715E85 which is after end of current block @ 0x180715E64 (started at 0x180715E5F)

		0x180715E7D: Copies {'method' (type System.IntPtr)} from rbx into rcx
		0x180715E80: [!] Constructs and throws an exception of kind System.ExecutionEngineException

		0x180715E85: Copies {'method' (type System.IntPtr)} from rbx into rcx
		0x180715E8D: [!] Reads field  from {'method' (type System.IntPtr)} and stores in a new local 

		0x180715E91: [!] Compares {'local8' (type System.ExecutionEngineException)} and 0
		0x180715E93: Jumps to 0x180715EAC if {'local8' (type System.ExecutionEngineException)} != 0 ;  - This is probably a goto, jumping to 0x180715EAC which is after end of current block @ 0x180715E64 (started at 0x180715E5F)

		0x180715E95: [!] Compares {'method' (type System.IntPtr)} and 1
		0x180715E98: Jumps to 0x18071624C if {'method' (type System.IntPtr)} != 1 ;  - This is probably a goto, jumping to 0x18071624C which is after end of current block @ 0x180715E64 (started at 0x180715E5F)

		0x180715E9E: Copies {'method' (type System.IntPtr)} from rbx into rdx
		0x180715EA1: Copies {'axisName' (function parameter, type System.String)} from rsi into rcx
		0x180715EA7: Jumps to 0x180716258 (which is an function-local jump destination)

		0x180715EAC: [!] Reads field  from {'method' (type System.IntPtr)} and stores in a new local 

		0x180715EB0: [!] Compares {'axisName' (function parameter, type System.String)} and 1
		0x180715EB3: Jumps to 0x18071606C if axisName equals 1 ;  - This is probably a goto, jumping to 0x18071606C which is after end of current block @ 0x180715E64 (started at 0x180715E5F)

		0x180715EB9: [!] Compares {'local8' (type System.ExecutionEngineException)} and {'local5' (type System.UInt32)}
		0x180715EBD: Jumps to 0x180715E9E if local8 equals local5 ;  - This is probably a goto, jumping to 0x180715E9E which is after end of current block @ 0x180715E64 (started at 0x180715E5F)

		0x180715EBF: [!] Compares {'m_target' (type System.Object)} and 0
		0x180715EC2: Jumps to 0x180715ED3 if m_target equals 0 ;  - This is probably a goto, jumping to 0x180715ED3 which is after end of current block @ 0x180715E64 (started at 0x180715E5F)

		0x180715EC4: Loads the class pointer from m_target into a constant constant6 in register rax
		0x180715EC7: Compares "{il2cpp field on {'constant6' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)}, offset 0x108}" and 256
		0x180715ED1: Jumps to 0x180715E9E if "{il2cpp field on {'constant6' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)}, offset 0x108}" != 256 ;  - This is probably a goto, jumping to 0x180715E9E which is after end of current block @ 0x180715E64 (started at 0x180715E5F)

		0x180715ED3: [!] Compares  and 0
		0x180715ED8: Jumps to 0x180715E9E if  equals 0 ;  - This is probably a goto, jumping to 0x180715E9E which is after end of current block @ 0x180715E64 (started at 0x180715E5F)

		0x180715EDA: [!] Compares {'m_target' (type System.Object)} and 0
		0x180715EDD: Jumps to 0x180715EF2 if m_target equals 0 ;  - This is probably a goto, jumping to 0x180715EF2 which is after end of current block @ 0x180715E64 (started at 0x180715E5F)

		0x180715EDF: Loads the class pointer from m_target into a constant constant11 in register rax
		0x180715EE2: Compares "{il2cpp field on {'constant11' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)}, offset 0x108}" and 256
		0x180715EEC: Jumps to 0x18071625B if "{il2cpp field on {'constant11' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)}, offset 0x108}" != 256 ;  - This is probably a goto, jumping to 0x18071625B which is after end of current block @ 0x180715E64 (started at 0x180715E5F)

		0x180715EF2: Copies {'method' (type System.IntPtr)} from rbx into rcx
		0x180715EFA: Copies {'method' (type System.IntPtr)} from rbx into rcx
		0x180715EFD: [!] Compares {'constant11' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} and 0
		0x180715EFF: Jumps to 0x180715FAC if constant11 equals 0 ;  - This is probably a goto, jumping to 0x180715FAC which is after end of current block @ 0x180715E64 (started at 0x180715E5F)

		0x180715F05: [!] Calls managed method  on instance {'method' (type System.IntPtr)} ;  - Failed to resolve any matching method (there are 3 at this address)

		0x180715F0A: Copies {'constant11' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} from rax into rcx
		0x180715F12: [!] Reads field  from {'method' (type System.IntPtr)} and stores in a new local 

		0x180715F16: [!] Compares {'constant11' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} and 0
		0x180715F18: Jumps to 0x180715F9C if constant11 equals 0 ;  - This is probably a goto, jumping to 0x180715F9C which is after end of current block @ 0x180715E64 (started at 0x180715E5F)

		0x180715F1E: Loads the class pointer from axisName into a constant constant16 in register r11
		0x180715F21: Copies {'constant11' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} from rcx into rdi
		0x180715F23: [!] Reads field  from {'method' (type System.IntPtr)} and stores in a new local 

		0x180715F27: Clears register rcx, yielding zero-local {'local9' (type System.Int32)}
		0x180715F29: [!!] Reads value at unknown offset 286 (0x11E) on a klass pointer
		0x180715F31: [!] Compares {'local9' (type System.Int32)} and {'il2cppMethodInfo' (type )}
		0x180715F35: Jumps to 0x180715F57 if {'local9' (type System.Int32)} is greater than or equal to {'il2cppMethodInfo' (type )} ;  - This is probably a goto, jumping to 0x180715F57 which is after end of current block @ 0x180715E64 (started at 0x180715E5F)

		0x180715F37: Loads the interface offsets for the class pointer to System.String, which contains 7 offsets, and stores them as a constant constant17 in reg r9
		0x180715F40: Copies {'local9' (type System.Int32)} from rcx into rdx
		0x180715F43: Copies {'local9' (type System.Int32)} from rdx into rax
		0x180715F45: [!] Adds {'local9' (type System.Int32)} and {'local9' (type System.Int32)} and stores the result in {'local9' (type System.Int32)}
		0x180715F4C: Jumps to 0x180715F82 if local9 equals il2cppMethodInfo ;  - This is probably a goto, jumping to 0x180715F82 which is after end of current block @ 0x180715E64 (started at 0x180715E5F)

		0x180715F4E: [!] Adds 1 to the value {'local9' (type System.Int32)}, stored in rcx
		0x180715F51: [!] Compares {'local9' (type System.Int32)} and {'il2cppMethodInfo' (type )}
		0x180715F57: Copies {'constant11' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} from rdi into r8
		0x180715F5D: Copies {'axisName' (function parameter, type System.String)} from rsi into rcx

		Potential Loop Start (0x180715F65):
		0x180715F65: [!] Reads field  from {'local9' (type System.Int32)} and stores in a new local 


		Potential Loop Start (0x180715F69):
		0x180715F69: Copies {'method' (type System.IntPtr)} from rbx into rdx
		0x180715F71: Copies {'local9' (type System.Int32)} from rax into rdx
		0x180715F74: Copies {'axisName' (function parameter, type System.String)} from rsi into rcx
		0x180715F77: Loads the class pointer from local9 into a constant constant18 in register r8
		0x180715F7D: Jumps to 0x180716258 (which is an function-local jump destination)

		0x180715F82: [!] Adds {'local9' (type System.Int32)} and {'local9' (type System.Int32)} and stores the result in {'local9' (type System.Int32)}
		0x180715F91: [!] Adds {'axisName' (function parameter, type System.String)} and {'constant11' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} and stores the result in {'axisName' (function parameter, type System.String)}
		0x180715F97: [!] Adds {'local9' (type System.Int32)} and {'axisName' (function parameter, type System.String)} and stores the result in {'local9' (type System.Int32)}
		0x180715F9A: Jumps to 0x180715F65 - which is still in this function, but further up. Probably indicative that this is a loop.
		0x180715F9C: Loads the class pointer from axisName into a constant constant19 in register rax
		0x180715F9F: Loads the pointer to the field  on {'axisName' (function parameter, type System.String)} into register rcx
		0x180715FA3: [!] Adds {'axisName' (function parameter, type System.String)} and {'axisName' (function parameter, type System.String)} and stores the result in {'axisName' (function parameter, type System.String)}
		0x180715FA6: [!!] Reads value at unknown offset 0 (0x0) on a klass pointer
		0x180715FAA: Jumps to 0x180715F69 - which is still in this function, but further up. Probably indicative that this is a loop.
		0x180715FAC: [!] Calls managed method  on instance {'axisName' (function parameter, type System.String)} ;  - Failed to resolve any matching method (there are 3 at this address)

		0x180715FB1: Copies {'constant19' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} from rax into rcx
		0x180715FB9: [!] Compares {'constant19' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} and 0
		0x180715FBB: Jumps to 0x180716049 if constant19 equals 0 ;  - This is probably a goto, jumping to 0x180716049 which is after end of current block @ 0x180715E64 (started at 0x180715E5F)

		0x180715FC1: Copies {'method' (type System.IntPtr)} from rbx into rcx
		0x180715FC4: [!] Calls managed method  on instance {'method' (type System.IntPtr)} ;  - Failed to resolve any matching method (there are 3 at this address)

		0x180715FC9: Loads the class pointer from axisName into a constant constant21 in register r11
		0x180715FCC: Clears register rcx, yielding zero-local {'local10' (type System.Int32)}
		0x180715FCE: [!] Reads field  from {'method' (type System.IntPtr)} and stores in a new local 

		0x180715FD2: Copies {'constant19' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} from rax into r10
		0x180715FD5: [!!] Reads value at unknown offset 286 (0x11E) on a klass pointer
		0x180715FDD: [!] Compares {'local10' (type System.Int32)} and {'constant17' (constant value of type LibCpp2IL.Metadata.Il2CppInterfaceOffset[])}
		0x180715FE1: Jumps to 0x180716007 if {'local10' (type System.Int32)} is greater than or equal to {'constant17' (constant value of type LibCpp2IL.Metadata.Il2CppInterfaceOffset[])} ;  - This is probably a goto, jumping to 0x180716007 which is after end of current block @ 0x180715E64 (started at 0x180715E5F)

		0x180715FE3: Loads the interface offsets for the class pointer to System.String, which contains 7 offsets, and stores them as a constant constant22 in reg r8
		0x180715FF0: Copies {'local10' (type System.Int32)} from rcx into rdx
		0x180715FF3: Copies {'local10' (type System.Int32)} from rdx into rax
		0x180715FF5: [!] Adds {'local10' (type System.Int32)} and {'local10' (type System.Int32)} and stores the result in {'local10' (type System.Int32)}
		0x180715FFC: Jumps to 0x180716023 if local10 equals constant17 ;  - This is probably a goto, jumping to 0x180716023 which is after end of current block @ 0x180715E64 (started at 0x180715E5F)

		0x180715FFE: [!] Adds 1 to the value {'local10' (type System.Int32)}, stored in rcx
		0x180716001: [!] Compares {'local10' (type System.Int32)} and {'constant17' (constant value of type LibCpp2IL.Metadata.Il2CppInterfaceOffset[])}
		0x180716007: Copies {'method' (type System.IntPtr)} from rbx into r8
		0x18071600A: Copies {'constant19' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} from r10 into rdx
		0x18071600D: Copies {'axisName' (function parameter, type System.String)} from rsi into rcx
		0x180716015: Copies {'axisName' (function parameter, type System.String)} from rsi into rcx
		0x180716018: [!] Reads field  from {'local10' (type System.Int32)} and stores in a new local 

		0x18071601E: Jumps to 0x180716258 (which is an function-local jump destination)

		0x180716023: [!] Adds  and {'constant19' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} and stores the result in 
		0x180716032: [!] Adds {'axisName' (function parameter, type System.String)} and {'method' (type System.IntPtr)} and stores the result in {'axisName' (function parameter, type System.String)}
		0x180716038: [!] Adds {'local10' (type System.Int32)} and {'axisName' (function parameter, type System.String)} and stores the result in {'local10' (type System.Int32)}
		0x18071603B: Copies {'axisName' (function parameter, type System.String)} from rsi into rcx
		0x18071603E: [!] Reads field  from {'local10' (type System.Int32)} and stores in a new local 

		0x180716044: Jumps to 0x180716258 (which is an function-local jump destination)

		0x180716049: [!] Reads field  from {'method' (type System.IntPtr)} and stores in a new local 

		0x18071604E: Copies {'axisName' (function parameter, type System.String)} from rsi into rcx
		0x180716051: Loads the class pointer from axisName into a constant constant23 in register rax
		0x180716054: [!] Adds {'method' (type System.IntPtr)} and {'method' (type System.IntPtr)} and stores the result in {'method' (type System.IntPtr)}
		0x180716057: Loads the pointer to the implementation of virtual function  specific to System.String from the class pointer in rax, slot -1 (from memory offset 304) and stores in constant 
		0x180716067: Jumps to 0x180716258 (which is an function-local jump destination)

		0x18071606C: [!] Compares {'constant23' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} and {'local5' (type System.UInt32)}
		0x180716070: Jumps to 0x18071624C if constant23 equals local5 ;  - This is probably a goto, jumping to 0x18071624C which is after end of current block @ 0x180715E64 (started at 0x180715E5F)

		0x180716076: [!] Compares {'constant11' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} and 0
		0x180716079: Jumps to 0x18071608E if constant11 equals 0 ;  - This is probably a goto, jumping to 0x18071608E which is after end of current block @ 0x180715E64 (started at 0x180715E5F)

		0x18071607B: [!!] Reads value at unknown offset 0 (0x0) on a klass pointer
		0x18071607E: Compares "{il2cpp field on {'constant23' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)}, offset 0x108}" and 256
		0x180716088: Jumps to 0x18071624C if "{il2cpp field on {'constant23' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)}, offset 0x108}" != 256 ;  - This is probably a goto, jumping to 0x18071624C which is after end of current block @ 0x180715E64 (started at 0x180715E5F)

		0x18071608E: [!] Compares  and 0
		0x180716093: Jumps to 0x18071624C if  equals 0 ;  - This is probably a goto, jumping to 0x18071624C which is after end of current block @ 0x180715E64 (started at 0x180715E5F)

		0x180716099: [!] Compares {'constant11' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} and 0
		0x18071609C: Jumps to 0x180715E9E if constant11 equals 0 ;  - This is probably a goto, jumping to 0x180715E9E which is after end of current block @ 0x180715E64 (started at 0x180715E5F)

		0x1807160A2: [!!] Reads value at unknown offset 0 (0x0) on a klass pointer
		0x1807160A5: Compares "{il2cpp field on {'constant23' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)}, offset 0x108}" and 256
		0x1807160AF: Jumps to 0x18071625B if "{il2cpp field on {'constant23' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)}, offset 0x108}" != 256 ;  - This is probably a goto, jumping to 0x18071625B which is after end of current block @ 0x180715E64 (started at 0x180715E5F)

		0x1807160B5: Copies {'method' (type System.IntPtr)} from rbx into rcx
		0x1807160BD: Copies {'method' (type System.IntPtr)} from rbx into rcx
		0x1807160C0: [!] Compares {'constant23' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} and 0
		0x1807160C2: Jumps to 0x18071618A if constant23 equals 0 ;  - This is probably a goto, jumping to 0x18071618A which is after end of current block @ 0x180715E64 (started at 0x180715E5F)

		0x1807160C8: [!] Calls managed method  on instance {'method' (type System.IntPtr)} ;  - Failed to resolve any matching method (there are 3 at this address)

		0x1807160CD: Copies {'constant23' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} from rax into rcx
		0x1807160D5: [!] Reads field  from {'method' (type System.IntPtr)} and stores in a new local 

		0x1807160D9: [!] Compares {'constant23' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} and 0
		0x1807160DB: Jumps to 0x180716160 if constant23 equals 0 ;  - This is probably a goto, jumping to 0x180716160 which is after end of current block @ 0x180715E64 (started at 0x180715E5F)

		0x1807160E1: [!!] Reads value at unknown offset 0 (0x0) on a klass pointer
		0x1807160E4: Copies {'constant23' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} from rcx into rbp
		0x1807160E6: [!] Reads field  from {'method' (type System.IntPtr)} and stores in a new local 

		0x1807160EA: Clears register rcx, yielding zero-local {'local11' (type System.Int32)}
		0x1807160EC: [!!] Reads value at unknown offset 286 (0x11E) on a klass pointer
		0x1807160F4: [!] Compares {'local11' (type System.Int32)} and {'method' (type System.IntPtr)}
		0x1807160F8: Jumps to 0x180716118 if {'local11' (type System.Int32)} is greater than or equal to {'method' (type System.IntPtr)} ;  - This is probably a goto, jumping to 0x180716118 which is after end of current block @ 0x180715E64 (started at 0x180715E5F)

		0x1807160FA: Loads the interface offsets for the class pointer to System.String, which contains 7 offsets, and stores them as a constant constant33 in reg r9
		0x180716101: Copies {'local11' (type System.Int32)} from rcx into rdx
		0x180716104: Copies {'local11' (type System.Int32)} from rdx into rax
		0x180716106: [!] Adds {'local11' (type System.Int32)} and {'local11' (type System.Int32)} and stores the result in {'local11' (type System.Int32)}
		0x18071610D: Jumps to 0x180716146 if local11 equals method ;  - This is probably a goto, jumping to 0x180716146 which is after end of current block @ 0x180715E64 (started at 0x180715E5F)

		0x18071610F: [!] Adds 1 to the value {'local11' (type System.Int32)}, stored in rcx
		0x180716112: [!] Compares {'local11' (type System.Int32)} and {'method' (type System.IntPtr)}
		0x180716118: Copies {'constant23' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} from rbp into r8
		0x18071611B: Copies {'constant19' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} from r10 into rdx
		0x18071611E: Copies {'constant11' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} from rdi into rcx

		Potential Loop Start (0x180716126):
		0x180716126: [!] Reads field  from {'local11' (type System.Int32)} and stores in a new local 

		0x18071612A: Copies {'method' (type System.IntPtr)} from rbx into rdx
		0x180716132: Copies {'local11' (type System.Int32)} from rax into r8
		0x180716135: Copies {'axisName' (function parameter, type System.String)} from rsi into rdx
		0x180716138: Copies {'constant11' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} from rdi into rcx
		0x18071613B: Loads the class pointer from local11 into a constant constant34 in register r9
		0x180716141: Jumps to 0x180716258 (which is an function-local jump destination)

		0x180716146: [!] Adds {'axisName' (function parameter, type System.String)} and {'axisName' (function parameter, type System.String)} and stores the result in {'axisName' (function parameter, type System.String)}
		0x180716150: [!!] Reads value at unknown offset 8 (0x8) on a klass pointer
		0x180716155: [!] Adds  and {'constant23' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} and stores the result in 
		0x18071615B: [!] Adds {'local11' (type System.Int32)} and {'constant11' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} and stores the result in {'local11' (type System.Int32)}
		0x18071615E: Jumps to 0x180716126 - which is still in this function, but further up. Probably indicative that this is a loop.
		0x180716160: [!!] Reads value at unknown offset 0 (0x0) on a klass pointer
		0x180716163: [!] Adds 19 to the value , stored in rcx
		0x180716167: [!] Adds  and {'constant11' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} and stores the result in 
		0x18071616A: Copies {'method' (type System.IntPtr)} from rbx into rdx
		0x180716176: Copies {'local11' (type System.Int32)} from rax into r8
		0x180716179: Copies {'axisName' (function parameter, type System.String)} from rsi into rdx
		0x18071617C: Copies {'constant11' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} from rdi into rcx
		0x18071617F: Loads the class pointer from local11 into a constant constant35 in register r9
		0x180716185: Jumps to 0x180716258 (which is an function-local jump destination)

		0x18071618A: [!] Calls managed method  on instance  ;  - Failed to resolve any matching method (there are 3 at this address)

		0x18071618F: Copies {'local11' (type System.Int32)} from rax into rcx
		0x180716197: [!] Compares {'local11' (type System.Int32)} and 0
		0x180716199: Jumps to 0x180716229 if local11 equals 0 ;  - This is probably a goto, jumping to 0x180716229 which is after end of current block @ 0x180715E64 (started at 0x180715E5F)

		0x18071619F: Copies {'method' (type System.IntPtr)} from rbx into rcx
		0x1807161A2: [!] Calls managed method  on instance {'method' (type System.IntPtr)} ;  - Failed to resolve any matching method (there are 3 at this address)

		0x1807161A7: [!!] Reads value at unknown offset 0 (0x0) on a klass pointer
		0x1807161AA: Clears register rcx, yielding zero-local {'local12' (type System.Int32)}
		0x1807161AC: [!] Reads field  from {'method' (type System.IntPtr)} and stores in a new local 

		0x1807161B0: Copies {'local11' (type System.Int32)} from rax into r10
		0x1807161B3: [!!] Reads value at unknown offset 286 (0x11E) on a klass pointer
		0x1807161BB: [!] Compares {'local12' (type System.Int32)} and {'constant35' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)}
		0x1807161BF: Jumps to 0x1807161E7 if {'local12' (type System.Int32)} is greater than or equal to {'constant35' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} ;  - This is probably a goto, jumping to 0x1807161E7 which is after end of current block @ 0x180715E64 (started at 0x180715E5F)

		0x1807161C1: Loads the interface offsets for the class pointer to System.String, which contains 7 offsets, and stores them as a constant constant37 in reg r8
		0x1807161D0: Copies {'local12' (type System.Int32)} from rcx into rdx
		0x1807161D3: Copies {'local12' (type System.Int32)} from rdx into rax
		0x1807161D5: [!] Adds {'local12' (type System.Int32)} and {'local12' (type System.Int32)} and stores the result in {'local12' (type System.Int32)}
		0x1807161DC: Jumps to 0x180716203 if local12 equals constant35 ;  - This is probably a goto, jumping to 0x180716203 which is after end of current block @ 0x180715E64 (started at 0x180715E5F)

		0x1807161DE: [!] Adds 1 to the value {'local12' (type System.Int32)}, stored in rcx
		0x1807161E1: [!] Compares {'local12' (type System.Int32)} and {'constant35' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)}
		0x1807161E7: Copies {'method' (type System.IntPtr)} from rbx into r8
		0x1807161EA: Copies {'local11' (type System.Int32)} from r10 into rdx
		0x1807161ED: Copies {'constant11' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} from rdi into rcx
		0x1807161F5: Copies {'axisName' (function parameter, type System.String)} from rsi into rdx
		0x1807161F8: Copies {'constant11' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} from rdi into rcx
		0x1807161FB: [!] Reads field  from {'local12' (type System.Int32)} and stores in a new local 

		0x180716201: Jumps to 0x180716258 (which is an function-local jump destination)

		0x180716203: [!] Adds {'axisName' (function parameter, type System.String)} and {'axisName' (function parameter, type System.String)} and stores the result in {'axisName' (function parameter, type System.String)}
		0x180716212: Copies {'axisName' (function parameter, type System.String)} from rsi into rdx
		0x180716215: [!] Adds  and {'method' (type System.IntPtr)} and stores the result in 
		0x18071621B: [!] Adds {'local12' (type System.Int32)} and {'constant11' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} and stores the result in {'local12' (type System.Int32)}
		0x18071621E: Copies {'constant11' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} from rdi into rcx
		0x180716221: [!] Reads field  from {'local12' (type System.Int32)} and stores in a new local 

		0x180716227: Jumps to 0x180716258 (which is an function-local jump destination)

		0x180716229: [!] Reads field  from {'method' (type System.IntPtr)} and stores in a new local 

		0x18071622E: Copies {'axisName' (function parameter, type System.String)} from rsi into rdx
		0x180716231: [!!] Reads value at unknown offset 0 (0x0) on a klass pointer
		0x180716234: [!] Adds  and {'constant35' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} and stores the result in 
		0x180716237: Copies {'constant11' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} from rdi into rcx
		0x18071624A: Jumps to 0x180716258 (which is an function-local jump destination)

		0x18071624C: Copies {'method' (type System.IntPtr)} from rbx into r8
		0x18071624F: Copies {'axisName' (function parameter, type System.String)} from rsi into rdx
		0x180716252: Copies {'constant11' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} from rdi into rcx

		Jump Destination (0x180716258):
		0x18071625B: Reads unknown value in stack, offset 80 (0x50) and stores the pointer in register rbx as new constant constant38
		0x180716260: Copies {'local3' (type System.Int32)} from xmm6 into xmm0
		0x180716263: Reads unknown value in stack, offset 32 (0x20) and stores the pointer in register xmm6 as new constant constant39
		0x180716268: Reads unknown value in stack, offset 88 (0x58) and stores the pointer in register rbp as new constant constant40
		0x18071626D: Reads unknown value in stack, offset 96 (0x60) and stores the pointer in register rsi as new constant constant41
		0x18071627B: [!] Returns {'local3' (type System.Int32)} from the function




	Generated Pseudocode:

	Declaring Type: Cinemachine.CinemachineCore/AxisInputDelegate
	System.Single Invoke(System.String axisName)
		System.MulticastDelegate prev = this.prev
		ulong local3 = 0

		if (prev != 0)

		    [instruction error - managed method being called is null]
		endif
        
		System.IntPtr method = this.method
		System.Int64 local5 = 0xFFFF
		System.Object m_target = this.m_target

		if ( != local5)
            goto INSN_180715E85
        endif
		throw new System.ExecutionEngineException()

		INSN_180715E85:
		  = method.

		if (local8 != 0)
            goto INSN_180715EAC
        endif

		if (method != 1)
            goto INSN_18071624C
        endif

		INSN_180715EAC:
		  = method.

		if (axisName == 1)
            goto INSN_18071606C
        endif

		if (local8 == local5)
            goto INSN_180715E9E
        endif

		if (m_target == 0)
            goto INSN_180715ED3
        endif

		INSN_180715ED3:

		if ( == 0)
            goto INSN_180715E9E
        endif

		if (m_target == 0)
            goto INSN_180715EF2
        endif

		INSN_180715EF2:

		if (constant11 == 0)
            goto INSN_180715FAC
        endif

		[instruction error - managed method being called is null]
		  = method.

		if (constant11 == 0)
            goto INSN_180715F9C
        endif
		  = method.
		ulong local9 = 0
		//UNKNOWN CLASS OFFSET READ HERE

		if (local9 >= il2cppMethodInfo)
            goto INSN_180715F57
        endif
		local9 += local9

		if (local9 == il2cppMethodInfo)
            goto INSN_180715F82
        endif
		local9 += 1

		INSN_180715F57:
		  = local9.

		INSN_180715F82:
		local9 += local9
		axisName += constant11
		local9 += axisName

		INSN_180715F9C:
		axisName += axisName
		//UNKNOWN CLASS OFFSET READ HERE

		INSN_180715FAC:

		[instruction error - managed method being called is null]

		if (constant19 == 0)
            goto INSN_180716049
        endif

		[instruction error - managed method being called is null]
		ulong local10 = 0
		  = method.
		//UNKNOWN CLASS OFFSET READ HERE

		if (local10 >= constant17)
            goto INSN_180716007
        endif
		local10 += local10

		if (local10 == constant17)
            goto INSN_180716023
        endif
		local10 += 1

		INSN_180716007:
		  = local10.

		INSN_180716023:
		 += constant19
		axisName += method
		local10 += axisName
		  = local10.

		INSN_180716049:
		  = method.
		method += method

		INSN_18071606C:

		if (constant23 == local5)
            goto INSN_18071624C
        endif

		if (constant11 == 0)
            goto INSN_18071608E
        endif
		//UNKNOWN CLASS OFFSET READ HERE

		INSN_18071608E:

		if ( == 0)
            goto INSN_18071624C
        endif

		if (constant11 == 0)
            goto INSN_180715E9E
        endif
		//UNKNOWN CLASS OFFSET READ HERE

		if (constant23 == 0)
            goto INSN_18071618A
        endif

		[instruction error - managed method being called is null]
		  = method.

		if (constant23 == 0)
            goto INSN_180716160
        endif
		//UNKNOWN CLASS OFFSET READ HERE
		  = method.
		ulong local11 = 0
		//UNKNOWN CLASS OFFSET READ HERE

		if (local11 >= method)
            goto INSN_180716118
        endif
		local11 += local11

		if (local11 == method)
            goto INSN_180716146
        endif
		local11 += 1

		INSN_180716118:
		  = local11.

		INSN_180716146:
		axisName += axisName
		//UNKNOWN CLASS OFFSET READ HERE
		 += constant23
		local11 += constant11

		INSN_180716160:
		//UNKNOWN CLASS OFFSET READ HERE
		 += 19
		 += constant11

		INSN_18071618A:

		[instruction error - managed method being called is null]

		if (local11 == 0)
            goto INSN_180716229
        endif

		[instruction error - managed method being called is null]
		//UNKNOWN CLASS OFFSET READ HERE
		ulong local12 = 0
		  = method.
		//UNKNOWN CLASS OFFSET READ HERE

		if (local12 >= constant35)
            goto INSN_1807161E7
        endif
		local12 += local12

		if (local12 == constant35)
            goto INSN_180716203
        endif
		local12 += 1

		INSN_1807161E7:
		  = local12.

		INSN_180716203:
		axisName += axisName
		 += method
		local12 += constant11
		  = local12.

		INSN_180716229:
		  = method.
		//UNKNOWN CLASS OFFSET READ HERE
		 += constant35

		INSN_18071624C:
		return local3


Generated IL:
	Action of type Cpp2IL.Core.Analysis.Actions.x86.Important.CallManagedFunctionAction at (0x180715E5F) is corrupt (Don't know what method is being called) and cannot be created as IL. Aborting here.


Method: System.IAsyncResult Cinemachine.CinemachineCore/AxisInputDelegate::BeginInvoke(System.String,System.AsyncCallback,System.Object):	Method Body (x86 ASM):
		0x180335000 sub rsp,38h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 56
		0x180335004 mov [rsp+20h],rdx		; DEBUG: {Memory}/None {Register}/RDX ||| RSP | 32 | None ||| N/A | N/A
		0x180335009 lea rdx,[rsp+20h]		; DEBUG: {Register}/RDX {Memory}/None ||| RSP | 32 | None ||| N/A | N/A
		0x18033500E mov qword ptr [rsp+28h],0		; DEBUG: {Memory}/None {Immediate32to64}/None ||| RSP | 40 | None ||| N/A | 0
		0x180335017 call 000000018010D170h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18033501C add rsp,38h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 56
		0x180335020 ret		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180335021 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.IAsyncResult Cinemachine.CinemachineCore/AxisInputDelegate::BeginInvoke(System.String,System.AsyncCallback,System.Object):
		End of function at 0x180335022
		Absolute End is at 0x180335022
		Identified Jump Destination addresses:

		0x180335004: Moves axisName (type System.String) from register rdx to the stack at offset 32 (0x20)
		0x180335009: Loads a pointer to stack offset 0x20 into register rdx as new constant constant1
		0x18033500E: Moves 0 (immediate ulong value) to the stack at offset 40 as a new local local4
		0x180335020: [!] Returns  from the function




	Generated Pseudocode:

	Declaring Type: Cinemachine.CinemachineCore/AxisInputDelegate
	System.IAsyncResult BeginInvoke(System.String axisName, System.AsyncCallback callback, System.Object object)
		return 


Generated IL:
	Action of type Cpp2IL.Core.Analysis.Actions.x86.Important.ReturnFromFunctionAction at (0x180335020) is corrupt (Return value is missing) and cannot be created as IL. Aborting here.


Method: System.Single Cinemachine.CinemachineCore/AxisInputDelegate::EndInvoke(System.IAsyncResult):	Method Body (x86 ASM):
		0x180715E00 sub rsp,28h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 40
		0x180715E04 mov rcx,rdx		; DEBUG: {Register}/RCX {Register}/RDX ||| None | 0 | None ||| N/A | N/A
		0x180715E07 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180715E09 call 000000018010DD90h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180715E0E test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180715E11 je short 0000000180715E24h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180715E13 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180715E16 call 000000018013ADF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180715E1B movss xmm0,dword ptr [rax]		; DEBUG: {Register}/XMM0 {Memory}/None ||| RAX | 0 | None ||| N/A | N/A
		0x180715E1F add rsp,28h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 40
		0x180715E23 ret		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180715E24 xor ecx,ecx		; DEBUG: {Register}/ECX {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x180715E26 call 000000018012BDA0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180715E2B int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.Single Cinemachine.CinemachineCore/AxisInputDelegate::EndInvoke(System.IAsyncResult):
		End of function at 0x180715E2C
		Absolute End is at 0x180715E2C
		Identified Jump Destination addresses:

		0x180715E04: Copies {'result' (function parameter, type System.IAsyncResult)} from rdx into rcx
		0x180715E0E: [!] Compares  and 0
		0x180715E11: Jumps to 0x180715E24 (which throws a NRE) if  equals 0. Implicitly present in managed code, so ignored here.
		0x180715E1B: Dereference and moves local result to local3
		0x180715E23: [!] Returns {'local3' (type System.IAsyncResult)} from the function

		0x180715E26: [!] Constructs and throws an exception of kind System.NullReferenceException




	Generated Pseudocode:

	Declaring Type: Cinemachine.CinemachineCore/AxisInputDelegate
	System.Single EndInvoke(System.IAsyncResult result)
		local3 = result
		return local3
		throw new System.NullReferenceException()


Generated IL:
	Action of type Cpp2IL.Core.Analysis.Actions.x86.ReadLocalPointerToRegAction at (0x180715E1B) is corrupt (Local being dereferenced was stripped) and cannot be created as IL. Aborting here.


