Type: BoatAlligatorManager

Method: System.Void BoatAlligatorManager::.ctor():	Method Body (x86 ASM):
		0x180203000 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180203002 jmp near ptr 0000000180CE1E90h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180203007 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.Void BoatAlligatorManager::.ctor():
		End of function at 0x180203008
		Absolute End is at 0x180203008
		Identified Jump Destination addresses:

		0x180203002: [!] Calls managed method System.Void UnityEngine.MonoBehaviour::.ctor() on instance {'this' (function parameter, type BoatAlligatorManager)}

		0x180203002: [!] Returns from the function




	Generated Pseudocode:

	Declaring Type: BoatAlligatorManager
	System.Void .ctor()

		base..ctor()
		return


Generated IL:
	IL_0000: ldarg.0
	IL_0001: call System.Void UnityEngine.MonoBehaviour::.ctor()
	IL_0006: ret
	

Method: System.Void BoatAlligatorManager::Init(UnityEngine.GameObject):	Method Body (x86 ASM):
		0x1804DBD50 mov [rsp+20h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RSP | 32 | None ||| N/A | N/A
		0x1804DBD55 push rbp		; DEBUG: {Register}/RBP {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1804DBD56 sub rsp,20h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 32
		0x1804DBD5A cmp byte ptr [18183E7DFh],0		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6467872735 | None ||| N/A | 0
		0x1804DBD61 mov rbx,rdx		; DEBUG: {Register}/RBX {Register}/RDX ||| None | 0 | None ||| N/A | N/A
		0x1804DBD64 mov rbp,rcx		; DEBUG: {Register}/RBP {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x1804DBD67 jne short 00000001804DBD7Bh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DBD69 mov ecx,[181514688h]		; DEBUG: {Register}/ECX {Memory}/None ||| RIP | 6464554632 | None ||| N/A | N/A
		0x1804DBD6F call 00000001800FEB90h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DBD74 mov byte ptr [18183E7DFh],1		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6467872735 | None ||| N/A | 1
		0x1804DBD7B mov [rsp+30h],rsi		; DEBUG: {Memory}/None {Register}/RSI ||| RSP | 48 | None ||| N/A | N/A
		0x1804DBD80 mov [rsp+38h],rdi		; DEBUG: {Memory}/None {Register}/RDI ||| RSP | 56 | None ||| N/A | N/A
		0x1804DBD85 mov [rsp+40h],r14		; DEBUG: {Memory}/None {Register}/R14 ||| RSP | 64 | None ||| N/A | N/A
		0x1804DBD8A test rbx,rbx		; DEBUG: {Register}/RBX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x1804DBD8D je near ptr 00000001804DBEB4h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DBD93 mov rdx,[18186FC08h]		; DEBUG: {Register}/RDX {Memory}/None ||| RIP | 6468074504 | None ||| N/A | N/A
		0x1804DBD9A mov rcx,rbx		; DEBUG: {Register}/RCX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x1804DBD9D call 000000018090AEA0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DBDA2 mov [rbp+38h],rax		; DEBUG: {Memory}/None {Register}/RAX ||| RBP | 56 | None ||| N/A | N/A
		0x1804DBDA6 mov rax,[rbp+30h]		; DEBUG: {Register}/RAX {Memory}/None ||| RBP | 48 | None ||| N/A | N/A
		0x1804DBDAA test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1804DBDAD je near ptr 00000001804DBEB4h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DBDB3 mov edx,[rax+18h]		; DEBUG: {Register}/EDX {Memory}/None ||| RAX | 24 | None ||| N/A | N/A
		0x1804DBDB6 mov rcx,[18189AAC0h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468250304 | None ||| N/A | N/A
		0x1804DBDBD call 0000000180141320h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DBDC2 xor ecx,ecx		; DEBUG: {Register}/ECX {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x1804DBDC4 mov [rbp+40h],rax		; DEBUG: {Memory}/None {Register}/RAX ||| RBP | 64 | None ||| N/A | N/A
		0x1804DBDC8 xor edi,edi		; DEBUG: {Register}/EDI {Register}/EDI ||| None | 0 | None ||| N/A | N/A
		0x1804DBDCA test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1804DBDCD je near ptr 00000001804DBEB4h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DBDD3 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1804DBDD6 cmp ecx,[rax+18h]		; DEBUG: {Register}/ECX {Memory}/None ||| RAX | 24 | None ||| N/A | N/A
		0x1804DBDD9 jge near ptr 00000001804DBE93h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DBDDF mov rax,[rbp+30h]		; DEBUG: {Register}/RAX {Memory}/None ||| RBP | 48 | None ||| N/A | N/A
		0x1804DBDE3 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1804DBDE6 je near ptr 00000001804DBEB4h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DBDEC movsxd rcx,edi		; DEBUG: {Register}/RCX {Register}/EDI ||| None | 0 | None ||| N/A | N/A
		0x1804DBDEF cmp edi,[rax+18h]		; DEBUG: {Register}/EDI {Memory}/None ||| RAX | 24 | None ||| N/A | N/A
		0x1804DBDF2 jae near ptr 00000001804DBF08h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DBDF8 lea r14,[rcx*8+20h]		; DEBUG: {Register}/R14 {Memory}/None ||| None | 32 | RCX ||| N/A | N/A
		0x1804DBE00 mov rcx,[r14+rax]		; DEBUG: {Register}/RCX {Memory}/None ||| R14 | 0 | RAX ||| N/A | N/A
		0x1804DBE04 test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x1804DBE07 je near ptr 00000001804DBEB4h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DBE0D mov rdx,[181871270h]		; DEBUG: {Register}/RDX {Memory}/None ||| RIP | 6468080240 | None ||| N/A | N/A
		0x1804DBE14 call 000000018090AEA0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DBE19 mov rsi,rax		; DEBUG: {Register}/RSI {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1804DBE1C test rbx,rbx		; DEBUG: {Register}/RBX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x1804DBE1F je near ptr 00000001804DBEB4h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DBE25 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1804DBE28 je short 00000001804DBE3Eh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DBE2A mov rdx,[rbx]		; DEBUG: {Register}/RDX {Memory}/None ||| RBX | 0 | None ||| N/A | N/A
		0x1804DBE2D mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1804DBE30 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1804DBE34 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DBE39 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1804DBE3C je short 00000001804DBEBCh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DBE3E cmp edi,[rbx+18h]		; DEBUG: {Register}/EDI {Memory}/None ||| RBX | 24 | None ||| N/A | N/A
		0x1804DBE41 jae near ptr 00000001804DBEF5h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DBE47 mov [r14+rbx],rsi		; DEBUG: {Memory}/None {Register}/RSI ||| R14 | 0 | RBX ||| N/A | N/A
		0x1804DBE4B xor ebx,ebx		; DEBUG: {Register}/EBX {Register}/EBX ||| None | 0 | None ||| N/A | N/A
		0x1804DBE4D nop dword ptr [rax]		; DEBUG: {Memory}/None {Register}/None ||| RAX | 0 | None ||| N/A | N/A
		0x1804DBE50 mov rax,[rbp+40h]		; DEBUG: {Register}/RAX {Memory}/None ||| RBP | 64 | None ||| N/A | N/A
		0x1804DBE54 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1804DBE57 je short 00000001804DBEB4h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DBE59 cmp edi,[rax+18h]		; DEBUG: {Register}/EDI {Memory}/None ||| RAX | 24 | None ||| N/A | N/A
		0x1804DBE5C jae near ptr 00000001804DBEE2h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DBE62 mov rcx,[r14+rax]		; DEBUG: {Register}/RCX {Memory}/None ||| R14 | 0 | RAX ||| N/A | N/A
		0x1804DBE66 test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x1804DBE69 je short 00000001804DBEB4h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DBE6B cmp ebx,[rcx+18h]		; DEBUG: {Register}/EBX {Memory}/None ||| RCX | 24 | None ||| N/A | N/A
		0x1804DBE6E jge short 00000001804DBE8Ah		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DBE70 jae short 00000001804DBECFh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DBE72 movsxd rax,ebx		; DEBUG: {Register}/RAX {Register}/EBX ||| None | 0 | None ||| N/A | N/A
		0x1804DBE75 mov rcx,[rcx+rax*8+20h]		; DEBUG: {Register}/RCX {Memory}/None ||| RCX | 32 | RAX ||| N/A | N/A
		0x1804DBE7A test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x1804DBE7D je short 00000001804DBEB4h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DBE7F xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1804DBE81 call 00000001804DC680h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DBE86 inc ebx		; DEBUG: {Register}/EBX {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1804DBE88 jmp short 00000001804DBE50h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DBE8A inc edi		; DEBUG: {Register}/EDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1804DBE8C mov ecx,edi		; DEBUG: {Register}/ECX {Register}/EDI ||| None | 0 | None ||| N/A | N/A
		0x1804DBE8E jmp near ptr 00000001804DBDD3h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DBE93 mov r14,[rsp+40h]		; DEBUG: {Register}/R14 {Memory}/None ||| RSP | 64 | None ||| N/A | N/A
		0x1804DBE98 mov rdi,[rsp+38h]		; DEBUG: {Register}/RDI {Memory}/None ||| RSP | 56 | None ||| N/A | N/A
		0x1804DBE9D mov rsi,[rsp+30h]		; DEBUG: {Register}/RSI {Memory}/None ||| RSP | 48 | None ||| N/A | N/A
		0x1804DBEA2 mov rbx,[rsp+48h]		; DEBUG: {Register}/RBX {Memory}/None ||| RSP | 72 | None ||| N/A | N/A
		0x1804DBEA7 mov dword ptr [rbp+48h],0		; DEBUG: {Memory}/None {Immediate32}/None ||| RBP | 72 | None ||| N/A | 0
		0x1804DBEAE add rsp,20h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 32
		0x1804DBEB2 pop rbp		; DEBUG: {Register}/RBP {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1804DBEB3 ret		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1804DBEB4 xor ecx,ecx		; DEBUG: {Register}/ECX {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x1804DBEB6 call 000000018012BDA0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DBEBB int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1804DBEBC call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DBEC1 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1804DBEC4 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1804DBEC7 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1804DBEC9 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DBECE int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.Void BoatAlligatorManager::Init(UnityEngine.GameObject):
		End of function at 0x1804DBECF
		Absolute End is at 0x1804DBECF
		Identified Jump Destination addresses:

		0x1804DBD55: Saves the content of rbp to the stack
		0x1804DBD5A: Compares {Unknown Global at 0x18183E7DF, first ten bytes are [1 32 175 1 0 141 175 1 0 224], or as chars " ¯ ¯ à"} and 0
		0x1804DBD61: Copies {'boatObj' (function parameter, type UnityEngine.GameObject)} from rdx into rbx
		0x1804DBD64: Copies {'this' (function parameter, type BoatAlligatorManager)} from rcx into rbp
		0x1804DBD67: Jumps to 0x1804DBD7B if {Unknown Global at 0x18183E7DF, first ten bytes are [1 32 175 1 0 141 175 1 0 224], or as chars " ¯ ¯ à"} != 0

		0x1804DBD69: Loads string "Q" into register rcx as constant {'constant3' (constant value of type Cpp2IL.Core.Analysis.ResultModels.Il2CppString)}
		0x1804DBD6F: Attempts to load the il2cpp metadata for this method (method id 0) and init it cpp-side.

		0x1804DBD8A: [!] Compares {'boatObj' (function parameter, type UnityEngine.GameObject)} and 0
		0x1804DBD8D: Jumps to 0x1804DBEB4 (which throws a NRE) if boatObj equals 0. Implicitly present in managed code, so ignored here.
		0x1804DBD93: Loads the global generic method reference for method T UnityEngine.GameObject::GetComponentInChildren<BoatAttachPosition>() on type UnityEngine.GameObject and stores the result in constant {'GetComponentInChildren' (constant value of type Cpp2IL.Core.Analysis.ResultModels.GenericMethodReference)} in rdx
		0x1804DBD9A: Copies {'boatObj' (function parameter, type UnityEngine.GameObject)} from rbx into rcx
		0x1804DBD9D: [!] Calls managed method T UnityEngine.GameObject::GetComponentInChildren<BoatAttachPosition>() on instance {'boatObj' (function parameter, type UnityEngine.GameObject)} and stores the result in {'componentInChildren' (type BoatAttachPosition)} ;  - Method resolved from concrete implementations at this address, with the help of a constant value to identify which concrete implementation.

		0x1804DBDA2: [!] Sets the field m_boatAttachPosition (Type BoatAttachPosition) on local {'this' (function parameter, type BoatAlligatorManager)} to the value stored in {'componentInChildren' (type BoatAttachPosition)}
		0x1804DBDA6: [!] Reads field m_spawnPoints from {'this' (function parameter, type BoatAlligatorManager)} and stores in a new local {'m_spawnPoints' (type UnityEngine.Transform[])}

		0x1804DBDAA: [!] Compares {'m_spawnPoints' (type UnityEngine.Transform[])} and 0
		0x1804DBDAD: Jumps to 0x1804DBEB4 (which throws a NRE) if m_spawnPoints equals 0. Implicitly present in managed code, so ignored here.
		0x1804DBDB3: Reads the length of the array "{'m_spawnPoints' (type UnityEngine.Transform[])}" and stores it in new local {'length' (type System.Int32)} in register rdx
		0x1804DBDB6: Loads the type definition for managed type BoatAlligator[][] as a constant "BoatAlligator[][]" in rcx
		0x1804DBDBD: [!] Allocates an array of type BoatAlligator[][] of size length and stores the result as local5 in register rax

		0x1804DBDC2: Clears register rcx, yielding zero-local {'local6' (type System.Int32)}
		0x1804DBDC4: [!] Sets the field m_alligator (Type BoatAlligator[][]) on local {'this' (function parameter, type BoatAlligatorManager)} to the value stored in {'local5' (type BoatAlligator[][])}
		0x1804DBDC8: Clears register rdi, yielding zero-local {'local7' (type System.Int32)}
		0x1804DBDCA: [!] Compares {'local5' (type BoatAlligator[][])} and 0
		0x1804DBDCD: Jumps to 0x1804DBEB4 (which throws a NRE) if local5 equals 0. Implicitly present in managed code, so ignored here.

		Potential Loop Start (0x1804DBDD3):
		0x1804DBDD3: Copies {'local5' (type BoatAlligator[][])} from rax into rbx
		0x1804DBDD6: [!] Compares {'local6' (type System.Int32)} and {Property System.Int32 System.Array::Length() on {'local5' (type BoatAlligator[][])}}
		0x1804DBDD9: Jumps to 0x1804DBE93 (which is an if statement's body) if {'local6' (type System.Int32)} is greater than or equal to {Property System.Int32 System.Array::Length() on {'local5' (type BoatAlligator[][])}} ;  - Increasing indentation - is standard if, unimportant is False

		0x1804DBDDF: [!] Reads field m_spawnPoints from {'this' (function parameter, type BoatAlligatorManager)} and stores in a new local {'m_spawnPoints2' (type UnityEngine.Transform[])}

		0x1804DBDE3: [!] Compares {'m_spawnPoints2' (type UnityEngine.Transform[])} and 0
		0x1804DBDE6: Jumps to 0x1804DBEB4 (which throws a NRE) if m_spawnPoints2 equals 0. Implicitly present in managed code, so ignored here.
		0x1804DBDEC: Copies {'local7' (type System.Int32)} from rdi into rcx
		0x1804DBDEF: [!] Compares {'local7' (type System.Int32)} and {Property System.Int32 System.Array::Length() on {'m_spawnPoints2' (type UnityEngine.Transform[])}}
		0x1804DBDF2: Jumps to 0x1804DBF08 (which throws a NRE) if {'local7' (type System.Int32)} is greater than or equal to {Property System.Int32 System.Array::Length() on {'m_spawnPoints2' (type UnityEngine.Transform[])}}. Implicitly present in managed code, so ignored here.
		0x1804DBE00: [!] Reads a value from the array {'m_spawnPoints2' (type UnityEngine.Transform[])} at an index specified by the value in , into a new local {'local9' (type UnityEngine.Transform)}

		0x1804DBE04: [!] Compares {'local9' (type UnityEngine.Transform)} and 0
		0x1804DBE07: Jumps to 0x1804DBEB4 (which throws a NRE) if local9 equals 0. Implicitly present in managed code, so ignored here.
		0x1804DBE0D: Loads the global generic method reference for method T[] UnityEngine.Component::GetComponentsInChildren<BoatAlligator>() on type UnityEngine.Component and stores the result in constant {'GetComponentsInChildren' (constant value of type Cpp2IL.Core.Analysis.ResultModels.GenericMethodReference)} in rdx
		0x1804DBE14: [!] Calls managed method T UnityEngine.GameObject::GetComponentInChildren<BoatAttachPosition>() on instance {'local9' (type UnityEngine.Transform)} and stores the result in {'componentInChildren2' (type BoatAlligator)} ;  - Method resolved from concrete implementations at this address, with the help of a constant value to identify which concrete implementation. - This is an instance method, but the type of the 'this' parameter is mismatched. Expecting GameObject, actually UnityEngine.Transform

		0x1804DBE19: Copies {'componentInChildren2' (type BoatAlligator)} from rax into rsi
		0x1804DBE1C: [!] Compares {'local5' (type BoatAlligator[][])} and 0
		0x1804DBE1F: Jumps to 0x1804DBEB4 (which throws a NRE) if local5 equals 0. Implicitly present in managed code, so ignored here.
		0x1804DBE25: [!] Compares {'componentInChildren2' (type BoatAlligator)} and 0
		0x1804DBE28: Jumps to 0x1804DBE3E (which is an if statement's body) if componentInChildren2 equals 0 ;  - Increasing indentation - is standard if, unimportant is False

		0x1804DBE2A: Loads the class pointer from local5 into a constant constant14 in register rdx
		0x1804DBE2D: Copies {'componentInChildren2' (type BoatAlligator)} from rax into rcx
		0x1804DBE30: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='', name='BoatAlligator', parentType=UnityEngine.MonoBehaviour] and stores in register rdx
		0x1804DBE39: [!] Compares {'componentInChildren2' (type BoatAlligator)} and 0
		0x1804DBE3C: Jumps to 0x1804DBEBC if componentInChildren2 equals 0 ;  - This is probably a goto, jumping to 0x1804DBEBC which is after end of current block @ 0x1804DBE3E (started at 0x1804DBE2A)

		0x1804DBE3E: [!] Compares {'local7' (type System.Int32)} and {Property System.Int32 System.Array::Length() on {'local5' (type BoatAlligator[][])}}
		0x1804DBE41: Jumps to 0x1804DBEF5 (which throws a NRE) if {'local7' (type System.Int32)} is greater than or equal to {Property System.Int32 System.Array::Length() on {'local5' (type BoatAlligator[][])}}. Implicitly present in managed code, so ignored here.
		0x1804DBE4B: Clears register rbx, yielding zero-local {'local11' (type System.Int32)}

		Potential Loop Start (0x1804DBE50):
		0x1804DBE50: [!] Reads field m_alligator from {'this' (function parameter, type BoatAlligatorManager)} and stores in a new local {'m_alligator' (type BoatAlligator[][])}

		0x1804DBE54: [!] Compares {'m_alligator' (type BoatAlligator[][])} and 0
		0x1804DBE57: Jumps to 0x1804DBEB4 (which throws a NRE) if m_alligator equals 0. Implicitly present in managed code, so ignored here.
		0x1804DBE59: [!] Compares {'local7' (type System.Int32)} and {Property System.Int32 System.Array::Length() on {'m_alligator' (type BoatAlligator[][])}}
		0x1804DBE5C: Jumps to 0x1804DBEE2 (which throws a NRE) if {'local7' (type System.Int32)} is greater than or equal to {Property System.Int32 System.Array::Length() on {'m_alligator' (type BoatAlligator[][])}}. Implicitly present in managed code, so ignored here.
		0x1804DBE62: [!] Reads a value from the array {'m_alligator' (type BoatAlligator[][])} at an index specified by the value in , into a new local {'local13' (type BoatAlligator)}

		0x1804DBE66: [!] Compares {'local13' (type BoatAlligator)} and 0
		0x1804DBE69: Jumps to 0x1804DBEB4 (which throws a NRE) if local13 equals 0. Implicitly present in managed code, so ignored here.
		0x1804DBE6B: [!] Compares {'local11' (type System.Int32)} and {field m_anim, read from local {'local13' (type BoatAlligator)}}
		0x1804DBE6E: Jumps to 0x1804DBE8A if {'local11' (type System.Int32)} is greater than or equal to {field m_anim, read from local {'local13' (type BoatAlligator)}} ;  - This is probably a goto, jumping to 0x1804DBE8A which is after end of current block @ 0x1804DBE3E (started at 0x1804DBE2A)

		0x1804DBE70: Jumps to 0x1804DBECF (which throws a NRE) if {'local11' (type System.Int32)} is greater than or equal to {field m_anim, read from local {'local13' (type BoatAlligator)}}. Implicitly present in managed code, so ignored here.
		0x1804DBE72: Copies {'local11' (type System.Int32)} from rbx into rax
		0x1804DBE7A: [!] Compares {'local13' (type BoatAlligator)} and 0
		0x1804DBE7D: Jumps to 0x1804DBEB4 (which throws a NRE) if local13 equals 0. Implicitly present in managed code, so ignored here.
		0x1804DBE81: [!] Calls managed method System.Void BoatAlligator::Reset() on instance {'local13' (type BoatAlligator)}

		0x1804DBE86: [!] Adds 1 to the value {'local11' (type System.Int32)}, stored in rbx
		0x1804DBE88: Jumps to 0x1804DBE50 - which is still in this function, but further up. Probably indicative that this is a loop.
		0x1804DBE8A: [!] Adds 1 to the value {'local7' (type System.Int32)}, stored in rdi
		0x1804DBE8C: Copies {'local7' (type System.Int32)} from rdi into rcx
		0x1804DBE8E: Jumps to 0x1804DBDD3 - which is still in this function, but further up. Probably indicative that this is a loop.
		0x1804DBE93: Reads unknown value in stack, offset 64 (0x40) and stores the pointer in register r14 as new constant constant19
		0x1804DBE98: Reads unknown value in stack, offset 56 (0x38) and stores the pointer in register rdi as new constant constant20
		0x1804DBE9D: Reads unknown value in stack, offset 48 (0x30) and stores the pointer in register rsi as new constant constant21
		0x1804DBEA2: Reads unknown value in stack, offset 72 (0x48) and stores the pointer in register rbx as new constant constant22
		0x1804DBEB3: [!] Returns from the function

		0x1804DBEB6: [!] Constructs and throws an exception of kind System.NullReferenceException

		0x1804DBEC1: Copies {'local16' (type System.NullReferenceException)} from rax into rcx



	Generated Pseudocode:

	Declaring Type: BoatAlligatorManager
	System.Void Init(UnityEngine.GameObject boatObj)

		BoatAttachPosition componentInChildren = boatObj.GetComponentInChildren<BoatAttachPosition>()
		this.m_boatAttachPosition = componentInChildren
		UnityEngine.Transform[] m_spawnPoints = this.m_spawnPoints
		System.Int32 length = m_spawnPoints.Length
		BoatAlligator[][] local5 = new BoatAlligator[][length]
		ulong local6 = 0
		this.m_alligator = local5
		ulong local7 = 0

		if (local6 < local5.Length)
		    UnityEngine.Transform[] m_spawnPoints2 = this.m_spawnPoints
		    UnityEngine.Transform local9 = m_spawnPoints2[]

		    BoatAlligator componentInChildren2 = local9.GetComponentInChildren<BoatAttachPosition>()

		    if (componentInChildren2 != 0)

		        if (componentInChildren2 == 0)
                    goto INSN_1804DBEBC
                endif
		    endif
            
		    ulong local11 = 0
		    BoatAlligator[][] m_alligator = this.m_alligator
		    BoatAlligator local13 = m_alligator[]

		    if (local11 >= local13.m_anim)
                goto INSN_1804DBE8A
            endif

		    local13.Reset()
		    local11 += 1

		    INSN_1804DBE8A:
		    local7 += 1
		endif
        
		return
		throw new System.NullReferenceException()

		INSN_1804DBEBC:


Generated IL:
	Don't know how to write IL for Cpp2IL.Core.Analysis.Actions.x86.Important.RegOffsetArrayValueReadRegToRegAction. Aborting here.


Method: UnityEngine.Vector3 BoatAlligatorManager::GetNextSpawnPoint():	Method Body (x86 ASM):
		0x1804DBC70 mov [rsp+8],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RSP | 8 | None ||| N/A | N/A
		0x1804DBC75 push rdi		; DEBUG: {Register}/RDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1804DBC76 sub rsp,30h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 48
		0x1804DBC7A cmp byte ptr [18183E7E0h],0		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6467872736 | None ||| N/A | 0
		0x1804DBC81 mov rdi,rdx		; DEBUG: {Register}/RDI {Register}/RDX ||| None | 0 | None ||| N/A | N/A
		0x1804DBC84 mov rbx,rcx		; DEBUG: {Register}/RBX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x1804DBC87 jne short 00000001804DBC9Bh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DBC89 mov ecx,[181514678h]		; DEBUG: {Register}/ECX {Memory}/None ||| RIP | 6464554616 | None ||| N/A | N/A
		0x1804DBC8F call 00000001800FEB90h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DBC94 mov byte ptr [18183E7E0h],1		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6467872736 | None ||| N/A | 1
		0x1804DBC9B mov r8,[rdi+30h]		; DEBUG: {Register}/R8 {Memory}/None ||| RDI | 48 | None ||| N/A | N/A
		0x1804DBC9F test r8,r8		; DEBUG: {Register}/R8 {Register}/R8 ||| None | 0 | None ||| N/A | N/A
		0x1804DBCA2 je short 00000001804DBD0Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DBCA4 movsxd rax,dword ptr [rdi+48h]		; DEBUG: {Register}/RAX {Memory}/None ||| RDI | 72 | None ||| N/A | N/A
		0x1804DBCA8 cmp [r8+18h],eax		; DEBUG: {Memory}/None {Register}/EAX ||| R8 | 24 | None ||| N/A | N/A
		0x1804DBCAC jle short 00000001804DBCC9h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DBCAE jbe short 00000001804DBD17h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DBCB0 mov rdx,[r8+rax*8+20h]		; DEBUG: {Register}/RDX {Memory}/None ||| R8 | 32 | RAX ||| N/A | N/A
		0x1804DBCB5 test rdx,rdx		; DEBUG: {Register}/RDX {Register}/RDX ||| None | 0 | None ||| N/A | N/A
		0x1804DBCB8 je short 00000001804DBD0Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DBCBA xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1804DBCBD lea rcx,[rsp+20h]		; DEBUG: {Register}/RCX {Memory}/None ||| RSP | 32 | None ||| N/A | N/A
		0x1804DBCC2 call 0000000180CE2700h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DBCC7 jmp short 00000001804DBCF3h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DBCC9 mov rcx,[18188D900h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468196608 | None ||| N/A | N/A
		0x1804DBCD0 test byte ptr [rcx+127h],2		; DEBUG: {Memory}/None {Immediate8}/None ||| RCX | 295 | None ||| N/A | 2
		0x1804DBCD7 je short 00000001804DBCE7h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DBCD9 cmp dword ptr [rcx+0D8h],0		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RCX | 216 | None ||| N/A | 0
		0x1804DBCE0 jne short 00000001804DBCE7h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DBCE2 call 000000018010EAF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DBCE7 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1804DBCE9 lea rcx,[rsp+20h]		; DEBUG: {Register}/RCX {Memory}/None ||| RSP | 32 | None ||| N/A | N/A
		0x1804DBCEE call 0000000180CE7730h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DBCF3 movsd xmm0,qword ptr [rax]		; DEBUG: {Register}/XMM0 {Memory}/None ||| RAX | 0 | None ||| N/A | N/A
		0x1804DBCF7 mov eax,[rax+8]		; DEBUG: {Register}/EAX {Memory}/None ||| RAX | 8 | None ||| N/A | N/A
		0x1804DBCFA movsd qword ptr [rbx],xmm0		; DEBUG: {Memory}/None {Register}/XMM0 ||| RBX | 0 | None ||| N/A | N/A
		0x1804DBCFE mov [rbx+8],eax		; DEBUG: {Memory}/None {Register}/EAX ||| RBX | 8 | None ||| N/A | N/A
		0x1804DBD01 mov rax,rbx		; DEBUG: {Register}/RAX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x1804DBD04 mov rbx,[rsp+40h]		; DEBUG: {Register}/RBX {Memory}/None ||| RSP | 64 | None ||| N/A | N/A
		0x1804DBD09 add rsp,30h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 48
		0x1804DBD0D pop rdi		; DEBUG: {Register}/RDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1804DBD0E ret		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1804DBD0F xor ecx,ecx		; DEBUG: {Register}/ECX {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x1804DBD11 call 000000018012BDA0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DBD16 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method UnityEngine.Vector3 BoatAlligatorManager::GetNextSpawnPoint():
		End of function at 0x1804DBD17
		Absolute End is at 0x1804DBD17
		Identified Jump Destination addresses:
			0x1804DBCF3
		0x1804DBC75: Saves the content of rdi to the stack
		0x1804DBC7A: Compares {Unknown Global at 0x18183E7E0, first ten bytes are [32 175 1 0 141 175 1 0 224 60], or as chars " ¯ ¯ à<"} and 0
		0x1804DBC81: Copies {'il2cppMethodInfo' (type )} from rdx into rdi
		0x1804DBC84: Copies {'this' (function parameter, type BoatAlligatorManager)} from rcx into rbx
		0x1804DBC87: Jumps to 0x1804DBC9B if {Unknown Global at 0x18183E7E0, first ten bytes are [32 175 1 0 141 175 1 0 224 60], or as chars " ¯ ¯ à<"} != 0

		0x1804DBC89: Loads string "P" into register rcx as constant {'constant3' (constant value of type Cpp2IL.Core.Analysis.ResultModels.Il2CppString)}
		0x1804DBC8F: Attempts to load the il2cpp metadata for this method (method id 0) and init it cpp-side.

		0x1804DBC9F: [!] Compares  and 0
		0x1804DBCA2: Jumps to 0x1804DBD0F (which throws a NRE) if  equals 0. Implicitly present in managed code, so ignored here.
		0x1804DBCA8: [!] Compares  against itself
		0x1804DBCAC: Jumps to 0x1804DBCC9 if  is less than or equal to  ;  - Increasing indentation - is if-else, unimportant is False

		0x1804DBCAE: Jumps to 0x1804DBD17 (which throws a NRE) if  is less than or equal to . Implicitly present in managed code, so ignored here.
		0x1804DBCB5: [!] Compares {'il2cppMethodInfo' (type )} and 0
		0x1804DBCB8: Jumps to 0x1804DBD0F (which throws a NRE) if il2cppMethodInfo equals 0. Implicitly present in managed code, so ignored here.
		0x1804DBCBD: Loads a pointer to stack offset 0x20 into register rcx as new constant constant6
		0x1804DBCC2: [!] Calls managed method UnityEngine.Vector3 UnityEngine.Transform::get_position() on instance  and stores the result in {'position' (type UnityEngine.Vector3)}

		0x1804DBCC7: Jumps to 0x1804DBCF3 (which is an function-local jump destination)

		0x1804DBCC9: Loads the type definition for managed type UnityEngine.Vector3 as a constant "Vector3" in rcx
		0x1804DBCD0: Compares "{il2cpp field on {'Vector3' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" and 2
		0x1804DBCD7: Jumps to 0x1804DBCE7 if "{il2cpp field on {'Vector3' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" equals 2

		0x1804DBCD9: Compares "{il2cpp field on {'Vector3' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" and 0
		0x1804DBCE0: Jumps to 0x1804DBCE7 if "{il2cpp field on {'Vector3' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" != 0

		0x1804DBCE2: Calls the il2cpp cctor for the type UnityEngine.Vector3
		0x1804DBCE9: Loads a pointer to stack offset 0x20 into register rcx as new constant constant12
		0x1804DBCEE: [!] Calls static managed method UnityEngine.Vector3 UnityEngine.Vector3::get_zero() and stores the result in {'zero' (type UnityEngine.Vector3)}


		End Of If-Else Block (at 0x1804DBCF3) where the else started at 0x1804DBCC9
		0x1804DBCF7: [!] Reads field z from {'zero' (type UnityEngine.Vector3)} and stores in a new local {'single' (type System.Single)}

		0x1804DBCFE: [!] Sets the field  (Type ) on local {'this' (function parameter, type BoatAlligatorManager)} to the value stored in {'single' (type System.Single)}
		0x1804DBD01: Copies {'this' (function parameter, type BoatAlligatorManager)} from rbx into rax
		0x1804DBD04: Reads unknown value in stack, offset 64 (0x40) and stores the pointer in register rbx as new constant constant13
		0x1804DBD0E: [!] Returns {'this' (function parameter, type BoatAlligatorManager)} from the function

		0x1804DBD11: [!] Constructs and throws an exception of kind System.NullReferenceException




	Generated Pseudocode:

	Declaring Type: BoatAlligatorManager
	UnityEngine.Vector3 GetNextSpawnPoint()

		if ( > )

		    UnityEngine.Vector3 position = .position
		else

		    UnityEngine.Vector3 zero = UnityEngine.Vector3.zero
		endif
        
		System.Single single = zero.z
		this. = single
		return this
		throw new System.NullReferenceException()


Generated IL:
	Action of type Cpp2IL.Core.Analysis.Actions.x86.Important.JumpIfLessThanOrEqualToAction at (0x1804DBCAC) is corrupt (One of the arguments is null) and cannot be created as IL. Aborting here.


Method: System.Void BoatAlligatorManager::Spawn():	Method Body (x86 ASM):
		0x1804DBFC0 mov [rsp+8],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RSP | 8 | None ||| N/A | N/A
		0x1804DBFC5 mov [rsp+10h],rsi		; DEBUG: {Memory}/None {Register}/RSI ||| RSP | 16 | None ||| N/A | N/A
		0x1804DBFCA push rdi		; DEBUG: {Register}/RDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1804DBFCB sub rsp,20h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 32
		0x1804DBFCF mov rdx,[rcx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RCX | 64 | None ||| N/A | N/A
		0x1804DBFD3 xor edi,edi		; DEBUG: {Register}/EDI {Register}/EDI ||| None | 0 | None ||| N/A | N/A
		0x1804DBFD5 mov eax,[rcx+48h]		; DEBUG: {Register}/EAX {Memory}/None ||| RCX | 72 | None ||| N/A | N/A
		0x1804DBFD8 mov rsi,rcx		; DEBUG: {Register}/RSI {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x1804DBFDB mov r9d,edi		; DEBUG: {Register}/R9D {Register}/EDI ||| None | 0 | None ||| N/A | N/A
		0x1804DBFDE test rdx,rdx		; DEBUG: {Register}/RDX {Register}/RDX ||| None | 0 | None ||| N/A | N/A
		0x1804DBFE1 je near ptr 00000001804DC0D5h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DBFE7 mov rbx,rdx		; DEBUG: {Register}/RBX {Register}/RDX ||| None | 0 | None ||| N/A | N/A
		0x1804DBFEA mov ecx,eax		; DEBUG: {Register}/ECX {Register}/EAX ||| None | 0 | None ||| N/A | N/A
		0x1804DBFEC nop dword ptr [rax]		; DEBUG: {Memory}/None {Register}/None ||| RAX | 0 | None ||| N/A | N/A
		0x1804DBFF0 cmp eax,[rdx+18h]		; DEBUG: {Register}/EAX {Memory}/None ||| RDX | 24 | None ||| N/A | N/A
		0x1804DBFF3 jae near ptr 00000001804DC0C2h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DBFF9 cdqe		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1804DBFFB mov r8,[rdx+rax*8+20h]		; DEBUG: {Register}/R8 {Memory}/None ||| RDX | 32 | RAX ||| N/A | N/A
		0x1804DC000 test r8,r8		; DEBUG: {Register}/R8 {Register}/R8 ||| None | 0 | None ||| N/A | N/A
		0x1804DC003 je near ptr 00000001804DC0D5h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DC009 cmp r9d,[r8+18h]		; DEBUG: {Register}/R9D {Memory}/None ||| R8 | 24 | None ||| N/A | N/A
		0x1804DC00D jge near ptr 00000001804DC0ACh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DC013 test rbx,rbx		; DEBUG: {Register}/RBX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x1804DC016 je near ptr 00000001804DC0D5h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DC01C cmp ecx,[rbx+18h]		; DEBUG: {Register}/ECX {Memory}/None ||| RBX | 24 | None ||| N/A | N/A
		0x1804DC01F jae near ptr 00000001804DC0F0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DC025 movsxd rax,ecx		; DEBUG: {Register}/RAX {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x1804DC028 mov rbx,[rbx+rax*8+20h]		; DEBUG: {Register}/RBX {Memory}/None ||| RBX | 32 | RAX ||| N/A | N/A
		0x1804DC02D test rbx,rbx		; DEBUG: {Register}/RBX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x1804DC030 je near ptr 00000001804DC0D5h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DC036 cmp edi,[rbx+18h]		; DEBUG: {Register}/EDI {Memory}/None ||| RBX | 24 | None ||| N/A | N/A
		0x1804DC039 jae near ptr 00000001804DC0DDh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DC03F movsxd rax,edi		; DEBUG: {Register}/RAX {Register}/EDI ||| None | 0 | None ||| N/A | N/A
		0x1804DC042 mov rbx,[rbx+rax*8+20h]		; DEBUG: {Register}/RBX {Memory}/None ||| RBX | 32 | RAX ||| N/A | N/A
		0x1804DC047 test rbx,rbx		; DEBUG: {Register}/RBX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x1804DC04A je near ptr 00000001804DC0D5h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DC050 cmp byte ptr [18183E7DAh],0		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6467872730 | None ||| N/A | 0
		0x1804DC057 jne short 00000001804DC06Bh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DC059 mov ecx,[1815146A0h]		; DEBUG: {Register}/ECX {Memory}/None ||| RIP | 6464554656 | None ||| N/A | N/A
		0x1804DC05F call 00000001800FEB90h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DC064 mov byte ptr [18183E7DAh],1		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6467872730 | None ||| N/A | 1
		0x1804DC06B mov rcx,[rbx+18h]		; DEBUG: {Register}/RCX {Memory}/None ||| RBX | 24 | None ||| N/A | N/A
		0x1804DC06F mov [rbx+30h],rsi		; DEBUG: {Memory}/None {Register}/RSI ||| RBX | 48 | None ||| N/A | N/A
		0x1804DC073 test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x1804DC076 je short 00000001804DC0D5h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DC078 mov rdx,[181866E08h]		; DEBUG: {Register}/RDX {Memory}/None ||| RIP | 6468038152 | None ||| N/A | N/A
		0x1804DC07F xor r9d,r9d		; DEBUG: {Register}/R9D {Register}/R9D ||| None | 0 | None ||| N/A | N/A
		0x1804DC082 mov r8b,1		; DEBUG: {Register}/R8L {Immediate8}/None ||| None | 0 | None ||| N/A | 1
		0x1804DC085 call 00000001810FA9A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DC08A mov dword ptr [rbx+4Ch],1		; DEBUG: {Memory}/None {Immediate32}/None ||| RBX | 76 | None ||| N/A | 1
		0x1804DC091 inc edi		; DEBUG: {Register}/EDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1804DC093 mov rdx,[rsi+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RSI | 64 | None ||| N/A | N/A
		0x1804DC097 mov r9d,edi		; DEBUG: {Register}/R9D {Register}/EDI ||| None | 0 | None ||| N/A | N/A
		0x1804DC09A mov eax,[rsi+48h]		; DEBUG: {Register}/EAX {Memory}/None ||| RSI | 72 | None ||| N/A | N/A
		0x1804DC09D mov rbx,rdx		; DEBUG: {Register}/RBX {Register}/RDX ||| None | 0 | None ||| N/A | N/A
		0x1804DC0A0 mov ecx,eax		; DEBUG: {Register}/ECX {Register}/EAX ||| None | 0 | None ||| N/A | N/A
		0x1804DC0A2 test rdx,rdx		; DEBUG: {Register}/RDX {Register}/RDX ||| None | 0 | None ||| N/A | N/A
		0x1804DC0A5 je short 00000001804DC0D5h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DC0A7 jmp near ptr 00000001804DBFF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DC0AC mov rbx,[rsp+30h]		; DEBUG: {Register}/RBX {Memory}/None ||| RSP | 48 | None ||| N/A | N/A
		0x1804DC0B1 lea eax,[rcx+1]		; DEBUG: {Register}/EAX {Memory}/None ||| RCX | 1 | None ||| N/A | N/A
		0x1804DC0B4 mov [rsi+48h],eax		; DEBUG: {Memory}/None {Register}/EAX ||| RSI | 72 | None ||| N/A | N/A
		0x1804DC0B7 mov rsi,[rsp+38h]		; DEBUG: {Register}/RSI {Memory}/None ||| RSP | 56 | None ||| N/A | N/A
		0x1804DC0BC add rsp,20h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 32
		0x1804DC0C0 pop rdi		; DEBUG: {Register}/RDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1804DC0C1 ret		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1804DC0C2 call 000000018012A7F0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DC0C7 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1804DC0CA xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1804DC0CD xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1804DC0CF call 000000018012BD50h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DC0D4 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.Void BoatAlligatorManager::Spawn():
		End of function at 0x1804DC0D5
		Absolute End is at 0x1804DC0D5
		Identified Jump Destination addresses:

		0x1804DBFCA: Saves the content of rdi to the stack
		0x1804DBFCF: [!] Reads field m_alligator from {'this' (function parameter, type BoatAlligatorManager)} and stores in a new local {'m_alligator' (type BoatAlligator[][])}

		0x1804DBFD3: Clears register rdi, yielding zero-local {'local2' (type System.Int32)}
		0x1804DBFD5: [!] Reads field m_idx from {'this' (function parameter, type BoatAlligatorManager)} and stores in a new local {'m_idx' (type System.Int32)}

		0x1804DBFD8: Copies {'this' (function parameter, type BoatAlligatorManager)} from rcx into rsi
		0x1804DBFDB: Copies {'local2' (type System.Int32)} from rdi into r9
		0x1804DBFDE: [!] Compares {'m_alligator' (type BoatAlligator[][])} and 0
		0x1804DBFE1: Jumps to 0x1804DC0D5 (which throws a NRE) if m_alligator equals 0. Implicitly present in managed code, so ignored here.
		0x1804DBFE7: Copies {'m_alligator' (type BoatAlligator[][])} from rdx into rbx
		0x1804DBFEA: Copies {'m_idx' (type System.Int32)} from rax into rcx

		Potential Loop Start (0x1804DBFF0):
		0x1804DBFF0: [!] Compares {'m_idx' (type System.Int32)} and {Property System.Int32 System.Array::Length() on {'m_alligator' (type BoatAlligator[][])}}
		0x1804DBFF3: Jumps to 0x1804DC0C2 (which throws a NRE) if {'m_idx' (type System.Int32)} is greater than or equal to {Property System.Int32 System.Array::Length() on {'m_alligator' (type BoatAlligator[][])}}. Implicitly present in managed code, so ignored here.
		0x1804DBFFB: Copies the element in the array {'m_alligator' (type BoatAlligator[][])} at the index specified by {'m_idx' (type System.Int32)} into new local {'boatAlligatorArray' (type BoatAlligator[])}
		0x1804DC000: [!] Compares {'boatAlligatorArray' (type BoatAlligator[])} and 0
		0x1804DC003: Jumps to 0x1804DC0D5 (which throws a NRE) if boatAlligatorArray equals 0. Implicitly present in managed code, so ignored here.
		0x1804DC009: [!] Compares {'local2' (type System.Int32)} and {Property System.Int32 System.Array::Length() on {'boatAlligatorArray' (type BoatAlligator[])}}
		0x1804DC00D: Jumps to 0x1804DC0AC (which is an if statement's body) if {'local2' (type System.Int32)} is greater than or equal to {Property System.Int32 System.Array::Length() on {'boatAlligatorArray' (type BoatAlligator[])}} ;  - Increasing indentation - is standard if, unimportant is False

		0x1804DC013: [!] Compares {'m_alligator' (type BoatAlligator[][])} and 0
		0x1804DC016: Jumps to 0x1804DC0D5 (which throws a NRE) if m_alligator equals 0. Implicitly present in managed code, so ignored here.
		0x1804DC01C: [!] Compares {'m_idx' (type System.Int32)} and {Property System.Int32 System.Array::Length() on {'m_alligator' (type BoatAlligator[][])}}
		0x1804DC01F: Jumps to 0x1804DC0F0 (which throws a NRE) if {'m_idx' (type System.Int32)} is greater than or equal to {Property System.Int32 System.Array::Length() on {'m_alligator' (type BoatAlligator[][])}}. Implicitly present in managed code, so ignored here.
		0x1804DC025: Copies {'m_idx' (type System.Int32)} from rcx into rax
		0x1804DC028: Copies the element in the array {'m_alligator' (type BoatAlligator[][])} at the index specified by {'m_idx' (type System.Int32)} into new local {'boatAlligatorArray2' (type BoatAlligator[])}
		0x1804DC02D: [!] Compares {'boatAlligatorArray2' (type BoatAlligator[])} and 0
		0x1804DC030: Jumps to 0x1804DC0D5 (which throws a NRE) if boatAlligatorArray2 equals 0. Implicitly present in managed code, so ignored here.
		0x1804DC036: [!] Compares {'local2' (type System.Int32)} and {Property System.Int32 System.Array::Length() on {'boatAlligatorArray2' (type BoatAlligator[])}}
		0x1804DC039: Jumps to 0x1804DC0DD (which throws a NRE) if {'local2' (type System.Int32)} is greater than or equal to {Property System.Int32 System.Array::Length() on {'boatAlligatorArray2' (type BoatAlligator[])}}. Implicitly present in managed code, so ignored here.
		0x1804DC03F: Copies {'local2' (type System.Int32)} from rdi into rax
		0x1804DC042: Copies the element in the array {'boatAlligatorArray2' (type BoatAlligator[])} at the index specified by {'local2' (type System.Int32)} into new local {'boatAlligator' (type BoatAlligator)}
		0x1804DC047: [!] Compares {'boatAlligator' (type BoatAlligator)} and 0
		0x1804DC04A: Jumps to 0x1804DC0D5 (which throws a NRE) if boatAlligator equals 0. Implicitly present in managed code, so ignored here.
		0x1804DC050: Compares {Unknown Global at 0x18183E7DA, first ten bytes are [1 0 196 62 103 1 32 175 1 0], or as chars " Ä>g ¯ "} and 0
		0x1804DC057: Jumps to 0x1804DC06B if {Unknown Global at 0x18183E7DA, first ten bytes are [1 0 196 62 103 1 32 175 1 0], or as chars " Ä>g ¯ "} != 0

		0x1804DC059: Loads string "S" into register rcx as constant {'constant8' (constant value of type Cpp2IL.Core.Analysis.ResultModels.Il2CppString)}
		0x1804DC05F: Attempts to load the il2cpp metadata for this method (method id 0) and init it cpp-side.

		0x1804DC06B: [!] Reads field m_anim from {'boatAlligator' (type BoatAlligator)} and stores in a new local {'m_anim' (type UnityEngine.Animator)}

		0x1804DC06F: [!] Sets the field m_mgr (Type BoatAlligatorManager) on local {'boatAlligator' (type BoatAlligator)} to the value stored in {'this' (function parameter, type BoatAlligatorManager)}
		0x1804DC073: [!] Compares {'m_anim' (type UnityEngine.Animator)} and 0
		0x1804DC076: Jumps to 0x1804DC0D5 (which throws a NRE) if m_anim equals 0. Implicitly present in managed code, so ignored here.
		0x1804DC078: Loads the string literal "IsSwim" as a constant "constant10" in rdx
		0x1804DC082: [!] Writes the constant 0x1 into operand True (type UInt64) in register r8
		0x1804DC085: [!] Calls managed method System.Void UnityEngine.Animator::SetBool(System.String,System.Boolean) on instance {'m_anim' (type UnityEngine.Animator)} with arguments ["IsSwim", True]

		0x1804DC08A: [!] Sets the field m_state (Type BoatAlligator/EState) on local {'boatAlligator' (type BoatAlligator)} to the value stored in 1
		0x1804DC091: [!] Adds 1 to the value {'local2' (type System.Int32)}, stored in rdi
		0x1804DC093: [!] Reads field m_alligator from {'this' (function parameter, type BoatAlligatorManager)} and stores in a new local {'m_alligator2' (type BoatAlligator[][])}

		0x1804DC097: Copies {'local2' (type System.Int32)} from rdi into r9
		0x1804DC09A: [!] Reads field m_idx from {'this' (function parameter, type BoatAlligatorManager)} and stores in a new local {'m_idx2' (type System.Int32)}

		0x1804DC09D: Copies {'m_alligator2' (type BoatAlligator[][])} from rdx into rbx
		0x1804DC0A0: Copies {'m_idx2' (type System.Int32)} from rax into rcx
		0x1804DC0A2: [!] Compares {'m_alligator2' (type BoatAlligator[][])} and 0
		0x1804DC0A5: Jumps to 0x1804DC0D5 (which throws a NRE) if m_alligator2 equals 0. Implicitly present in managed code, so ignored here.
		0x1804DC0A7: Jumps to 0x1804DBFF0 - which is still in this function, but further up. Probably indicative that this is a loop.
		0x1804DC0AC: Reads unknown value in stack, offset 48 (0x30) and stores the pointer in register rbx as new constant constant13
		0x1804DC0B1: Adds 1 to m_idx2 and stores the result in local11
		0x1804DC0B4: [!] Sets the field m_idx (Type System.Int32) on local {'this' (function parameter, type BoatAlligatorManager)} to the value stored in {'local11' (type System.Int32)}
		0x1804DC0B7: Reads unknown value in stack, offset 56 (0x38) and stores the pointer in register rsi as new constant constant14
		0x1804DC0C1: [!] Returns from the function

		0x1804DC0C2: [!] Constructs and throws an exception of kind System.IndexOutOfRangeException

		0x1804DC0C7: Copies {'local12' (type System.IndexOutOfRangeException)} from rax into rcx
		0x1804DC0CF: [!] Throws {'local12' (type System.IndexOutOfRangeException)}



	Generated Pseudocode:

	Declaring Type: BoatAlligatorManager
	System.Void Spawn()
		BoatAlligator[][] m_alligator = this.m_alligator
		ulong local2 = 0
		System.Int32 m_idx = this.m_idx
		BoatAlligator[] boatAlligatorArray = m_alligator[m_idx]

		if (local2 < boatAlligatorArray.Length)
		    BoatAlligator[] boatAlligatorArray2 = m_alligator[m_idx]
		    BoatAlligator boatAlligator = boatAlligatorArray2[local2]
		    UnityEngine.Animator m_anim = boatAlligator.m_anim
		    boatAlligator.m_mgr = this

		    m_anim.SetBool("IsSwim", True) //(String name, Boolean value)
		    boatAlligator.m_state = 1
		    local2 += 1
		    BoatAlligator[][] m_alligator2 = this.m_alligator
		    System.Int32 m_idx2 = this.m_idx
		endwhile
        
		goto INSN_1804DC0C2
        
		System.Int32 local11 = m_idx2 + 1
		this.m_idx = local11
		return

		INSN_1804DC0C2:
		throw new System.IndexOutOfRangeException()
		throw local12


Generated IL:
	IL_0000: ldarg.0
	IL_0001: ldfld BoatAlligator[][] BoatAlligatorManager::m_alligator
	IL_0006: stloc.0
	IL_0007: ldc.i4.0
	IL_0008: stloc.1
	IL_0009: ldarg.0
	IL_000a: ldfld System.Int32 BoatAlligatorManager::m_idx
	IL_000f: stloc.2
	IL_0010: ldloc.0
	IL_0011: ldloc.2
	IL_0012: ldelem.any BoatAlligator
	IL_0017: stloc.3
	IL_0018: ldloc.1
	IL_0019: ldloc.3
	IL_001a: call System.Int32 System.Array::get_Length()
	IL_001f: bge.s IL_0000
	IL_0021: ldloc.0
	IL_0022: ldloc.2
	IL_0023: ldelem.any BoatAlligator
	IL_0028: ldloc.1
	IL_0029: ldelem.any BoatAlligator
	IL_002e: stloc.s V_4
	IL_0030: ldloc.s V_4
	IL_0032: ldfld UnityEngine.Animator BoatAlligator::m_anim
	IL_0037: stloc.s V_5
	IL_0039: ldloc.s V_4
	IL_003b: ldarg.0
	IL_003c: stfld BoatAlligatorManager BoatAlligator::m_mgr
	IL_0041: ldloc.s V_5
	IL_0043: ldstr "IsSwim"
	IL_0048: ldc.i4.1
	IL_0049: call System.Void UnityEngine.Animator::SetBool(System.String,System.Boolean)
	IL_004e: ldloc.s V_4
	IL_0050: ldc.i4.1
	IL_0051: conv.i8
	IL_0052: conv.u8
	IL_0053: stfld BoatAlligator/EState BoatAlligator::m_state
	IL_0058: ldloc.1
	IL_0059: ldc.i4.1
	IL_005a: add
	IL_005b: stloc.1
	IL_005c: ldarg.0
	IL_005d: ldfld BoatAlligator[][] BoatAlligatorManager::m_alligator
	IL_0062: stloc.s V_6
	IL_0064: ldarg.0
	IL_0065: ldfld System.Int32 BoatAlligatorManager::m_idx
	IL_006a: ldc.i4.1
	IL_006b: add
	IL_006c: stloc.s V_7
	IL_006e: ldarg.0
	IL_006f: ldloc.s V_7
	IL_0071: stfld System.Int32 BoatAlligatorManager::m_idx
	IL_0076: ret
	IL_0077: newobj System.Void System.IndexOutOfRangeException::.ctor()
	IL_007c: throw
	IL_007d: ldloc.s V_8
	IL_007f: throw
	

Method: System.Boolean BoatAlligatorManager::IsAllBossKilled():	Method Body (x86 ASM):
		0x1804DBF20 mov [rsp+8],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RSP | 8 | None ||| N/A | N/A
		0x1804DBF25 push rdi		; DEBUG: {Register}/RDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1804DBF26 sub rsp,20h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 32
		0x1804DBF2A movsxd rdi,dword ptr [rcx+48h]		; DEBUG: {Register}/RDI {Memory}/None ||| RCX | 72 | None ||| N/A | N/A
		0x1804DBF2E xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1804DBF30 mov rbx,[rcx+40h]		; DEBUG: {Register}/RBX {Memory}/None ||| RCX | 64 | None ||| N/A | N/A
		0x1804DBF34 xor r9b,r9b		; DEBUG: {Register}/R9L {Register}/R9L ||| None | 0 | None ||| N/A | N/A
		0x1804DBF37 mov r8d,edx		; DEBUG: {Register}/R8D {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1804DBF3A lea r11d,[rdi-1]		; DEBUG: {Register}/R11D {Memory}/None ||| RDI | 18446744073709551615 | None ||| N/A | N/A
		0x1804DBF3E test rbx,rbx		; DEBUG: {Register}/RBX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x1804DBF41 je short 00000001804DBF90h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DBF43 mov r10d,[rbx+18h]		; DEBUG: {Register}/R10D {Memory}/None ||| RBX | 24 | None ||| N/A | N/A
		0x1804DBF47 cmp r11d,r10d		; DEBUG: {Register}/R11D {Register}/R10D ||| None | 0 | None ||| N/A | N/A
		0x1804DBF4A jae short 00000001804DBFABh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DBF4C mov rcx,[rbx+rdi*8+18h]		; DEBUG: {Register}/RCX {Memory}/None ||| RBX | 24 | RDI ||| N/A | N/A
		0x1804DBF51 test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x1804DBF54 je short 00000001804DBF90h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DBF56 mov eax,[rcx+18h]		; DEBUG: {Register}/EAX {Memory}/None ||| RCX | 24 | None ||| N/A | N/A
		0x1804DBF59 cmp r8d,eax		; DEBUG: {Register}/R8D {Register}/EAX ||| None | 0 | None ||| N/A | N/A
		0x1804DBF5C jge short 00000001804DBF81h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DBF5E cmp edx,eax		; DEBUG: {Register}/EDX {Register}/EAX ||| None | 0 | None ||| N/A | N/A
		0x1804DBF60 jae short 00000001804DBF98h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DBF62 movsxd rax,edx		; DEBUG: {Register}/RAX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1804DBF65 mov rcx,[rcx+rax*8+20h]		; DEBUG: {Register}/RCX {Memory}/None ||| RCX | 32 | RAX ||| N/A | N/A
		0x1804DBF6A test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x1804DBF6D je short 00000001804DBF90h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DBF6F cmp byte ptr [rcx+2Ch],0		; DEBUG: {Memory}/None {Immediate8}/None ||| RCX | 44 | None ||| N/A | 0
		0x1804DBF73 je short 00000001804DBF7Ah		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DBF75 movzx r9d,byte ptr [rcx+2Dh]		; DEBUG: {Register}/R9D {Memory}/None ||| RCX | 45 | None ||| N/A | N/A
		0x1804DBF7A inc edx		; DEBUG: {Register}/EDX {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1804DBF7C mov r8d,edx		; DEBUG: {Register}/R8D {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1804DBF7F jmp short 00000001804DBF47h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DBF81 mov rbx,[rsp+30h]		; DEBUG: {Register}/RBX {Memory}/None ||| RSP | 48 | None ||| N/A | N/A
		0x1804DBF86 movzx eax,r9b		; DEBUG: {Register}/EAX {Register}/R9L ||| None | 0 | None ||| N/A | N/A
		0x1804DBF8A add rsp,20h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 32
		0x1804DBF8E pop rdi		; DEBUG: {Register}/RDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1804DBF8F ret		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1804DBF90 xor ecx,ecx		; DEBUG: {Register}/ECX {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x1804DBF92 call 000000018012BDA0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DBF97 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.Boolean BoatAlligatorManager::IsAllBossKilled():
		End of function at 0x1804DBF98
		Absolute End is at 0x1804DBF98
		Identified Jump Destination addresses:

		0x1804DBF25: Saves the content of rdi to the stack
		0x1804DBF2A: [!] Reads field m_idx from {'this' (function parameter, type BoatAlligatorManager)} and stores in a new local {'m_idx' (type System.Int32)}

		0x1804DBF2E: Clears register rdx, yielding zero-local {'local2' (type System.Int32)}
		0x1804DBF30: [!] Reads field m_alligator from {'this' (function parameter, type BoatAlligatorManager)} and stores in a new local {'m_alligator' (type BoatAlligator[][])}

		0x1804DBF34: Clears register r9, yielding zero-local {'local4' (type System.Int32)}
		0x1804DBF37: Copies {'local2' (type System.Int32)} from rdx into r8
		0x1804DBF3A: Subtracts 1 from m_idx and stores the result in local5
		0x1804DBF3E: [!] Compares {'m_alligator' (type BoatAlligator[][])} and 0
		0x1804DBF41: Jumps to 0x1804DBF90 (which throws a NRE) if m_alligator equals 0. Implicitly present in managed code, so ignored here.
		0x1804DBF43: Reads the length of the array "{'m_alligator' (type BoatAlligator[][])}" and stores it in new local {'length' (type System.Int32)} in register r10

		Potential Loop Start (0x1804DBF47):
		0x1804DBF47: [!] Compares {'local5' (type System.Int32)} and {'length' (type System.Int32)}
		0x1804DBF4A: Jumps to 0x1804DBFAB (which throws a NRE) if {'local5' (type System.Int32)} is greater than or equal to {'length' (type System.Int32)}. Implicitly present in managed code, so ignored here.
		0x1804DBF51: [!] Compares {'this' (function parameter, type BoatAlligatorManager)} and 0
		0x1804DBF54: Jumps to 0x1804DBF90 (which throws a NRE) if this equals 0. Implicitly present in managed code, so ignored here.
		0x1804DBF56: [!] Reads field m_fxRidePref from {'this' (function parameter, type BoatAlligatorManager)} and stores in a new local {'m_fxRidePref' (type UnityEngine.GameObject)}

		0x1804DBF59: [!] Compares {'local2' (type System.Int32)} and {'m_fxRidePref' (type UnityEngine.GameObject)}
		0x1804DBF5C: Jumps to 0x1804DBF81 (which is an if statement's body) if {'local2' (type System.Int32)} is greater than or equal to {'m_fxRidePref' (type UnityEngine.GameObject)} ;  - Increasing indentation - is standard if, unimportant is False

		0x1804DBF5E: [!] Compares {'local2' (type System.Int32)} and {'m_fxRidePref' (type UnityEngine.GameObject)}
		0x1804DBF60: Jumps to 0x1804DBF98 (which throws a NRE) if {'local2' (type System.Int32)} is greater than or equal to {'m_fxRidePref' (type UnityEngine.GameObject)}. Implicitly present in managed code, so ignored here.
		0x1804DBF62: Copies {'local2' (type System.Int32)} from rdx into rax
		0x1804DBF6A: [!] Compares {'this' (function parameter, type BoatAlligatorManager)} and 0
		0x1804DBF6D: Jumps to 0x1804DBF90 (which throws a NRE) if this equals 0. Implicitly present in managed code, so ignored here.
		0x1804DBF6F: [!] Compares  and 0
		0x1804DBF73: Jumps to 0x1804DBF7A (which is an if statement's body) if  equals 0 ;  - Increasing indentation - is standard if, unimportant is False

		0x1804DBF75: [!] Reads field  from {'this' (function parameter, type BoatAlligatorManager)} and stores in a new local 

		0x1804DBF7A: [!] Adds 1 to the value {'local2' (type System.Int32)}, stored in rdx
		0x1804DBF7C: Copies {'local2' (type System.Int32)} from rdx into r8
		0x1804DBF7F: Jumps to 0x1804DBF47 - which is still in this function, but further up. Probably indicative that this is a loop.
		0x1804DBF81: Reads unknown value in stack, offset 48 (0x30) and stores the pointer in register rbx as new constant constant5
		0x1804DBF86: Copies {'local4' (type System.Int32)} from r9 into rax
		0x1804DBF8F: [!] Returns {'local4' (type System.Int32)} from the function

		0x1804DBF92: [!] Constructs and throws an exception of kind System.NullReferenceException




	Generated Pseudocode:

	Declaring Type: BoatAlligatorManager
	System.Boolean IsAllBossKilled()
		System.Int32 m_idx = this.m_idx
		ulong local2 = 0
		BoatAlligator[][] m_alligator = this.m_alligator
		ulong local4 = 0
		System.Int32 local5 = m_idx - 1
		System.Int32 length = m_alligator.Length
		UnityEngine.GameObject m_fxRidePref = this.m_fxRidePref

		if (local2 < m_fxRidePref)

		    if ( != 0)
		          = this.
		    endif
            
		    local2 += 1
		endwhile
        
		goto INSN_1804DBFAB
        
		return local4
		throw new System.NullReferenceException()


Generated IL:
	Action of type Cpp2IL.Core.Analysis.Actions.x86.Important.JumpIfZeroOrNullAction at (0x1804DBF73) is corrupt (One of the arguments is null) and cannot be created as IL. Aborting here.


Method: BoatAttachPosition BoatAlligatorManager::GetBoatAttachPosition():	Method Body (x86 ASM):
		0x180270D00 mov rax,[rcx+38h]		; DEBUG: {Register}/RAX {Memory}/None ||| RCX | 56 | None ||| N/A | N/A
		0x180270D04 ret		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180270D05 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method BoatAttachPosition BoatAlligatorManager::GetBoatAttachPosition():
		End of function at 0x180270D06
		Absolute End is at 0x180270D06
		Identified Jump Destination addresses:

		0x180270D00: [!] Reads field m_boatAttachPosition from {'this' (function parameter, type BoatAlligatorManager)} and stores in a new local {'m_boatAttachPosition' (type BoatAttachPosition)}

		0x180270D04: [!] Returns {'m_boatAttachPosition' (type BoatAttachPosition)} from the function




	Generated Pseudocode:

	Declaring Type: BoatAlligatorManager
	BoatAttachPosition GetBoatAttachPosition()
		BoatAttachPosition m_boatAttachPosition = this.m_boatAttachPosition
		return m_boatAttachPosition


Generated IL:
	IL_0000: ldarg.0
	IL_0001: ldfld BoatAttachPosition BoatAlligatorManager::m_boatAttachPosition
	IL_0006: ret
	

Method: System.Int32 BoatAlligatorManager::GetSpawnCount():	Method Body (x86 ASM):
		0x1804DBD30 sub rsp,28h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 40
		0x1804DBD34 mov rax,[rcx+30h]		; DEBUG: {Register}/RAX {Memory}/None ||| RCX | 48 | None ||| N/A | N/A
		0x1804DBD38 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1804DBD3B je short 00000001804DBD45h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DBD3D mov eax,[rax+18h]		; DEBUG: {Register}/EAX {Memory}/None ||| RAX | 24 | None ||| N/A | N/A
		0x1804DBD40 add rsp,28h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 40
		0x1804DBD44 ret		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1804DBD45 xor ecx,ecx		; DEBUG: {Register}/ECX {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x1804DBD47 call 000000018012BDA0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DBD4C int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.Int32 BoatAlligatorManager::GetSpawnCount():
		End of function at 0x1804DBD4D
		Absolute End is at 0x1804DBD4D
		Identified Jump Destination addresses:

		0x1804DBD34: [!] Reads field m_spawnPoints from {'this' (function parameter, type BoatAlligatorManager)} and stores in a new local {'m_spawnPoints' (type UnityEngine.Transform[])}

		0x1804DBD38: [!] Compares {'m_spawnPoints' (type UnityEngine.Transform[])} and 0
		0x1804DBD3B: Jumps to 0x1804DBD45 (which throws a NRE) if m_spawnPoints equals 0. Implicitly present in managed code, so ignored here.
		0x1804DBD3D: Reads the length of the array "{'m_spawnPoints' (type UnityEngine.Transform[])}" and stores it in new local {'length' (type System.Int32)} in register rax
		0x1804DBD44: [!] Returns {'length' (type System.Int32)} from the function

		0x1804DBD47: [!] Constructs and throws an exception of kind System.NullReferenceException




	Generated Pseudocode:

	Declaring Type: BoatAlligatorManager
	System.Int32 GetSpawnCount()
		UnityEngine.Transform[] m_spawnPoints = this.m_spawnPoints
		System.Int32 length = m_spawnPoints.Length
		return length
		throw new System.NullReferenceException()


Generated IL:
	IL_0000: ldarg.0
	IL_0001: ldfld UnityEngine.Transform[] BoatAlligatorManager::m_spawnPoints
	IL_0006: call System.Int32 System.Array::get_Length()
	IL_000b: ret
	IL_000c: newobj System.Void System.NullReferenceException::.ctor()
	IL_0011: throw
	

Method: System.Void BoatAlligatorManager::Cleanup():	Method Body (x86 ASM):
		0x1804DB9C0 push r14		; DEBUG: {Register}/R14 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1804DB9C2 sub rsp,30h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 48
		0x1804DB9C6 cmp byte ptr [18183E7E1h],0		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6467872737 | None ||| N/A | 0
		0x1804DB9CD mov r14,rcx		; DEBUG: {Register}/R14 {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x1804DB9D0 jne short 00000001804DB9E4h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DB9D2 mov ecx,[18151465Ch]		; DEBUG: {Register}/ECX {Memory}/None ||| RIP | 6464554588 | None ||| N/A | N/A
		0x1804DB9D8 call 00000001800FEB90h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DB9DD mov byte ptr [18183E7E1h],1		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6467872737 | None ||| N/A | 1
		0x1804DB9E4 mov rax,[r14+30h]		; DEBUG: {Register}/RAX {Memory}/None ||| R14 | 48 | None ||| N/A | N/A
		0x1804DB9E8 mov [rsp+40h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RSP | 64 | None ||| N/A | N/A
		0x1804DB9ED mov [rsp+48h],rbp		; DEBUG: {Memory}/None {Register}/RBP ||| RSP | 72 | None ||| N/A | N/A
		0x1804DB9F2 mov [rsp+50h],rsi		; DEBUG: {Memory}/None {Register}/RSI ||| RSP | 80 | None ||| N/A | N/A
		0x1804DB9F7 mov [rsp+28h],rdi		; DEBUG: {Memory}/None {Register}/RDI ||| RSP | 40 | None ||| N/A | N/A
		0x1804DB9FC mov [rsp+20h],r15		; DEBUG: {Memory}/None {Register}/R15 ||| RSP | 32 | None ||| N/A | N/A
		0x1804DBA01 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1804DBA04 je near ptr 00000001804DBC59h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DBA0A mov edx,[rax+18h]		; DEBUG: {Register}/EDX {Memory}/None ||| RAX | 24 | None ||| N/A | N/A
		0x1804DBA0D mov rcx,[18189AAC0h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468250304 | None ||| N/A | N/A
		0x1804DBA14 call 0000000180141320h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DBA19 xor ebp,ebp		; DEBUG: {Register}/EBP {Register}/EBP ||| None | 0 | None ||| N/A | N/A
		0x1804DBA1B mov [r14+40h],rax		; DEBUG: {Memory}/None {Register}/RAX ||| R14 | 64 | None ||| N/A | N/A
		0x1804DBA1F mov esi,ebp		; DEBUG: {Register}/ESI {Register}/EBP ||| None | 0 | None ||| N/A | N/A
		0x1804DBA21 mov ecx,ebp		; DEBUG: {Register}/ECX {Register}/EBP ||| None | 0 | None ||| N/A | N/A
		0x1804DBA23 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1804DBA26 je near ptr 00000001804DBC59h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DBA2C mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1804DBA2F nop		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1804DBA30 cmp ecx,[rax+18h]		; DEBUG: {Register}/ECX {Memory}/None ||| RAX | 24 | None ||| N/A | N/A
		0x1804DBA33 jge near ptr 00000001804DBB1Ah		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DBA39 mov rax,[r14+30h]		; DEBUG: {Register}/RAX {Memory}/None ||| R14 | 48 | None ||| N/A | N/A
		0x1804DBA3D test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1804DBA40 je near ptr 00000001804DBC59h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DBA46 movsxd rcx,esi		; DEBUG: {Register}/RCX {Register}/ESI ||| None | 0 | None ||| N/A | N/A
		0x1804DBA49 cmp esi,[rax+18h]		; DEBUG: {Register}/ESI {Memory}/None ||| RAX | 24 | None ||| N/A | N/A
		0x1804DBA4C jae near ptr 00000001804DBC20h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DBA52 lea r15,[rcx*8+20h]		; DEBUG: {Register}/R15 {Memory}/None ||| None | 32 | RCX ||| N/A | N/A
		0x1804DBA5A mov rcx,[r15+rax]		; DEBUG: {Register}/RCX {Memory}/None ||| R15 | 0 | RAX ||| N/A | N/A
		0x1804DBA5E test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x1804DBA61 je near ptr 00000001804DBC59h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DBA67 mov rdx,[181871270h]		; DEBUG: {Register}/RDX {Memory}/None ||| RIP | 6468080240 | None ||| N/A | N/A
		0x1804DBA6E call 000000018090AEA0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DBA73 mov rdi,rax		; DEBUG: {Register}/RDI {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1804DBA76 test rbx,rbx		; DEBUG: {Register}/RBX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x1804DBA79 je near ptr 00000001804DBC59h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DBA7F test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1804DBA82 je short 00000001804DBA9Ch		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DBA84 mov rdx,[rbx]		; DEBUG: {Register}/RDX {Memory}/None ||| RBX | 0 | None ||| N/A | N/A
		0x1804DBA87 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1804DBA8A mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1804DBA8E call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DBA93 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1804DBA96 je near ptr 00000001804DBBD4h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DBA9C cmp esi,[rbx+18h]		; DEBUG: {Register}/ESI {Memory}/None ||| RBX | 24 | None ||| N/A | N/A
		0x1804DBA9F jae near ptr 00000001804DBC0Dh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DBAA5 mov [r15+rbx],rdi		; DEBUG: {Memory}/None {Register}/RDI ||| R15 | 0 | RBX ||| N/A | N/A
		0x1804DBAA9 mov ebx,ebp		; DEBUG: {Register}/EBX {Register}/EBP ||| None | 0 | None ||| N/A | N/A
		0x1804DBAAB nop dword ptr [rax+rax]		; DEBUG: {Memory}/None {Register}/None ||| RAX | 0 | RAX ||| N/A | N/A
		0x1804DBAB0 mov rax,[r14+40h]		; DEBUG: {Register}/RAX {Memory}/None ||| R14 | 64 | None ||| N/A | N/A
		0x1804DBAB4 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1804DBAB7 je near ptr 00000001804DBC59h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DBABD cmp esi,[rax+18h]		; DEBUG: {Register}/ESI {Memory}/None ||| RAX | 24 | None ||| N/A | N/A
		0x1804DBAC0 jae near ptr 00000001804DBBFAh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DBAC6 mov rcx,[r15+rax]		; DEBUG: {Register}/RCX {Memory}/None ||| R15 | 0 | RAX ||| N/A | N/A
		0x1804DBACA test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x1804DBACD je near ptr 00000001804DBC59h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DBAD3 cmp ebx,[rcx+18h]		; DEBUG: {Register}/EBX {Memory}/None ||| RCX | 24 | None ||| N/A | N/A
		0x1804DBAD6 jge short 00000001804DBB11h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DBAD8 jae near ptr 00000001804DBBE7h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DBADE movsxd rax,ebx		; DEBUG: {Register}/RAX {Register}/EBX ||| None | 0 | None ||| N/A | N/A
		0x1804DBAE1 mov rdi,[rcx+rax*8+20h]		; DEBUG: {Register}/RDI {Memory}/None ||| RCX | 32 | RAX ||| N/A | N/A
		0x1804DBAE6 mov rcx,[18188D758h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468196184 | None ||| N/A | N/A
		0x1804DBAED test byte ptr [rcx+127h],2		; DEBUG: {Memory}/None {Immediate8}/None ||| RCX | 295 | None ||| N/A | 2
		0x1804DBAF4 je short 00000001804DBB03h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DBAF6 cmp [rcx+0D8h],ebp		; DEBUG: {Memory}/None {Register}/EBP ||| RCX | 216 | None ||| N/A | N/A
		0x1804DBAFC jne short 00000001804DBB03h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DBAFE call 000000018010EAF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DBB03 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1804DBB05 mov rcx,rdi		; DEBUG: {Register}/RCX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x1804DBB08 call 0000000180EA50E0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DBB0D inc ebx		; DEBUG: {Register}/EBX {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1804DBB0F jmp short 00000001804DBAB0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DBB11 inc esi		; DEBUG: {Register}/ESI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1804DBB13 mov ecx,esi		; DEBUG: {Register}/ECX {Register}/ESI ||| None | 0 | None ||| N/A | N/A
		0x1804DBB15 jmp near ptr 00000001804DBA2Ch		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DBB1A mov rdx,[181871B40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RIP | 6468082496 | None ||| N/A | N/A
		0x1804DBB21 mov rcx,r14		; DEBUG: {Register}/RCX {Register}/R14 ||| None | 0 | None ||| N/A | N/A
		0x1804DBB24 call 000000018090AEA0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DBB29 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1804DBB2C mov eax,ebp		; DEBUG: {Register}/EAX {Register}/EBP ||| None | 0 | None ||| N/A | N/A
		0x1804DBB2E test rbx,rbx		; DEBUG: {Register}/RBX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x1804DBB31 je near ptr 00000001804DBC59h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DBB37 mov ecx,[rbx+18h]		; DEBUG: {Register}/ECX {Memory}/None ||| RBX | 24 | None ||| N/A | N/A
		0x1804DBB3A cmp eax,ecx		; DEBUG: {Register}/EAX {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x1804DBB3C jge short 00000001804DBBB4h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DBB3E movsxd rdi,ebp		; DEBUG: {Register}/RDI {Register}/EBP ||| None | 0 | None ||| N/A | N/A
		0x1804DBB41 cmp ebp,ecx		; DEBUG: {Register}/EBP {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x1804DBB43 jae near ptr 00000001804DBC46h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DBB49 mov rax,[rbx+rdi*8+20h]		; DEBUG: {Register}/RAX {Memory}/None ||| RBX | 32 | RDI ||| N/A | N/A
		0x1804DBB4E test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1804DBB51 je near ptr 00000001804DBC59h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DBB57 mov rcx,[rax+80h]		; DEBUG: {Register}/RCX {Memory}/None ||| RAX | 128 | None ||| N/A | N/A
		0x1804DBB5E test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x1804DBB61 je near ptr 00000001804DBC59h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DBB67 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1804DBB69 call 0000000180B29690h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DBB6E mov rcx,[18188D758h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468196184 | None ||| N/A | N/A
		0x1804DBB75 mov rsi,rax		; DEBUG: {Register}/RSI {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1804DBB78 test byte ptr [rcx+127h],2		; DEBUG: {Memory}/None {Immediate8}/None ||| RCX | 295 | None ||| N/A | 2
		0x1804DBB7F je short 00000001804DBB8Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DBB81 cmp dword ptr [rcx+0D8h],0		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RCX | 216 | None ||| N/A | 0
		0x1804DBB88 jne short 00000001804DBB8Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DBB8A call 000000018010EAF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DBB8F xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1804DBB91 mov rcx,rsi		; DEBUG: {Register}/RCX {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x1804DBB94 call 0000000180EA50E0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DBB99 cmp ebp,[rbx+18h]		; DEBUG: {Register}/EBP {Memory}/None ||| RBX | 24 | None ||| N/A | N/A
		0x1804DBB9C jae near ptr 00000001804DBC33h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DBBA2 mov rcx,[rbx+rdi*8+20h]		; DEBUG: {Register}/RCX {Memory}/None ||| RBX | 32 | RDI ||| N/A | N/A
		0x1804DBBA7 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1804DBBA9 call 0000000180EA50E0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DBBAE inc ebp		; DEBUG: {Register}/EBP {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1804DBBB0 mov eax,ebp		; DEBUG: {Register}/EAX {Register}/EBP ||| None | 0 | None ||| N/A | N/A
		0x1804DBBB2 jmp short 00000001804DBB37h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DBBB4 mov r15,[rsp+20h]		; DEBUG: {Register}/R15 {Memory}/None ||| RSP | 32 | None ||| N/A | N/A
		0x1804DBBB9 mov rdi,[rsp+28h]		; DEBUG: {Register}/RDI {Memory}/None ||| RSP | 40 | None ||| N/A | N/A
		0x1804DBBBE mov rsi,[rsp+50h]		; DEBUG: {Register}/RSI {Memory}/None ||| RSP | 80 | None ||| N/A | N/A
		0x1804DBBC3 mov rbp,[rsp+48h]		; DEBUG: {Register}/RBP {Memory}/None ||| RSP | 72 | None ||| N/A | N/A
		0x1804DBBC8 mov rbx,[rsp+40h]		; DEBUG: {Register}/RBX {Memory}/None ||| RSP | 64 | None ||| N/A | N/A
		0x1804DBBCD add rsp,30h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 48
		0x1804DBBD1 pop r14		; DEBUG: {Register}/R14 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1804DBBD3 ret		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1804DBBD4 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DBBD9 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1804DBBDC xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1804DBBDF xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1804DBBE1 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DBBE6 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.Void BoatAlligatorManager::Cleanup():
		End of function at 0x1804DBBE7
		Absolute End is at 0x1804DBBE7
		Identified Jump Destination addresses:

		0x1804DB9C0: Saves the content of r14 to the stack
		0x1804DB9C6: Compares {Unknown Global at 0x18183E7E1, first ten bytes are [175 1 0 141 175 1 0 224 60 103], or as chars "¯ ¯ à<g"} and 0
		0x1804DB9CD: Copies {'this' (function parameter, type BoatAlligatorManager)} from rcx into r14
		0x1804DB9D0: Jumps to 0x1804DB9E4 if {Unknown Global at 0x18183E7E1, first ten bytes are [175 1 0 141 175 1 0 224 60 103], or as chars "¯ ¯ à<g"} != 0

		0x1804DB9D2: Loads string "O" into register rcx as constant {'constant3' (constant value of type Cpp2IL.Core.Analysis.ResultModels.Il2CppString)}
		0x1804DB9D8: Attempts to load the il2cpp metadata for this method (method id 0) and init it cpp-side.

		0x1804DB9E4: [!] Reads field m_spawnPoints from {'this' (function parameter, type BoatAlligatorManager)} and stores in a new local {'m_spawnPoints' (type UnityEngine.Transform[])}

		0x1804DBA01: [!] Compares {'m_spawnPoints' (type UnityEngine.Transform[])} and 0
		0x1804DBA04: Jumps to 0x1804DBC59 (which throws a NRE) if m_spawnPoints equals 0. Implicitly present in managed code, so ignored here.
		0x1804DBA0A: Reads the length of the array "{'m_spawnPoints' (type UnityEngine.Transform[])}" and stores it in new local {'length' (type System.Int32)} in register rdx
		0x1804DBA0D: Loads the type definition for managed type BoatAlligator[][] as a constant "BoatAlligator[][]" in rcx
		0x1804DBA14: [!] Allocates an array of type BoatAlligator[][] of size length and stores the result as local3 in register rax

		0x1804DBA19: Clears register rbp, yielding zero-local {'local4' (type System.Int32)}
		0x1804DBA1B: [!] Sets the field m_alligator (Type BoatAlligator[][]) on local {'this' (function parameter, type BoatAlligatorManager)} to the value stored in {'local3' (type BoatAlligator[][])}
		0x1804DBA1F: Copies {'local4' (type System.Int32)} from rbp into rsi
		0x1804DBA21: Copies {'local4' (type System.Int32)} from rbp into rcx
		0x1804DBA23: [!] Compares {'local3' (type BoatAlligator[][])} and 0
		0x1804DBA26: Jumps to 0x1804DBC59 (which throws a NRE) if local3 equals 0. Implicitly present in managed code, so ignored here.

		Potential Loop Start (0x1804DBA2C):
		0x1804DBA2C: Copies {'local3' (type BoatAlligator[][])} from rax into rbx
		0x1804DBA30: [!] Compares {'local4' (type System.Int32)} and {Property System.Int32 System.Array::Length() on {'local3' (type BoatAlligator[][])}}
		0x1804DBA33: Jumps to 0x1804DBB1A (which is an if statement's body) if {'local4' (type System.Int32)} is greater than or equal to {Property System.Int32 System.Array::Length() on {'local3' (type BoatAlligator[][])}} ;  - Increasing indentation - is standard if, unimportant is False

		0x1804DBA39: [!] Reads field m_spawnPoints from {'this' (function parameter, type BoatAlligatorManager)} and stores in a new local {'m_spawnPoints2' (type UnityEngine.Transform[])}

		0x1804DBA3D: [!] Compares {'m_spawnPoints2' (type UnityEngine.Transform[])} and 0
		0x1804DBA40: Jumps to 0x1804DBC59 (which throws a NRE) if m_spawnPoints2 equals 0. Implicitly present in managed code, so ignored here.
		0x1804DBA46: Copies {'local4' (type System.Int32)} from rsi into rcx
		0x1804DBA49: [!] Compares {'local4' (type System.Int32)} and {Property System.Int32 System.Array::Length() on {'m_spawnPoints2' (type UnityEngine.Transform[])}}
		0x1804DBA4C: Jumps to 0x1804DBC20 (which throws a NRE) if {'local4' (type System.Int32)} is greater than or equal to {Property System.Int32 System.Array::Length() on {'m_spawnPoints2' (type UnityEngine.Transform[])}}. Implicitly present in managed code, so ignored here.
		0x1804DBA5A: [!] Reads a value from the array {'m_spawnPoints2' (type UnityEngine.Transform[])} at an index specified by the value in , into a new local {'local6' (type UnityEngine.Transform)}

		0x1804DBA5E: [!] Compares {'local6' (type UnityEngine.Transform)} and 0
		0x1804DBA61: Jumps to 0x1804DBC59 (which throws a NRE) if local6 equals 0. Implicitly present in managed code, so ignored here.
		0x1804DBA67: Loads the global generic method reference for method T[] UnityEngine.Component::GetComponentsInChildren<BoatAlligator>() on type UnityEngine.Component and stores the result in constant {'GetComponentsInChildren' (constant value of type Cpp2IL.Core.Analysis.ResultModels.GenericMethodReference)} in rdx
		0x1804DBA6E: [!] Calls managed method T[] UnityEngine.Component::GetComponentsInChildren<BoatAlligator>() on instance {'local6' (type UnityEngine.Transform)} and stores the result in {'componentsInChildren' (type BoatAlligator[])} ;  - Method resolved from concrete implementations at this address, with the help of a constant value to identify which concrete implementation.

		0x1804DBA73: Copies {'componentsInChildren' (type BoatAlligator[])} from rax into rdi
		0x1804DBA76: [!] Compares {'local3' (type BoatAlligator[][])} and 0
		0x1804DBA79: Jumps to 0x1804DBC59 (which throws a NRE) if local3 equals 0. Implicitly present in managed code, so ignored here.
		0x1804DBA7F: [!] Compares {'componentsInChildren' (type BoatAlligator[])} and 0
		0x1804DBA82: Jumps to 0x1804DBA9C (which is an if statement's body) if componentsInChildren equals 0 ;  - Increasing indentation - is standard if, unimportant is False

		0x1804DBA84: Loads the class pointer from local3 into a constant constant12 in register rdx
		0x1804DBA87: Copies {'componentsInChildren' (type BoatAlligator[])} from rax into rcx
		0x1804DBA8A: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='', name='BoatAlligator', parentType=UnityEngine.MonoBehaviour] and stores in register rdx
		0x1804DBA93: [!] Compares {'componentsInChildren' (type BoatAlligator[])} and 0
		0x1804DBA96: Jumps to 0x1804DBBD4 if componentsInChildren equals 0 ;  - This is probably a goto, jumping to 0x1804DBBD4 which is after end of current block @ 0x1804DBA9C (started at 0x1804DBA84)

		0x1804DBA9C: [!] Compares {'local4' (type System.Int32)} and {Property System.Int32 System.Array::Length() on {'local3' (type BoatAlligator[][])}}
		0x1804DBA9F: Jumps to 0x1804DBC0D (which throws a NRE) if {'local4' (type System.Int32)} is greater than or equal to {Property System.Int32 System.Array::Length() on {'local3' (type BoatAlligator[][])}}. Implicitly present in managed code, so ignored here.
		0x1804DBAA9: Copies {'local4' (type System.Int32)} from rbp into rbx

		Potential Loop Start (0x1804DBAB0):
		0x1804DBAB0: [!] Reads field m_alligator from {'this' (function parameter, type BoatAlligatorManager)} and stores in a new local {'m_alligator' (type BoatAlligator[][])}

		0x1804DBAB4: [!] Compares {'m_alligator' (type BoatAlligator[][])} and 0
		0x1804DBAB7: Jumps to 0x1804DBC59 (which throws a NRE) if m_alligator equals 0. Implicitly present in managed code, so ignored here.
		0x1804DBABD: [!] Compares {'local4' (type System.Int32)} and {Property System.Int32 System.Array::Length() on {'m_alligator' (type BoatAlligator[][])}}
		0x1804DBAC0: Jumps to 0x1804DBBFA (which throws a NRE) if {'local4' (type System.Int32)} is greater than or equal to {Property System.Int32 System.Array::Length() on {'m_alligator' (type BoatAlligator[][])}}. Implicitly present in managed code, so ignored here.
		0x1804DBAC6: [!] Reads a value from the array {'m_alligator' (type BoatAlligator[][])} at an index specified by the value in , into a new local {'local9' (type BoatAlligator)}

		0x1804DBACA: [!] Compares {'local9' (type BoatAlligator)} and 0
		0x1804DBACD: Jumps to 0x1804DBC59 (which throws a NRE) if local9 equals 0. Implicitly present in managed code, so ignored here.
		0x1804DBAD3: [!] Compares {'local4' (type System.Int32)} and {field m_anim, read from local {'local9' (type BoatAlligator)}}
		0x1804DBAD6: Jumps to 0x1804DBB11 if {'local4' (type System.Int32)} is greater than or equal to {field m_anim, read from local {'local9' (type BoatAlligator)}} ;  - This is probably a goto, jumping to 0x1804DBB11 which is after end of current block @ 0x1804DBA9C (started at 0x1804DBA84)

		0x1804DBAD8: Jumps to 0x1804DBBE7 (which throws a NRE) if {'local4' (type System.Int32)} is greater than or equal to {field m_anim, read from local {'local9' (type BoatAlligator)}}. Implicitly present in managed code, so ignored here.
		0x1804DBADE: Copies {'local4' (type System.Int32)} from rbx into rax
		0x1804DBAE6: Loads the type definition for managed type UnityEngine.Object as a constant "Object" in rcx
		0x1804DBAED: Compares "{il2cpp field on {'Object' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" and 2
		0x1804DBAF4: Jumps to 0x1804DBB03 if "{il2cpp field on {'Object' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" equals 2 ;  - This is probably a goto, jumping to 0x1804DBB03 which is after end of current block @ 0x1804DBA9C (started at 0x1804DBA84)

		0x1804DBAF6: Compares "{il2cpp field on {'Object' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" and {'local4' (type System.Int32)}
		0x1804DBAFC: Jumps to 0x1804DBB03 if "{il2cpp field on {'Object' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" != {'local4' (type System.Int32)} ;  - This is probably a goto, jumping to 0x1804DBB03 which is after end of current block @ 0x1804DBA9C (started at 0x1804DBA84)

		0x1804DBAFE: Calls the il2cpp cctor for the type UnityEngine.Object
		0x1804DBB05: Copies {'componentsInChildren' (type BoatAlligator[])} from rdi into rcx
		0x1804DBB08: [!] Calls static managed method System.Void UnityEngine.Object::Destroy(UnityEngine.Object) with arguments [{'componentsInChildren' (type BoatAlligator[])}]

		0x1804DBB0D: [!] Adds 1 to the value {'local4' (type System.Int32)}, stored in rbx
		0x1804DBB0F: Jumps to 0x1804DBAB0 - which is still in this function, but further up. Probably indicative that this is a loop.
		0x1804DBB11: [!] Adds 1 to the value {'local4' (type System.Int32)}, stored in rsi
		0x1804DBB13: Copies {'local4' (type System.Int32)} from rsi into rcx
		0x1804DBB15: Jumps to 0x1804DBA2C - which is still in this function, but further up. Probably indicative that this is a loop.
		0x1804DBB1A: Loads the global generic method reference for method T[] UnityEngine.Component::GetComponentsInChildren<UnityStandardAssets.Utility.WaypointProgressTracker>() on type UnityEngine.Component and stores the result in constant {'GetComponentsInChildren' (constant value of type Cpp2IL.Core.Analysis.ResultModels.GenericMethodReference)} in rdx
		0x1804DBB21: Copies {'this' (function parameter, type BoatAlligatorManager)} from r14 into rcx
		0x1804DBB24: [!] Calls managed method T[] UnityEngine.Component::GetComponentsInChildren<UnityStandardAssets.Utility.WaypointProgressTracker>() on instance {'this' (function parameter, type BoatAlligatorManager)} and stores the result in {'componentsInChildren2' (type UnityStandardAssets.Utility.WaypointProgressTracker[])} ;  - Method resolved from concrete implementations at this address, with the help of a constant value to identify which concrete implementation.

		0x1804DBB29: Copies {'componentsInChildren2' (type UnityStandardAssets.Utility.WaypointProgressTracker[])} from rax into rbx
		0x1804DBB2C: Copies {'local4' (type System.Int32)} from rbp into rax
		0x1804DBB2E: [!] Compares {'componentsInChildren2' (type UnityStandardAssets.Utility.WaypointProgressTracker[])} and 0
		0x1804DBB31: Jumps to 0x1804DBC59 (which throws a NRE) if componentsInChildren2 equals 0. Implicitly present in managed code, so ignored here.

		Potential Loop Start (0x1804DBB37):
		0x1804DBB37: Reads the length of the array "{'componentsInChildren2' (type UnityStandardAssets.Utility.WaypointProgressTracker[])}" and stores it in new local {'length2' (type System.Int32)} in register rcx
		0x1804DBB3A: [!] Compares {'local4' (type System.Int32)} and {'length2' (type System.Int32)}
		0x1804DBB3C: Jumps to 0x1804DBBB4 if {'local4' (type System.Int32)} is greater than or equal to {'length2' (type System.Int32)} ;  - This is probably a goto, jumping to 0x1804DBBB4 which is after end of current block @ 0x1804DBA9C (started at 0x1804DBA84)

		0x1804DBB3E: Copies {'local4' (type System.Int32)} from rbp into rdi
		0x1804DBB41: [!] Compares {'local4' (type System.Int32)} and {'length2' (type System.Int32)}
		0x1804DBB43: Jumps to 0x1804DBC46 (which throws a NRE) if {'local4' (type System.Int32)} is greater than or equal to {'length2' (type System.Int32)}. Implicitly present in managed code, so ignored here.
		0x1804DBB49: Copies the element in the array {'componentsInChildren2' (type UnityStandardAssets.Utility.WaypointProgressTracker[])} at the index specified by {'local4' (type System.Int32)} into new local {'waypointProgressTracker' (type UnityStandardAssets.Utility.WaypointProgressTracker)}
		0x1804DBB4E: [!] Compares {'waypointProgressTracker' (type UnityStandardAssets.Utility.WaypointProgressTracker)} and 0
		0x1804DBB51: Jumps to 0x1804DBC59 (which throws a NRE) if waypointProgressTracker equals 0. Implicitly present in managed code, so ignored here.
		0x1804DBB57: [!] Reads field target from {'waypointProgressTracker' (type UnityStandardAssets.Utility.WaypointProgressTracker)} and stores in a new local {'target' (type UnityEngine.Transform)}

		0x1804DBB5E: [!] Compares {'target' (type UnityEngine.Transform)} and 0
		0x1804DBB61: Jumps to 0x1804DBC59 (which throws a NRE) if target equals 0. Implicitly present in managed code, so ignored here.
		0x1804DBB69: [!] Calls managed method UnityEngine.GameObject UnityEngine.Component::get_gameObject() on instance {'target' (type UnityEngine.Transform)} and stores the result in {'gameObject' (type UnityEngine.GameObject)}

		0x1804DBB6E: Loads the type definition for managed type UnityEngine.Object as a constant "Object" in rcx
		0x1804DBB75: Copies {'gameObject' (type UnityEngine.GameObject)} from rax into rsi
		0x1804DBB78: Compares "{il2cpp field on {'Object' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" and 2
		0x1804DBB7F: Jumps to 0x1804DBB8F if "{il2cpp field on {'Object' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" equals 2 ;  - This is probably a goto, jumping to 0x1804DBB8F which is after end of current block @ 0x1804DBA9C (started at 0x1804DBA84)

		0x1804DBB81: Compares "{il2cpp field on {'Object' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" and 0
		0x1804DBB88: Jumps to 0x1804DBB8F if "{il2cpp field on {'Object' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" != 0 ;  - This is probably a goto, jumping to 0x1804DBB8F which is after end of current block @ 0x1804DBA9C (started at 0x1804DBA84)

		0x1804DBB8A: Calls the il2cpp cctor for the type UnityEngine.Object
		0x1804DBB91: Copies {'gameObject' (type UnityEngine.GameObject)} from rsi into rcx
		0x1804DBB94: [!] Calls static managed method System.Void UnityEngine.Object::Destroy(UnityEngine.Object) with arguments [{'gameObject' (type UnityEngine.GameObject)}]

		0x1804DBB99: [!] Compares {'local4' (type System.Int32)} and {Property System.Int32 System.Array::Length() on {'componentsInChildren2' (type UnityStandardAssets.Utility.WaypointProgressTracker[])}}
		0x1804DBB9C: Jumps to 0x1804DBC33 (which throws a NRE) if {'local4' (type System.Int32)} is greater than or equal to {Property System.Int32 System.Array::Length() on {'componentsInChildren2' (type UnityStandardAssets.Utility.WaypointProgressTracker[])}}. Implicitly present in managed code, so ignored here.
		0x1804DBBA2: Copies the element in the array {'componentsInChildren2' (type UnityStandardAssets.Utility.WaypointProgressTracker[])} at the index specified by {'local4' (type System.Int32)} into new local {'waypointProgressTracker2' (type UnityStandardAssets.Utility.WaypointProgressTracker)}
		0x1804DBBA9: [!] Calls static managed method System.Void UnityEngine.Object::Destroy(UnityEngine.Object) with arguments [{'waypointProgressTracker2' (type UnityStandardAssets.Utility.WaypointProgressTracker)}]

		0x1804DBBAE: [!] Adds 1 to the value {'local4' (type System.Int32)}, stored in rbp
		0x1804DBBB0: Copies {'local4' (type System.Int32)} from rbp into rax
		0x1804DBBB2: Jumps to 0x1804DBB37 - which is still in this function, but further up. Probably indicative that this is a loop.
		0x1804DBBB4: Reads unknown value in stack, offset 32 (0x20) and stores the pointer in register r15 as new constant constant29
		0x1804DBBB9: Reads unknown value in stack, offset 40 (0x28) and stores the pointer in register rdi as new constant constant30
		0x1804DBBBE: Reads unknown value in stack, offset 80 (0x50) and stores the pointer in register rsi as new constant constant31
		0x1804DBBC3: Reads unknown value in stack, offset 72 (0x48) and stores the pointer in register rbp as new constant constant32
		0x1804DBBC8: Reads unknown value in stack, offset 64 (0x40) and stores the pointer in register rbx as new constant constant33
		0x1804DBBD3: [!] Returns from the function

		0x1804DBBD9: Copies {'local4' (type System.Int32)} from rax into rcx



	Generated Pseudocode:

	Declaring Type: BoatAlligatorManager
	System.Void Cleanup()
		UnityEngine.Transform[] m_spawnPoints = this.m_spawnPoints
		System.Int32 length = m_spawnPoints.Length
		BoatAlligator[][] local3 = new BoatAlligator[][length]
		ulong local4 = 0
		this.m_alligator = local3

		if (local4 < local3.Length)
		    UnityEngine.Transform[] m_spawnPoints2 = this.m_spawnPoints
		    UnityEngine.Transform local6 = m_spawnPoints2[]

		    BoatAlligator[] componentsInChildren = local6.GetComponentsInChildren<BoatAlligator>()

		    if (componentsInChildren != 0)

		        if (componentsInChildren == 0)
                    goto INSN_1804DBBD4
                endif
		    endif
            
		    BoatAlligator[][] m_alligator = this.m_alligator
		    BoatAlligator local9 = m_alligator[]

		    if (local4 >= local9.m_anim)
                goto INSN_1804DBB11
            endif

		    UnityEngine.Object.Destroy(componentsInChildren) //(Object obj)
		    local4 += 1

		    INSN_1804DBB11:
		    local4 += 1
		endif
        

		UnityStandardAssets.Utility.WaypointProgressTracker[] componentsInChildren2 = base.GetComponentsInChildren<UnityStandardAssets.Utility.WaypointProgressTracker>()
		System.Int32 length2 = componentsInChildren2.Length

		if (local4 >= length2)
            goto INSN_1804DBBB4
        endif
		UnityStandardAssets.Utility.WaypointProgressTracker waypointProgressTracker = componentsInChildren2[local4]
		UnityEngine.Transform target = waypointProgressTracker.target

		UnityEngine.GameObject gameObject = target.gameObject

		UnityEngine.Object.Destroy(gameObject) //(Object obj)
		UnityStandardAssets.Utility.WaypointProgressTracker waypointProgressTracker2 = componentsInChildren2[local4]

		UnityEngine.Object.Destroy(waypointProgressTracker2) //(Object obj)
		local4 += 1

		INSN_1804DBBB4:
		return

		INSN_1804DBBD4:


Generated IL:
	Don't know how to write IL for Cpp2IL.Core.Analysis.Actions.x86.Important.RegOffsetArrayValueReadRegToRegAction. Aborting here.


Method: System.Void BoatAlligatorManager::ChangeStateNone():	Method Body (x86 ASM):
		0x1804DB800 push rbp		; DEBUG: {Register}/RBP {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1804DB802 sub rsp,20h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 32
		0x1804DB806 cmp byte ptr [18183E7E2h],0		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6467872738 | None ||| N/A | 0
		0x1804DB80D mov rbp,rcx		; DEBUG: {Register}/RBP {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x1804DB810 jne short 00000001804DB824h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DB812 mov ecx,[18151464Ch]		; DEBUG: {Register}/ECX {Memory}/None ||| RIP | 6464554572 | None ||| N/A | N/A
		0x1804DB818 call 00000001800FEB90h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DB81D mov byte ptr [18183E7E2h],1		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6467872738 | None ||| N/A | 1
		0x1804DB824 mov rax,[rbp+30h]		; DEBUG: {Register}/RAX {Memory}/None ||| RBP | 48 | None ||| N/A | N/A
		0x1804DB828 mov [rsp+30h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RSP | 48 | None ||| N/A | N/A
		0x1804DB82D mov [rsp+38h],rsi		; DEBUG: {Memory}/None {Register}/RSI ||| RSP | 56 | None ||| N/A | N/A
		0x1804DB832 mov [rsp+40h],rdi		; DEBUG: {Memory}/None {Register}/RDI ||| RSP | 64 | None ||| N/A | N/A
		0x1804DB837 mov [rsp+48h],r14		; DEBUG: {Memory}/None {Register}/R14 ||| RSP | 72 | None ||| N/A | N/A
		0x1804DB83C test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1804DB83F je near ptr 00000001804DB9B4h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DB845 mov edx,[rax+18h]		; DEBUG: {Register}/EDX {Memory}/None ||| RAX | 24 | None ||| N/A | N/A
		0x1804DB848 mov rcx,[18189AAC0h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468250304 | None ||| N/A | N/A
		0x1804DB84F call 0000000180141320h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DB854 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1804DB857 mov [rbp+40h],rax		; DEBUG: {Memory}/None {Register}/RAX ||| RBP | 64 | None ||| N/A | N/A
		0x1804DB85B xor eax,eax		; DEBUG: {Register}/EAX {Register}/EAX ||| None | 0 | None ||| N/A | N/A
		0x1804DB85D xor ebx,ebx		; DEBUG: {Register}/EBX {Register}/EBX ||| None | 0 | None ||| N/A | N/A
		0x1804DB85F test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x1804DB862 je near ptr 00000001804DB9B4h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DB868 mov rdi,rcx		; DEBUG: {Register}/RDI {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x1804DB86B nop dword ptr [rax+rax]		; DEBUG: {Memory}/None {Register}/None ||| RAX | 0 | RAX ||| N/A | N/A
		0x1804DB870 cmp eax,[rcx+18h]		; DEBUG: {Register}/EAX {Memory}/None ||| RCX | 24 | None ||| N/A | N/A
		0x1804DB873 jge near ptr 00000001804DB93Bh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DB879 mov rax,[rbp+30h]		; DEBUG: {Register}/RAX {Memory}/None ||| RBP | 48 | None ||| N/A | N/A
		0x1804DB87D test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1804DB880 je near ptr 00000001804DB9B4h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DB886 movsxd rcx,ebx		; DEBUG: {Register}/RCX {Register}/EBX ||| None | 0 | None ||| N/A | N/A
		0x1804DB889 cmp ebx,[rax+18h]		; DEBUG: {Register}/EBX {Memory}/None ||| RAX | 24 | None ||| N/A | N/A
		0x1804DB88C jae near ptr 00000001804DB9A1h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DB892 lea r14,[rcx*8+20h]		; DEBUG: {Register}/R14 {Memory}/None ||| None | 32 | RCX ||| N/A | N/A
		0x1804DB89A mov rcx,[r14+rax]		; DEBUG: {Register}/RCX {Memory}/None ||| R14 | 0 | RAX ||| N/A | N/A
		0x1804DB89E test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x1804DB8A1 je near ptr 00000001804DB9B4h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DB8A7 mov rdx,[181871270h]		; DEBUG: {Register}/RDX {Memory}/None ||| RIP | 6468080240 | None ||| N/A | N/A
		0x1804DB8AE call 000000018090AEA0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DB8B3 mov rsi,rax		; DEBUG: {Register}/RSI {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1804DB8B6 test rdi,rdi		; DEBUG: {Register}/RDI {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x1804DB8B9 je near ptr 00000001804DB9B4h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DB8BF test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1804DB8C2 je short 00000001804DB8D8h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DB8C4 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1804DB8C7 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1804DB8CA mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1804DB8CE call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DB8D3 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1804DB8D6 je short 00000001804DB955h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DB8D8 cmp ebx,[rdi+18h]		; DEBUG: {Register}/EBX {Memory}/None ||| RDI | 24 | None ||| N/A | N/A
		0x1804DB8DB jae near ptr 00000001804DB98Eh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DB8E1 mov [r14+rdi],rsi		; DEBUG: {Memory}/None {Register}/RSI ||| R14 | 0 | RDI ||| N/A | N/A
		0x1804DB8E5 xor eax,eax		; DEBUG: {Register}/EAX {Register}/EAX ||| None | 0 | None ||| N/A | N/A
		0x1804DB8E7 nop word ptr [rax+rax]		; DEBUG: {Memory}/None {Register}/None ||| RAX | 0 | RAX ||| N/A | N/A
		0x1804DB8F0 mov rcx,[rbp+40h]		; DEBUG: {Register}/RCX {Memory}/None ||| RBP | 64 | None ||| N/A | N/A
		0x1804DB8F4 test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x1804DB8F7 je near ptr 00000001804DB9B4h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DB8FD cmp ebx,[rcx+18h]		; DEBUG: {Register}/EBX {Memory}/None ||| RCX | 24 | None ||| N/A | N/A
		0x1804DB900 jae short 00000001804DB97Bh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DB902 mov rdx,[r14+rcx]		; DEBUG: {Register}/RDX {Memory}/None ||| R14 | 0 | RCX ||| N/A | N/A
		0x1804DB906 test rdx,rdx		; DEBUG: {Register}/RDX {Register}/RDX ||| None | 0 | None ||| N/A | N/A
		0x1804DB909 je near ptr 00000001804DB9B4h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DB90F cmp eax,[rdx+18h]		; DEBUG: {Register}/EAX {Memory}/None ||| RDX | 24 | None ||| N/A | N/A
		0x1804DB912 jge short 00000001804DB932h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DB914 jae short 00000001804DB968h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DB916 movsxd rcx,eax		; DEBUG: {Register}/RCX {Register}/EAX ||| None | 0 | None ||| N/A | N/A
		0x1804DB919 mov rdx,[rdx+rcx*8+20h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 32 | RCX ||| N/A | N/A
		0x1804DB91E test rdx,rdx		; DEBUG: {Register}/RDX {Register}/RDX ||| None | 0 | None ||| N/A | N/A
		0x1804DB921 je near ptr 00000001804DB9B4h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DB927 mov dword ptr [rdx+4Ch],7		; DEBUG: {Memory}/None {Immediate32}/None ||| RDX | 76 | None ||| N/A | 7
		0x1804DB92E inc eax		; DEBUG: {Register}/EAX {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1804DB930 jmp short 00000001804DB8F0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DB932 inc ebx		; DEBUG: {Register}/EBX {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1804DB934 mov eax,ebx		; DEBUG: {Register}/EAX {Register}/EBX ||| None | 0 | None ||| N/A | N/A
		0x1804DB936 jmp near ptr 00000001804DB868h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DB93B mov r14,[rsp+48h]		; DEBUG: {Register}/R14 {Memory}/None ||| RSP | 72 | None ||| N/A | N/A
		0x1804DB940 mov rdi,[rsp+40h]		; DEBUG: {Register}/RDI {Memory}/None ||| RSP | 64 | None ||| N/A | N/A
		0x1804DB945 mov rsi,[rsp+38h]		; DEBUG: {Register}/RSI {Memory}/None ||| RSP | 56 | None ||| N/A | N/A
		0x1804DB94A mov rbx,[rsp+30h]		; DEBUG: {Register}/RBX {Memory}/None ||| RSP | 48 | None ||| N/A | N/A
		0x1804DB94F add rsp,20h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 32
		0x1804DB953 pop rbp		; DEBUG: {Register}/RBP {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1804DB954 ret		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1804DB955 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DB95A mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1804DB95D xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1804DB960 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1804DB962 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804DB967 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.Void BoatAlligatorManager::ChangeStateNone():
		End of function at 0x1804DB968
		Absolute End is at 0x1804DB968
		Identified Jump Destination addresses:

		0x1804DB800: Saves the content of rbp to the stack
		0x1804DB806: Compares {Unknown Global at 0x18183E7E2, first ten bytes are [1 0 141 175 1 0 224 60 103 1], or as chars " ¯ à<g"} and 0
		0x1804DB80D: Copies {'this' (function parameter, type BoatAlligatorManager)} from rcx into rbp
		0x1804DB810: Jumps to 0x1804DB824 if {Unknown Global at 0x18183E7E2, first ten bytes are [1 0 141 175 1 0 224 60 103 1], or as chars " ¯ à<g"} != 0

		0x1804DB812: Loads string "N" into register rcx as constant {'constant3' (constant value of type Cpp2IL.Core.Analysis.ResultModels.Il2CppString)}
		0x1804DB818: Attempts to load the il2cpp metadata for this method (method id 0) and init it cpp-side.

		0x1804DB824: [!] Reads field m_spawnPoints from {'this' (function parameter, type BoatAlligatorManager)} and stores in a new local {'m_spawnPoints' (type UnityEngine.Transform[])}

		0x1804DB83C: [!] Compares {'m_spawnPoints' (type UnityEngine.Transform[])} and 0
		0x1804DB83F: Jumps to 0x1804DB9B4 (which throws a NRE) if m_spawnPoints equals 0. Implicitly present in managed code, so ignored here.
		0x1804DB845: Reads the length of the array "{'m_spawnPoints' (type UnityEngine.Transform[])}" and stores it in new local {'length' (type System.Int32)} in register rdx
		0x1804DB848: Loads the type definition for managed type BoatAlligator[][] as a constant "BoatAlligator[][]" in rcx
		0x1804DB84F: [!] Allocates an array of type BoatAlligator[][] of size length and stores the result as local3 in register rax

		0x1804DB854: Copies {'local3' (type BoatAlligator[][])} from rax into rcx
		0x1804DB857: [!] Sets the field m_alligator (Type BoatAlligator[][]) on local {'this' (function parameter, type BoatAlligatorManager)} to the value stored in {'local3' (type BoatAlligator[][])}
		0x1804DB85B: Clears register rax, yielding zero-local {'local4' (type System.Int32)}
		0x1804DB85D: Clears register rbx, yielding zero-local {'local5' (type System.Int32)}
		0x1804DB85F: [!] Compares {'local3' (type BoatAlligator[][])} and 0
		0x1804DB862: Jumps to 0x1804DB9B4 (which throws a NRE) if local3 equals 0. Implicitly present in managed code, so ignored here.

		Potential Loop Start (0x1804DB868):
		0x1804DB868: Copies {'local3' (type BoatAlligator[][])} from rcx into rdi
		0x1804DB870: [!] Compares {'local4' (type System.Int32)} and {Property System.Int32 System.Array::Length() on {'local3' (type BoatAlligator[][])}}
		0x1804DB873: Jumps to 0x1804DB93B (which is an if statement's body) if {'local4' (type System.Int32)} is greater than or equal to {Property System.Int32 System.Array::Length() on {'local3' (type BoatAlligator[][])}} ;  - Increasing indentation - is standard if, unimportant is False

		0x1804DB879: [!] Reads field m_spawnPoints from {'this' (function parameter, type BoatAlligatorManager)} and stores in a new local {'m_spawnPoints2' (type UnityEngine.Transform[])}

		0x1804DB87D: [!] Compares {'m_spawnPoints2' (type UnityEngine.Transform[])} and 0
		0x1804DB880: Jumps to 0x1804DB9B4 (which throws a NRE) if m_spawnPoints2 equals 0. Implicitly present in managed code, so ignored here.
		0x1804DB886: Copies {'local5' (type System.Int32)} from rbx into rcx
		0x1804DB889: [!] Compares {'local5' (type System.Int32)} and {Property System.Int32 System.Array::Length() on {'m_spawnPoints2' (type UnityEngine.Transform[])}}
		0x1804DB88C: Jumps to 0x1804DB9A1 (which throws a NRE) if {'local5' (type System.Int32)} is greater than or equal to {Property System.Int32 System.Array::Length() on {'m_spawnPoints2' (type UnityEngine.Transform[])}}. Implicitly present in managed code, so ignored here.
		0x1804DB89A: [!] Reads a value from the array {'m_spawnPoints2' (type UnityEngine.Transform[])} at an index specified by the value in , into a new local {'local7' (type UnityEngine.Transform)}

		0x1804DB89E: [!] Compares {'local7' (type UnityEngine.Transform)} and 0
		0x1804DB8A1: Jumps to 0x1804DB9B4 (which throws a NRE) if local7 equals 0. Implicitly present in managed code, so ignored here.
		0x1804DB8A7: Loads the global generic method reference for method T[] UnityEngine.Component::GetComponentsInChildren<BoatAlligator>() on type UnityEngine.Component and stores the result in constant {'GetComponentsInChildren' (constant value of type Cpp2IL.Core.Analysis.ResultModels.GenericMethodReference)} in rdx
		0x1804DB8AE: [!] Calls managed method T[] UnityEngine.Component::GetComponentsInChildren<BoatAlligator>() on instance {'local7' (type UnityEngine.Transform)} and stores the result in {'componentsInChildren' (type BoatAlligator[])} ;  - Method resolved from concrete implementations at this address, with the help of a constant value to identify which concrete implementation.

		0x1804DB8B3: Copies {'componentsInChildren' (type BoatAlligator[])} from rax into rsi
		0x1804DB8B6: [!] Compares {'local3' (type BoatAlligator[][])} and 0
		0x1804DB8B9: Jumps to 0x1804DB9B4 (which throws a NRE) if local3 equals 0. Implicitly present in managed code, so ignored here.
		0x1804DB8BF: [!] Compares {'componentsInChildren' (type BoatAlligator[])} and 0
		0x1804DB8C2: Jumps to 0x1804DB8D8 (which is an if statement's body) if componentsInChildren equals 0 ;  - Increasing indentation - is standard if, unimportant is False

		0x1804DB8C4: Loads the class pointer from local3 into a constant constant12 in register rdx
		0x1804DB8C7: Copies {'componentsInChildren' (type BoatAlligator[])} from rax into rcx
		0x1804DB8CA: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='', name='BoatAlligator', parentType=UnityEngine.MonoBehaviour] and stores in register rdx
		0x1804DB8D3: [!] Compares {'componentsInChildren' (type BoatAlligator[])} and 0
		0x1804DB8D6: Jumps to 0x1804DB955 if componentsInChildren equals 0 ;  - This is probably a goto, jumping to 0x1804DB955 which is after end of current block @ 0x1804DB8D8 (started at 0x1804DB8C4)

		0x1804DB8D8: [!] Compares {'local5' (type System.Int32)} and {Property System.Int32 System.Array::Length() on {'local3' (type BoatAlligator[][])}}
		0x1804DB8DB: Jumps to 0x1804DB98E (which throws a NRE) if {'local5' (type System.Int32)} is greater than or equal to {Property System.Int32 System.Array::Length() on {'local3' (type BoatAlligator[][])}}. Implicitly present in managed code, so ignored here.
		0x1804DB8E5: Clears register rax, yielding zero-local {'local9' (type System.Int32)}

		Potential Loop Start (0x1804DB8F0):
		0x1804DB8F0: [!] Reads field m_alligator from {'this' (function parameter, type BoatAlligatorManager)} and stores in a new local {'m_alligator' (type BoatAlligator[][])}

		0x1804DB8F4: [!] Compares {'m_alligator' (type BoatAlligator[][])} and 0
		0x1804DB8F7: Jumps to 0x1804DB9B4 (which throws a NRE) if m_alligator equals 0. Implicitly present in managed code, so ignored here.
		0x1804DB8FD: [!] Compares {'local5' (type System.Int32)} and {Property System.Int32 System.Array::Length() on {'m_alligator' (type BoatAlligator[][])}}
		0x1804DB900: Jumps to 0x1804DB97B (which throws a NRE) if {'local5' (type System.Int32)} is greater than or equal to {Property System.Int32 System.Array::Length() on {'m_alligator' (type BoatAlligator[][])}}. Implicitly present in managed code, so ignored here.
		0x1804DB902: [!] Reads a value from the array {'m_alligator' (type BoatAlligator[][])} at an index specified by the value in , into a new local {'local11' (type BoatAlligator)}

		0x1804DB906: [!] Compares {'local11' (type BoatAlligator)} and 0
		0x1804DB909: Jumps to 0x1804DB9B4 (which throws a NRE) if local11 equals 0. Implicitly present in managed code, so ignored here.
		0x1804DB90F: [!] Compares {'local9' (type System.Int32)} and {field m_anim, read from local {'local11' (type BoatAlligator)}}
		0x1804DB912: Jumps to 0x1804DB932 if {'local9' (type System.Int32)} is greater than or equal to {field m_anim, read from local {'local11' (type BoatAlligator)}} ;  - This is probably a goto, jumping to 0x1804DB932 which is after end of current block @ 0x1804DB8D8 (started at 0x1804DB8C4)

		0x1804DB914: Jumps to 0x1804DB968 (which throws a NRE) if {'local9' (type System.Int32)} is greater than or equal to {field m_anim, read from local {'local11' (type BoatAlligator)}}. Implicitly present in managed code, so ignored here.
		0x1804DB916: Copies {'local9' (type System.Int32)} from rax into rcx
		0x1804DB91E: [!] Compares {'local11' (type BoatAlligator)} and 0
		0x1804DB921: Jumps to 0x1804DB9B4 (which throws a NRE) if local11 equals 0. Implicitly present in managed code, so ignored here.
		0x1804DB927: [!] Sets the field m_state (Type BoatAlligator/EState) on local {'local11' (type BoatAlligator)} to the value stored in 7
		0x1804DB92E: [!] Adds 1 to the value {'local9' (type System.Int32)}, stored in rax
		0x1804DB930: Jumps to 0x1804DB8F0 - which is still in this function, but further up. Probably indicative that this is a loop.
		0x1804DB932: [!] Adds 1 to the value {'local5' (type System.Int32)}, stored in rbx
		0x1804DB934: Copies {'local5' (type System.Int32)} from rbx into rax
		0x1804DB936: Jumps to 0x1804DB868 - which is still in this function, but further up. Probably indicative that this is a loop.
		0x1804DB93B: Reads unknown value in stack, offset 72 (0x48) and stores the pointer in register r14 as new constant constant17
		0x1804DB940: Reads unknown value in stack, offset 64 (0x40) and stores the pointer in register rdi as new constant constant18
		0x1804DB945: Reads unknown value in stack, offset 56 (0x38) and stores the pointer in register rsi as new constant constant19
		0x1804DB94A: Reads unknown value in stack, offset 48 (0x30) and stores the pointer in register rbx as new constant constant20
		0x1804DB954: [!] Returns from the function

		0x1804DB95A: Copies {'local4' (type System.Int32)} from rax into rcx



	Generated Pseudocode:

	Declaring Type: BoatAlligatorManager
	System.Void ChangeStateNone()
		UnityEngine.Transform[] m_spawnPoints = this.m_spawnPoints
		System.Int32 length = m_spawnPoints.Length
		BoatAlligator[][] local3 = new BoatAlligator[][length]
		this.m_alligator = local3
		ulong local4 = 0
		ulong local5 = 0

		if (local4 < local3.Length)
		    UnityEngine.Transform[] m_spawnPoints2 = this.m_spawnPoints
		    UnityEngine.Transform local7 = m_spawnPoints2[]

		    BoatAlligator[] componentsInChildren = local7.GetComponentsInChildren<BoatAlligator>()

		    if (componentsInChildren != 0)

		        if (componentsInChildren == 0)
                    goto INSN_1804DB955
                endif
		    endif
            
		    ulong local9 = 0
		    BoatAlligator[][] m_alligator = this.m_alligator
		    BoatAlligator local11 = m_alligator[]

		    if (local9 >= local11.m_anim)
                goto INSN_1804DB932
            endif
		    local11.m_state = 7
		    local9 += 1

		    INSN_1804DB932:
		    local5 += 1
		endif
        
		return

		INSN_1804DB955:


Generated IL:
	Don't know how to write IL for Cpp2IL.Core.Analysis.Actions.x86.Important.RegOffsetArrayValueReadRegToRegAction. Aborting here.


