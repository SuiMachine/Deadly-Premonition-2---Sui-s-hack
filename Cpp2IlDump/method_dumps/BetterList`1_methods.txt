Type: BetterList`1

Method: System.Void BetterList`1::.ctor():	Method Body (x86 ASM):
		0x1808CDE20 sub rsp,28h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 40
		0x1808CDE24 test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x1808CDE27 je short 00000001808CDE34h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808CDE29 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1808CDE2B add rsp,28h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 40
		0x1808CDE2F jmp near ptr 0000000180207540h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808CDE34 call 000000018012BDA0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1808CDE39 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.Void BetterList`1::.ctor():
		End of function at 0x1808CDE3A
		Absolute End is at 0x1808CDE3A
		Identified Jump Destination addresses:

		0x1808CDE24: [!] Compares {'this' (function parameter, type BetterList`1)} and 0
		0x1808CDE27: Jumps to 0x1808CDE34 (which throws a NRE) if this equals 0. Implicitly present in managed code, so ignored here.
		0x1808CDE2F: [!] Calls managed method System.Void System.Object::.ctor() on instance {'this' (function parameter, type BetterList`1)}

		0x1808CDE2F: [!] Returns from the function

		0x1808CDE34: [!] Constructs and throws an exception of kind System.NullReferenceException




	Generated Pseudocode:

	Declaring Type: BetterList`1
	System.Void .ctor()

		base..ctor()
		return
		throw new System.NullReferenceException()


Generated IL:
	IL_0000: ldarg.0
	IL_0001: call System.Void System.Object::.ctor()
	IL_0006: ret
	IL_0007: newobj System.Void System.NullReferenceException::.ctor()
	IL_000c: throw
	

Method: System.Collections.Generic.IEnumerator`1<T> BetterList`1::GetEnumerator():	Method Body (x86 ASM):
		0x180B0BD00 mov [rsp+8],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RSP | 8 | None ||| N/A | N/A
		0x180B0BD05 mov [rsp+10h],rsi		; DEBUG: {Memory}/None {Register}/RSI ||| RSP | 16 | None ||| N/A | N/A
		0x180B0BD0A push rdi		; DEBUG: {Register}/RDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B0BD0B sub rsp,20h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 32
		0x180B0BD0F mov rax,[rdx+18h]		; DEBUG: {Register}/RAX {Memory}/None ||| RDX | 24 | None ||| N/A | N/A
		0x180B0BD13 mov rsi,rdx		; DEBUG: {Register}/RSI {Register}/RDX ||| None | 0 | None ||| N/A | N/A
		0x180B0BD16 mov rdi,rcx		; DEBUG: {Register}/RDI {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x180B0BD19 mov r8,[rax+0C0h]		; DEBUG: {Register}/R8 {Memory}/None ||| RAX | 192 | None ||| N/A | N/A
		0x180B0BD20 mov rbx,[r8]		; DEBUG: {Register}/RBX {Memory}/None ||| R8 | 0 | None ||| N/A | N/A
		0x180B0BD23 test byte ptr [rbx+126h],1		; DEBUG: {Memory}/None {Immediate8}/None ||| RBX | 294 | None ||| N/A | 1
		0x180B0BD2A jne short 0000000180B0BD34h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0BD2C mov rcx,rbx		; DEBUG: {Register}/RCX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x180B0BD2F call 00000001800F6690h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0BD34 mov rcx,rbx		; DEBUG: {Register}/RCX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x180B0BD37 call 000000018013AC40h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0BD3C mov rcx,[rsi+18h]		; DEBUG: {Register}/RCX {Memory}/None ||| RSI | 24 | None ||| N/A | N/A
		0x180B0BD40 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180B0BD43 mov rdx,[rcx+0C0h]		; DEBUG: {Register}/RDX {Memory}/None ||| RCX | 192 | None ||| N/A | N/A
		0x180B0BD4A mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180B0BD4D mov r8,[rdx+8]		; DEBUG: {Register}/R8 {Memory}/None ||| RDX | 8 | None ||| N/A | N/A
		0x180B0BD51 mov rdx,r8		; DEBUG: {Register}/RDX {Register}/R8 ||| None | 0 | None ||| N/A | N/A
		0x180B0BD54 call qword ptr [r8]		; DEBUG: {Memory}/None {Register}/None ||| R8 | 0 | None ||| N/A | N/A
		0x180B0BD57 test rbx,rbx		; DEBUG: {Register}/RBX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x180B0BD5A je short 0000000180B0BD73h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0BD5C mov rsi,[rsp+38h]		; DEBUG: {Register}/RSI {Memory}/None ||| RSP | 56 | None ||| N/A | N/A
		0x180B0BD61 mov rax,rbx		; DEBUG: {Register}/RAX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x180B0BD64 mov [rbx+18h],rdi		; DEBUG: {Memory}/None {Register}/RDI ||| RBX | 24 | None ||| N/A | N/A
		0x180B0BD68 mov rbx,[rsp+30h]		; DEBUG: {Register}/RBX {Memory}/None ||| RSP | 48 | None ||| N/A | N/A
		0x180B0BD6D add rsp,20h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 32
		0x180B0BD71 pop rdi		; DEBUG: {Register}/RDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B0BD72 ret		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B0BD73 xor ecx,ecx		; DEBUG: {Register}/ECX {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x180B0BD75 call 000000018012BDA0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0BD7A int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.Collections.Generic.IEnumerator`1<T> BetterList`1::GetEnumerator():
		End of function at 0x180B0BD7B
		Absolute End is at 0x180B0BD7B
		Identified Jump Destination addresses:

		0x180B0BD0A: Saves the content of rdi to the stack
		0x180B0BD0F: Reads the klass pointer representing the declaring type of this method (which is BetterList`1) and stores in new constant constant1 in register rax
		0x180B0BD13: Copies {'il2cppMethodInfo' (type )} from rdx into rsi
		0x180B0BD16: Copies {'this' (function parameter, type BetterList`1)} from rcx into rdi
		0x180B0BD19: Reads RGCTX data for class BetterList`1 which has 11 entries/s and stores in new constant constant2 in register r8
		0x180B0BD20: Reads the RGCTX data at index 0 in the array constant2, which has datapoint 35215 and is of type IL2CPP_RGCTX_DATA_CLASS (mapping to actual value BetterList`1/<GetEnumerator>c__Iterator0<T>), and stores the result in new constant constant3 in register rbx
		0x180B0BD23: Compares "{il2cpp field on {'constant3' (constant value of type Mono.Cecil.TypeReference)}, offset 0x126}" and 1
		0x180B0BD2A: Jumps to 0x180B0BD34 if "{il2cpp field on {'constant3' (constant value of type Mono.Cecil.TypeReference)}, offset 0x126}" != 1

		0x180B0BD2C: Copies {'constant3' (constant value of type Mono.Cecil.TypeReference)} from rbx into rcx
		0x180B0BD34: Copies {'constant3' (constant value of type Mono.Cecil.TypeReference)} from rbx into rcx
		0x180B0BD37: [!] Allocates an instance of type BetterList`1/<GetEnumerator>c__Iterator0<T> and stores it as enumeratorInstance in rax.

		0x180B0BD3C: Reads the klass pointer representing the declaring type of this method (which is BetterList`1) and stores in new constant constant6 in register rcx
		0x180B0BD40: Copies {'enumeratorInstance' (type BetterList`1/<GetEnumerator>c__Iterator0<T>)} from rax into rbx
		0x180B0BD43: Reads RGCTX data for class BetterList`1 which has 11 entries/s and stores in new constant constant7 in register rdx
		0x180B0BD4A: Copies {'enumeratorInstance' (type BetterList`1/<GetEnumerator>c__Iterator0<T>)} from rax into rcx
		0x180B0BD4D: Reads the RGCTX data at index 1 in the array constant7, which has datapoint 34233 and is of type IL2CPP_RGCTX_DATA_METHOD (mapping to actual value System.Void BetterList`1/<GetEnumerator>c__Iterator0<T>..ctor), and stores the result in new constant constant8 in register r8
		0x180B0BD51: Copies {'constant8' (constant value of type LibCpp2IL.BinaryStructures.Il2CppMethodSpec)} from r8 into rdx
		0x180B0BD54: [!] Calls managed method System.Void BetterList`1/<GetEnumerator>c__Iterator0<T>::.ctor() on instance {'enumeratorInstance' (type BetterList`1/<GetEnumerator>c__Iterator0<T>)}

		0x180B0BD57: [!] Compares {'enumeratorInstance' (type BetterList`1/<GetEnumerator>c__Iterator0<T>)} and 0
		0x180B0BD5A: Jumps to 0x180B0BD73 (which throws a NRE) if enumeratorInstance equals 0. Implicitly present in managed code, so ignored here.
		0x180B0BD5C: Reads unknown value in stack, offset 56 (0x38) and stores the pointer in register rsi as new constant constant10
		0x180B0BD61: Copies {'enumeratorInstance' (type BetterList`1/<GetEnumerator>c__Iterator0<T>)} from rbx into rax
		0x180B0BD64: [!] Sets the field  (Type ) on local {'enumeratorInstance' (type BetterList`1/<GetEnumerator>c__Iterator0<T>)} to the value stored in {'this' (function parameter, type BetterList`1)}
		0x180B0BD68: Reads unknown value in stack, offset 48 (0x30) and stores the pointer in register rbx as new constant constant11
		0x180B0BD72: [!] Returns {'enumeratorInstance' (type BetterList`1/<GetEnumerator>c__Iterator0<T>)} from the function

		0x180B0BD75: [!] Constructs and throws an exception of kind System.NullReferenceException




	Generated Pseudocode:

	Declaring Type: BetterList`1
	System.Collections.Generic.IEnumerator`1<T> GetEnumerator()
		BetterList`1/<GetEnumerator>c__Iterator0<T> enumeratorInstance = new BetterList`1/<GetEnumerator>c__Iterator0<T>()

		enumeratorInstance..ctor()
		enumeratorInstance. = this
		return enumeratorInstance
		throw new System.NullReferenceException()


Generated IL:
	Action of type Cpp2IL.Core.Analysis.Actions.x86.Important.RegToFieldAction at (0x180B0BD64) is corrupt (Instance or field is null) and cannot be created as IL. Aborting here.


Method: T BetterList`1::get_Item(System.Int32):	Method Body (x86 ASM):
		0x180B0ED20 sub rsp,28h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 40
		0x180B0ED24 mov r8,[rcx+10h]		; DEBUG: {Register}/R8 {Memory}/None ||| RCX | 16 | None ||| N/A | N/A
		0x180B0ED28 test r8,r8		; DEBUG: {Register}/R8 {Register}/R8 ||| None | 0 | None ||| N/A | N/A
		0x180B0ED2B je short 0000000180B0ED40h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0ED2D cmp edx,[r8+18h]		; DEBUG: {Register}/EDX {Memory}/None ||| R8 | 24 | None ||| N/A | N/A
		0x180B0ED31 jae short 0000000180B0ED48h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0ED33 movsxd rax,edx		; DEBUG: {Register}/RAX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180B0ED36 mov rax,[r8+rax*8+20h]		; DEBUG: {Register}/RAX {Memory}/None ||| R8 | 32 | RAX ||| N/A | N/A
		0x180B0ED3B add rsp,28h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 40
		0x180B0ED3F ret		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B0ED40 xor ecx,ecx		; DEBUG: {Register}/ECX {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x180B0ED42 call 000000018012BDA0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0ED47 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method T BetterList`1::get_Item(System.Int32):
		End of function at 0x180B0ED48
		Absolute End is at 0x180B0ED48
		Identified Jump Destination addresses:

		0x180B0ED24: [!] Reads field buffer from {'this' (function parameter, type BetterList`1)} and stores in a new local {'buffer' (type T[])}

		0x180B0ED28: [!] Compares {'buffer' (type T[])} and 0
		0x180B0ED2B: Jumps to 0x180B0ED40 (which throws a NRE) if buffer equals 0. Implicitly present in managed code, so ignored here.
		0x180B0ED2D: [!] Compares {'i' (function parameter, type System.Int32)} and {Property System.Int32 System.Array::Length() on {'buffer' (type T[])}}
		0x180B0ED31: Jumps to 0x180B0ED48 (which throws a NRE) if {'i' (function parameter, type System.Int32)} is greater than or equal to {Property System.Int32 System.Array::Length() on {'buffer' (type T[])}}. Implicitly present in managed code, so ignored here.
		0x180B0ED33: Copies {'i' (function parameter, type System.Int32)} from rdx into rax
		0x180B0ED36: Copies the element in the array {'buffer' (type T[])} at the index specified by {'i' (function parameter, type System.Int32)} into new local {'t' (type T)}
		0x180B0ED3F: [!] Returns {'t' (type T)} from the function

		0x180B0ED42: [!] Constructs and throws an exception of kind System.NullReferenceException




	Generated Pseudocode:

	Declaring Type: BetterList`1
	T get_Item(System.Int32 i)
		T[] buffer = this.buffer
		T t = buffer[i]
		return t
		throw new System.NullReferenceException()


Generated IL:
	IL Generation Skipped due to invalid local buffer of type T[]
	

Method: System.Void BetterList`1::set_Item(System.Int32,T):	Method Body (x86 ASM):
		0x180B0EFC0 sub rsp,28h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 40
		0x180B0EFC4 mov r9,[rcx+10h]		; DEBUG: {Register}/R9 {Memory}/None ||| RCX | 16 | None ||| N/A | N/A
		0x180B0EFC8 test r9,r9		; DEBUG: {Register}/R9 {Register}/R9 ||| None | 0 | None ||| N/A | N/A
		0x180B0EFCB je short 0000000180B0EFE0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0EFCD cmp edx,[r9+18h]		; DEBUG: {Register}/EDX {Memory}/None ||| R9 | 24 | None ||| N/A | N/A
		0x180B0EFD1 jae short 0000000180B0EFE8h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0EFD3 movsxd rax,edx		; DEBUG: {Register}/RAX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180B0EFD6 mov [r9+rax*8+20h],r8		; DEBUG: {Memory}/None {Register}/R8 ||| R9 | 32 | RAX ||| N/A | N/A
		0x180B0EFDB add rsp,28h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 40
		0x180B0EFDF ret		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B0EFE0 xor ecx,ecx		; DEBUG: {Register}/ECX {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x180B0EFE2 call 000000018012BDA0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0EFE7 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.Void BetterList`1::set_Item(System.Int32,T):
		End of function at 0x180B0EFE8
		Absolute End is at 0x180B0EFE8
		Identified Jump Destination addresses:

		0x180B0EFC4: [!] Reads field buffer from {'this' (function parameter, type BetterList`1)} and stores in a new local {'buffer' (type T[])}

		0x180B0EFC8: [!] Compares {'buffer' (type T[])} and 0
		0x180B0EFCB: Jumps to 0x180B0EFE0 (which throws a NRE) if buffer equals 0. Implicitly present in managed code, so ignored here.
		0x180B0EFCD: [!] Compares {'i' (function parameter, type System.Int32)} and {Property System.Int32 System.Array::Length() on {'buffer' (type T[])}}
		0x180B0EFD1: Jumps to 0x180B0EFE8 (which throws a NRE) if {'i' (function parameter, type System.Int32)} is greater than or equal to {Property System.Int32 System.Array::Length() on {'buffer' (type T[])}}. Implicitly present in managed code, so ignored here.
		0x180B0EFD3: Copies {'i' (function parameter, type System.Int32)} from rdx into rax
		0x180B0EFD6: Sets the value at offset 0 in array buffer to {'value' (function parameter, type T)}
		0x180B0EFDF: [!] Returns from the function

		0x180B0EFE2: [!] Constructs and throws an exception of kind System.NullReferenceException




	Generated Pseudocode:

	Declaring Type: BetterList`1
	System.Void set_Item(System.Int32 i, T value)
		T[] buffer = this.buffer
		buffer[0] = value
		return
		throw new System.NullReferenceException()


Generated IL:
	IL Generation Skipped due to invalid local buffer of type T[]
	

Method: System.Void BetterList`1::AllocateMore():	Method Body (x86 ASM):
		0x180B0B470 mov [rsp+18h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RSP | 24 | None ||| N/A | N/A
		0x180B0B475 push rdi		; DEBUG: {Register}/RDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B0B476 sub rsp,20h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 32
		0x180B0B47A cmp byte ptr [1818434BEh],0		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6467892414 | None ||| N/A | 0
		0x180B0B481 mov rbx,rcx		; DEBUG: {Register}/RBX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x180B0B484 mov [rsp+38h],rsi		; DEBUG: {Memory}/None {Register}/RSI ||| RSP | 56 | None ||| N/A | N/A
		0x180B0B489 mov rsi,rdx		; DEBUG: {Register}/RSI {Register}/RDX ||| None | 0 | None ||| N/A | N/A
		0x180B0B48C jne short 0000000180B0B4A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0B48E mov ecx,[1814CBA70h]		; DEBUG: {Register}/ECX {Memory}/None ||| RIP | 6464256624 | None ||| N/A | N/A
		0x180B0B494 call 00000001800FEB90h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0B499 mov byte ptr [1818434BEh],1		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6467892414 | None ||| N/A | 1
		0x180B0B4A0 mov rdi,[rbx+10h]		; DEBUG: {Register}/RDI {Memory}/None ||| RBX | 16 | None ||| N/A | N/A
		0x180B0B4A4 test rdi,rdi		; DEBUG: {Register}/RDI {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x180B0B4A7 jne short 0000000180B0B4D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0B4A9 mov rax,[rsi+18h]		; DEBUG: {Register}/RAX {Memory}/None ||| RSI | 24 | None ||| N/A | N/A
		0x180B0B4AD mov rcx,[rax+0C0h]		; DEBUG: {Register}/RCX {Memory}/None ||| RAX | 192 | None ||| N/A | N/A
		0x180B0B4B4 mov rdi,[rcx+10h]		; DEBUG: {Register}/RDI {Memory}/None ||| RCX | 16 | None ||| N/A | N/A
		0x180B0B4B8 test byte ptr [rdi+126h],1		; DEBUG: {Memory}/None {Immediate8}/None ||| RDI | 294 | None ||| N/A | 1
		0x180B0B4BF jne short 0000000180B0B4C9h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0B4C1 mov rcx,rdi		; DEBUG: {Register}/RCX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x180B0B4C4 call 00000001800F6690h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0B4C9 mov edx,20h		; DEBUG: {Register}/EDX {Immediate32}/None ||| None | 0 | None ||| N/A | 32
		0x180B0B4CE jmp short 0000000180B0B52Eh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0B4D0 mov rcx,[18188DA20h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468196896 | None ||| N/A | N/A
		0x180B0B4D7 mov [rsp+30h],rbp		; DEBUG: {Memory}/None {Register}/RBP ||| RSP | 48 | None ||| N/A | N/A
		0x180B0B4DC test byte ptr [rcx+127h],2		; DEBUG: {Memory}/None {Immediate8}/None ||| RCX | 295 | None ||| N/A | 2
		0x180B0B4E3 je short 0000000180B0B4F3h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0B4E5 cmp dword ptr [rcx+0D8h],0		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RCX | 216 | None ||| N/A | 0
		0x180B0B4EC jne short 0000000180B0B4F3h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0B4EE call 000000018010EAF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0B4F3 mov ecx,[rdi+18h]		; DEBUG: {Register}/ECX {Memory}/None ||| RDI | 24 | None ||| N/A | N/A
		0x180B0B4F6 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x180B0B4F9 add ecx,ecx		; DEBUG: {Register}/ECX {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x180B0B4FB lea edx,[r8+20h]		; DEBUG: {Register}/EDX {Memory}/None ||| R8 | 32 | None ||| N/A | N/A
		0x180B0B4FF call 0000000180E88D60h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0B504 mov rcx,[rsi+18h]		; DEBUG: {Register}/RCX {Memory}/None ||| RSI | 24 | None ||| N/A | N/A
		0x180B0B508 mov ebp,eax		; DEBUG: {Register}/EBP {Register}/EAX ||| None | 0 | None ||| N/A | N/A
		0x180B0B50A mov rdx,[rcx+0C0h]		; DEBUG: {Register}/RDX {Memory}/None ||| RCX | 192 | None ||| N/A | N/A
		0x180B0B511 mov rdi,[rdx+10h]		; DEBUG: {Register}/RDI {Memory}/None ||| RDX | 16 | None ||| N/A | N/A
		0x180B0B515 test byte ptr [rdi+126h],1		; DEBUG: {Memory}/None {Immediate8}/None ||| RDI | 294 | None ||| N/A | 1
		0x180B0B51C jne short 0000000180B0B526h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0B51E mov rcx,rdi		; DEBUG: {Register}/RCX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x180B0B521 call 00000001800F6690h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0B526 mov rdx,rbp		; DEBUG: {Register}/RDX {Register}/RBP ||| None | 0 | None ||| N/A | N/A
		0x180B0B529 mov rbp,[rsp+30h]		; DEBUG: {Register}/RBP {Memory}/None ||| RSP | 48 | None ||| N/A | N/A
		0x180B0B52E mov rcx,rdi		; DEBUG: {Register}/RCX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x180B0B531 call 0000000180141320h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0B536 mov rcx,[rbx+10h]		; DEBUG: {Register}/RCX {Memory}/None ||| RBX | 16 | None ||| N/A | N/A
		0x180B0B53A mov rdi,rax		; DEBUG: {Register}/RDI {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180B0B53D mov rsi,[rsp+38h]		; DEBUG: {Register}/RSI {Memory}/None ||| RSP | 56 | None ||| N/A | N/A
		0x180B0B542 test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x180B0B545 je short 0000000180B0B55Bh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0B547 cmp dword ptr [rbx+18h],0		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RBX | 24 | None ||| N/A | 0
		0x180B0B54B jle short 0000000180B0B55Bh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0B54D xor r9d,r9d		; DEBUG: {Register}/R9D {Register}/R9D ||| None | 0 | None ||| N/A | N/A
		0x180B0B550 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x180B0B553 mov rdx,rax		; DEBUG: {Register}/RDX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180B0B556 call 0000000180C60080h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0B55B mov [rbx+10h],rdi		; DEBUG: {Memory}/None {Register}/RDI ||| RBX | 16 | None ||| N/A | N/A
		0x180B0B55F mov rbx,[rsp+40h]		; DEBUG: {Register}/RBX {Memory}/None ||| RSP | 64 | None ||| N/A | N/A
		0x180B0B564 add rsp,20h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 32
		0x180B0B568 pop rdi		; DEBUG: {Register}/RDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B0B569 ret		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B0B56A int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.Void BetterList`1::AllocateMore():
		End of function at 0x180B0B56B
		Absolute End is at 0x180B0B56B
		Identified Jump Destination addresses:
			0x180B0B52E
		0x180B0B475: Saves the content of rdi to the stack
		0x180B0B47A: Compares {Unknown Global at 0x1818434BE, first ten bytes are [103 1 144 72 4 0 223 72 4 0], or as chars "gH ßH "} and 0
		0x180B0B481: Copies {'this' (function parameter, type BetterList`1)} from rcx into rbx
		0x180B0B489: Copies {'il2cppMethodInfo' (type )} from rdx into rsi
		0x180B0B48C: Jumps to 0x180B0B4A0 if {Unknown Global at 0x1818434BE, first ten bytes are [103 1 144 72 4 0 223 72 4 0], or as chars "gH ßH "} != 0

		0x180B0B48E: Loads string "H" into register rcx as constant {'constant3' (constant value of type Cpp2IL.Core.Analysis.ResultModels.Il2CppString)}
		0x180B0B494: Attempts to load the il2cpp metadata for this method (method id 0) and init it cpp-side.

		0x180B0B4A0: [!] Reads field buffer from {'this' (function parameter, type BetterList`1)} and stores in a new local {'buffer' (type T[])}

		0x180B0B4A4: [!] Compares {'buffer' (type T[])} and 0
		0x180B0B4A7: Jumps to 0x180B0B4D0 if {'buffer' (type T[])} != 0 ;  - Increasing indentation - is if-else, unimportant is False

		0x180B0B4A9: Reads the klass pointer representing the declaring type of this method (which is BetterList`1) and stores in new constant constant5 in register rax
		0x180B0B4AD: Reads RGCTX data for class BetterList`1 which has 11 entries/s and stores in new constant constant6 in register rcx
		0x180B0B4B4: Reads the RGCTX data at index 2 in the array constant6, which has datapoint 35203 and is of type IL2CPP_RGCTX_DATA_CLASS (mapping to actual value T[]), and stores the result in new constant constant7 in register rdi
		0x180B0B4B8: Compares "{il2cpp field on {'constant7' (constant value of type Mono.Cecil.TypeReference)}, offset 0x126}" and 1
		0x180B0B4BF: Jumps to 0x180B0B4C9 if "{il2cpp field on {'constant7' (constant value of type Mono.Cecil.TypeReference)}, offset 0x126}" != 1

		0x180B0B4C1: Copies {'constant7' (constant value of type Mono.Cecil.TypeReference)} from rdi into rcx
		0x180B0B4CE: Jumps to 0x180B0B52E (which is an function-local jump destination)

		0x180B0B4D0: Loads the type definition for managed type UnityEngine.Mathf as a constant "Mathf" in rcx
		0x180B0B4DC: Compares "{il2cpp field on {'Mathf' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" and 2
		0x180B0B4E3: Jumps to 0x180B0B4F3 if "{il2cpp field on {'Mathf' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" equals 2

		0x180B0B4E5: Compares "{il2cpp field on {'Mathf' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" and 0
		0x180B0B4EC: Jumps to 0x180B0B4F3 if "{il2cpp field on {'Mathf' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" != 0

		0x180B0B4EE: Calls the il2cpp cctor for the type UnityEngine.Mathf
		0x180B0B4F3: Reads the length of the array "{'buffer' (type T[])}" and stores it in new local {'length' (type System.Int32)} in register rcx
		0x180B0B4F9: [!] Adds {'length' (type System.Int32)} and {'length' (type System.Int32)} and stores the result in {'length' (type System.Int32)}
		0x180B0B4FB: [!] Loads the constant value 32 into the register rdx as constant constant15 using an LEA instruction
		0x180B0B4FF: [!] Calls static managed method System.Int32 System.Math::Max(System.Int32,System.Int32) with arguments [{'length' (type System.Int32)}, 32] and stores the result in {'int32' (type System.Int32)}

		0x180B0B504: Reads the klass pointer representing the declaring type of this method (which is BetterList`1) and stores in new constant constant16 in register rcx
		0x180B0B508: Copies {'int32' (type System.Int32)} from rax into rbp
		0x180B0B50A: Reads RGCTX data for class BetterList`1 which has 11 entries/s and stores in new constant constant17 in register rdx
		0x180B0B511: Reads the RGCTX data at index 2 in the array constant17, which has datapoint 35203 and is of type IL2CPP_RGCTX_DATA_CLASS (mapping to actual value T[]), and stores the result in new constant constant18 in register rdi
		0x180B0B515: Compares "{il2cpp field on {'constant18' (constant value of type Mono.Cecil.TypeReference)}, offset 0x126}" and 1
		0x180B0B51C: Jumps to 0x180B0B526 if "{il2cpp field on {'constant18' (constant value of type Mono.Cecil.TypeReference)}, offset 0x126}" != 1

		0x180B0B51E: Copies {'constant18' (constant value of type Mono.Cecil.TypeReference)} from rdi into rcx
		0x180B0B526: Copies {'int32' (type System.Int32)} from rbp into rdx
		0x180B0B529: Reads unknown value in stack, offset 48 (0x30) and stores the pointer in register rbp as new constant constant21

		End Of If-Else Block (at 0x180B0B52E) where the else started at 0x180B0B4D0
		0x180B0B52E: Copies {'constant18' (constant value of type Mono.Cecil.TypeReference)} from rdi into rcx
		0x180B0B531: [!] Allocates an array of type T[] of size int32 and stores the result as local6 in register rax

		0x180B0B536: [!] Reads field buffer from {'this' (function parameter, type BetterList`1)} and stores in a new local {'buffer2' (type T[])}

		0x180B0B53A: Copies {'local6' (type T[])} from rax into rdi
		0x180B0B53D: Reads unknown value in stack, offset 56 (0x38) and stores the pointer in register rsi as new constant constant22
		0x180B0B542: [!] Compares {'buffer2' (type T[])} and 0
		0x180B0B545: Jumps to 0x180B0B55B if buffer2 equals 0 ;  - This is probably a goto, jumping to 0x180B0B55B which is after end of current block @ 0x180B0B52E (started at 0x180B0B4D0)

		0x180B0B547: [!] Compares  and 0
		0x180B0B54B: Jumps to 0x180B0B55B if  is less than or equal to 0 ;  - This is probably a goto, jumping to 0x180B0B55B which is after end of current block @ 0x180B0B52E (started at 0x180B0B4D0)

		0x180B0B550: Clears register r8, yielding zero-local {'local9' (type System.Int32)}
		0x180B0B553: Copies {'local6' (type T[])} from rax into rdx
		0x180B0B556: [!] Calls managed method System.Void System.Array::CopyTo(System.Array,System.Int32) on instance {'buffer2' (type T[])} with arguments [{'local6' (type T[])}, {'local9' (type System.Int32)}] ;  - This is an instance method, but the type of the 'this' parameter is mismatched. Expecting Array, actually T[]

		0x180B0B55B: [!] Sets the field buffer (Type T[]) on local {'this' (function parameter, type BetterList`1)} to the value stored in {'local6' (type T[])}
		0x180B0B55F: Reads unknown value in stack, offset 64 (0x40) and stores the pointer in register rbx as new constant constant25
		0x180B0B569: [!] Returns from the function




	Generated Pseudocode:

	Declaring Type: BetterList`1
	System.Void AllocateMore()
		T[] buffer = this.buffer

		if (buffer == 0)
		else
		    System.Int32 length = buffer.Length
		    length += length
		    System.Int32 32 = 32

		    System.Int32 int32 = System.Math.Max(length, 32) //(Int32 val1, Int32 val2)
		endif
        
		T[] local6 = new T[int32]
		T[] buffer2 = this.buffer

		if (buffer2 == 0)
            goto INSN_180B0B55B
        endif

		if ( <= 0)
            goto INSN_180B0B55B
        endif
		ulong local9 = 0

		buffer2.CopyTo(local6, local9) //(Array array, Int32 index)

		INSN_180B0B55B:
		this.buffer = local6
		return


Generated IL:
	IL Generation Skipped due to invalid local buffer of type T[]
	

Method: System.Void BetterList`1::Trim():	Method Body (x86 ASM):
		0x180B0E8F0 mov [rsp+10h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RSP | 16 | None ||| N/A | N/A
		0x180B0E8F5 push rdi		; DEBUG: {Register}/RDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B0E8F6 sub rsp,20h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 32
		0x180B0E8FA mov edi,[rcx+18h]		; DEBUG: {Register}/EDI {Memory}/None ||| RCX | 24 | None ||| N/A | N/A
		0x180B0E8FD mov rbx,rcx		; DEBUG: {Register}/RBX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x180B0E900 test edi,edi		; DEBUG: {Register}/EDI {Register}/EDI ||| None | 0 | None ||| N/A | N/A
		0x180B0E902 jg short 0000000180B0E915h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0E904 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180B0E906 mov [rcx+10h],rdx		; DEBUG: {Memory}/None {Register}/RDX ||| RCX | 16 | None ||| N/A | N/A
		0x180B0E90A mov rbx,[rsp+38h]		; DEBUG: {Register}/RBX {Memory}/None ||| RSP | 56 | None ||| N/A | N/A
		0x180B0E90F add rsp,20h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 32
		0x180B0E913 pop rdi		; DEBUG: {Register}/RDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B0E914 ret		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B0E915 mov rax,[rcx+10h]		; DEBUG: {Register}/RAX {Memory}/None ||| RCX | 16 | None ||| N/A | N/A
		0x180B0E919 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180B0E91C je short 0000000180B0E99Dh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0E91E cmp edi,[rax+18h]		; DEBUG: {Register}/EDI {Memory}/None ||| RAX | 24 | None ||| N/A | N/A
		0x180B0E921 jge short 0000000180B0E90Ah		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0E923 mov rax,[rdx+18h]		; DEBUG: {Register}/RAX {Memory}/None ||| RDX | 24 | None ||| N/A | N/A
		0x180B0E927 mov [rsp+30h],rsi		; DEBUG: {Memory}/None {Register}/RSI ||| RSP | 48 | None ||| N/A | N/A
		0x180B0E92C mov rcx,[rax+0C0h]		; DEBUG: {Register}/RCX {Memory}/None ||| RAX | 192 | None ||| N/A | N/A
		0x180B0E933 mov rsi,[rcx+10h]		; DEBUG: {Register}/RSI {Memory}/None ||| RCX | 16 | None ||| N/A | N/A
		0x180B0E937 test byte ptr [rsi+126h],1		; DEBUG: {Memory}/None {Immediate8}/None ||| RSI | 294 | None ||| N/A | 1
		0x180B0E93E jne short 0000000180B0E948h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0E940 mov rcx,rsi		; DEBUG: {Register}/RCX {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x180B0E943 call 00000001800F6690h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0E948 mov rdx,rdi		; DEBUG: {Register}/RDX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x180B0E94B mov rcx,rsi		; DEBUG: {Register}/RCX {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x180B0E94E call 0000000180141320h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0E953 mov rsi,[rsp+30h]		; DEBUG: {Register}/RSI {Memory}/None ||| RSP | 48 | None ||| N/A | N/A
		0x180B0E958 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180B0E95A mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180B0E95D cmp [rbx+18h],edx		; DEBUG: {Memory}/None {Register}/EDX ||| RBX | 24 | None ||| N/A | N/A
		0x180B0E960 jle short 0000000180B0E98Eh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0E962 mov rax,[rbx+10h]		; DEBUG: {Register}/RAX {Memory}/None ||| RBX | 16 | None ||| N/A | N/A
		0x180B0E966 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180B0E969 je short 0000000180B0E99Dh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0E96B movsxd r8,edx		; DEBUG: {Register}/R8 {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180B0E96E cmp edx,[rax+18h]		; DEBUG: {Register}/EDX {Memory}/None ||| RAX | 24 | None ||| N/A | N/A
		0x180B0E971 jae short 0000000180B0E9B8h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0E973 test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x180B0E976 je short 0000000180B0E99Dh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0E978 cmp edx,[rcx+18h]		; DEBUG: {Register}/EDX {Memory}/None ||| RCX | 24 | None ||| N/A | N/A
		0x180B0E97B jae short 0000000180B0E9A5h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0E97D mov rax,[rax+r8*8+20h]		; DEBUG: {Register}/RAX {Memory}/None ||| RAX | 32 | R8 ||| N/A | N/A
		0x180B0E982 inc edx		; DEBUG: {Register}/EDX {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B0E984 mov [rcx+r8*8+20h],rax		; DEBUG: {Memory}/None {Register}/RAX ||| RCX | 32 | R8 ||| N/A | N/A
		0x180B0E989 cmp edx,[rbx+18h]		; DEBUG: {Register}/EDX {Memory}/None ||| RBX | 24 | None ||| N/A | N/A
		0x180B0E98C jl short 0000000180B0E962h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0E98E mov [rbx+10h],rcx		; DEBUG: {Memory}/None {Register}/RCX ||| RBX | 16 | None ||| N/A | N/A
		0x180B0E992 mov rbx,[rsp+38h]		; DEBUG: {Register}/RBX {Memory}/None ||| RSP | 56 | None ||| N/A | N/A
		0x180B0E997 add rsp,20h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 32
		0x180B0E99B pop rdi		; DEBUG: {Register}/RDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B0E99C ret		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B0E99D xor ecx,ecx		; DEBUG: {Register}/ECX {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x180B0E99F call 000000018012BDA0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0E9A4 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.Void BetterList`1::Trim():
		End of function at 0x180B0E9A5
		Absolute End is at 0x180B0E9A5
		Identified Jump Destination addresses:

		0x180B0E8F5: Saves the content of rdi to the stack
		0x180B0E8FA: [!] Reads field size from {'this' (function parameter, type BetterList`1)} and stores in a new local {'size' (type System.Int32)}

		0x180B0E8FD: Copies {'this' (function parameter, type BetterList`1)} from rcx into rbx
		0x180B0E900: [!] Compares {'size' (type System.Int32)} and 0
		0x180B0E904: Clears register rdx, yielding zero-local {'local2' (type System.Int32)}
		0x180B0E906: [!] Sets the field buffer (Type T[]) on local {'this' (function parameter, type BetterList`1)} to the value stored in {'local2' (type System.Int32)}
		0x180B0E90A: Reads unknown value in stack, offset 56 (0x38) and stores the pointer in register rbx as new constant constant2
		0x180B0E914: [!] Returns from the function

		0x180B0E915: [!] Reads field buffer from {'this' (function parameter, type BetterList`1)} and stores in a new local {'buffer' (type T[])}

		0x180B0E919: [!] Compares {'buffer' (type T[])} and 0
		0x180B0E91C: Jumps to 0x180B0E99D (which throws a NRE) if buffer equals 0. Implicitly present in managed code, so ignored here.
		0x180B0E91E: [!] Compares {'size' (type System.Int32)} and {Property System.Int32 System.Array::Length() on {'buffer' (type T[])}}
		0x180B0E921: Jumps to 0x180B0E90A (which is an if statement's body) if {'size' (type System.Int32)} is greater than or equal to {Property System.Int32 System.Array::Length() on {'buffer' (type T[])}} ;  - Increasing indentation - is standard if, unimportant is False

		0x180B0E923: [!] Reads field  from {'local2' (type System.Int32)} and stores in a new local 

		0x180B0E92C: [!] Reads a value from the array {'buffer' (type T[])} at index 20, into a new local {'local4' (type T)}

		0x180B0E933: [!] Reads field  from  and stores in a new local  ;  - This shouldn't be a field read? Op in reg rcx is {'local4' (type T)}, offset is 16 (0x10)

		0x180B0E937: [!] Compares  and 1
		0x180B0E93E: Jumps to 0x180B0E948 if  != 1 ;  - This is probably a goto, jumping to 0x180B0E948 which is after end of current block @ 0x180B0E90A (started at 0x180B0E923)

		0x180B0E948: Copies {'size' (type System.Int32)} from rdi into rdx
		0x180B0E94E: [!!] Allocates an array of a type which isn't an array (got ), of size 0, and stores the result as . This is a problem - we couldn't resolve the array type
		0x180B0E953: Reads unknown value in stack, offset 48 (0x30) and stores the pointer in register rsi as new constant constant5
		0x180B0E958: Clears register rdx, yielding zero-local {'local5' (type System.Int32)}
		0x180B0E95A: Copies {'buffer' (type T[])} from rax into rcx
		0x180B0E95D: Compares "{il2cpp field on {'constant2' (constant value of type Cpp2IL.Core.Analysis.ResultModels.StackPointer)}, offset 0x18}" and {'local5' (type System.Int32)}
		0x180B0E960: Jumps to 0x180B0E98E if "{il2cpp field on {'constant2' (constant value of type Cpp2IL.Core.Analysis.ResultModels.StackPointer)}, offset 0x18}" is less than or equal to {'local5' (type System.Int32)} ;  - This is probably a goto, jumping to 0x180B0E98E which is after end of current block @ 0x180B0E90A (started at 0x180B0E923)

		0x180B0E966: [!] Compares {'buffer' (type T[])} and 0
		0x180B0E969: Jumps to 0x180B0E99D (which throws a NRE) if buffer equals 0. Implicitly present in managed code, so ignored here.
		0x180B0E96B: Copies {'local5' (type System.Int32)} from rdx into r8
		0x180B0E96E: [!] Compares {'local5' (type System.Int32)} and {Property System.Int32 System.Array::Length() on {'buffer' (type T[])}}
		0x180B0E971: Jumps to 0x180B0E9B8 (which throws a NRE) if {'local5' (type System.Int32)} is greater than or equal to {Property System.Int32 System.Array::Length() on {'buffer' (type T[])}}. Implicitly present in managed code, so ignored here.
		0x180B0E973: [!] Compares {'buffer' (type T[])} and 0
		0x180B0E976: Jumps to 0x180B0E99D (which throws a NRE) if buffer equals 0. Implicitly present in managed code, so ignored here.
		0x180B0E978: [!] Compares {'local5' (type System.Int32)} and {Property System.Int32 System.Array::Length() on {'buffer' (type T[])}}
		0x180B0E97B: Jumps to 0x180B0E9A5 (which throws a NRE) if {'local5' (type System.Int32)} is greater than or equal to {Property System.Int32 System.Array::Length() on {'buffer' (type T[])}}. Implicitly present in managed code, so ignored here.
		0x180B0E97D: Copies the element in the array {'buffer' (type T[])} at the index specified by {'local5' (type System.Int32)} into new local {'t' (type T)}
		0x180B0E982: [!] Adds 1 to the value {'local5' (type System.Int32)}, stored in rdx
		0x180B0E984: Sets the value at offset 0 in array buffer to {'t' (type T)}
		0x180B0E989: Compares {'local5' (type System.Int32)} and "{il2cpp field on {'constant2' (constant value of type Cpp2IL.Core.Analysis.ResultModels.StackPointer)}, offset 0x18}"
		0x180B0E992: Reads unknown value in stack, offset 56 (0x38) and stores the pointer in register rbx as new constant constant10
		0x180B0E99C: [!] Returns from the function

		0x180B0E99F: [!] Constructs and throws an exception of kind System.NullReferenceException




	Generated Pseudocode:

	Declaring Type: BetterList`1
	System.Void Trim()
		System.Int32 size = this.size
		ulong local2 = 0
		this.buffer = local2
		return
		T[] buffer = this.buffer

		if (size < buffer.Length)
		      = local2.
		    T local4 = buffer[20]
		      = .

		    if ( != 1)
                goto INSN_180B0E948
            endif

		    INSN_180B0E948:
		      = new [0]
		    ulong local5 = 0
		    T t = buffer[local5]
		    local5 += 1
		    buffer[0] = t
		    return
		    throw new System.NullReferenceException()


Generated IL:
	IL Generation Skipped due to invalid local buffer of type T[]
	

Method: System.Void BetterList`1::Clear():	Method Body (x86 ASM):
		0x180206C30 mov dword ptr [rcx+18h],0		; DEBUG: {Memory}/None {Immediate32}/None ||| RCX | 24 | None ||| N/A | 0
		0x180206C37 ret		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180206C38 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.Void BetterList`1::Clear():
		End of function at 0x180206C39
		Absolute End is at 0x180206C39
		Identified Jump Destination addresses:

		0x180206C30: [!] Sets the field size (Type System.Int32) on local {'this' (function parameter, type BetterList`1)} to the value stored in 0
		0x180206C37: [!] Returns from the function




	Generated Pseudocode:

	Declaring Type: BetterList`1
	System.Void Clear()
		this.size = 0
		return


Generated IL:
	IL_0000: ldarg.0
	IL_0001: ldc.i4.0
	IL_0002: conv.i8
	IL_0003: conv.u8
	IL_0004: stfld System.Int32 BetterList`1::size
	IL_0009: ret
	

Method: System.Void BetterList`1::Release():	Method Body (x86 ASM):
		0x180B0CC60 xor eax,eax		; DEBUG: {Register}/EAX {Register}/EAX ||| None | 0 | None ||| N/A | N/A
		0x180B0CC62 mov [rcx+18h],eax		; DEBUG: {Memory}/None {Register}/EAX ||| RCX | 24 | None ||| N/A | N/A
		0x180B0CC65 mov [rcx+10h],rax		; DEBUG: {Memory}/None {Register}/RAX ||| RCX | 16 | None ||| N/A | N/A
		0x180B0CC69 ret		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B0CC6A int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.Void BetterList`1::Release():
		End of function at 0x180B0CC6B
		Absolute End is at 0x180B0CC6B
		Identified Jump Destination addresses:

		0x180B0CC60: Clears register rax, yielding zero-local {'local1' (type System.Int32)}
		0x180B0CC62: [!] Sets the field size (Type System.Int32) on local {'this' (function parameter, type BetterList`1)} to the value stored in {'local1' (type System.Int32)}
		0x180B0CC65: [!] Sets the field buffer (Type T[]) on local {'this' (function parameter, type BetterList`1)} to the value stored in {'local1' (type System.Int32)}
		0x180B0CC69: [!] Returns from the function




	Generated Pseudocode:

	Declaring Type: BetterList`1
	System.Void Release()
		ulong local1 = 0
		this.size = local1
		this.buffer = local1
		return


Generated IL:
	IL_0000: ldc.i4.0
	IL_0001: stloc.0
	IL_0002: ldarg.0
	IL_0003: ldloc.0
	IL_0004: stfld System.Int32 BetterList`1::size
	IL_0009: ldarg.0
	IL_000a: ldloc.0
	IL_000b: stfld T[] BetterList`1::buffer
	IL_0010: ret
	

Method: System.Void BetterList`1::Add(T):	Method Body (x86 ASM):
		0x180B0AF40 mov [rsp+8],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RSP | 8 | None ||| N/A | N/A
		0x180B0AF45 mov [rsp+10h],rsi		; DEBUG: {Memory}/None {Register}/RSI ||| RSP | 16 | None ||| N/A | N/A
		0x180B0AF4A push rdi		; DEBUG: {Register}/RDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B0AF4B sub rsp,20h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 32
		0x180B0AF4F mov r9,[rcx+10h]		; DEBUG: {Register}/R9 {Memory}/None ||| RCX | 16 | None ||| N/A | N/A
		0x180B0AF53 lea rbx,[rcx+18h]		; DEBUG: {Register}/RBX {Memory}/None ||| RCX | 24 | None ||| N/A | N/A
		0x180B0AF57 mov rsi,rdx		; DEBUG: {Register}/RSI {Register}/RDX ||| None | 0 | None ||| N/A | N/A
		0x180B0AF5A mov rdi,rcx		; DEBUG: {Register}/RDI {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x180B0AF5D test r9,r9		; DEBUG: {Register}/R9 {Register}/R9 ||| None | 0 | None ||| N/A | N/A
		0x180B0AF60 je short 0000000180B0AF6Bh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0AF62 mov r10d,[rbx]		; DEBUG: {Register}/R10D {Memory}/None ||| RBX | 0 | None ||| N/A | N/A
		0x180B0AF65 cmp r10d,[r9+18h]		; DEBUG: {Register}/R10D {Memory}/None ||| R9 | 24 | None ||| N/A | N/A
		0x180B0AF69 jne short 0000000180B0AF89h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0AF6B mov rax,[r8+18h]		; DEBUG: {Register}/RAX {Memory}/None ||| R8 | 24 | None ||| N/A | N/A
		0x180B0AF6F mov rcx,[rax+0C0h]		; DEBUG: {Register}/RCX {Memory}/None ||| RAX | 192 | None ||| N/A | N/A
		0x180B0AF76 mov rax,[rcx+18h]		; DEBUG: {Register}/RAX {Memory}/None ||| RCX | 24 | None ||| N/A | N/A
		0x180B0AF7A mov rcx,rdi		; DEBUG: {Register}/RCX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x180B0AF7D mov rdx,rax		; DEBUG: {Register}/RDX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180B0AF80 call qword ptr [rax]		; DEBUG: {Memory}/None {Register}/None ||| RAX | 0 | None ||| N/A | N/A
		0x180B0AF82 mov r9,[rdi+10h]		; DEBUG: {Register}/R9 {Memory}/None ||| RDI | 16 | None ||| N/A | N/A
		0x180B0AF86 mov r10d,[rbx]		; DEBUG: {Register}/R10D {Memory}/None ||| RBX | 0 | None ||| N/A | N/A
		0x180B0AF89 lea eax,[r10+1]		; DEBUG: {Register}/EAX {Memory}/None ||| R10 | 1 | None ||| N/A | N/A
		0x180B0AF8D mov [rbx],eax		; DEBUG: {Memory}/None {Register}/EAX ||| RBX | 0 | None ||| N/A | N/A
		0x180B0AF8F test r9,r9		; DEBUG: {Register}/R9 {Register}/R9 ||| None | 0 | None ||| N/A | N/A
		0x180B0AF92 je short 0000000180B0AFB2h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0AF94 cmp r10d,[r9+18h]		; DEBUG: {Register}/R10D {Memory}/None ||| R9 | 24 | None ||| N/A | N/A
		0x180B0AF98 jae short 0000000180B0AFBAh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0AF9A mov rbx,[rsp+30h]		; DEBUG: {Register}/RBX {Memory}/None ||| RSP | 48 | None ||| N/A | N/A
		0x180B0AF9F movsxd rax,r10d		; DEBUG: {Register}/RAX {Register}/R10D ||| None | 0 | None ||| N/A | N/A
		0x180B0AFA2 mov [r9+rax*8+20h],rsi		; DEBUG: {Memory}/None {Register}/RSI ||| R9 | 32 | RAX ||| N/A | N/A
		0x180B0AFA7 mov rsi,[rsp+38h]		; DEBUG: {Register}/RSI {Memory}/None ||| RSP | 56 | None ||| N/A | N/A
		0x180B0AFAC add rsp,20h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 32
		0x180B0AFB0 pop rdi		; DEBUG: {Register}/RDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B0AFB1 ret		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B0AFB2 xor ecx,ecx		; DEBUG: {Register}/ECX {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x180B0AFB4 call 000000018012BDA0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0AFB9 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.Void BetterList`1::Add(T):
		End of function at 0x180B0AFBA
		Absolute End is at 0x180B0AFBA
		Identified Jump Destination addresses:

		0x180B0AF4A: Saves the content of rdi to the stack
		0x180B0AF4F: [!] Reads field buffer from {'this' (function parameter, type BetterList`1)} and stores in a new local {'buffer' (type T[])}

		0x180B0AF53: Loads the pointer to the field size on {'this' (function parameter, type BetterList`1)} into register rbx
		0x180B0AF57: Copies {'item' (function parameter, type T)} from rdx into rsi
		0x180B0AF5A: Copies {'this' (function parameter, type BetterList`1)} from rcx into rdi
		0x180B0AF5D: [!] Compares {'buffer' (type T[])} and 0
		0x180B0AF60: Jumps to 0x180B0AF6B (which throws a NRE) if buffer equals 0. Implicitly present in managed code, so ignored here. ;  - Skipping if statement, is array type check
		0x180B0AF65: [!] Compares  and {Property System.Int32 System.Array::Length() on {'buffer' (type T[])}}
		0x180B0AF69: Jumps to 0x180B0AF89 (which throws a NRE) if  != {Property System.Int32 System.Array::Length() on {'buffer' (type T[])}}. Implicitly present in managed code, so ignored here. ;  - Skipping if statement, is array type check
		0x180B0AF6B: Reads the klass pointer representing the declaring type of this method (which is BetterList`1) and stores in new constant constant3 in register rax
		0x180B0AF6F: Reads RGCTX data for class BetterList`1 which has 11 entries/s and stores in new constant constant4 in register rcx
		0x180B0AF76: Reads the RGCTX data at index 3 in the array constant4, which has datapoint 34234 and is of type IL2CPP_RGCTX_DATA_METHOD (mapping to actual value System.Void BetterList`1<T>.AllocateMore), and stores the result in new constant constant5 in register rax
		0x180B0AF7A: Copies {'this' (function parameter, type BetterList`1)} from rdi into rcx
		0x180B0AF7D: Copies {'constant5' (constant value of type LibCpp2IL.BinaryStructures.Il2CppMethodSpec)} from rax into rdx
		0x180B0AF80: [!] Calls managed method System.Void BetterList`1<T>::AllocateMore() on instance {'this' (function parameter, type BetterList`1)}

		0x180B0AF82: [!] Reads field buffer from {'this' (function parameter, type BetterList`1)} and stores in a new local {'buffer2' (type T[])}

		0x180B0AF8D: [!] Sets the field size (Type System.Int32) on local {'this' (function parameter, type BetterList`1)} to the value stored in {'constant5' (constant value of type LibCpp2IL.BinaryStructures.Il2CppMethodSpec)}
		0x180B0AF8F: [!] Compares {'buffer2' (type T[])} and 0
		0x180B0AF92: Jumps to 0x180B0AFB2 (which throws a NRE) if buffer2 equals 0. Implicitly present in managed code, so ignored here.
		0x180B0AF94: [!] Compares  and {Property System.Int32 System.Array::Length() on {'buffer2' (type T[])}}
		0x180B0AF98: Jumps to 0x180B0AFBA (which throws a NRE) if  is greater than or equal to {Property System.Int32 System.Array::Length() on {'buffer2' (type T[])}}. Implicitly present in managed code, so ignored here.
		0x180B0AF9A: Reads unknown value in stack, offset 48 (0x30) and stores the pointer in register rbx as new constant constant7
		0x180B0AFA2: Sets the value at offset 0 in array buffer2 to {'item' (function parameter, type T)}
		0x180B0AFA7: Reads unknown value in stack, offset 56 (0x38) and stores the pointer in register rsi as new constant constant8
		0x180B0AFB1: [!] Returns from the function

		0x180B0AFB4: [!] Constructs and throws an exception of kind System.NullReferenceException




	Generated Pseudocode:

	Declaring Type: BetterList`1
	System.Void Add(T item)
		T[] buffer = this.buffer

		this.AllocateMore()
		T[] buffer2 = this.buffer
		this.size = constant5
		buffer2[0] = item
		return
		throw new System.NullReferenceException()


Generated IL:
	IL Generation Skipped due to invalid local buffer of type T[]
	

Method: System.Void BetterList`1::Insert(System.Int32,T):	Method Body (x86 ASM):
		0x180B0C590 mov [rsp+8],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RSP | 8 | None ||| N/A | N/A
		0x180B0C595 mov [rsp+10h],rbp		; DEBUG: {Memory}/None {Register}/RBP ||| RSP | 16 | None ||| N/A | N/A
		0x180B0C59A mov [rsp+18h],rsi		; DEBUG: {Memory}/None {Register}/RSI ||| RSP | 24 | None ||| N/A | N/A
		0x180B0C59F push rdi		; DEBUG: {Register}/RDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B0C5A0 sub rsp,20h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 32
		0x180B0C5A4 mov rax,[rcx+10h]		; DEBUG: {Register}/RAX {Memory}/None ||| RCX | 16 | None ||| N/A | N/A
		0x180B0C5A8 mov rsi,r9		; DEBUG: {Register}/RSI {Register}/R9 ||| None | 0 | None ||| N/A | N/A
		0x180B0C5AB movsxd rdi,edx		; DEBUG: {Register}/RDI {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180B0C5AE mov rbp,r8		; DEBUG: {Register}/RBP {Register}/R8 ||| None | 0 | None ||| N/A | N/A
		0x180B0C5B1 mov rbx,rcx		; DEBUG: {Register}/RBX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x180B0C5B4 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180B0C5B7 je short 0000000180B0C5C1h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0C5B9 mov eax,[rax+18h]		; DEBUG: {Register}/EAX {Memory}/None ||| RAX | 24 | None ||| N/A | N/A
		0x180B0C5BC cmp [rcx+18h],eax		; DEBUG: {Memory}/None {Register}/EAX ||| RCX | 24 | None ||| N/A | N/A
		0x180B0C5BF jne short 0000000180B0C5D5h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0C5C1 mov rax,[r9+18h]		; DEBUG: {Register}/RAX {Memory}/None ||| R9 | 24 | None ||| N/A | N/A
		0x180B0C5C5 mov rdx,[rax+0C0h]		; DEBUG: {Register}/RDX {Memory}/None ||| RAX | 192 | None ||| N/A | N/A
		0x180B0C5CC mov rax,[rdx+18h]		; DEBUG: {Register}/RAX {Memory}/None ||| RDX | 24 | None ||| N/A | N/A
		0x180B0C5D0 mov rdx,rax		; DEBUG: {Register}/RDX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180B0C5D3 call qword ptr [rax]		; DEBUG: {Memory}/None {Register}/None ||| RAX | 0 | None ||| N/A | N/A
		0x180B0C5D5 cmp edi,0FFFFFFFFh		; DEBUG: {Register}/EDI {Immediate8to32}/None ||| None | 0 | None ||| N/A | 18446744073709551615
		0x180B0C5D8 jle short 0000000180B0C62Dh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0C5DA mov edx,[rbx+18h]		; DEBUG: {Register}/EDX {Memory}/None ||| RBX | 24 | None ||| N/A | N/A
		0x180B0C5DD cmp edi,edx		; DEBUG: {Register}/EDI {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180B0C5DF jge short 0000000180B0C62Dh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0C5E1 mov rcx,[rbx+10h]		; DEBUG: {Register}/RCX {Memory}/None ||| RBX | 16 | None ||| N/A | N/A
		0x180B0C5E5 test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x180B0C5E8 je near ptr 0000000180B0C695h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0C5EE mov eax,[rcx+18h]		; DEBUG: {Register}/EAX {Memory}/None ||| RCX | 24 | None ||| N/A | N/A
		0x180B0C5F1 movsxd r8,edx		; DEBUG: {Register}/R8 {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180B0C5F4 lea r9,[r8-1]		; DEBUG: {Register}/R9 {Memory}/None ||| R8 | 18446744073709551615 | None ||| N/A | N/A
		0x180B0C5F8 cmp r9d,eax		; DEBUG: {Register}/R9D {Register}/EAX ||| None | 0 | None ||| N/A | N/A
		0x180B0C5FB jae near ptr 0000000180B0C682h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0C601 cmp edx,eax		; DEBUG: {Register}/EDX {Register}/EAX ||| None | 0 | None ||| N/A | N/A
		0x180B0C603 jae short 0000000180B0C66Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0C605 mov rax,[rcx+r9*8+20h]		; DEBUG: {Register}/RAX {Memory}/None ||| RCX | 32 | R9 ||| N/A | N/A
		0x180B0C60A dec edx		; DEBUG: {Register}/EDX {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B0C60C mov [rcx+r8*8+20h],rax		; DEBUG: {Memory}/None {Register}/RAX ||| RCX | 32 | R8 ||| N/A | N/A
		0x180B0C611 cmp edx,edi		; DEBUG: {Register}/EDX {Register}/EDI ||| None | 0 | None ||| N/A | N/A
		0x180B0C613 jg short 0000000180B0C5E1h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0C615 mov rcx,[rbx+10h]		; DEBUG: {Register}/RCX {Memory}/None ||| RBX | 16 | None ||| N/A | N/A
		0x180B0C619 test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x180B0C61C je short 0000000180B0C695h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0C61E cmp edi,[rcx+18h]		; DEBUG: {Register}/EDI {Memory}/None ||| RCX | 24 | None ||| N/A | N/A
		0x180B0C621 jae short 0000000180B0C65Ch		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0C623 mov [rcx+rdi*8+20h],rbp		; DEBUG: {Memory}/None {Register}/RBP ||| RCX | 32 | RDI ||| N/A | N/A
		0x180B0C628 inc dword ptr [rbx+18h]		; DEBUG: {Memory}/None {Register}/None ||| RBX | 24 | None ||| N/A | N/A
		0x180B0C62B jmp short 0000000180B0C647h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0C62D mov rax,[rsi+18h]		; DEBUG: {Register}/RAX {Memory}/None ||| RSI | 24 | None ||| N/A | N/A
		0x180B0C631 mov rdx,rbp		; DEBUG: {Register}/RDX {Register}/RBP ||| None | 0 | None ||| N/A | N/A
		0x180B0C634 mov rcx,[rax+0C0h]		; DEBUG: {Register}/RCX {Memory}/None ||| RAX | 192 | None ||| N/A | N/A
		0x180B0C63B mov rax,[rcx+20h]		; DEBUG: {Register}/RAX {Memory}/None ||| RCX | 32 | None ||| N/A | N/A
		0x180B0C63F mov rcx,rbx		; DEBUG: {Register}/RCX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x180B0C642 mov r8,rax		; DEBUG: {Register}/R8 {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180B0C645 call qword ptr [rax]		; DEBUG: {Memory}/None {Register}/None ||| RAX | 0 | None ||| N/A | N/A
		0x180B0C647 mov rbx,[rsp+30h]		; DEBUG: {Register}/RBX {Memory}/None ||| RSP | 48 | None ||| N/A | N/A
		0x180B0C64C mov rbp,[rsp+38h]		; DEBUG: {Register}/RBP {Memory}/None ||| RSP | 56 | None ||| N/A | N/A
		0x180B0C651 mov rsi,[rsp+40h]		; DEBUG: {Register}/RSI {Memory}/None ||| RSP | 64 | None ||| N/A | N/A
		0x180B0C656 add rsp,20h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 32
		0x180B0C65A pop rdi		; DEBUG: {Register}/RDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B0C65B ret		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B0C65C call 000000018012A7F0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0C661 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180B0C664 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x180B0C667 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180B0C669 call 000000018012BD50h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0C66E int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.Void BetterList`1::Insert(System.Int32,T):
		End of function at 0x180B0C66F
		Absolute End is at 0x180B0C66F
		Identified Jump Destination addresses:
			0x180B0C647
		0x180B0C59F: Saves the content of rdi to the stack
		0x180B0C5A4: [!] Reads field buffer from {'this' (function parameter, type BetterList`1)} and stores in a new local {'buffer' (type T[])}

		0x180B0C5A8: Copies {'il2cppMethodInfo' (type )} from r9 into rsi
		0x180B0C5AB: Copies {'index' (function parameter, type System.Int32)} from rdx into rdi
		0x180B0C5AE: Copies {'item' (function parameter, type T)} from r8 into rbp
		0x180B0C5B1: Copies {'this' (function parameter, type BetterList`1)} from rcx into rbx
		0x180B0C5B4: [!] Compares {'buffer' (type T[])} and 0
		0x180B0C5B7: Jumps to 0x180B0C5C1 (which throws a NRE) if buffer equals 0. Implicitly present in managed code, so ignored here. ;  - Skipping if statement, is array type check
		0x180B0C5B9: Reads the length of the array "{'buffer' (type T[])}" and stores it in new local {'length' (type System.Int32)} in register rax
		0x180B0C5BC: [!] Compares  and {'length' (type System.Int32)}
		0x180B0C5BF: Jumps to 0x180B0C5D5 (which throws a NRE) if  != {'length' (type System.Int32)}. Implicitly present in managed code, so ignored here. ;  - Skipping if statement, is array type check
		0x180B0C5C1: Reads the klass pointer representing the declaring type of this method (which is BetterList`1) and stores in new constant constant2 in register rax
		0x180B0C5C5: Reads RGCTX data for class BetterList`1 which has 11 entries/s and stores in new constant constant3 in register rdx
		0x180B0C5CC: Reads the RGCTX data at index 3 in the array constant3, which has datapoint 34234 and is of type IL2CPP_RGCTX_DATA_METHOD (mapping to actual value System.Void BetterList`1<T>.AllocateMore), and stores the result in new constant constant4 in register rax
		0x180B0C5D0: Copies {'constant4' (constant value of type LibCpp2IL.BinaryStructures.Il2CppMethodSpec)} from rax into rdx
		0x180B0C5D3: [!] Calls managed method System.Void BetterList`1<T>::AllocateMore() on instance {'this' (function parameter, type BetterList`1)}

		0x180B0C5D5: [!] Compares {'index' (function parameter, type System.Int32)} and -1
		0x180B0C5D8: Jumps to 0x180B0C62D if {'index' (function parameter, type System.Int32)} is less than or equal to -1 ;  - Increasing indentation - is if-else, unimportant is False

		0x180B0C5DA: [!] Reads field size from {'this' (function parameter, type BetterList`1)} and stores in a new local {'size' (type System.Int32)}

		0x180B0C5DD: [!] Compares {'index' (function parameter, type System.Int32)} and {'size' (type System.Int32)}
		0x180B0C5DF: Jumps to 0x180B0C62D if {'index' (function parameter, type System.Int32)} is greater than or equal to {'size' (type System.Int32)} ;  - Increasing indentation - is if-else, unimportant is False

		0x180B0C5E1: [!] Reads field buffer from {'this' (function parameter, type BetterList`1)} and stores in a new local {'buffer2' (type T[])}

		0x180B0C5E5: [!] Compares {'buffer2' (type T[])} and 0
		0x180B0C5E8: Jumps to 0x180B0C695 (which throws a NRE) if buffer2 equals 0. Implicitly present in managed code, so ignored here.
		0x180B0C5EE: Reads the length of the array "{'buffer2' (type T[])}" and stores it in new local {'length2' (type System.Int32)} in register rax
		0x180B0C5F1: Copies {'size' (type System.Int32)} from rdx into r8
		0x180B0C5F4: Subtracts 1 from size and stores the result in local8
		0x180B0C5F8: [!] Compares {'local8' (type System.Int32)} and {'length2' (type System.Int32)}
		0x180B0C5FB: Jumps to 0x180B0C682 (which throws a NRE) if {'local8' (type System.Int32)} is greater than or equal to {'length2' (type System.Int32)}. Implicitly present in managed code, so ignored here.
		0x180B0C601: [!] Compares {'size' (type System.Int32)} and {'length2' (type System.Int32)}
		0x180B0C603: Jumps to 0x180B0C66F (which throws a NRE) if {'size' (type System.Int32)} is greater than or equal to {'length2' (type System.Int32)}. Implicitly present in managed code, so ignored here.
		0x180B0C605: Copies the element in the array {'buffer2' (type T[])} at the index specified by {'local8' (type System.Int32)} into new local {'t' (type T)}
		0x180B0C60C: Sets the value at offset 0 in array buffer2 to {'t' (type T)}
		0x180B0C611: [!] Compares {'size' (type System.Int32)} and {'index' (function parameter, type System.Int32)}
		0x180B0C615: [!] Reads field buffer from {'this' (function parameter, type BetterList`1)} and stores in a new local {'buffer3' (type T[])}

		0x180B0C619: [!] Compares {'buffer3' (type T[])} and 0
		0x180B0C61C: Jumps to 0x180B0C695 (which throws a NRE) if buffer3 equals 0. Implicitly present in managed code, so ignored here.
		0x180B0C61E: [!] Compares {'index' (function parameter, type System.Int32)} and {Property System.Int32 System.Array::Length() on {'buffer3' (type T[])}}
		0x180B0C621: Jumps to 0x180B0C65C (which throws a NRE) if {'index' (function parameter, type System.Int32)} is greater than or equal to {Property System.Int32 System.Array::Length() on {'buffer3' (type T[])}}. Implicitly present in managed code, so ignored here.
		0x180B0C623: Sets the value at offset 0 in array buffer3 to {'item' (function parameter, type T)}
		0x180B0C62B: Jumps to 0x180B0C647 (which is an function-local jump destination)

		0x180B0C62D: Reads the klass pointer representing the declaring type of this method (which is BetterList`1) and stores in new constant constant8 in register rax
		0x180B0C631: Copies {'item' (function parameter, type T)} from rbp into rdx
		0x180B0C634: Reads RGCTX data for class BetterList`1 which has 11 entries/s and stores in new constant constant9 in register rcx
		0x180B0C63B: Reads the RGCTX data at index 4 in the array constant9, which has datapoint 34235 and is of type IL2CPP_RGCTX_DATA_METHOD (mapping to actual value System.Void BetterList`1<T>.Add), and stores the result in new constant constant10 in register rax
		0x180B0C63F: Copies {'this' (function parameter, type BetterList`1)} from rbx into rcx
		0x180B0C642: Copies {'constant10' (constant value of type LibCpp2IL.BinaryStructures.Il2CppMethodSpec)} from rax into r8
		0x180B0C645: [!] Calls managed method System.Void BetterList`1<T>::Add(T) on instance {'this' (function parameter, type BetterList`1)} with arguments [{'item' (function parameter, type T)}]


		End Of If-Else Block (at 0x180B0C647) where the else started at 0x180B0C62D
		0x180B0C647: Reads unknown value in stack, offset 48 (0x30) and stores the pointer in register rbx as new constant constant11
		0x180B0C64C: Reads unknown value in stack, offset 56 (0x38) and stores the pointer in register rbp as new constant constant12
		0x180B0C651: Reads unknown value in stack, offset 64 (0x40) and stores the pointer in register rsi as new constant constant13
		0x180B0C65B: [!] Returns from the function

		0x180B0C65C: [!] Constructs and throws an exception of kind System.IndexOutOfRangeException

		0x180B0C661: Copies {'local11' (type System.IndexOutOfRangeException)} from rax into rcx
		0x180B0C669: [!] Throws {'local11' (type System.IndexOutOfRangeException)}



	Generated Pseudocode:

	Declaring Type: BetterList`1
	System.Void Insert(System.Int32 index, T item)
		T[] buffer = this.buffer
		System.Int32 length = buffer.Length

		this.AllocateMore()

		if (index > -1)
		    System.Int32 size = this.size

		    if (index < size)
		        T[] buffer2 = this.buffer
		        System.Int32 length2 = buffer2.Length
		        System.Int32 local8 = size - 1
		        T t = buffer2[local8]
		        buffer2[0] = t
		        T[] buffer3 = this.buffer
		        buffer3[0] = item
		    else

		        this.Add(item) //(T )
		    endif
            
		    return
		    throw new System.IndexOutOfRangeException()
		    throw local11


Generated IL:
	IL Generation Skipped due to invalid local buffer of type T[]
	

Method: System.Boolean BetterList`1::Contains(T):	Method Body (x86 ASM):
		0x180B0BA00 mov [rsp+8],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RSP | 8 | None ||| N/A | N/A
		0x180B0BA05 mov [rsp+10h],rsi		; DEBUG: {Memory}/None {Register}/RSI ||| RSP | 16 | None ||| N/A | N/A
		0x180B0BA0A push rdi		; DEBUG: {Register}/RDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B0BA0B sub rsp,20h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 32
		0x180B0BA0F cmp qword ptr [rcx+10h],0		; DEBUG: {Memory}/None {Immediate8to64}/None ||| RCX | 16 | None ||| N/A | 0
		0x180B0BA14 mov rsi,rdx		; DEBUG: {Register}/RSI {Register}/RDX ||| None | 0 | None ||| N/A | N/A
		0x180B0BA17 mov rdi,rcx		; DEBUG: {Register}/RDI {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x180B0BA1A je short 0000000180B0BA5Ch		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0BA1C xor ebx,ebx		; DEBUG: {Register}/EBX {Register}/EBX ||| None | 0 | None ||| N/A | N/A
		0x180B0BA1E cmp [rcx+18h],ebx		; DEBUG: {Memory}/None {Register}/EBX ||| RCX | 24 | None ||| N/A | N/A
		0x180B0BA21 jle short 0000000180B0BA5Ch		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0BA23 mov rcx,[rdi+10h]		; DEBUG: {Register}/RCX {Memory}/None ||| RDI | 16 | None ||| N/A | N/A
		0x180B0BA27 test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x180B0BA2A je short 0000000180B0BA80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0BA2C cmp ebx,[rcx+18h]		; DEBUG: {Register}/EBX {Memory}/None ||| RCX | 24 | None ||| N/A | N/A
		0x180B0BA2F jae short 0000000180B0BA88h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0BA31 movsxd rax,ebx		; DEBUG: {Register}/RAX {Register}/EBX ||| None | 0 | None ||| N/A | N/A
		0x180B0BA34 mov rcx,[rcx+rax*8+20h]		; DEBUG: {Register}/RCX {Memory}/None ||| RCX | 32 | RAX ||| N/A | N/A
		0x180B0BA39 test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x180B0BA3C je short 0000000180B0BA80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0BA3E mov rax,[rcx]		; DEBUG: {Register}/RAX {Memory}/None ||| RCX | 0 | None ||| N/A | N/A
		0x180B0BA41 mov rdx,rsi		; DEBUG: {Register}/RDX {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x180B0BA44 mov r8,[rax+130h]		; DEBUG: {Register}/R8 {Memory}/None ||| RAX | 304 | None ||| N/A | N/A
		0x180B0BA4B call qword ptr [rax+128h]		; DEBUG: {Memory}/None {Register}/None ||| RAX | 296 | None ||| N/A | N/A
		0x180B0BA51 test al,al		; DEBUG: {Register}/AL {Register}/AL ||| None | 0 | None ||| N/A | N/A
		0x180B0BA53 jne short 0000000180B0BA6Eh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0BA55 inc ebx		; DEBUG: {Register}/EBX {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B0BA57 cmp ebx,[rdi+18h]		; DEBUG: {Register}/EBX {Memory}/None ||| RDI | 24 | None ||| N/A | N/A
		0x180B0BA5A jl short 0000000180B0BA23h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0BA5C xor al,al		; DEBUG: {Register}/AL {Register}/AL ||| None | 0 | None ||| N/A | N/A
		0x180B0BA5E mov rbx,[rsp+30h]		; DEBUG: {Register}/RBX {Memory}/None ||| RSP | 48 | None ||| N/A | N/A
		0x180B0BA63 mov rsi,[rsp+38h]		; DEBUG: {Register}/RSI {Memory}/None ||| RSP | 56 | None ||| N/A | N/A
		0x180B0BA68 add rsp,20h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 32
		0x180B0BA6C pop rdi		; DEBUG: {Register}/RDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B0BA6D ret		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B0BA6E mov rbx,[rsp+30h]		; DEBUG: {Register}/RBX {Memory}/None ||| RSP | 48 | None ||| N/A | N/A
		0x180B0BA73 mov al,1		; DEBUG: {Register}/AL {Immediate8}/None ||| None | 0 | None ||| N/A | 1
		0x180B0BA75 mov rsi,[rsp+38h]		; DEBUG: {Register}/RSI {Memory}/None ||| RSP | 56 | None ||| N/A | N/A
		0x180B0BA7A add rsp,20h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 32
		0x180B0BA7E pop rdi		; DEBUG: {Register}/RDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B0BA7F ret		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B0BA80 xor ecx,ecx		; DEBUG: {Register}/ECX {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x180B0BA82 call 000000018012BDA0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0BA87 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.Boolean BetterList`1::Contains(T):
		End of function at 0x180B0BA88
		Absolute End is at 0x180B0BA88
		Identified Jump Destination addresses:

		0x180B0BA0A: Saves the content of rdi to the stack
		0x180B0BA0F: [!] Compares  and 0
		0x180B0BA14: Copies {'item' (function parameter, type T)} from rdx into rsi
		0x180B0BA17: Copies {'this' (function parameter, type BetterList`1)} from rcx into rdi
		0x180B0BA1A: Jumps to 0x180B0BA5C (which is an if statement's body) if  equals 0 ;  - Increasing indentation - is standard if, unimportant is False

		0x180B0BA1C: Clears register rbx, yielding zero-local {'local2' (type System.Int32)}
		0x180B0BA1E: [!] Compares  and {'local2' (type System.Int32)}
		0x180B0BA21: Jumps to 0x180B0BA5C (which throws a NRE) if  is less than or equal to {'local2' (type System.Int32)}. Implicitly present in managed code, so ignored here. ;  - Skipping if statement, is array type check
		0x180B0BA23: [!] Reads field buffer from {'this' (function parameter, type BetterList`1)} and stores in a new local {'buffer' (type T[])}

		0x180B0BA27: [!] Compares {'buffer' (type T[])} and 0
		0x180B0BA2A: Jumps to 0x180B0BA80 (which throws a NRE) if buffer equals 0. Implicitly present in managed code, so ignored here.
		0x180B0BA2C: [!] Compares {'local2' (type System.Int32)} and {Property System.Int32 System.Array::Length() on {'buffer' (type T[])}}
		0x180B0BA2F: Jumps to 0x180B0BA88 (which throws a NRE) if {'local2' (type System.Int32)} is greater than or equal to {Property System.Int32 System.Array::Length() on {'buffer' (type T[])}}. Implicitly present in managed code, so ignored here.
		0x180B0BA31: Copies {'local2' (type System.Int32)} from rbx into rax
		0x180B0BA34: Copies the element in the array {'buffer' (type T[])} at the index specified by {'local2' (type System.Int32)} into new local {'t' (type T)}
		0x180B0BA39: [!] Compares {'t' (type T)} and 0
		0x180B0BA3C: Jumps to 0x180B0BA80 (which throws a NRE) if t equals 0. Implicitly present in managed code, so ignored here.
		0x180B0BA3E: Loads the class pointer from t into a constant constant4 in register rax
		0x180B0BA41: Copies {'item' (function parameter, type T)} from rsi into rdx
		0x180B0BA44: Loads the pointer to the implementation of virtual function  specific to System.Object from the class pointer in rax, slot -1 (from memory offset 304) and stores in constant 
		0x180B0BA51: [!] Compares {'constant4' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} and 0
		0x180B0BA53: Jumps to 0x180B0BA6E if {'constant4' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} != 0 ;  - This is probably a goto, jumping to 0x180B0BA6E which is after end of current block @ 0x180B0BA5C (started at 0x180B0BA1C)

		0x180B0BA55: [!] Adds 1 to the value {'local2' (type System.Int32)}, stored in rbx
		0x180B0BA57: [!] Compares {'local2' (type System.Int32)} against itself
		0x180B0BA5C: Clears register rax, yielding zero-local {'local5' (type System.Int32)}
		0x180B0BA5E: Reads unknown value in stack, offset 48 (0x30) and stores the pointer in register rbx as new constant constant6
		0x180B0BA63: Reads unknown value in stack, offset 56 (0x38) and stores the pointer in register rsi as new constant constant7
		0x180B0BA6D: [!] Returns {'local5' (type System.Int32)} from the function

		0x180B0BA6E: Reads unknown value in stack, offset 48 (0x30) and stores the pointer in register rbx as new constant constant8
		0x180B0BA73: [!] Writes the constant 0x1 into operand True (type UInt64) in register rax
		0x180B0BA75: Reads unknown value in stack, offset 56 (0x38) and stores the pointer in register rsi as new constant constant10
		0x180B0BA7F: [!] Returns True from the function

		0x180B0BA82: [!] Constructs and throws an exception of kind System.NullReferenceException




	Generated Pseudocode:

	Declaring Type: BetterList`1
	System.Boolean Contains(T item)

		if ( != 0)
		    ulong local2 = 0
		    T[] buffer = this.buffer
		    T t = buffer[local2]

		    if (constant4 != 0)
                goto INSN_180B0BA6E
            endif
		    local2 += 1
		endif
        
		ulong local5 = 0
		return local5

		INSN_180B0BA6E:
		return True
		throw new System.NullReferenceException()


Generated IL:
	IL Generation Skipped due to invalid local buffer of type T[]
	

Method: System.Int32 BetterList`1::IndexOf(T):	Method Body (x86 ASM):
		0x180B0BD80 mov [rsp+8],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RSP | 8 | None ||| N/A | N/A
		0x180B0BD85 mov [rsp+10h],rsi		; DEBUG: {Memory}/None {Register}/RSI ||| RSP | 16 | None ||| N/A | N/A
		0x180B0BD8A push rdi		; DEBUG: {Register}/RDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B0BD8B sub rsp,20h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 32
		0x180B0BD8F cmp qword ptr [rcx+10h],0		; DEBUG: {Memory}/None {Immediate8to64}/None ||| RCX | 16 | None ||| N/A | 0
		0x180B0BD94 mov rsi,rdx		; DEBUG: {Register}/RSI {Register}/RDX ||| None | 0 | None ||| N/A | N/A
		0x180B0BD97 mov rdi,rcx		; DEBUG: {Register}/RDI {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x180B0BD9A je short 0000000180B0BDDCh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0BD9C xor ebx,ebx		; DEBUG: {Register}/EBX {Register}/EBX ||| None | 0 | None ||| N/A | N/A
		0x180B0BD9E cmp [rcx+18h],ebx		; DEBUG: {Memory}/None {Register}/EBX ||| RCX | 24 | None ||| N/A | N/A
		0x180B0BDA1 jle short 0000000180B0BDDCh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0BDA3 mov rcx,[rdi+10h]		; DEBUG: {Register}/RCX {Memory}/None ||| RDI | 16 | None ||| N/A | N/A
		0x180B0BDA7 test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x180B0BDAA je short 0000000180B0BE03h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0BDAC cmp ebx,[rcx+18h]		; DEBUG: {Register}/EBX {Memory}/None ||| RCX | 24 | None ||| N/A | N/A
		0x180B0BDAF jae short 0000000180B0BE0Bh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0BDB1 movsxd rax,ebx		; DEBUG: {Register}/RAX {Register}/EBX ||| None | 0 | None ||| N/A | N/A
		0x180B0BDB4 mov rcx,[rcx+rax*8+20h]		; DEBUG: {Register}/RCX {Memory}/None ||| RCX | 32 | RAX ||| N/A | N/A
		0x180B0BDB9 test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x180B0BDBC je short 0000000180B0BE03h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0BDBE mov rax,[rcx]		; DEBUG: {Register}/RAX {Memory}/None ||| RCX | 0 | None ||| N/A | N/A
		0x180B0BDC1 mov rdx,rsi		; DEBUG: {Register}/RDX {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x180B0BDC4 mov r8,[rax+130h]		; DEBUG: {Register}/R8 {Memory}/None ||| RAX | 304 | None ||| N/A | N/A
		0x180B0BDCB call qword ptr [rax+128h]		; DEBUG: {Memory}/None {Register}/None ||| RAX | 296 | None ||| N/A | N/A
		0x180B0BDD1 test al,al		; DEBUG: {Register}/AL {Register}/AL ||| None | 0 | None ||| N/A | N/A
		0x180B0BDD3 jne short 0000000180B0BDF1h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0BDD5 inc ebx		; DEBUG: {Register}/EBX {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B0BDD7 cmp ebx,[rdi+18h]		; DEBUG: {Register}/EBX {Memory}/None ||| RDI | 24 | None ||| N/A | N/A
		0x180B0BDDA jl short 0000000180B0BDA3h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0BDDC mov eax,0FFFFFFFFh		; DEBUG: {Register}/EAX {Immediate32}/None ||| None | 0 | None ||| N/A | 4294967295
		0x180B0BDE1 mov rbx,[rsp+30h]		; DEBUG: {Register}/RBX {Memory}/None ||| RSP | 48 | None ||| N/A | N/A
		0x180B0BDE6 mov rsi,[rsp+38h]		; DEBUG: {Register}/RSI {Memory}/None ||| RSP | 56 | None ||| N/A | N/A
		0x180B0BDEB add rsp,20h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 32
		0x180B0BDEF pop rdi		; DEBUG: {Register}/RDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B0BDF0 ret		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B0BDF1 mov rsi,[rsp+38h]		; DEBUG: {Register}/RSI {Memory}/None ||| RSP | 56 | None ||| N/A | N/A
		0x180B0BDF6 mov eax,ebx		; DEBUG: {Register}/EAX {Register}/EBX ||| None | 0 | None ||| N/A | N/A
		0x180B0BDF8 mov rbx,[rsp+30h]		; DEBUG: {Register}/RBX {Memory}/None ||| RSP | 48 | None ||| N/A | N/A
		0x180B0BDFD add rsp,20h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 32
		0x180B0BE01 pop rdi		; DEBUG: {Register}/RDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B0BE02 ret		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B0BE03 xor ecx,ecx		; DEBUG: {Register}/ECX {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x180B0BE05 call 000000018012BDA0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0BE0A int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.Int32 BetterList`1::IndexOf(T):
		End of function at 0x180B0BE0B
		Absolute End is at 0x180B0BE0B
		Identified Jump Destination addresses:

		0x180B0BD8A: Saves the content of rdi to the stack
		0x180B0BD8F: [!] Compares  and 0
		0x180B0BD94: Copies {'item' (function parameter, type T)} from rdx into rsi
		0x180B0BD97: Copies {'this' (function parameter, type BetterList`1)} from rcx into rdi
		0x180B0BD9A: Jumps to 0x180B0BDDC (which is an if statement's body) if  equals 0 ;  - Increasing indentation - is standard if, unimportant is False

		0x180B0BD9C: Clears register rbx, yielding zero-local {'local2' (type System.Int32)}
		0x180B0BD9E: [!] Compares  and {'local2' (type System.Int32)}
		0x180B0BDA1: Jumps to 0x180B0BDDC (which throws a NRE) if  is less than or equal to {'local2' (type System.Int32)}. Implicitly present in managed code, so ignored here. ;  - Skipping if statement, is array type check
		0x180B0BDA3: [!] Reads field buffer from {'this' (function parameter, type BetterList`1)} and stores in a new local {'buffer' (type T[])}

		0x180B0BDA7: [!] Compares {'buffer' (type T[])} and 0
		0x180B0BDAA: Jumps to 0x180B0BE03 (which throws a NRE) if buffer equals 0. Implicitly present in managed code, so ignored here.
		0x180B0BDAC: [!] Compares {'local2' (type System.Int32)} and {Property System.Int32 System.Array::Length() on {'buffer' (type T[])}}
		0x180B0BDAF: Jumps to 0x180B0BE0B (which throws a NRE) if {'local2' (type System.Int32)} is greater than or equal to {Property System.Int32 System.Array::Length() on {'buffer' (type T[])}}. Implicitly present in managed code, so ignored here.
		0x180B0BDB1: Copies {'local2' (type System.Int32)} from rbx into rax
		0x180B0BDB4: Copies the element in the array {'buffer' (type T[])} at the index specified by {'local2' (type System.Int32)} into new local {'t' (type T)}
		0x180B0BDB9: [!] Compares {'t' (type T)} and 0
		0x180B0BDBC: Jumps to 0x180B0BE03 (which throws a NRE) if t equals 0. Implicitly present in managed code, so ignored here.
		0x180B0BDBE: Loads the class pointer from t into a constant constant4 in register rax
		0x180B0BDC1: Copies {'item' (function parameter, type T)} from rsi into rdx
		0x180B0BDC4: Loads the pointer to the implementation of virtual function  specific to System.Object from the class pointer in rax, slot -1 (from memory offset 304) and stores in constant 
		0x180B0BDD1: [!] Compares {'constant4' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} and 0
		0x180B0BDD3: Jumps to 0x180B0BDF1 if {'constant4' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} != 0 ;  - This is probably a goto, jumping to 0x180B0BDF1 which is after end of current block @ 0x180B0BDDC (started at 0x180B0BD9C)

		0x180B0BDD5: [!] Adds 1 to the value {'local2' (type System.Int32)}, stored in rbx
		0x180B0BDD7: [!] Compares {'local2' (type System.Int32)} against itself
		0x180B0BDDC: [!] Writes the constant 0xFFFFFFFF into operand -1 (type UInt64) in register rax
		0x180B0BDE1: Reads unknown value in stack, offset 48 (0x30) and stores the pointer in register rbx as new constant constant7
		0x180B0BDE6: Reads unknown value in stack, offset 56 (0x38) and stores the pointer in register rsi as new constant constant8
		0x180B0BDF0: [!] Returns -1 from the function

		0x180B0BDF1: Reads unknown value in stack, offset 56 (0x38) and stores the pointer in register rsi as new constant constant9
		0x180B0BDF6: Copies {'constant7' (constant value of type Cpp2IL.Core.Analysis.ResultModels.StackPointer)} from rbx into rax
		0x180B0BDF8: Reads unknown value in stack, offset 48 (0x30) and stores the pointer in register rbx as new constant constant10
		0x180B0BE02: [!] Returns {'constant7' (constant value of type Cpp2IL.Core.Analysis.ResultModels.StackPointer)} from the function

		0x180B0BE05: [!] Constructs and throws an exception of kind System.NullReferenceException




	Generated Pseudocode:

	Declaring Type: BetterList`1
	System.Int32 IndexOf(T item)

		if ( != 0)
		    ulong local2 = 0
		    T[] buffer = this.buffer
		    T t = buffer[local2]

		    if (constant4 != 0)
                goto INSN_180B0BDF1
            endif
		    local2 += 1
		endif
        
		return -1

		INSN_180B0BDF1:
		return constant7
		throw new System.NullReferenceException()


Generated IL:
	IL Generation Skipped due to invalid local buffer of type T[]
	

Method: System.Boolean BetterList`1::Remove(T):	Method Body (x86 ASM):
		0x180B0D480 mov [rsp+8],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RSP | 8 | None ||| N/A | N/A
		0x180B0D485 mov [rsp+10h],rbp		; DEBUG: {Memory}/None {Register}/RBP ||| RSP | 16 | None ||| N/A | N/A
		0x180B0D48A mov [rsp+18h],rsi		; DEBUG: {Memory}/None {Register}/RSI ||| RSP | 24 | None ||| N/A | N/A
		0x180B0D48F mov [rsp+20h],rdi		; DEBUG: {Memory}/None {Register}/RDI ||| RSP | 32 | None ||| N/A | N/A
		0x180B0D494 push r14		; DEBUG: {Register}/R14 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B0D496 sub rsp,20h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 32
		0x180B0D49A cmp qword ptr [rcx+10h],0		; DEBUG: {Memory}/None {Immediate8to64}/None ||| RCX | 16 | None ||| N/A | 0
		0x180B0D49F mov rbx,r8		; DEBUG: {Register}/RBX {Register}/R8 ||| None | 0 | None ||| N/A | N/A
		0x180B0D4A2 mov r14,rdx		; DEBUG: {Register}/R14 {Register}/RDX ||| None | 0 | None ||| N/A | N/A
		0x180B0D4A5 mov rdi,rcx		; DEBUG: {Register}/RDI {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x180B0D4A8 je near ptr 0000000180B0D59Ah		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0D4AE mov rcx,[r8+18h]		; DEBUG: {Register}/RCX {Memory}/None ||| R8 | 24 | None ||| N/A | N/A
		0x180B0D4B2 mov rax,[rcx+0C0h]		; DEBUG: {Register}/RAX {Memory}/None ||| RCX | 192 | None ||| N/A | N/A
		0x180B0D4B9 mov rsi,[rax+38h]		; DEBUG: {Register}/RSI {Memory}/None ||| RAX | 56 | None ||| N/A | N/A
		0x180B0D4BD test byte ptr [rsi+126h],1		; DEBUG: {Memory}/None {Immediate8}/None ||| RSI | 294 | None ||| N/A | 1
		0x180B0D4C4 jne short 0000000180B0D4D2h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0D4C6 mov rcx,rsi		; DEBUG: {Register}/RCX {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x180B0D4C9 call 00000001800F6690h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0D4CE mov rcx,[rbx+18h]		; DEBUG: {Register}/RCX {Memory}/None ||| RBX | 24 | None ||| N/A | N/A
		0x180B0D4D2 test byte ptr [rsi+127h],2		; DEBUG: {Memory}/None {Immediate8}/None ||| RSI | 295 | None ||| N/A | 2
		0x180B0D4D9 je short 0000000180B0D528h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0D4DB mov rax,[rcx+0C0h]		; DEBUG: {Register}/RAX {Memory}/None ||| RCX | 192 | None ||| N/A | N/A
		0x180B0D4E2 mov rsi,[rax+38h]		; DEBUG: {Register}/RSI {Memory}/None ||| RAX | 56 | None ||| N/A | N/A
		0x180B0D4E6 test byte ptr [rsi+126h],1		; DEBUG: {Memory}/None {Immediate8}/None ||| RSI | 294 | None ||| N/A | 1
		0x180B0D4ED jne short 0000000180B0D4FBh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0D4EF mov rcx,rsi		; DEBUG: {Register}/RCX {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x180B0D4F2 call 00000001800F6690h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0D4F7 mov rcx,[rbx+18h]		; DEBUG: {Register}/RCX {Memory}/None ||| RBX | 24 | None ||| N/A | N/A
		0x180B0D4FB cmp dword ptr [rsi+0D8h],0		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RSI | 216 | None ||| N/A | 0
		0x180B0D502 jne short 0000000180B0D528h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0D504 mov rax,[rcx+0C0h]		; DEBUG: {Register}/RAX {Memory}/None ||| RCX | 192 | None ||| N/A | N/A
		0x180B0D50B mov rsi,[rax+38h]		; DEBUG: {Register}/RSI {Memory}/None ||| RAX | 56 | None ||| N/A | N/A
		0x180B0D50F test byte ptr [rsi+126h],1		; DEBUG: {Memory}/None {Immediate8}/None ||| RSI | 294 | None ||| N/A | 1
		0x180B0D516 jne short 0000000180B0D520h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0D518 mov rcx,rsi		; DEBUG: {Register}/RCX {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x180B0D51B call 00000001800F6690h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0D520 mov rcx,rsi		; DEBUG: {Register}/RCX {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x180B0D523 call 000000018010EAF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0D528 mov rax,[rbx+18h]		; DEBUG: {Register}/RAX {Memory}/None ||| RBX | 24 | None ||| N/A | N/A
		0x180B0D52C mov rcx,[rax+0C0h]		; DEBUG: {Register}/RCX {Memory}/None ||| RAX | 192 | None ||| N/A | N/A
		0x180B0D533 mov rax,[rcx+30h]		; DEBUG: {Register}/RAX {Memory}/None ||| RCX | 48 | None ||| N/A | N/A
		0x180B0D537 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180B0D53A call qword ptr [rax]		; DEBUG: {Memory}/None {Register}/None ||| RAX | 0 | None ||| N/A | N/A
		0x180B0D53C xor ebx,ebx		; DEBUG: {Register}/EBX {Register}/EBX ||| None | 0 | None ||| N/A | N/A
		0x180B0D53E mov rsi,rax		; DEBUG: {Register}/RSI {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180B0D541 cmp [rdi+18h],ebx		; DEBUG: {Memory}/None {Register}/EBX ||| RDI | 24 | None ||| N/A | N/A
		0x180B0D544 jle short 0000000180B0D59Ah		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0D546 nop word ptr [rax+rax]		; DEBUG: {Memory}/None {Register}/None ||| RAX | 0 | RAX ||| N/A | N/A
		0x180B0D550 mov rdx,[rdi+10h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 16 | None ||| N/A | N/A
		0x180B0D554 test rdx,rdx		; DEBUG: {Register}/RDX {Register}/RDX ||| None | 0 | None ||| N/A | N/A
		0x180B0D557 je near ptr 0000000180B0D62Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0D55D movsxd rbp,ebx		; DEBUG: {Register}/RBP {Register}/EBX ||| None | 0 | None ||| N/A | N/A
		0x180B0D560 cmp ebx,[rdx+18h]		; DEBUG: {Register}/EBX {Memory}/None ||| RDX | 24 | None ||| N/A | N/A
		0x180B0D563 jae near ptr 0000000180B0D683h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0D569 test rsi,rsi		; DEBUG: {Register}/RSI {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x180B0D56C je near ptr 0000000180B0D62Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0D572 mov rax,[rsi]		; DEBUG: {Register}/RAX {Memory}/None ||| RSI | 0 | None ||| N/A | N/A
		0x180B0D575 mov r8,r14		; DEBUG: {Register}/R8 {Register}/R14 ||| None | 0 | None ||| N/A | N/A
		0x180B0D578 mov rdx,[rdx+rbp*8+20h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 32 | RBP ||| N/A | N/A
		0x180B0D57D mov rcx,rsi		; DEBUG: {Register}/RCX {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x180B0D580 mov r9,[rax+1C0h]		; DEBUG: {Register}/R9 {Memory}/None ||| RAX | 448 | None ||| N/A | N/A
		0x180B0D587 call qword ptr [rax+1B8h]		; DEBUG: {Memory}/None {Register}/None ||| RAX | 440 | None ||| N/A | N/A
		0x180B0D58D mov ecx,[rdi+18h]		; DEBUG: {Register}/ECX {Memory}/None ||| RDI | 24 | None ||| N/A | N/A
		0x180B0D590 test al,al		; DEBUG: {Register}/AL {Register}/AL ||| None | 0 | None ||| N/A | N/A
		0x180B0D592 jne short 0000000180B0D5B7h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0D594 inc ebx		; DEBUG: {Register}/EBX {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B0D596 cmp ebx,ecx		; DEBUG: {Register}/EBX {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x180B0D598 jl short 0000000180B0D550h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0D59A xor al,al		; DEBUG: {Register}/AL {Register}/AL ||| None | 0 | None ||| N/A | N/A
		0x180B0D59C mov rbx,[rsp+30h]		; DEBUG: {Register}/RBX {Memory}/None ||| RSP | 48 | None ||| N/A | N/A
		0x180B0D5A1 mov rbp,[rsp+38h]		; DEBUG: {Register}/RBP {Memory}/None ||| RSP | 56 | None ||| N/A | N/A
		0x180B0D5A6 mov rsi,[rsp+40h]		; DEBUG: {Register}/RSI {Memory}/None ||| RSP | 64 | None ||| N/A | N/A
		0x180B0D5AB mov rdi,[rsp+48h]		; DEBUG: {Register}/RDI {Memory}/None ||| RSP | 72 | None ||| N/A | N/A
		0x180B0D5B0 add rsp,20h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 32
		0x180B0D5B4 pop r14		; DEBUG: {Register}/R14 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B0D5B6 ret		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B0D5B7 lea eax,[rcx-1]		; DEBUG: {Register}/EAX {Memory}/None ||| RCX | 18446744073709551615 | None ||| N/A | N/A
		0x180B0D5BA mov [rdi+18h],eax		; DEBUG: {Memory}/None {Register}/EAX ||| RDI | 24 | None ||| N/A | N/A
		0x180B0D5BD mov rax,[rdi+10h]		; DEBUG: {Register}/RAX {Memory}/None ||| RDI | 16 | None ||| N/A | N/A
		0x180B0D5C1 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180B0D5C4 je short 0000000180B0D62Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0D5C6 cmp ebx,[rax+18h]		; DEBUG: {Register}/EBX {Memory}/None ||| RAX | 24 | None ||| N/A | N/A
		0x180B0D5C9 jae short 0000000180B0D637h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0D5CB mov qword ptr [rax+rbp*8+20h],0		; DEBUG: {Memory}/None {Immediate32to64}/None ||| RAX | 32 | RBP ||| N/A | 0
		0x180B0D5D4 mov eax,[rdi+18h]		; DEBUG: {Register}/EAX {Memory}/None ||| RDI | 24 | None ||| N/A | N/A
		0x180B0D5D7 cmp ebx,eax		; DEBUG: {Register}/EBX {Register}/EAX ||| None | 0 | None ||| N/A | N/A
		0x180B0D5D9 jge short 0000000180B0D60Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0D5DB nop dword ptr [rax+rax]		; DEBUG: {Memory}/None {Register}/None ||| RAX | 0 | RAX ||| N/A | N/A
		0x180B0D5E0 mov rcx,[rdi+10h]		; DEBUG: {Register}/RCX {Memory}/None ||| RDI | 16 | None ||| N/A | N/A
		0x180B0D5E4 test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x180B0D5E7 je short 0000000180B0D62Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0D5E9 mov eax,[rcx+18h]		; DEBUG: {Register}/EAX {Memory}/None ||| RCX | 24 | None ||| N/A | N/A
		0x180B0D5EC movsxd rdx,ebx		; DEBUG: {Register}/RDX {Register}/EBX ||| None | 0 | None ||| N/A | N/A
		0x180B0D5EF lea r8,[rdx+1]		; DEBUG: {Register}/R8 {Memory}/None ||| RDX | 1 | None ||| N/A | N/A
		0x180B0D5F3 cmp r8d,eax		; DEBUG: {Register}/R8D {Register}/EAX ||| None | 0 | None ||| N/A | N/A
		0x180B0D5F6 jae short 0000000180B0D670h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0D5F8 cmp ebx,eax		; DEBUG: {Register}/EBX {Register}/EAX ||| None | 0 | None ||| N/A | N/A
		0x180B0D5FA jae short 0000000180B0D65Dh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0D5FC mov rax,[rcx+r8*8+20h]		; DEBUG: {Register}/RAX {Memory}/None ||| RCX | 32 | R8 ||| N/A | N/A
		0x180B0D601 inc ebx		; DEBUG: {Register}/EBX {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B0D603 mov [rcx+rdx*8+20h],rax		; DEBUG: {Memory}/None {Register}/RAX ||| RCX | 32 | RDX ||| N/A | N/A
		0x180B0D608 mov eax,[rdi+18h]		; DEBUG: {Register}/EAX {Memory}/None ||| RDI | 24 | None ||| N/A | N/A
		0x180B0D60B cmp ebx,eax		; DEBUG: {Register}/EBX {Register}/EAX ||| None | 0 | None ||| N/A | N/A
		0x180B0D60D jl short 0000000180B0D5E0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0D60F mov rcx,[rdi+10h]		; DEBUG: {Register}/RCX {Memory}/None ||| RDI | 16 | None ||| N/A | N/A
		0x180B0D613 test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x180B0D616 je short 0000000180B0D62Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0D618 cmp eax,[rcx+18h]		; DEBUG: {Register}/EAX {Memory}/None ||| RCX | 24 | None ||| N/A | N/A
		0x180B0D61B jae short 0000000180B0D64Ah		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0D61D cdqe		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B0D61F mov qword ptr [rcx+rax*8+20h],0		; DEBUG: {Memory}/None {Immediate32to64}/None ||| RCX | 32 | RAX ||| N/A | 0
		0x180B0D628 mov al,1		; DEBUG: {Register}/AL {Immediate8}/None ||| None | 0 | None ||| N/A | 1
		0x180B0D62A jmp near ptr 0000000180B0D59Ch		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0D62F xor ecx,ecx		; DEBUG: {Register}/ECX {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x180B0D631 call 000000018012BDA0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0D636 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.Boolean BetterList`1::Remove(T):
		End of function at 0x180B0D637
		Absolute End is at 0x180B0D637
		Identified Jump Destination addresses:

		0x180B0D494: Saves the content of r14 to the stack
		0x180B0D49A: [!] Compares  and 0
		0x180B0D49F: Copies {'il2cppMethodInfo' (type )} from r8 into rbx
		0x180B0D4A2: Copies {'item' (function parameter, type T)} from rdx into r14
		0x180B0D4A5: Copies {'this' (function parameter, type BetterList`1)} from rcx into rdi
		0x180B0D4A8: Jumps to 0x180B0D59A (which is an if statement's body) if  equals 0 ;  - Increasing indentation - is standard if, unimportant is False

		0x180B0D4AE: Reads the klass pointer representing the declaring type of this method (which is BetterList`1) and stores in new constant constant2 in register rcx
		0x180B0D4B2: Reads RGCTX data for class BetterList`1 which has 11 entries/s and stores in new constant constant3 in register rax
		0x180B0D4B9: Reads the RGCTX data at index 7 in the array constant3, which has datapoint 35216 and is of type IL2CPP_RGCTX_DATA_CLASS (mapping to actual value System.Collections.Generic.EqualityComparer`1<T>), and stores the result in new constant constant4 in register rsi
		0x180B0D4BD: Compares "{il2cpp field on {'constant4' (constant value of type Mono.Cecil.TypeReference)}, offset 0x126}" and 1
		0x180B0D4C4: Jumps to 0x180B0D4D2 if "{il2cpp field on {'constant4' (constant value of type Mono.Cecil.TypeReference)}, offset 0x126}" != 1

		0x180B0D4C6: Copies {'constant4' (constant value of type Mono.Cecil.TypeReference)} from rsi into rcx
		0x180B0D4CE: Reads the klass pointer representing the declaring type of this method (which is BetterList`1) and stores in new constant constant7 in register rcx
		0x180B0D4D2: Compares "{il2cpp field on {'constant4' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" and 2
		0x180B0D4D9: Jumps to 0x180B0D528 if "{il2cpp field on {'constant4' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" equals 2

		0x180B0D4DB: Reads RGCTX data for class BetterList`1 which has 11 entries/s and stores in new constant constant10 in register rax
		0x180B0D4E2: Reads the RGCTX data at index 7 in the array constant10, which has datapoint 35216 and is of type IL2CPP_RGCTX_DATA_CLASS (mapping to actual value System.Collections.Generic.EqualityComparer`1<T>), and stores the result in new constant constant11 in register rsi
		0x180B0D4E6: Compares "{il2cpp field on {'constant11' (constant value of type Mono.Cecil.TypeReference)}, offset 0x126}" and 1
		0x180B0D4ED: Jumps to 0x180B0D4FB if "{il2cpp field on {'constant11' (constant value of type Mono.Cecil.TypeReference)}, offset 0x126}" != 1

		0x180B0D4EF: Copies {'constant11' (constant value of type Mono.Cecil.TypeReference)} from rsi into rcx
		0x180B0D4F7: Reads the klass pointer representing the declaring type of this method (which is BetterList`1) and stores in new constant constant14 in register rcx
		0x180B0D4FB: Compares "{il2cpp field on {'constant11' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" and 0
		0x180B0D502: Jumps to 0x180B0D528 if "{il2cpp field on {'constant11' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" != 0

		0x180B0D504: Reads RGCTX data for class BetterList`1 which has 11 entries/s and stores in new constant constant17 in register rax
		0x180B0D50B: Reads the RGCTX data at index 7 in the array constant17, which has datapoint 35216 and is of type IL2CPP_RGCTX_DATA_CLASS (mapping to actual value System.Collections.Generic.EqualityComparer`1<T>), and stores the result in new constant constant18 in register rsi
		0x180B0D50F: Compares "{il2cpp field on {'constant18' (constant value of type Mono.Cecil.TypeReference)}, offset 0x126}" and 1
		0x180B0D516: Jumps to 0x180B0D520 if "{il2cpp field on {'constant18' (constant value of type Mono.Cecil.TypeReference)}, offset 0x126}" != 1

		0x180B0D518: Copies {'constant18' (constant value of type Mono.Cecil.TypeReference)} from rsi into rcx
		0x180B0D520: Copies {'constant18' (constant value of type Mono.Cecil.TypeReference)} from rsi into rcx
		0x180B0D523: Calls the il2cpp cctor for the type System.Collections.Generic.EqualityComparer`1<T>
		0x180B0D528: Reads the klass pointer representing the declaring type of this method (which is BetterList`1) and stores in new constant constant21 in register rax
		0x180B0D52C: Reads RGCTX data for class BetterList`1 which has 11 entries/s and stores in new constant constant22 in register rcx
		0x180B0D533: Reads the RGCTX data at index 6 in the array constant22, which has datapoint 34236 and is of type IL2CPP_RGCTX_DATA_METHOD (mapping to actual value System.Collections.Generic.EqualityComparer`1<T> System.Collections.Generic.EqualityComparer`1<T>.get_Default), and stores the result in new constant constant23 in register rax
		0x180B0D537: Copies {'constant23' (constant value of type LibCpp2IL.BinaryStructures.Il2CppMethodSpec)} from rax into rcx
		0x180B0D53A: [!] Calls static managed method System.Collections.Generic.EqualityComparer`1<T> System.Collections.Generic.EqualityComparer`1<T>::get_Default() and stores the result in {'default' (type System.Collections.Generic.EqualityComparer`1<T>)}

		0x180B0D53C: Clears register rbx, yielding zero-local {'local3' (type System.Int32)}
		0x180B0D53E: Copies {'default' (type System.Collections.Generic.EqualityComparer`1<T>)} from rax into rsi
		0x180B0D541: [!] Compares  and {'local3' (type System.Int32)}
		0x180B0D544: Jumps to 0x180B0D59A (which is an if statement's body) if  is less than or equal to {'local3' (type System.Int32)} ;  - Increasing indentation - is standard if, unimportant is False

		0x180B0D550: [!] Reads field buffer from {'this' (function parameter, type BetterList`1)} and stores in a new local {'buffer' (type T[])}

		0x180B0D554: [!] Compares {'buffer' (type T[])} and 0
		0x180B0D557: Jumps to 0x180B0D62F (which throws a NRE) if buffer equals 0. Implicitly present in managed code, so ignored here.
		0x180B0D55D: Copies {'local3' (type System.Int32)} from rbx into rbp
		0x180B0D560: [!] Compares {'local3' (type System.Int32)} and {Property System.Int32 System.Array::Length() on {'buffer' (type T[])}}
		0x180B0D563: Jumps to 0x180B0D683 (which throws a NRE) if {'local3' (type System.Int32)} is greater than or equal to {Property System.Int32 System.Array::Length() on {'buffer' (type T[])}}. Implicitly present in managed code, so ignored here.
		0x180B0D569: [!] Compares {'default' (type System.Collections.Generic.EqualityComparer`1<T>)} and 0
		0x180B0D56C: Jumps to 0x180B0D62F (which throws a NRE) if default equals 0. Implicitly present in managed code, so ignored here.
		0x180B0D572: Loads the class pointer from default into a constant constant26 in register rax
		0x180B0D575: Copies {'item' (function parameter, type T)} from r14 into r8
		0x180B0D578: Copies the element in the array {'buffer' (type T[])} at the index specified by {'local3' (type System.Int32)} into new local {'t' (type T)}
		0x180B0D57D: Copies {'default' (type System.Collections.Generic.EqualityComparer`1<T>)} from rsi into rcx
		0x180B0D580: Loads the pointer to the implementation of virtual function System.Boolean System.Collections.Generic.EqualityComparer`1::Equals(T,T) specific to System.Collections.Generic.EqualityComparer`1 from the class pointer in rax, slot 9 (from memory offset 448) and stores in constant constant27
		0x180B0D587: [!] Calls managed method System.Boolean System.Collections.Generic.EqualityComparer`1::Equals(T,T) on instance {'default' (type System.Collections.Generic.EqualityComparer`1<T>)} with arguments [{'t' (type T)}, {'item' (function parameter, type T)}] and stores the result in {'boolean' (type System.Boolean)}

		0x180B0D58D: [!] Reads field size from {'this' (function parameter, type BetterList`1)} and stores in a new local {'size' (type System.Int32)}

		0x180B0D590: [!] Compares {'boolean' (type System.Boolean)} and False
		0x180B0D592: Jumps to 0x180B0D5B7 if {'boolean' (type System.Boolean)} != False ;  - This is probably a goto, jumping to 0x180B0D5B7 which is after end of current block @ 0x180B0D59A (started at 0x180B0D546)

		0x180B0D594: [!] Adds 1 to the value {'local3' (type System.Int32)}, stored in rbx
		0x180B0D596: [!] Compares {'local3' (type System.Int32)} and {'size' (type System.Int32)}
		0x180B0D59A: Clears register rax, yielding zero-local {'local8' (type System.Int32)}

		Potential Loop Start (0x180B0D59C):
		0x180B0D59C: Reads unknown value in stack, offset 48 (0x30) and stores the pointer in register rbx as new constant constant29
		0x180B0D5A1: Reads unknown value in stack, offset 56 (0x38) and stores the pointer in register rbp as new constant constant30
		0x180B0D5A6: Reads unknown value in stack, offset 64 (0x40) and stores the pointer in register rsi as new constant constant31
		0x180B0D5AB: Reads unknown value in stack, offset 72 (0x48) and stores the pointer in register rdi as new constant constant32
		0x180B0D5B6: [!] Returns {'local8' (type System.Int32)} from the function

		0x180B0D5B7: Loads the pointer to the field  on {'this' (function parameter, type BetterList`1)} into register rax
		0x180B0D5C1: [!] Compares {'local8' (type System.Int32)} and 0
		0x180B0D5C4: Jumps to 0x180B0D62F (which throws a NRE) if local8 equals 0. Implicitly present in managed code, so ignored here.
		0x180B0D5C6: [!] Compares {'constant29' (constant value of type Cpp2IL.Core.Analysis.ResultModels.StackPointer)} against itself
		0x180B0D5C9: Jumps to 0x180B0D637 (which throws a NRE) if {'constant29' (constant value of type Cpp2IL.Core.Analysis.ResultModels.StackPointer)} is greater than or equal to . Implicitly present in managed code, so ignored here.
		0x180B0D5CB: [!] Sets the field  (Type ) on local {'local8' (type System.Int32)} to the value stored in 0
		0x180B0D5D7: [!] Compares {'constant29' (constant value of type Cpp2IL.Core.Analysis.ResultModels.StackPointer)} and {'local8' (type System.Int32)}
		0x180B0D5D9: Jumps to 0x180B0D60F if {'constant29' (constant value of type Cpp2IL.Core.Analysis.ResultModels.StackPointer)} is greater than or equal to {'local8' (type System.Int32)} ;  - This is probably a goto, jumping to 0x180B0D60F which is after end of current block @ 0x180B0D59A (started at 0x180B0D546)

		0x180B0D5E4: [!] Compares {'this' (function parameter, type BetterList`1)} and 0
		0x180B0D5E7: Jumps to 0x180B0D62F (which throws a NRE) if this equals 0. Implicitly present in managed code, so ignored here.
		0x180B0D5E9: [!] Reads field size from {'this' (function parameter, type BetterList`1)} and stores in a new local {'size2' (type System.Int32)}

		0x180B0D5EC: Copies {'constant29' (constant value of type Cpp2IL.Core.Analysis.ResultModels.StackPointer)} from rbx into rdx
		0x180B0D5F3: [!] Compares {'il2cppMethodInfo' (type )} and {'size2' (type System.Int32)}
		0x180B0D5F6: Jumps to 0x180B0D670 (which throws a NRE) if {'il2cppMethodInfo' (type )} is greater than or equal to {'size2' (type System.Int32)}. Implicitly present in managed code, so ignored here.
		0x180B0D5F8: [!] Compares {'constant29' (constant value of type Cpp2IL.Core.Analysis.ResultModels.StackPointer)} and {'size2' (type System.Int32)}
		0x180B0D5FA: Jumps to 0x180B0D65D (which throws a NRE) if {'constant29' (constant value of type Cpp2IL.Core.Analysis.ResultModels.StackPointer)} is greater than or equal to {'size2' (type System.Int32)}. Implicitly present in managed code, so ignored here.
		0x180B0D601: [!] Adds 1 to the value , stored in rbx
		0x180B0D603: [!] Sets the field  (Type ) on local {'this' (function parameter, type BetterList`1)} to the value stored in {'size2' (type System.Int32)}
		0x180B0D60B: [!] Compares {'constant29' (constant value of type Cpp2IL.Core.Analysis.ResultModels.StackPointer)} and {'size2' (type System.Int32)}
		0x180B0D613: [!] Compares {'this' (function parameter, type BetterList`1)} and 0
		0x180B0D616: Jumps to 0x180B0D62F (which throws a NRE) if this equals 0. Implicitly present in managed code, so ignored here.
		0x180B0D618: [!] Compares {'size2' (type System.Int32)} against itself
		0x180B0D61B: Jumps to 0x180B0D64A (which throws a NRE) if {'size2' (type System.Int32)} is greater than or equal to . Implicitly present in managed code, so ignored here.
		0x180B0D61F: [!] Sets the field  (Type ) on local {'this' (function parameter, type BetterList`1)} to the value stored in 0
		0x180B0D628: [!] Writes the constant 0x1 into operand 1 (type UInt64) in register rax
		0x180B0D62A: Jumps to 0x180B0D59C - which is still in this function, but further up. Probably indicative that this is a loop.
		0x180B0D631: [!] Constructs and throws an exception of kind System.NullReferenceException




	Generated Pseudocode:

	Declaring Type: BetterList`1
	System.Boolean Remove(T item)

		if ( != 0)

		    System.Collections.Generic.EqualityComparer`1<T> default = System.Collections.Generic.EqualityComparer`1<T>.get_Default()
		    ulong local3 = 0

		    if ( > local3)
		        T[] buffer = this.buffer
		        T t = buffer[local3]

		        System.Boolean boolean = default.Equals(t, item) //(T x, T y)
		        System.Int32 size = this.size

		        if (boolean != False)
                    goto INSN_180B0D5B7
                endif
		        local3 += 1
		    endif
            
		    ulong local8 = 0
		    return local8

		    INSN_180B0D5B7:
		    local8. = 0

		    if (constant29 >= local8)
                goto INSN_180B0D60F
            endif
		    System.Int32 size2 = this.size
		     += 1
		    this. = size2

		    INSN_180B0D60F:
		    this. = 0
		    throw new System.NullReferenceException()


Generated IL:
	IL Generation Skipped due to invalid local buffer of type T[]
	

Method: System.Void BetterList`1::RemoveAt(System.Int32):	Method Body (x86 ASM):
		0x180B0CF90 sub rsp,28h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 40
		0x180B0CF94 mov r8,rcx		; DEBUG: {Register}/R8 {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x180B0CF97 mov rcx,[rcx+10h]		; DEBUG: {Register}/RCX {Memory}/None ||| RCX | 16 | None ||| N/A | N/A
		0x180B0CF9B test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x180B0CF9E je short 0000000180B0D015h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0CFA0 cmp edx,0FFFFFFFFh		; DEBUG: {Register}/EDX {Immediate8to32}/None ||| None | 0 | None ||| N/A | 18446744073709551615
		0x180B0CFA3 jle short 0000000180B0D015h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0CFA5 mov eax,[r8+18h]		; DEBUG: {Register}/EAX {Memory}/None ||| R8 | 24 | None ||| N/A | N/A
		0x180B0CFA9 cmp edx,eax		; DEBUG: {Register}/EDX {Register}/EAX ||| None | 0 | None ||| N/A | N/A
		0x180B0CFAB jge short 0000000180B0D015h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0CFAD dec eax		; DEBUG: {Register}/EAX {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B0CFAF mov [r8+18h],eax		; DEBUG: {Memory}/None {Register}/EAX ||| R8 | 24 | None ||| N/A | N/A
		0x180B0CFB3 cmp edx,[rcx+18h]		; DEBUG: {Register}/EDX {Memory}/None ||| RCX | 24 | None ||| N/A | N/A
		0x180B0CFB6 jae short 0000000180B0D022h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0CFB8 movsxd rax,edx		; DEBUG: {Register}/RAX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180B0CFBB xor r11d,r11d		; DEBUG: {Register}/R11D {Register}/R11D ||| None | 0 | None ||| N/A | N/A
		0x180B0CFBE mov [rcx+rax*8+20h],r11		; DEBUG: {Memory}/None {Register}/R11 ||| RCX | 32 | RAX ||| N/A | N/A
		0x180B0CFC3 mov eax,[r8+18h]		; DEBUG: {Register}/EAX {Memory}/None ||| R8 | 24 | None ||| N/A | N/A
		0x180B0CFC7 cmp edx,eax		; DEBUG: {Register}/EDX {Register}/EAX ||| None | 0 | None ||| N/A | N/A
		0x180B0CFC9 jge short 0000000180B0D000h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0CFCB nop dword ptr [rax+rax]		; DEBUG: {Memory}/None {Register}/None ||| RAX | 0 | RAX ||| N/A | N/A
		0x180B0CFD0 mov rcx,[r8+10h]		; DEBUG: {Register}/RCX {Memory}/None ||| R8 | 16 | None ||| N/A | N/A
		0x180B0CFD4 test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x180B0CFD7 je short 0000000180B0D01Ah		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0CFD9 mov eax,[rcx+18h]		; DEBUG: {Register}/EAX {Memory}/None ||| RCX | 24 | None ||| N/A | N/A
		0x180B0CFDC movsxd r9,edx		; DEBUG: {Register}/R9 {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180B0CFDF lea r10,[r9+1]		; DEBUG: {Register}/R10 {Memory}/None ||| R9 | 1 | None ||| N/A | N/A
		0x180B0CFE3 cmp r10d,eax		; DEBUG: {Register}/R10D {Register}/EAX ||| None | 0 | None ||| N/A | N/A
		0x180B0CFE6 jae short 0000000180B0D05Bh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0CFE8 cmp edx,eax		; DEBUG: {Register}/EDX {Register}/EAX ||| None | 0 | None ||| N/A | N/A
		0x180B0CFEA jae short 0000000180B0D048h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0CFEC mov rax,[rcx+r10*8+20h]		; DEBUG: {Register}/RAX {Memory}/None ||| RCX | 32 | R10 ||| N/A | N/A
		0x180B0CFF1 inc edx		; DEBUG: {Register}/EDX {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B0CFF3 mov [rcx+r9*8+20h],rax		; DEBUG: {Memory}/None {Register}/RAX ||| RCX | 32 | R9 ||| N/A | N/A
		0x180B0CFF8 mov eax,[r8+18h]		; DEBUG: {Register}/EAX {Memory}/None ||| R8 | 24 | None ||| N/A | N/A
		0x180B0CFFC cmp edx,eax		; DEBUG: {Register}/EDX {Register}/EAX ||| None | 0 | None ||| N/A | N/A
		0x180B0CFFE jl short 0000000180B0CFD0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0D000 mov rcx,[r8+10h]		; DEBUG: {Register}/RCX {Memory}/None ||| R8 | 16 | None ||| N/A | N/A
		0x180B0D004 test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x180B0D007 je short 0000000180B0D01Ah		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0D009 cmp eax,[rcx+18h]		; DEBUG: {Register}/EAX {Memory}/None ||| RCX | 24 | None ||| N/A | N/A
		0x180B0D00C jae short 0000000180B0D035h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0D00E cdqe		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B0D010 mov [rcx+rax*8+20h],r11		; DEBUG: {Memory}/None {Register}/R11 ||| RCX | 32 | RAX ||| N/A | N/A
		0x180B0D015 add rsp,28h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 40
		0x180B0D019 ret		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B0D01A xor ecx,ecx		; DEBUG: {Register}/ECX {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x180B0D01C call 000000018012BDA0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0D021 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.Void BetterList`1::RemoveAt(System.Int32):
		End of function at 0x180B0D022
		Absolute End is at 0x180B0D022
		Identified Jump Destination addresses:

		0x180B0CF94: Copies {'this' (function parameter, type BetterList`1)} from rcx into r8
		0x180B0CF97: [!] Reads field buffer from {'this' (function parameter, type BetterList`1)} and stores in a new local {'buffer' (type T[])}

		0x180B0CF9B: [!] Compares {'buffer' (type T[])} and 0
		0x180B0CF9E: Jumps to 0x180B0D015 (which is an if statement's body) if buffer equals 0 ;  - Increasing indentation - is standard if, unimportant is False

		0x180B0CFA0: [!] Compares {'index' (function parameter, type System.Int32)} and -1
		0x180B0CFA3: Jumps to 0x180B0D015 (which is an if statement's body) if {'index' (function parameter, type System.Int32)} is less than or equal to -1 ;  - Increasing indentation - is standard if, unimportant is False

		0x180B0CFA5: [!] Reads field size from {'this' (function parameter, type BetterList`1)} and stores in a new local {'size' (type System.Int32)}

		0x180B0CFA9: [!] Compares {'index' (function parameter, type System.Int32)} and {'size' (type System.Int32)}
		0x180B0CFAB: Jumps to 0x180B0D015 (which is an if statement's body) if {'index' (function parameter, type System.Int32)} is greater than or equal to {'size' (type System.Int32)} ;  - Increasing indentation - is standard if, unimportant is False

		0x180B0CFAF: [!] Sets the field size (Type System.Int32) on local {'this' (function parameter, type BetterList`1)} to the value stored in {'size' (type System.Int32)}
		0x180B0CFB3: [!] Compares {'index' (function parameter, type System.Int32)} and {Property System.Int32 System.Array::Length() on {'buffer' (type T[])}}
		0x180B0CFB6: Jumps to 0x180B0D022 (which throws a NRE) if {'index' (function parameter, type System.Int32)} is greater than or equal to {Property System.Int32 System.Array::Length() on {'buffer' (type T[])}}. Implicitly present in managed code, so ignored here.
		0x180B0CFB8: Copies {'index' (function parameter, type System.Int32)} from rdx into rax
		0x180B0CFBB: Clears register r11, yielding zero-local {'local4' (type System.Int32)}
		0x180B0CFBE: Sets the value at offset 0 in array buffer to {'local4' (type System.Int32)}
		0x180B0CFC3: [!] Reads field size from {'this' (function parameter, type BetterList`1)} and stores in a new local {'size2' (type System.Int32)}

		0x180B0CFC7: [!] Compares {'index' (function parameter, type System.Int32)} and {'size2' (type System.Int32)}
		0x180B0CFC9: Jumps to 0x180B0D000 (which is an if statement's body) if {'index' (function parameter, type System.Int32)} is greater than or equal to {'size2' (type System.Int32)} ;  - Increasing indentation - is standard if, unimportant is False

		0x180B0CFD0: [!] Reads field buffer from {'this' (function parameter, type BetterList`1)} and stores in a new local {'buffer2' (type T[])}

		0x180B0CFD4: [!] Compares {'buffer2' (type T[])} and 0
		0x180B0CFD7: Jumps to 0x180B0D01A (which throws a NRE) if buffer2 equals 0. Implicitly present in managed code, so ignored here.
		0x180B0CFD9: Reads the length of the array "{'buffer2' (type T[])}" and stores it in new local {'length' (type System.Int32)} in register rax
		0x180B0CFDC: Copies {'index' (function parameter, type System.Int32)} from rdx into r9
		0x180B0CFDF: Adds 1 to index and stores the result in local8
		0x180B0CFE3: [!] Compares {'local8' (type System.Int32)} and {'length' (type System.Int32)}
		0x180B0CFE6: Jumps to 0x180B0D05B (which throws a NRE) if {'local8' (type System.Int32)} is greater than or equal to {'length' (type System.Int32)}. Implicitly present in managed code, so ignored here.
		0x180B0CFE8: [!] Compares {'index' (function parameter, type System.Int32)} and {'length' (type System.Int32)}
		0x180B0CFEA: Jumps to 0x180B0D048 (which throws a NRE) if {'index' (function parameter, type System.Int32)} is greater than or equal to {'length' (type System.Int32)}. Implicitly present in managed code, so ignored here.
		0x180B0CFEC: Copies the element in the array {'buffer2' (type T[])} at the index specified by {'local8' (type System.Int32)} into new local {'t' (type T)}
		0x180B0CFF1: [!] Adds 1 to the value {'index' (function parameter, type System.Int32)}, stored in rdx
		0x180B0CFF3: Sets the value at offset 0 in array buffer2 to {'t' (type T)}
		0x180B0CFF8: [!] Reads field size from {'this' (function parameter, type BetterList`1)} and stores in a new local {'size3' (type System.Int32)}

		0x180B0CFFC: [!] Compares {'index' (function parameter, type System.Int32)} and {'size3' (type System.Int32)}
		0x180B0D000: [!] Reads field buffer from {'this' (function parameter, type BetterList`1)} and stores in a new local {'buffer3' (type T[])}

		0x180B0D004: [!] Compares {'buffer3' (type T[])} and 0
		0x180B0D007: Jumps to 0x180B0D01A (which throws a NRE) if buffer3 equals 0. Implicitly present in managed code, so ignored here.
		0x180B0D009: [!] Compares {'size2' (type System.Int32)} and {Property System.Int32 System.Array::Length() on {'buffer3' (type T[])}}
		0x180B0D00C: Jumps to 0x180B0D035 (which throws a NRE) if {'size2' (type System.Int32)} is greater than or equal to {Property System.Int32 System.Array::Length() on {'buffer3' (type T[])}}. Implicitly present in managed code, so ignored here.
		0x180B0D010: Sets the value at offset 0 in array buffer3 to {'local4' (type System.Int32)}
		0x180B0D019: [!] Returns from the function

		0x180B0D01C: [!] Constructs and throws an exception of kind System.NullReferenceException




	Generated Pseudocode:

	Declaring Type: BetterList`1
	System.Void RemoveAt(System.Int32 index)
		T[] buffer = this.buffer

		if (buffer != 0)

		    if (index > -1)
		        System.Int32 size = this.size

		        if (index < size)
		            this.size = size
		            size = index
		            ulong local4 = 0
		            buffer[0] = local4
		            System.Int32 size2 = this.size

		            if (index < size2)
		                T[] buffer2 = this.buffer
		                System.Int32 length = buffer2.Length
		                System.Int32 local8 = index + 1
		                T t = buffer2[local8]
		                index += 1
		                buffer2[0] = t
		                System.Int32 size3 = this.size
		            endif
                    
		            T[] buffer3 = this.buffer
		            buffer3[0] = local4
		        endif
                
		        return
		        throw new System.NullReferenceException()


Generated IL:
	IL Generation Skipped due to invalid local buffer of type T[]
	

Method: T BetterList`1::Pop():	Method Body (x86 ASM):
		0x180B0CA70 sub rsp,28h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 40
		0x180B0CA74 mov rdx,[rcx+10h]		; DEBUG: {Register}/RDX {Memory}/None ||| RCX | 16 | None ||| N/A | N/A
		0x180B0CA78 test rdx,rdx		; DEBUG: {Register}/RDX {Register}/RDX ||| None | 0 | None ||| N/A | N/A
		0x180B0CA7B je short 0000000180B0CAA9h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0CA7D movsxd r8,dword ptr [rcx+18h]		; DEBUG: {Register}/R8 {Memory}/None ||| RCX | 24 | None ||| N/A | N/A
		0x180B0CA81 test r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x180B0CA84 je short 0000000180B0CAA9h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0CA86 lea eax,[r8-1]		; DEBUG: {Register}/EAX {Memory}/None ||| R8 | 18446744073709551615 | None ||| N/A | N/A
		0x180B0CA8A mov [rcx+18h],eax		; DEBUG: {Memory}/None {Register}/EAX ||| RCX | 24 | None ||| N/A | N/A
		0x180B0CA8D lea rax,[r8-1]		; DEBUG: {Register}/RAX {Memory}/None ||| R8 | 18446744073709551615 | None ||| N/A | N/A
		0x180B0CA91 cmp eax,[rdx+18h]		; DEBUG: {Register}/EAX {Memory}/None ||| RDX | 24 | None ||| N/A | N/A
		0x180B0CA94 jae short 0000000180B0CAB0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0CA96 mov rax,[rdx+rax*8+20h]		; DEBUG: {Register}/RAX {Memory}/None ||| RDX | 32 | RAX ||| N/A | N/A
		0x180B0CA9B mov qword ptr [rdx+r8*8+18h],0		; DEBUG: {Memory}/None {Immediate32to64}/None ||| RDX | 24 | R8 ||| N/A | 0
		0x180B0CAA4 add rsp,28h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 40
		0x180B0CAA8 ret		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B0CAA9 xor eax,eax		; DEBUG: {Register}/EAX {Register}/EAX ||| None | 0 | None ||| N/A | N/A
		0x180B0CAAB add rsp,28h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 40
		0x180B0CAAF ret		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B0CAB0 call 000000018012A7F0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0CAB5 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180B0CAB8 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x180B0CABB xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180B0CABD call 000000018012BD50h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0CAC2 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method T BetterList`1::Pop():
		End of function at 0x180B0CAC3
		Absolute End is at 0x180B0CAC3
		Identified Jump Destination addresses:

		0x180B0CA74: [!] Reads field buffer from {'this' (function parameter, type BetterList`1)} and stores in a new local {'buffer' (type T[])}

		0x180B0CA78: [!] Compares {'buffer' (type T[])} and 0
		0x180B0CA7B: Jumps to 0x180B0CAA9 (which is an if statement's body) if buffer equals 0 ;  - Increasing indentation - is standard if, unimportant is False

		0x180B0CA7D: [!] Reads field size from {'this' (function parameter, type BetterList`1)} and stores in a new local {'size' (type System.Int32)}

		0x180B0CA81: [!] Compares {'size' (type System.Int32)} and 0
		0x180B0CA84: Jumps to 0x180B0CAA9 (which is an if statement's body) if size equals 0 ;  - Increasing indentation - is standard if, unimportant is False

		0x180B0CA86: Subtracts 1 from size and stores the result in local3
		0x180B0CA8A: [!] Sets the field size (Type System.Int32) on local {'this' (function parameter, type BetterList`1)} to the value stored in {'local3' (type System.Int32)}
		0x180B0CA8D: Subtracts 1 from size and stores the result in local4
		0x180B0CA91: [!] Compares {'local4' (type System.Int32)} and {Property System.Int32 System.Array::Length() on {'buffer' (type T[])}}
		0x180B0CA94: Jumps to 0x180B0CAB0 (which throws a NRE) if {'local4' (type System.Int32)} is greater than or equal to {Property System.Int32 System.Array::Length() on {'buffer' (type T[])}}. Implicitly present in managed code, so ignored here.
		0x180B0CA96: Copies the element in the array {'buffer' (type T[])} at the index specified by {'local4' (type System.Int32)} into new local {'t' (type T)}
		0x180B0CA9B: [!] Sets the field  (Type ) on local {'buffer' (type T[])} to the value stored in 0
		0x180B0CAA8: [!] Returns {'t' (type T)} from the function

		0x180B0CAA9: Clears register rax, yielding zero-local {'local6' (type System.Int32)}
		0x180B0CAAF: [!] Returns {'local6' (type System.Int32)} from the function

		0x180B0CAB0: [!] Constructs and throws an exception of kind System.IndexOutOfRangeException

		0x180B0CAB5: Copies {'local7' (type System.IndexOutOfRangeException)} from rax into rcx
		0x180B0CABD: [!] Throws {'local7' (type System.IndexOutOfRangeException)}



	Generated Pseudocode:

	Declaring Type: BetterList`1
	T Pop()
		T[] buffer = this.buffer

		if (buffer != 0)
		    System.Int32 size = this.size

		    if (size != 0)
		        System.Int32 local3 = size - 1
		        this.size = local3
		        System.Int32 local4 = size - 1
		        T t = buffer[local4]
		        buffer. = 0
		        return t
		    endif
            
		    ulong local6 = 0
		    return local6
		    throw new System.IndexOutOfRangeException()
		    throw local7


Generated IL:
	IL Generation Skipped due to invalid local buffer of type T[]
	

Method: T[] BetterList`1::ToArray():	Method Body (x86 ASM):
		0x180B0E790 push rbx		; DEBUG: {Register}/RBX {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B0E792 sub rsp,20h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 32
		0x180B0E796 mov rbx,rcx		; DEBUG: {Register}/RBX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x180B0E799 test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x180B0E79C je short 0000000180B0E7BCh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0E79E mov rax,[rdx+18h]		; DEBUG: {Register}/RAX {Memory}/None ||| RDX | 24 | None ||| N/A | N/A
		0x180B0E7A2 mov rdx,[rax+0C0h]		; DEBUG: {Register}/RDX {Memory}/None ||| RAX | 192 | None ||| N/A | N/A
		0x180B0E7A9 mov rax,[rdx+48h]		; DEBUG: {Register}/RAX {Memory}/None ||| RDX | 72 | None ||| N/A | N/A
		0x180B0E7AD mov rdx,rax		; DEBUG: {Register}/RDX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180B0E7B0 call qword ptr [rax]		; DEBUG: {Memory}/None {Register}/None ||| RAX | 0 | None ||| N/A | N/A
		0x180B0E7B2 mov rax,[rbx+10h]		; DEBUG: {Register}/RAX {Memory}/None ||| RBX | 16 | None ||| N/A | N/A
		0x180B0E7B6 add rsp,20h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 32
		0x180B0E7BA pop rbx		; DEBUG: {Register}/RBX {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B0E7BB ret		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B0E7BC call 000000018012BDA0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0E7C1 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method T[] BetterList`1::ToArray():
		End of function at 0x180B0E7C2
		Absolute End is at 0x180B0E7C2
		Identified Jump Destination addresses:

		0x180B0E790: Saves the content of rbx to the stack
		0x180B0E796: Copies {'this' (function parameter, type BetterList`1)} from rcx into rbx
		0x180B0E799: [!] Compares {'this' (function parameter, type BetterList`1)} and 0
		0x180B0E79C: Jumps to 0x180B0E7BC (which throws a NRE) if this equals 0. Implicitly present in managed code, so ignored here.
		0x180B0E79E: Reads the klass pointer representing the declaring type of this method (which is BetterList`1) and stores in new constant constant2 in register rax
		0x180B0E7A2: Reads RGCTX data for class BetterList`1 which has 11 entries/s and stores in new constant constant3 in register rdx
		0x180B0E7A9: Reads the RGCTX data at index 9 in the array constant3, which has datapoint 34238 and is of type IL2CPP_RGCTX_DATA_METHOD (mapping to actual value System.Void BetterList`1<T>.Trim), and stores the result in new constant constant4 in register rax
		0x180B0E7AD: Copies {'constant4' (constant value of type LibCpp2IL.BinaryStructures.Il2CppMethodSpec)} from rax into rdx
		0x180B0E7B0: [!] Calls managed method System.Void BetterList`1<T>::Trim() on instance {'this' (function parameter, type BetterList`1)}

		0x180B0E7B2: [!] Reads field buffer from {'this' (function parameter, type BetterList`1)} and stores in a new local {'buffer' (type T[])}

		0x180B0E7BB: [!] Returns {'buffer' (type T[])} from the function

		0x180B0E7BC: [!] Constructs and throws an exception of kind System.NullReferenceException




	Generated Pseudocode:

	Declaring Type: BetterList`1
	T[] ToArray()

		this.Trim()
		T[] buffer = this.buffer
		return buffer
		throw new System.NullReferenceException()


Generated IL:
	IL Generation Skipped due to invalid local buffer of type T[]
	

Method: System.Void BetterList`1::Sort(BetterList`1/CompareFunc<T>):	Method Body (x86 ASM):
		0x180B0E1C0 mov [rsp+8],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RSP | 8 | None ||| N/A | N/A
		0x180B0E1C5 mov [rsp+10h],rbp		; DEBUG: {Memory}/None {Register}/RBP ||| RSP | 16 | None ||| N/A | N/A
		0x180B0E1CA mov [rsp+20h],rsi		; DEBUG: {Memory}/None {Register}/RSI ||| RSP | 32 | None ||| N/A | N/A
		0x180B0E1CF mov [rsp+18h],r8		; DEBUG: {Memory}/None {Register}/R8 ||| RSP | 24 | None ||| N/A | N/A
		0x180B0E1D4 push rdi		; DEBUG: {Register}/RDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B0E1D5 push r12		; DEBUG: {Register}/R12 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B0E1D7 push r13		; DEBUG: {Register}/R13 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B0E1D9 push r14		; DEBUG: {Register}/R14 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B0E1DB push r15		; DEBUG: {Register}/R15 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B0E1DD sub rsp,20h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 32
		0x180B0E1E1 mov r12d,[rcx+18h]		; DEBUG: {Register}/R12D {Memory}/None ||| RCX | 24 | None ||| N/A | N/A
		0x180B0E1E5 xor esi,esi		; DEBUG: {Register}/ESI {Register}/ESI ||| None | 0 | None ||| N/A | N/A
		0x180B0E1E7 dec r12d		; DEBUG: {Register}/R12D {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B0E1EA mov r9,r8		; DEBUG: {Register}/R9 {Register}/R8 ||| None | 0 | None ||| N/A | N/A
		0x180B0E1ED mov r13,rdx		; DEBUG: {Register}/R13 {Register}/RDX ||| None | 0 | None ||| N/A | N/A
		0x180B0E1F0 mov r14,rcx		; DEBUG: {Register}/R14 {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x180B0E1F3 nop dword ptr [rax]		; DEBUG: {Memory}/None {Register}/None ||| RAX | 0 | None ||| N/A | N/A
		0x180B0E1F7 nop word ptr [rax+rax]		; DEBUG: {Memory}/None {Register}/None ||| RAX | 0 | RAX ||| N/A | N/A
		0x180B0E200 xor bpl,bpl		; DEBUG: {Register}/BPL {Register}/BPL ||| None | 0 | None ||| N/A | N/A
		0x180B0E203 mov ebx,esi		; DEBUG: {Register}/EBX {Register}/ESI ||| None | 0 | None ||| N/A | N/A
		0x180B0E205 cmp esi,r12d		; DEBUG: {Register}/ESI {Register}/R12D ||| None | 0 | None ||| N/A | N/A
		0x180B0E208 jge near ptr 0000000180B0E2D4h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0E20E xchg ax,ax		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B0E210 mov rdx,[r14+10h]		; DEBUG: {Register}/RDX {Memory}/None ||| R14 | 16 | None ||| N/A | N/A
		0x180B0E214 test rdx,rdx		; DEBUG: {Register}/RDX {Register}/RDX ||| None | 0 | None ||| N/A | N/A
		0x180B0E217 je near ptr 0000000180B0E2F1h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0E21D mov eax,[rdx+18h]		; DEBUG: {Register}/EAX {Memory}/None ||| RDX | 24 | None ||| N/A | N/A
		0x180B0E220 movsxd r8,ebx		; DEBUG: {Register}/R8 {Register}/EBX ||| None | 0 | None ||| N/A | N/A
		0x180B0E223 cmp ebx,eax		; DEBUG: {Register}/EBX {Register}/EAX ||| None | 0 | None ||| N/A | N/A
		0x180B0E225 jae near ptr 0000000180B0E345h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0E22B lea rdi,[r8+1]		; DEBUG: {Register}/RDI {Memory}/None ||| R8 | 1 | None ||| N/A | N/A
		0x180B0E22F cmp edi,eax		; DEBUG: {Register}/EDI {Register}/EAX ||| None | 0 | None ||| N/A | N/A
		0x180B0E231 jae near ptr 0000000180B0E332h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0E237 test r13,r13		; DEBUG: {Register}/R13 {Register}/R13 ||| None | 0 | None ||| N/A | N/A
		0x180B0E23A je near ptr 0000000180B0E2F1h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0E240 mov rax,[r9+18h]		; DEBUG: {Register}/RAX {Memory}/None ||| R9 | 24 | None ||| N/A | N/A
		0x180B0E244 lea r15,[r8*8+20h]		; DEBUG: {Register}/R15 {Memory}/None ||| None | 32 | R8 ||| N/A | N/A
		0x180B0E24C mov r8,[rdx+rdi*8+20h]		; DEBUG: {Register}/R8 {Memory}/None ||| RDX | 32 | RDI ||| N/A | N/A
		0x180B0E251 mov rdx,[r15+rdx]		; DEBUG: {Register}/RDX {Memory}/None ||| R15 | 0 | RDX ||| N/A | N/A
		0x180B0E255 mov rcx,[rax+0C0h]		; DEBUG: {Register}/RCX {Memory}/None ||| RAX | 192 | None ||| N/A | N/A
		0x180B0E25C mov rax,[rcx+50h]		; DEBUG: {Register}/RAX {Memory}/None ||| RCX | 80 | None ||| N/A | N/A
		0x180B0E260 mov rcx,r13		; DEBUG: {Register}/RCX {Register}/R13 ||| None | 0 | None ||| N/A | N/A
		0x180B0E263 mov r9,rax		; DEBUG: {Register}/R9 {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180B0E266 call qword ptr [rax]		; DEBUG: {Memory}/None {Register}/None ||| RAX | 0 | None ||| N/A | N/A
		0x180B0E268 test eax,eax		; DEBUG: {Register}/EAX {Register}/EAX ||| None | 0 | None ||| N/A | N/A
		0x180B0E26A jg short 0000000180B0E280h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0E26C test bpl,bpl		; DEBUG: {Register}/BPL {Register}/BPL ||| None | 0 | None ||| N/A | N/A
		0x180B0E26F jne short 0000000180B0E2BBh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0E271 test ebx,ebx		; DEBUG: {Register}/EBX {Register}/EBX ||| None | 0 | None ||| N/A | N/A
		0x180B0E273 lea esi,[rbx-1]		; DEBUG: {Register}/ESI {Memory}/None ||| RBX | 18446744073709551615 | None ||| N/A | N/A
		0x180B0E276 mov eax,0		; DEBUG: {Register}/EAX {Immediate32}/None ||| None | 0 | None ||| N/A | 0
		0x180B0E27B cmove esi,eax		; DEBUG: {Register}/ESI {Register}/EAX ||| None | 0 | None ||| N/A | N/A
		0x180B0E27E jmp short 0000000180B0E2BBh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0E280 mov rcx,[r14+10h]		; DEBUG: {Register}/RCX {Memory}/None ||| R14 | 16 | None ||| N/A | N/A
		0x180B0E284 test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x180B0E287 je short 0000000180B0E2F1h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0E289 mov eax,[rcx+18h]		; DEBUG: {Register}/EAX {Memory}/None ||| RCX | 24 | None ||| N/A | N/A
		0x180B0E28C cmp ebx,eax		; DEBUG: {Register}/EBX {Register}/EAX ||| None | 0 | None ||| N/A | N/A
		0x180B0E28E jae near ptr 0000000180B0E31Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0E294 mov rdx,[r15+rcx]		; DEBUG: {Register}/RDX {Memory}/None ||| R15 | 0 | RCX ||| N/A | N/A
		0x180B0E298 cmp edi,eax		; DEBUG: {Register}/EDI {Register}/EAX ||| None | 0 | None ||| N/A | N/A
		0x180B0E29A jae short 0000000180B0E30Ch		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0E29C mov rax,[rcx+rdi*8+20h]		; DEBUG: {Register}/RAX {Memory}/None ||| RCX | 32 | RDI ||| N/A | N/A
		0x180B0E2A1 mov [r15+rcx],rax		; DEBUG: {Memory}/None {Register}/RAX ||| R15 | 0 | RCX ||| N/A | N/A
		0x180B0E2A5 mov rax,[r14+10h]		; DEBUG: {Register}/RAX {Memory}/None ||| R14 | 16 | None ||| N/A | N/A
		0x180B0E2A9 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180B0E2AC je short 0000000180B0E2F1h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0E2AE cmp edi,[rax+18h]		; DEBUG: {Register}/EDI {Memory}/None ||| RAX | 24 | None ||| N/A | N/A
		0x180B0E2B1 jae short 0000000180B0E2F9h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0E2B3 mov [rax+rdi*8+20h],rdx		; DEBUG: {Memory}/None {Register}/RDX ||| RAX | 32 | RDI ||| N/A | N/A
		0x180B0E2B8 mov bpl,1		; DEBUG: {Register}/BPL {Immediate8}/None ||| None | 0 | None ||| N/A | 1
		0x180B0E2BB mov r9,[rsp+60h]		; DEBUG: {Register}/R9 {Memory}/None ||| RSP | 96 | None ||| N/A | N/A
		0x180B0E2C0 inc ebx		; DEBUG: {Register}/EBX {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B0E2C2 cmp ebx,r12d		; DEBUG: {Register}/EBX {Register}/R12D ||| None | 0 | None ||| N/A | N/A
		0x180B0E2C5 jl near ptr 0000000180B0E210h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0E2CB test bpl,bpl		; DEBUG: {Register}/BPL {Register}/BPL ||| None | 0 | None ||| N/A | N/A
		0x180B0E2CE jne near ptr 0000000180B0E200h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0E2D4 mov rbx,[rsp+50h]		; DEBUG: {Register}/RBX {Memory}/None ||| RSP | 80 | None ||| N/A | N/A
		0x180B0E2D9 mov rbp,[rsp+58h]		; DEBUG: {Register}/RBP {Memory}/None ||| RSP | 88 | None ||| N/A | N/A
		0x180B0E2DE mov rsi,[rsp+68h]		; DEBUG: {Register}/RSI {Memory}/None ||| RSP | 104 | None ||| N/A | N/A
		0x180B0E2E3 add rsp,20h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 32
		0x180B0E2E7 pop r15		; DEBUG: {Register}/R15 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B0E2E9 pop r14		; DEBUG: {Register}/R14 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B0E2EB pop r13		; DEBUG: {Register}/R13 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B0E2ED pop r12		; DEBUG: {Register}/R12 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B0E2EF pop rdi		; DEBUG: {Register}/RDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B0E2F0 ret		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B0E2F1 xor ecx,ecx		; DEBUG: {Register}/ECX {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x180B0E2F3 call 000000018012BDA0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B0E2F8 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.Void BetterList`1::Sort(BetterList`1/CompareFunc<T>):
		End of function at 0x180B0E2F9
		Absolute End is at 0x180B0E2F9
		Identified Jump Destination addresses:
			0x180B0E2BB
		0x180B0E1CF: Moves il2cppMethodInfo (type ) from register r8 to the stack at offset 24 (0x18)
		0x180B0E1D4: Saves the content of rdi to the stack
		0x180B0E1D5: Saves the content of r12 to the stack
		0x180B0E1D7: Saves the content of r13 to the stack
		0x180B0E1D9: Saves the content of r14 to the stack
		0x180B0E1DB: Saves the content of r15 to the stack
		0x180B0E1E1: [!] Reads field size from {'this' (function parameter, type BetterList`1)} and stores in a new local {'size' (type System.Int32)}

		0x180B0E1E5: Clears register rsi, yielding zero-local {'local3' (type System.Int32)}
		0x180B0E1EA: Copies {'il2cppMethodInfo' (type )} from r8 into r9
		0x180B0E1ED: Copies {'comparer' (function parameter, type BetterList`1/CompareFunc<T>)} from rdx into r13
		0x180B0E1F0: Copies {'this' (function parameter, type BetterList`1)} from rcx into r14
		0x180B0E200: Clears register rbp, yielding zero-local {'local4' (type System.Int32)}
		0x180B0E203: Copies {'local3' (type System.Int32)} from rsi into rbx
		0x180B0E205: [!] Compares {'local3' (type System.Int32)} and {'size' (type System.Int32)}
		0x180B0E208: Jumps to 0x180B0E2D4 (which is an if statement's body) if {'local3' (type System.Int32)} is greater than or equal to {'size' (type System.Int32)} ;  - Increasing indentation - is standard if, unimportant is False

		0x180B0E210: [!] Reads field buffer from {'this' (function parameter, type BetterList`1)} and stores in a new local {'buffer' (type T[])}

		0x180B0E214: [!] Compares {'buffer' (type T[])} and 0
		0x180B0E217: Jumps to 0x180B0E2F1 (which throws a NRE) if buffer equals 0. Implicitly present in managed code, so ignored here.
		0x180B0E21D: Reads the length of the array "{'buffer' (type T[])}" and stores it in new local {'length' (type System.Int32)} in register rax
		0x180B0E220: Copies {'local3' (type System.Int32)} from rbx into r8
		0x180B0E223: [!] Compares {'local3' (type System.Int32)} and {'length' (type System.Int32)}
		0x180B0E225: Jumps to 0x180B0E345 (which throws a NRE) if {'local3' (type System.Int32)} is greater than or equal to {'length' (type System.Int32)}. Implicitly present in managed code, so ignored here.
		0x180B0E22B: [!] Loads the constant value 1 into the register rdi as constant constant2 using an LEA instruction
		0x180B0E22F: [!] Compares 1 and {'length' (type System.Int32)}
		0x180B0E231: Jumps to 0x180B0E332 (which throws a NRE) if 1 is greater than or equal to {'length' (type System.Int32)}. Implicitly present in managed code, so ignored here.
		0x180B0E237: [!] Compares {'comparer' (function parameter, type BetterList`1/CompareFunc<T>)} and 0
		0x180B0E23A: Jumps to 0x180B0E2F1 (which throws a NRE) if comparer equals 0. Implicitly present in managed code, so ignored here.
		0x180B0E240: Reads the klass pointer representing the declaring type of this method (which is BetterList`1) and stores in new constant constant4 in register rax
		0x180B0E24C: Copies the element in the array {'buffer' (type T[])} at the index specified by  into new local {'t' (type T)}
		0x180B0E251: [!] Reads a value from the array {'buffer' (type T[])} at an index specified by the value in , into a new local {'local8' (type )}

		0x180B0E255: Reads RGCTX data for class BetterList`1 which has 11 entries/s and stores in new constant constant5 in register rcx
		0x180B0E25C: Reads the RGCTX data at index 10 in the array constant5, which has datapoint 34239 and is of type IL2CPP_RGCTX_DATA_METHOD (mapping to actual value System.Int32 BetterList`1/CompareFunc<T>.Invoke), and stores the result in new constant constant6 in register rax
		0x180B0E260: Copies {'comparer' (function parameter, type BetterList`1/CompareFunc<T>)} from r13 into rcx
		0x180B0E263: Copies {'constant6' (constant value of type LibCpp2IL.BinaryStructures.Il2CppMethodSpec)} from rax into r9
		0x180B0E266: [!] Calls managed method System.Int32 BetterList`1/CompareFunc<T>::Invoke(T,T) on instance {'comparer' (function parameter, type BetterList`1/CompareFunc<T>)} and stores the result in {'int32' (type System.Int32)} ;  - Parameter mismatch!

		0x180B0E268: [!] Compares {'int32' (type System.Int32)} and 0
		0x180B0E26C: [!] Compares {'local4' (type System.Int32)} and 0
		0x180B0E26F: Jumps to 0x180B0E2BB (which is an if statement's body) if {'local4' (type System.Int32)} != 0 ;  - Increasing indentation - is standard if, unimportant is False

		0x180B0E271: [!] Compares {'local3' (type System.Int32)} and 0
		0x180B0E273: [!] Loads the constant value 4294967295 into the register rsi as constant constant10 using an LEA instruction
		0x180B0E276: [!] Writes the constant 0x0 into operand 0 (type UInt64) in register rax
		0x180B0E27B: [!] Copies 0 from rax into rsi based on previous comparison
		0x180B0E27E: Jumps to 0x180B0E2BB (which is an function-local jump destination)

		0x180B0E280: [!] Reads field buffer from {'this' (function parameter, type BetterList`1)} and stores in a new local {'buffer2' (type T[])}

		0x180B0E284: [!] Compares {'buffer2' (type T[])} and 0
		0x180B0E287: Jumps to 0x180B0E2F1 (which throws a NRE) if buffer2 equals 0. Implicitly present in managed code, so ignored here.
		0x180B0E289: Reads the length of the array "{'buffer2' (type T[])}" and stores it in new local {'length2' (type System.Int32)} in register rax
		0x180B0E28C: [!] Compares {'local3' (type System.Int32)} and {'length2' (type System.Int32)}
		0x180B0E28E: Jumps to 0x180B0E31F (which throws a NRE) if {'local3' (type System.Int32)} is greater than or equal to {'length2' (type System.Int32)}. Implicitly present in managed code, so ignored here.
		0x180B0E294: [!] Reads a value from the array {'buffer2' (type T[])} at an index specified by the value in , into a new local {'local12' (type )}

		0x180B0E298: [!] Compares 1 and {'length2' (type System.Int32)}
		0x180B0E29A: Jumps to 0x180B0E30C (which throws a NRE) if 1 is greater than or equal to {'length2' (type System.Int32)}. Implicitly present in managed code, so ignored here.
		0x180B0E29C: Copies the element in the array {'buffer2' (type T[])} at the index specified by  into new local {'t2' (type T)}
		0x180B0E2A5: [!] Reads field buffer from {'this' (function parameter, type BetterList`1)} and stores in a new local {'buffer3' (type T[])}

		0x180B0E2A9: [!] Compares {'buffer3' (type T[])} and 0
		0x180B0E2AC: Jumps to 0x180B0E2F1 (which throws a NRE) if buffer3 equals 0. Implicitly present in managed code, so ignored here.
		0x180B0E2AE: [!] Compares 1 and {Property System.Int32 System.Array::Length() on {'buffer3' (type T[])}}
		0x180B0E2B1: Jumps to 0x180B0E2F9 (which throws a NRE) if 1 is greater than or equal to {Property System.Int32 System.Array::Length() on {'buffer3' (type T[])}}. Implicitly present in managed code, so ignored here.
		0x180B0E2B3: Sets the value at offset 0 in array buffer3 to {'local12' (type )}
		0x180B0E2B8: [!] Writes the constant 0x1 into operand 1 (type UInt64) in register rbp

		End Of If Block (at 0x180B0E2BB) where the if started at 0x180B0E271
		0x180B0E2BB: Reads unknown value in stack, offset 96 (0x60) and stores the pointer in register r9 as new constant constant15
		0x180B0E2C0: [!] Adds 1 to the value {'local3' (type System.Int32)}, stored in rbx
		0x180B0E2C2: [!] Compares {'local3' (type System.Int32)} and {'size' (type System.Int32)}
		0x180B0E2CB: [!] Compares {'local4' (type System.Int32)} and 0
		0x180B0E2CE: Jumps to 0x180B0E200 (which is an if statement's body) if {'local4' (type System.Int32)} != 0 ;  - Increasing indentation - is standard if, unimportant is False

		0x180B0E2D4: Reads unknown value in stack, offset 80 (0x50) and stores the pointer in register rbx as new constant constant17
		0x180B0E2D9: Reads unknown value in stack, offset 88 (0x58) and stores the pointer in register rbp as new constant constant18
		0x180B0E2DE: Reads unknown value in stack, offset 104 (0x68) and stores the pointer in register rsi as new constant constant19
		0x180B0E2F0: [!] Returns from the function

		0x180B0E2F3: [!] Constructs and throws an exception of kind System.NullReferenceException




	Generated Pseudocode:

	Declaring Type: BetterList`1
	System.Void Sort(BetterList`1/CompareFunc<T> comparer)
		System.Int32 size = this.size
		ulong local3 = 0
		ulong local4 = 0

		if (local3 < size)
		    T[] buffer = this.buffer
		    System.Int32 length = buffer.Length
		    System.Int32 1 = 1
		    T t = buffer[]
		     local8 = buffer[]

		    System.Int32 int32 = comparer.Invoke()

		    if (local4 == 0)
		        System.Int32 -1 = 4294967295
		        T[] buffer2 = this.buffer
		        System.Int32 length2 = buffer2.Length
		         local12 = buffer2[]
		        T t2 = buffer2[]
		        T[] buffer3 = this.buffer
		        buffer3[0] = local12
		    endif
            
		    local3 += 1

		    if (local4 == 0)
		    endif
            
		    return
		    throw new System.NullReferenceException()


Generated IL:
	IL Generation Skipped due to invalid local buffer of type T[]
	

