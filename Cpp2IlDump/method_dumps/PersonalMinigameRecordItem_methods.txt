Type: PersonalMinigameRecordItem

Method: System.Void PersonalMinigameRecordItem::.ctor():	Method Body (x86 ASM):
		0x180203000 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180203002 jmp near ptr 0000000180CE1E90h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180203007 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.Void PersonalMinigameRecordItem::.ctor():
		End of function at 0x180203008
		Absolute End is at 0x180203008
		Identified Jump Destination addresses:

		0x180203002: [!] Calls managed method System.Void UnityEngine.MonoBehaviour::.ctor() on instance {'this' (function parameter, type PersonalMinigameRecordItem)}

		0x180203002: [!] Returns from the function




	Generated Pseudocode:

	Declaring Type: PersonalMinigameRecordItem
	System.Void .ctor()

		base..ctor()
		return


Generated IL:
	IL_0000: ldarg.0
	IL_0001: call System.Void UnityEngine.MonoBehaviour::.ctor()
	IL_0006: ret
	

Method: System.Void PersonalMinigameRecordItem::Init():	Method Body (x86 ASM):
		0x1803F8020 push r15		; DEBUG: {Register}/R15 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1803F8022 sub rsp,40h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 64
		0x1803F8026 cmp byte ptr [18183E092h],0		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6467870866 | None ||| N/A | 0
		0x1803F802D mov r15,rcx		; DEBUG: {Register}/R15 {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x1803F8030 jne short 00000001803F8044h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1803F8032 mov ecx,[18151502Ch]		; DEBUG: {Register}/ECX {Memory}/None ||| RIP | 6464557100 | None ||| N/A | N/A
		0x1803F8038 call 00000001800FEB90h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1803F803D mov byte ptr [18183E092h],1		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6467870866 | None ||| N/A | 1
		0x1803F8044 mov rax,[181899F58h]		; DEBUG: {Register}/RAX {Memory}/None ||| RIP | 6468247384 | None ||| N/A | N/A
		0x1803F804B test byte ptr [rax+127h],2		; DEBUG: {Memory}/None {Immediate8}/None ||| RAX | 295 | None ||| N/A | 2
		0x1803F8052 je short 00000001803F806Ch		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1803F8054 cmp dword ptr [rax+0D8h],0		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RAX | 216 | None ||| N/A | 0
		0x1803F805B jne short 00000001803F806Ch		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1803F805D mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1803F8060 call 000000018010EAF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1803F8065 mov rax,[181899F58h]		; DEBUG: {Register}/RAX {Memory}/None ||| RIP | 6468247384 | None ||| N/A | N/A
		0x1803F806C mov rax,[rax+0B8h]		; DEBUG: {Register}/RAX {Memory}/None ||| RAX | 184 | None ||| N/A | N/A
		0x1803F8073 mov [rsp+58h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RSP | 88 | None ||| N/A | N/A
		0x1803F8078 mov [rsp+38h],rbp		; DEBUG: {Memory}/None {Register}/RBP ||| RSP | 56 | None ||| N/A | N/A
		0x1803F807D mov [rsp+30h],rsi		; DEBUG: {Memory}/None {Register}/RSI ||| RSP | 48 | None ||| N/A | N/A
		0x1803F8082 mov rcx,[rax+68h]		; DEBUG: {Register}/RCX {Memory}/None ||| RAX | 104 | None ||| N/A | N/A
		0x1803F8086 mov [rsp+28h],rdi		; DEBUG: {Memory}/None {Register}/RDI ||| RSP | 40 | None ||| N/A | N/A
		0x1803F808B mov [rsp+20h],r14		; DEBUG: {Memory}/None {Register}/R14 ||| RSP | 32 | None ||| N/A | N/A
		0x1803F8090 test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x1803F8093 je near ptr 00000001803F83E8h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1803F8099 movsxd rax,dword ptr [r15+18h]		; DEBUG: {Register}/RAX {Memory}/None ||| R15 | 24 | None ||| N/A | N/A
		0x1803F809D cmp eax,[rcx+18h]		; DEBUG: {Register}/EAX {Memory}/None ||| RCX | 24 | None ||| N/A | N/A
		0x1803F80A0 jae near ptr 00000001803F83F0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1803F80A6 mov rbx,[rcx+rax*8+20h]		; DEBUG: {Register}/RBX {Memory}/None ||| RCX | 32 | RAX ||| N/A | N/A
		0x1803F80AB mov rax,[r15+20h]		; DEBUG: {Register}/RAX {Memory}/None ||| R15 | 32 | None ||| N/A | N/A
		0x1803F80AF test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1803F80B2 je near ptr 00000001803F83E8h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1803F80B8 cmp dword ptr [rax+18h],0		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RAX | 24 | None ||| N/A | 0
		0x1803F80BC jbe near ptr 00000001803F8403h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1803F80C2 mov rdi,[rax+20h]		; DEBUG: {Register}/RDI {Memory}/None ||| RAX | 32 | None ||| N/A | N/A
		0x1803F80C6 test rbx,rbx		; DEBUG: {Register}/RBX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x1803F80C9 je near ptr 00000001803F83E8h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1803F80CF lea rcx,[rbx+10h]		; DEBUG: {Register}/RCX {Memory}/None ||| RBX | 16 | None ||| N/A | N/A
		0x1803F80D3 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1803F80D5 call 0000000180E86110h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1803F80DA test rdi,rdi		; DEBUG: {Register}/RDI {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x1803F80DD je near ptr 00000001803F83E8h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1803F80E3 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1803F80E6 mov rdx,rax		; DEBUG: {Register}/RDX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1803F80E9 mov rcx,rdi		; DEBUG: {Register}/RCX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x1803F80EC call 000000018060D730h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1803F80F1 mov rax,[r15+20h]		; DEBUG: {Register}/RAX {Memory}/None ||| R15 | 32 | None ||| N/A | N/A
		0x1803F80F5 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1803F80F8 je near ptr 00000001803F83E8h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1803F80FE cmp dword ptr [rax+18h],1		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RAX | 24 | None ||| N/A | 1
		0x1803F8102 jbe near ptr 00000001803F8416h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1803F8108 mov rdi,[rax+28h]		; DEBUG: {Register}/RDI {Memory}/None ||| RAX | 40 | None ||| N/A | N/A
		0x1803F810C lea rcx,[rbx+14h]		; DEBUG: {Register}/RCX {Memory}/None ||| RBX | 20 | None ||| N/A | N/A
		0x1803F8110 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1803F8112 call 0000000180E86110h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1803F8117 test rdi,rdi		; DEBUG: {Register}/RDI {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x1803F811A je near ptr 00000001803F83E8h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1803F8120 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1803F8123 mov rdx,rax		; DEBUG: {Register}/RDX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1803F8126 mov rcx,rdi		; DEBUG: {Register}/RCX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x1803F8129 call 000000018060D730h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1803F812E mov rax,[r15+20h]		; DEBUG: {Register}/RAX {Memory}/None ||| R15 | 32 | None ||| N/A | N/A
		0x1803F8132 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1803F8135 je near ptr 00000001803F83E8h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1803F813B cmp dword ptr [rax+18h],2		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RAX | 24 | None ||| N/A | 2
		0x1803F813F jbe near ptr 00000001803F8429h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1803F8145 mov rdi,[rax+30h]		; DEBUG: {Register}/RDI {Memory}/None ||| RAX | 48 | None ||| N/A | N/A
		0x1803F8149 lea rcx,[rbx+18h]		; DEBUG: {Register}/RCX {Memory}/None ||| RBX | 24 | None ||| N/A | N/A
		0x1803F814D xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1803F814F call 0000000180E86110h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1803F8154 test rdi,rdi		; DEBUG: {Register}/RDI {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x1803F8157 je near ptr 00000001803F83E8h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1803F815D xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1803F8160 mov rdx,rax		; DEBUG: {Register}/RDX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1803F8163 mov rcx,rdi		; DEBUG: {Register}/RCX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x1803F8166 call 000000018060D730h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1803F816B cmp dword ptr [r15+18h],1		; DEBUG: {Memory}/None {Immediate8to32}/None ||| R15 | 24 | None ||| N/A | 1
		0x1803F8170 jne near ptr 00000001803F83C8h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1803F8176 mov rcx,[181899DE8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468247016 | None ||| N/A | N/A
		0x1803F817D xor edi,edi		; DEBUG: {Register}/EDI {Register}/EDI ||| None | 0 | None ||| N/A | N/A
		0x1803F817F mov ebp,edi		; DEBUG: {Register}/EBP {Register}/EDI ||| None | 0 | None ||| N/A | N/A
		0x1803F8181 test byte ptr [rcx+127h],2		; DEBUG: {Memory}/None {Immediate8}/None ||| RCX | 295 | None ||| N/A | 2
		0x1803F8188 je short 00000001803F8197h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1803F818A cmp [rcx+0D8h],edi		; DEBUG: {Memory}/None {Register}/EDI ||| RCX | 216 | None ||| N/A | N/A
		0x1803F8190 jne short 00000001803F8197h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1803F8192 call 000000018010EAF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1803F8197 xor ecx,ecx		; DEBUG: {Register}/ECX {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x1803F8199 call 000000018114F9A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1803F819E test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1803F81A1 je near ptr 00000001803F83E8h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1803F81A7 mov rcx,[18189BC60h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468254816 | None ||| N/A | N/A
		0x1803F81AE mov rbx,[rax+18h]		; DEBUG: {Register}/RBX {Memory}/None ||| RAX | 24 | None ||| N/A | N/A
		0x1803F81B2 call 000000018013AC40h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1803F81B7 mov r8,[1818928D8h]		; DEBUG: {Register}/R8 {Memory}/None ||| RIP | 6468217048 | None ||| N/A | N/A
		0x1803F81BE mov rdx,rbx		; DEBUG: {Register}/RDX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x1803F81C1 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1803F81C4 mov r14,rax		; DEBUG: {Register}/R14 {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1803F81C7 call 0000000180F40510h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1803F81CC mov ebx,edi		; DEBUG: {Register}/EBX {Register}/EDI ||| None | 0 | None ||| N/A | N/A
		0x1803F81CE mov esi,edi		; DEBUG: {Register}/ESI {Register}/EDI ||| None | 0 | None ||| N/A | N/A
		0x1803F81D0 test r14,r14		; DEBUG: {Register}/R14 {Register}/R14 ||| None | 0 | None ||| N/A | N/A
		0x1803F81D3 je near ptr 00000001803F83E8h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1803F81D9 nop dword ptr [rax]		; DEBUG: {Memory}/None {Register}/None ||| RAX | 0 | None ||| N/A | N/A
		0x1803F81E0 mov rdx,[18189CDF0h]		; DEBUG: {Register}/RDX {Memory}/None ||| RIP | 6468259312 | None ||| N/A | N/A
		0x1803F81E7 mov rcx,r14		; DEBUG: {Register}/RCX {Register}/R14 ||| None | 0 | None ||| N/A | N/A
		0x1803F81EA call 000000018029B0C0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1803F81EF cmp esi,eax		; DEBUG: {Register}/ESI {Register}/EAX ||| None | 0 | None ||| N/A | N/A
		0x1803F81F1 jge short 00000001803F8242h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1803F81F3 mov r8,[181877000h]		; DEBUG: {Register}/R8 {Memory}/None ||| RIP | 6468104192 | None ||| N/A | N/A
		0x1803F81FA mov edx,ebx		; DEBUG: {Register}/EDX {Register}/EBX ||| None | 0 | None ||| N/A | N/A
		0x1803F81FC mov rcx,r14		; DEBUG: {Register}/RCX {Register}/R14 ||| None | 0 | None ||| N/A | N/A
		0x1803F81FF call 00000001810B67F0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1803F8204 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1803F8207 je near ptr 00000001803F83E8h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1803F820D mov rcx,[181899DE8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468247016 | None ||| N/A | N/A
		0x1803F8214 mov esi,[rax+40h]		; DEBUG: {Register}/ESI {Memory}/None ||| RAX | 64 | None ||| N/A | N/A
		0x1803F8217 test byte ptr [rcx+127h],2		; DEBUG: {Memory}/None {Immediate8}/None ||| RCX | 295 | None ||| N/A | 2
		0x1803F821E je short 00000001803F822Dh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1803F8220 cmp [rcx+0D8h],edi		; DEBUG: {Memory}/None {Register}/EDI ||| RCX | 216 | None ||| N/A | N/A
		0x1803F8226 jne short 00000001803F822Dh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1803F8228 call 000000018010EAF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1803F822D xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1803F822F mov ecx,esi		; DEBUG: {Register}/ECX {Register}/ESI ||| None | 0 | None ||| N/A | N/A
		0x1803F8231 call 00000001811509D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1803F8236 test al,al		; DEBUG: {Register}/AL {Register}/AL ||| None | 0 | None ||| N/A | N/A
		0x1803F8238 je short 00000001803F823Ch		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1803F823A inc ebp		; DEBUG: {Register}/EBP {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1803F823C inc ebx		; DEBUG: {Register}/EBX {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1803F823E mov esi,ebx		; DEBUG: {Register}/ESI {Register}/EBX ||| None | 0 | None ||| N/A | N/A
		0x1803F8240 jmp short 00000001803F81E0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1803F8242 mov rcx,[18188D758h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468196184 | None ||| N/A | N/A
		0x1803F8249 mov rbx,[r15+28h]		; DEBUG: {Register}/RBX {Memory}/None ||| R15 | 40 | None ||| N/A | N/A
		0x1803F824D test byte ptr [rcx+127h],2		; DEBUG: {Memory}/None {Immediate8}/None ||| RCX | 295 | None ||| N/A | 2
		0x1803F8254 je short 00000001803F8263h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1803F8256 cmp [rcx+0D8h],edi		; DEBUG: {Memory}/None {Register}/EDI ||| RCX | 216 | None ||| N/A | N/A
		0x1803F825C jne short 00000001803F8263h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1803F825E call 000000018010EAF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1803F8263 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1803F8266 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1803F8268 mov rcx,rbx		; DEBUG: {Register}/RCX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x1803F826B call 0000000180EA6750h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1803F8270 test al,al		; DEBUG: {Register}/AL {Register}/AL ||| None | 0 | None ||| N/A | N/A
		0x1803F8272 je short 00000001803F828Eh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1803F8274 mov rcx,[r15+28h]		; DEBUG: {Register}/RCX {Memory}/None ||| R15 | 40 | None ||| N/A | N/A
		0x1803F8278 test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x1803F827B je near ptr 00000001803F83E8h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1803F8281 test ebp,ebp		; DEBUG: {Register}/EBP {Register}/EBP ||| None | 0 | None ||| N/A | N/A
		0x1803F8283 setg dl		; DEBUG: {Register}/DL {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1803F8286 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1803F8289 call 0000000180B2E5A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1803F828E mov ebx,edi		; DEBUG: {Register}/EBX {Register}/EDI ||| None | 0 | None ||| N/A | N/A
		0x1803F8290 mov rax,[181899F58h]		; DEBUG: {Register}/RAX {Memory}/None ||| RIP | 6468247384 | None ||| N/A | N/A
		0x1803F8297 test byte ptr [rax+127h],2		; DEBUG: {Memory}/None {Immediate8}/None ||| RAX | 295 | None ||| N/A | 2
		0x1803F829E je short 00000001803F82B8h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1803F82A0 cmp dword ptr [rax+0D8h],0		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RAX | 216 | None ||| N/A | 0
		0x1803F82A7 jne short 00000001803F82B8h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1803F82A9 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1803F82AC call 000000018010EAF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1803F82B1 mov rax,[181899F58h]		; DEBUG: {Register}/RAX {Memory}/None ||| RIP | 6468247384 | None ||| N/A | N/A
		0x1803F82B8 mov rax,[rax+0B8h]		; DEBUG: {Register}/RAX {Memory}/None ||| RAX | 184 | None ||| N/A | N/A
		0x1803F82BF mov rcx,[rax+78h]		; DEBUG: {Register}/RCX {Memory}/None ||| RAX | 120 | None ||| N/A | N/A
		0x1803F82C3 test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x1803F82C6 je near ptr 00000001803F83E8h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1803F82CC mov rdx,[18189CFC0h]		; DEBUG: {Register}/RDX {Memory}/None ||| RIP | 6468259776 | None ||| N/A | N/A
		0x1803F82D3 call 000000018029B0C0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1803F82D8 cmp ebx,eax		; DEBUG: {Register}/EBX {Register}/EAX ||| None | 0 | None ||| N/A | N/A
		0x1803F82DA jge short 00000001803F8333h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1803F82DC mov rax,[181899F58h]		; DEBUG: {Register}/RAX {Memory}/None ||| RIP | 6468247384 | None ||| N/A | N/A
		0x1803F82E3 test byte ptr [rax+127h],2		; DEBUG: {Memory}/None {Immediate8}/None ||| RAX | 295 | None ||| N/A | 2
		0x1803F82EA je short 00000001803F8304h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1803F82EC cmp dword ptr [rax+0D8h],0		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RAX | 216 | None ||| N/A | 0
		0x1803F82F3 jne short 00000001803F8304h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1803F82F5 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1803F82F8 call 000000018010EAF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1803F82FD mov rax,[181899F58h]		; DEBUG: {Register}/RAX {Memory}/None ||| RIP | 6468247384 | None ||| N/A | N/A
		0x1803F8304 mov rax,[rax+0B8h]		; DEBUG: {Register}/RAX {Memory}/None ||| RAX | 184 | None ||| N/A | N/A
		0x1803F830B mov rcx,[rax+78h]		; DEBUG: {Register}/RCX {Memory}/None ||| RAX | 120 | None ||| N/A | N/A
		0x1803F830F test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x1803F8312 je near ptr 00000001803F83E8h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1803F8318 mov r8,[181877188h]		; DEBUG: {Register}/R8 {Memory}/None ||| RIP | 6468104584 | None ||| N/A | N/A
		0x1803F831F mov edx,ebx		; DEBUG: {Register}/EDX {Register}/EBX ||| None | 0 | None ||| N/A | N/A
		0x1803F8321 call 00000001810C2680h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1803F8326 test al,al		; DEBUG: {Register}/AL {Register}/AL ||| None | 0 | None ||| N/A | N/A
		0x1803F8328 je short 00000001803F832Ch		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1803F832A inc edi		; DEBUG: {Register}/EDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1803F832C inc ebx		; DEBUG: {Register}/EBX {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1803F832E jmp near ptr 00000001803F8290h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1803F8333 mov rax,[r15+20h]		; DEBUG: {Register}/RAX {Memory}/None ||| R15 | 32 | None ||| N/A | N/A
		0x1803F8337 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1803F833A je near ptr 00000001803F844Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1803F8340 cmp dword ptr [rax+18h],3		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RAX | 24 | None ||| N/A | 3
		0x1803F8344 jbe near ptr 00000001803F843Ch		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1803F834A mov rbx,[rax+38h]		; DEBUG: {Register}/RBX {Memory}/None ||| RAX | 56 | None ||| N/A | N/A
		0x1803F834E lea rdx,[rsp+50h]		; DEBUG: {Register}/RDX {Memory}/None ||| RSP | 80 | None ||| N/A | N/A
		0x1803F8353 mov rcx,[1818841C8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468157896 | None ||| N/A | N/A
		0x1803F835A mov [rsp+50h],edi		; DEBUG: {Memory}/None {Register}/EDI ||| RSP | 80 | None ||| N/A | N/A
		0x1803F835E call 000000018013A7F0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1803F8363 mov rcx,[1818841C8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468157896 | None ||| N/A | N/A
		0x1803F836A lea rdx,[rsp+60h]		; DEBUG: {Register}/RDX {Memory}/None ||| RSP | 96 | None ||| N/A | N/A
		0x1803F836F mov rdi,rax		; DEBUG: {Register}/RDI {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1803F8372 mov [rsp+60h],ebp		; DEBUG: {Memory}/None {Register}/EBP ||| RSP | 96 | None ||| N/A | N/A
		0x1803F8376 call 000000018013A7F0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1803F837B mov rcx,[181883F70h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468157296 | None ||| N/A | N/A
		0x1803F8382 mov rsi,rax		; DEBUG: {Register}/RSI {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1803F8385 test byte ptr [rcx+127h],2		; DEBUG: {Memory}/None {Immediate8}/None ||| RCX | 295 | None ||| N/A | 2
		0x1803F838C je short 00000001803F839Ch		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1803F838E cmp dword ptr [rcx+0D8h],0		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RCX | 216 | None ||| N/A | 0
		0x1803F8395 jne short 00000001803F839Ch		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1803F8397 call 000000018010EAF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1803F839C mov rcx,[1818816A8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468146856 | None ||| N/A | N/A
		0x1803F83A3 xor r9d,r9d		; DEBUG: {Register}/R9D {Register}/R9D ||| None | 0 | None ||| N/A | N/A
		0x1803F83A6 mov r8,rsi		; DEBUG: {Register}/R8 {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x1803F83A9 mov rdx,rdi		; DEBUG: {Register}/RDX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x1803F83AC call 0000000180D4F6E0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1803F83B1 test rbx,rbx		; DEBUG: {Register}/RBX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x1803F83B4 je near ptr 00000001803F844Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1803F83BA xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1803F83BD mov rdx,rax		; DEBUG: {Register}/RDX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1803F83C0 mov rcx,rbx		; DEBUG: {Register}/RCX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x1803F83C3 call 000000018060D730h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1803F83C8 mov r14,[rsp+20h]		; DEBUG: {Register}/R14 {Memory}/None ||| RSP | 32 | None ||| N/A | N/A
		0x1803F83CD mov rdi,[rsp+28h]		; DEBUG: {Register}/RDI {Memory}/None ||| RSP | 40 | None ||| N/A | N/A
		0x1803F83D2 mov rsi,[rsp+30h]		; DEBUG: {Register}/RSI {Memory}/None ||| RSP | 48 | None ||| N/A | N/A
		0x1803F83D7 mov rbp,[rsp+38h]		; DEBUG: {Register}/RBP {Memory}/None ||| RSP | 56 | None ||| N/A | N/A
		0x1803F83DC mov rbx,[rsp+58h]		; DEBUG: {Register}/RBX {Memory}/None ||| RSP | 88 | None ||| N/A | N/A
		0x1803F83E1 add rsp,40h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 64
		0x1803F83E5 pop r15		; DEBUG: {Register}/R15 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1803F83E7 ret		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1803F83E8 xor ecx,ecx		; DEBUG: {Register}/ECX {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x1803F83EA call 000000018012BDA0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1803F83EF int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.Void PersonalMinigameRecordItem::Init():
		End of function at 0x1803F83F0
		Absolute End is at 0x1803F83F0
		Identified Jump Destination addresses:

		0x1803F8020: Saves the content of r15 to the stack
		0x1803F8026: Compares {Unknown Global at 0x18183E092, first ten bytes are [1 0 107 108 1 0 224 60 103 1], or as chars " kl à<g"} and 0
		0x1803F802D: Copies {'this' (function parameter, type PersonalMinigameRecordItem)} from rcx into r15
		0x1803F8030: Jumps to 0x1803F8044 if {Unknown Global at 0x18183E092, first ten bytes are [1 0 107 108 1 0 224 60 103 1], or as chars " kl à<g"} != 0

		0x1803F8032: Loads string "ìQ" into register rcx as constant {'constant3' (constant value of type Cpp2IL.Core.Analysis.ResultModels.Il2CppString)}
		0x1803F8038: Attempts to load the il2cpp metadata for this method (method id 0) and init it cpp-side.

		0x1803F8044: Loads the type definition for managed type GameStateManager as a constant "GameStateManager" in rax
		0x1803F804B: Compares "{il2cpp field on {'GameStateManager' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" and 2
		0x1803F8052: Jumps to 0x1803F806C if "{il2cpp field on {'GameStateManager' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" equals 2

		0x1803F8054: Compares "{il2cpp field on {'GameStateManager' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" and 0
		0x1803F805B: Jumps to 0x1803F806C if "{il2cpp field on {'GameStateManager' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" != 0

		0x1803F805D: Copies {'GameStateManager' (constant value of type Mono.Cecil.TypeReference)} from rax into rcx
		0x1803F8060: Calls the il2cpp cctor for the type GameStateManager
		0x1803F8065: Loads the type definition for managed type GameStateManager as a constant "GameStateManager" in rax
		0x1803F806C: Loads the pointer to the static fields for GameStateManager and stores it in constant10 in register rax
		0x1803F8082: [!] Reads the static field MinigameParam[] GameStateManager::m_minigameParam into new local m_minigameParam
		0x1803F8090: [!] Compares {'m_minigameParam' (type MinigameParam[])} and 0
		0x1803F8093: Jumps to 0x1803F83E8 (which throws a NRE) if m_minigameParam equals 0. Implicitly present in managed code, so ignored here.
		0x1803F8099: [!] Reads field m_type from {'this' (function parameter, type PersonalMinigameRecordItem)} and stores in a new local {'m_type' (type EMinigame)}

		0x1803F809D: [!] Compares {'m_type' (type EMinigame)} and {Property System.Int32 System.Array::Length() on {'m_minigameParam' (type MinigameParam[])}}
		0x1803F80A0: Jumps to 0x1803F83F0 (which throws a NRE) if {'m_type' (type EMinigame)} is greater than or equal to {Property System.Int32 System.Array::Length() on {'m_minigameParam' (type MinigameParam[])}}. Implicitly present in managed code, so ignored here.
		0x1803F80A6: Copies the element in the array {'m_minigameParam' (type MinigameParam[])} at the index specified by {'m_type' (type EMinigame)} into new local {'minigameParam' (type MinigameParam)}
		0x1803F80AB: [!] Reads field m_paramLabel from {'this' (function parameter, type PersonalMinigameRecordItem)} and stores in a new local {'m_paramLabel' (type UILabel[])}

		0x1803F80AF: [!] Compares {'m_paramLabel' (type UILabel[])} and 0
		0x1803F80B2: Jumps to 0x1803F83E8 (which throws a NRE) if m_paramLabel equals 0. Implicitly present in managed code, so ignored here.
		0x1803F80B8: [!] Compares {Property System.Int32 System.Array::Length() on {'m_paramLabel' (type UILabel[])}} and 0
		0x1803F80BC: Jumps to 0x1803F8403 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'m_paramLabel' (type UILabel[])}} is less than or equal to 0. Implicitly present in managed code, so ignored here.
		0x1803F80C2: [!] Reads a value from the array {'m_paramLabel' (type UILabel[])} at index 0, into a new local {'local5' (type UILabel)}

		0x1803F80C6: [!] Compares {'minigameParam' (type MinigameParam)} and 0
		0x1803F80C9: Jumps to 0x1803F83E8 (which throws a NRE) if minigameParam equals 0. Implicitly present in managed code, so ignored here.
		0x1803F80CF: Loads the pointer to the field m_playedCount on {'minigameParam' (type MinigameParam)} into register rcx
		0x1803F80DA: [!] Compares {'local5' (type UILabel)} and 0
		0x1803F80DD: Jumps to 0x1803F83E8 (which throws a NRE) if local5 equals 0. Implicitly present in managed code, so ignored here.
		0x1803F80E6: Copies {'m_paramLabel' (type UILabel[])} from rax into rdx
		0x1803F80E9: Copies {'local5' (type UILabel)} from rdi into rcx
		0x1803F80EC: [!] Calls managed method System.Void UILabel::set_text(System.String) on instance {'local5' (type UILabel)} ;  - parameters do not match, but there is only one function at this address.

		0x1803F80F1: [!] Reads field m_paramLabel from {'this' (function parameter, type PersonalMinigameRecordItem)} and stores in a new local {'m_paramLabel2' (type UILabel[])}

		0x1803F80F5: [!] Compares {'m_paramLabel2' (type UILabel[])} and 0
		0x1803F80F8: Jumps to 0x1803F83E8 (which throws a NRE) if m_paramLabel2 equals 0. Implicitly present in managed code, so ignored here.
		0x1803F80FE: [!] Compares {Property System.Int32 System.Array::Length() on {'m_paramLabel2' (type UILabel[])}} and 1
		0x1803F8102: Jumps to 0x1803F8416 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'m_paramLabel2' (type UILabel[])}} is less than or equal to 1. Implicitly present in managed code, so ignored here.
		0x1803F8108: [!] Reads a value from the array {'m_paramLabel2' (type UILabel[])} at index 1, into a new local {'local9' (type UILabel)}

		0x1803F810C: Loads the pointer to the field m_bestScore on {'minigameParam' (type MinigameParam)} into register rcx
		0x1803F8117: [!] Compares {'local9' (type UILabel)} and 0
		0x1803F811A: Jumps to 0x1803F83E8 (which throws a NRE) if local9 equals 0. Implicitly present in managed code, so ignored here.
		0x1803F8123: Copies {'m_paramLabel2' (type UILabel[])} from rax into rdx
		0x1803F8126: Copies {'local9' (type UILabel)} from rdi into rcx
		0x1803F8129: [!] Calls managed method System.Void UILabel::set_text(System.String) on instance {'local9' (type UILabel)} ;  - parameters do not match, but there is only one function at this address.

		0x1803F812E: [!] Reads field m_paramLabel from {'this' (function parameter, type PersonalMinigameRecordItem)} and stores in a new local {'m_paramLabel3' (type UILabel[])}

		0x1803F8132: [!] Compares {'m_paramLabel3' (type UILabel[])} and 0
		0x1803F8135: Jumps to 0x1803F83E8 (which throws a NRE) if m_paramLabel3 equals 0. Implicitly present in managed code, so ignored here.
		0x1803F813B: [!] Compares {Property System.Int32 System.Array::Length() on {'m_paramLabel3' (type UILabel[])}} and 2
		0x1803F813F: Jumps to 0x1803F8429 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'m_paramLabel3' (type UILabel[])}} is less than or equal to 2. Implicitly present in managed code, so ignored here.
		0x1803F8145: [!] Reads a value from the array {'m_paramLabel3' (type UILabel[])} at index 2, into a new local {'local13' (type UILabel)}

		0x1803F8149: Loads the pointer to the field m_totalScore on {'minigameParam' (type MinigameParam)} into register rcx
		0x1803F8154: [!] Compares {'local13' (type UILabel)} and 0
		0x1803F8157: Jumps to 0x1803F83E8 (which throws a NRE) if local13 equals 0. Implicitly present in managed code, so ignored here.
		0x1803F8160: Copies {'m_paramLabel3' (type UILabel[])} from rax into rdx
		0x1803F8163: Copies {'local13' (type UILabel)} from rdi into rcx
		0x1803F8166: [!] Calls managed method System.Void UILabel::set_text(System.String) on instance {'local13' (type UILabel)} ;  - parameters do not match, but there is only one function at this address.

		0x1803F816B: [!] Compares {field m_type, read from local {'this' (function parameter, type PersonalMinigameRecordItem)}} and 1
		0x1803F8170: Jumps to 0x1803F83C8 (which is an if statement's body) if {field m_type, read from local {'this' (function parameter, type PersonalMinigameRecordItem)}} != 1 ;  - Increasing indentation - is standard if, unimportant is False

		0x1803F8176: Loads the type definition for managed type DataManager as a constant "DataManager" in rcx
		0x1803F817D: Clears register rdi, yielding zero-local {'local16' (type System.Int32)}
		0x1803F817F: Copies {'local16' (type System.Int32)} from rdi into rbp
		0x1803F8181: Compares "{il2cpp field on {'DataManager' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" and 2
		0x1803F8188: Jumps to 0x1803F8197 if "{il2cpp field on {'DataManager' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" equals 2

		0x1803F818A: Compares "{il2cpp field on {'DataManager' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" and {'local16' (type System.Int32)}
		0x1803F8190: Jumps to 0x1803F8197 if "{il2cpp field on {'DataManager' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" != {'local16' (type System.Int32)}

		0x1803F8192: Calls the il2cpp cctor for the type DataManager
		0x1803F8197: Clears register rcx, yielding zero-local {'local17' (type System.Int32)}
		0x1803F8199: [!] Calls static managed method SplitDataParam DataManager::GetSplitDataParam() and stores the result in {'splitDataParam' (type SplitDataParam)}

		0x1803F819E: [!] Compares {'splitDataParam' (type SplitDataParam)} and 0
		0x1803F81A1: Jumps to 0x1803F83E8 (which throws a NRE) if splitDataParam equals 0. Implicitly present in managed code, so ignored here.
		0x1803F81A7: Loads the type definition for managed type System.Collections.Generic.List`1<SplitParam> as a constant "List`1" in rcx
		0x1803F81AE: [!] Reads field m_paramList from {'splitDataParam' (type SplitDataParam)} and stores in a new local {'m_paramList' (type System.Collections.Generic.List`1<SplitParam>)}

		0x1803F81B2: [!] Allocates an instance of type System.Collections.Generic.List`1<SplitParam> and stores it as list in rax.

		0x1803F81B7: Loads the global generic method reference for method System.Void System.Collections.Generic.List`1::.ctor(System.Collections.Generic.IEnumerable`1<T>) on type System.Collections.Generic.List`1<SplitParam> and stores the result in constant {'.ctor' (constant value of type Cpp2IL.Core.Analysis.ResultModels.GenericMethodReference)} in r8
		0x1803F81BE: Copies {'m_paramList' (type System.Collections.Generic.List`1<SplitParam>)} from rbx into rdx
		0x1803F81C1: Copies {'list' (type System.Collections.Generic.List`1<SplitParam>)} from rax into rcx
		0x1803F81C4: Copies {'list' (type System.Collections.Generic.List`1<SplitParam>)} from rax into r14
		0x1803F81C7: [!] Calls managed method System.Void System.Collections.Generic.List`1::.ctor(System.Collections.Generic.IEnumerable`1<T>) on instance {'list' (type System.Collections.Generic.List`1<SplitParam>)} with arguments [{'m_paramList' (type System.Collections.Generic.List`1<SplitParam>)}] ;  - Method resolved from concrete implementations at this address, with the help of a constant value to identify which concrete implementation.

		0x1803F81CC: Copies {'local16' (type System.Int32)} from rdi into rbx
		0x1803F81CE: Copies {'local16' (type System.Int32)} from rdi into rsi
		0x1803F81D0: [!] Compares {'list' (type System.Collections.Generic.List`1<SplitParam>)} and 0
		0x1803F81D3: Jumps to 0x1803F83E8 (which throws a NRE) if list equals 0. Implicitly present in managed code, so ignored here.

		Potential Loop Start (0x1803F81E0):
		0x1803F81E0: Loads the global generic method reference for method System.Int32 System.Collections.Generic.List`1::get_Count() on type System.Collections.Generic.List`1<SplitParam> and stores the result in constant {'get_Count' (constant value of type Cpp2IL.Core.Analysis.ResultModels.GenericMethodReference)} in rdx
		0x1803F81E7: Copies {'list' (type System.Collections.Generic.List`1<SplitParam>)} from r14 into rcx
		0x1803F81EA: [!] Calls managed method System.Int32 System.Collections.Generic.List`1::get_Count() on instance {'list' (type System.Collections.Generic.List`1<SplitParam>)} and stores the result in {'count' (type System.Int32)} ;  - Method resolved from concrete implementations at this address, with the help of a constant value to identify which concrete implementation.

		0x1803F81EF: [!] Compares {'local16' (type System.Int32)} and {'count' (type System.Int32)}
		0x1803F81F1: Jumps to 0x1803F8242 (which is an if statement's body) if {'local16' (type System.Int32)} is greater than or equal to {'count' (type System.Int32)} ;  - Increasing indentation - is standard if, unimportant is False

		0x1803F81F3: Loads the global generic method reference for method T System.Collections.Generic.List`1::get_Item(System.Int32) on type System.Collections.Generic.List`1<SplitParam> and stores the result in constant {'get_Item' (constant value of type Cpp2IL.Core.Analysis.ResultModels.GenericMethodReference)} in r8
		0x1803F81FA: Copies {'local16' (type System.Int32)} from rbx into rdx
		0x1803F81FC: Copies {'list' (type System.Collections.Generic.List`1<SplitParam>)} from r14 into rcx
		0x1803F81FF: [!] Calls managed method T System.Collections.Generic.List`1::get_Item(System.Int32) on instance {'list' (type System.Collections.Generic.List`1<SplitParam>)} with arguments [{'local16' (type System.Int32)}] and stores the result in {'item' (type SplitParam)} ;  - Method resolved from concrete implementations at this address, with the help of a constant value to identify which concrete implementation.

		0x1803F8204: [!] Compares {'item' (type SplitParam)} and 0
		0x1803F8207: Jumps to 0x1803F83E8 (which throws a NRE) if item equals 0. Implicitly present in managed code, so ignored here.
		0x1803F820D: Loads the type definition for managed type DataManager as a constant "DataManager" in rcx
		0x1803F8214: [!] Reads field m_unlockCon from {'item' (type SplitParam)} and stores in a new local {'m_unlockCon' (type ECondition)}

		0x1803F8217: Compares "{il2cpp field on {'DataManager' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" and 2
		0x1803F821E: Jumps to 0x1803F822D if "{il2cpp field on {'DataManager' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" equals 2

		0x1803F8220: Compares "{il2cpp field on {'DataManager' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" and {'local16' (type System.Int32)}
		0x1803F8226: Jumps to 0x1803F822D if "{il2cpp field on {'DataManager' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" != {'local16' (type System.Int32)}

		0x1803F8228: Calls the il2cpp cctor for the type DataManager
		0x1803F822F: Copies {'m_unlockCon' (type ECondition)} from rsi into rcx
		0x1803F8231: [!] Calls static managed method System.Boolean DataManager::IsSatisfyCondition(ECondition) with arguments [{'m_unlockCon' (type ECondition)}] and stores the result in {'isSatisfyCondition' (type System.Boolean)}

		0x1803F8236: [!] Compares {'isSatisfyCondition' (type System.Boolean)} and False
		0x1803F8238: Jumps to 0x1803F823C (which is an if statement's body) if isSatisfyCondition equals False ;  - Increasing indentation - is standard if, unimportant is False

		0x1803F823A: [!] Adds 1 to the value {'local16' (type System.Int32)}, stored in rbp
		0x1803F823C: [!] Adds 1 to the value {'local16' (type System.Int32)}, stored in rbx
		0x1803F823E: Copies {'local16' (type System.Int32)} from rbx into rsi
		0x1803F8240: Jumps to 0x1803F81E0 - which is still in this function, but further up. Probably indicative that this is a loop.
		0x1803F8242: Loads the type definition for managed type UnityEngine.Object as a constant "Object" in rcx
		0x1803F8249: [!] Reads field m_splitObj from {'this' (function parameter, type PersonalMinigameRecordItem)} and stores in a new local {'m_splitObj' (type UnityEngine.GameObject)}

		0x1803F824D: Compares "{il2cpp field on {'Object' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" and 2
		0x1803F8254: Jumps to 0x1803F8263 if "{il2cpp field on {'Object' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" equals 2 ;  - This is probably a goto, jumping to 0x1803F8263 which is after end of current block @ 0x1803F823C (started at 0x1803F823A)

		0x1803F8256: Compares "{il2cpp field on {'Object' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" and {'local16' (type System.Int32)}
		0x1803F825C: Jumps to 0x1803F8263 if "{il2cpp field on {'Object' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" != {'local16' (type System.Int32)} ;  - This is probably a goto, jumping to 0x1803F8263 which is after end of current block @ 0x1803F823C (started at 0x1803F823A)

		0x1803F825E: Calls the il2cpp cctor for the type UnityEngine.Object
		0x1803F8266: Clears register rdx, yielding zero-local {'local28' (type System.Int32)}
		0x1803F8268: Copies {'m_splitObj' (type UnityEngine.GameObject)} from rbx into rcx
		0x1803F826B: [!] Calls static managed method System.Boolean UnityEngine.Object::op_Inequality(UnityEngine.Object,UnityEngine.Object) with arguments [{'m_splitObj' (type UnityEngine.GameObject)}, {'local28' (type System.Int32)}] and stores the result in {'boolean' (type System.Boolean)}

		0x1803F8270: [!] Compares {'boolean' (type System.Boolean)} and False
		0x1803F8272: Jumps to 0x1803F828E if boolean equals False ;  - This is probably a goto, jumping to 0x1803F828E which is after end of current block @ 0x1803F823C (started at 0x1803F823A)

		0x1803F8274: [!] Reads field m_splitObj from {'this' (function parameter, type PersonalMinigameRecordItem)} and stores in a new local {'m_splitObj2' (type UnityEngine.GameObject)}

		0x1803F8278: [!] Compares {'m_splitObj2' (type UnityEngine.GameObject)} and 0
		0x1803F827B: Jumps to 0x1803F83E8 (which throws a NRE) if m_splitObj2 equals 0. Implicitly present in managed code, so ignored here.
		0x1803F8281: [!] Compares {'local16' (type System.Int32)} and 0
		0x1803F8283: [!] Sets the boolean {'local31' (type System.Boolean)} in rdx to true if local16 is greater than 0, otherwise false.
		0x1803F8289: [!] Calls managed method System.Void UnityEngine.GameObject::SetActive(System.Boolean) on instance {'m_splitObj2' (type UnityEngine.GameObject)} with arguments [{'local31' (type System.Boolean)}]

		0x1803F828E: Copies {'local16' (type System.Int32)} from rdi into rbx

		Potential Loop Start (0x1803F8290):
		0x1803F8290: Loads the type definition for managed type GameStateManager as a constant "GameStateManager" in rax
		0x1803F8297: Compares "{il2cpp field on {'GameStateManager' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" and 2
		0x1803F829E: Jumps to 0x1803F82B8 if "{il2cpp field on {'GameStateManager' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" equals 2 ;  - This is probably a goto, jumping to 0x1803F82B8 which is after end of current block @ 0x1803F823C (started at 0x1803F823A)

		0x1803F82A0: Compares "{il2cpp field on {'GameStateManager' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" and 0
		0x1803F82A7: Jumps to 0x1803F82B8 if "{il2cpp field on {'GameStateManager' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" != 0 ;  - This is probably a goto, jumping to 0x1803F82B8 which is after end of current block @ 0x1803F823C (started at 0x1803F823A)

		0x1803F82A9: Copies {'GameStateManager' (constant value of type Mono.Cecil.TypeReference)} from rax into rcx
		0x1803F82AC: Calls the il2cpp cctor for the type GameStateManager
		0x1803F82B1: Loads the type definition for managed type GameStateManager as a constant "GameStateManager" in rax
		0x1803F82B8: Loads the pointer to the static fields for GameStateManager and stores it in constant55 in register rax
		0x1803F82BF: [!] Reads the static field System.Collections.Generic.List`1<System.Boolean> GameStateManager::m_splitClearState into new local m_splitClearState
		0x1803F82C3: [!] Compares {'m_splitClearState' (type System.Collections.Generic.List`1<System.Boolean>)} and 0
		0x1803F82C6: Jumps to 0x1803F83E8 (which throws a NRE) if m_splitClearState equals 0. Implicitly present in managed code, so ignored here.
		0x1803F82CC: Loads the global generic method reference for method System.Int32 System.Collections.Generic.List`1::get_Count() on type System.Collections.Generic.List`1<System.Boolean> and stores the result in constant {'get_Count' (constant value of type Cpp2IL.Core.Analysis.ResultModels.GenericMethodReference)} in rdx
		0x1803F82D3: [!] Calls managed method System.Int32 System.Collections.Generic.List`1::get_Count() on instance {'m_splitClearState' (type System.Collections.Generic.List`1<System.Boolean>)} and stores the result in {'count2' (type System.Int32)} ;  - Method resolved from concrete implementations at this address, with the help of a constant value to identify which concrete implementation.

		0x1803F82D8: [!] Compares {'local16' (type System.Int32)} and {'count2' (type System.Int32)}
		0x1803F82DA: Jumps to 0x1803F8333 if {'local16' (type System.Int32)} is greater than or equal to {'count2' (type System.Int32)} ;  - This is probably a goto, jumping to 0x1803F8333 which is after end of current block @ 0x1803F823C (started at 0x1803F823A)

		0x1803F82DC: Loads the type definition for managed type GameStateManager as a constant "GameStateManager" in rax
		0x1803F82E3: Compares "{il2cpp field on {'GameStateManager' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" and 2
		0x1803F82EA: Jumps to 0x1803F8304 if "{il2cpp field on {'GameStateManager' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" equals 2 ;  - This is probably a goto, jumping to 0x1803F8304 which is after end of current block @ 0x1803F823C (started at 0x1803F823A)

		0x1803F82EC: Compares "{il2cpp field on {'GameStateManager' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" and 0
		0x1803F82F3: Jumps to 0x1803F8304 if "{il2cpp field on {'GameStateManager' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" != 0 ;  - This is probably a goto, jumping to 0x1803F8304 which is after end of current block @ 0x1803F823C (started at 0x1803F823A)

		0x1803F82F5: Copies {'GameStateManager' (constant value of type Mono.Cecil.TypeReference)} from rax into rcx
		0x1803F82F8: Calls the il2cpp cctor for the type GameStateManager
		0x1803F82FD: Loads the type definition for managed type GameStateManager as a constant "GameStateManager" in rax
		0x1803F8304: Loads the pointer to the static fields for GameStateManager and stores it in constant64 in register rax
		0x1803F830B: [!] Reads the static field System.Collections.Generic.List`1<System.Boolean> GameStateManager::m_splitClearState into new local m_splitClearState2
		0x1803F830F: [!] Compares {'m_splitClearState2' (type System.Collections.Generic.List`1<System.Boolean>)} and 0
		0x1803F8312: Jumps to 0x1803F83E8 (which throws a NRE) if m_splitClearState2 equals 0. Implicitly present in managed code, so ignored here.
		0x1803F8318: Loads the global generic method reference for method T System.Collections.Generic.List`1::get_Item(System.Int32) on type System.Collections.Generic.List`1<System.Boolean> and stores the result in constant {'get_Item' (constant value of type Cpp2IL.Core.Analysis.ResultModels.GenericMethodReference)} in r8
		0x1803F831F: Copies {'local16' (type System.Int32)} from rbx into rdx
		0x1803F8321: [!] Calls managed method T System.Collections.Generic.List`1::get_Item(System.Int32) on instance {'m_splitClearState2' (type System.Collections.Generic.List`1<System.Boolean>)} with arguments [{'local16' (type System.Int32)}] and stores the result in {'item2' (type System.Boolean)} ;  - Method resolved from concrete implementations at this address, with the help of a constant value to identify which concrete implementation.

		0x1803F8326: [!] Compares {'item2' (type System.Boolean)} and False
		0x1803F8328: Jumps to 0x1803F832C if item2 equals False ;  - This is probably a goto, jumping to 0x1803F832C which is after end of current block @ 0x1803F823C (started at 0x1803F823A)

		0x1803F832A: [!] Adds 1 to the value {'local16' (type System.Int32)}, stored in rdi
		0x1803F832C: [!] Adds 1 to the value {'local16' (type System.Int32)}, stored in rbx
		0x1803F832E: Jumps to 0x1803F8290 - which is still in this function, but further up. Probably indicative that this is a loop.
		0x1803F8333: [!] Reads field m_paramLabel from {'this' (function parameter, type PersonalMinigameRecordItem)} and stores in a new local {'m_paramLabel4' (type UILabel[])}

		0x1803F8337: [!] Compares {'m_paramLabel4' (type UILabel[])} and 0
		0x1803F833A: Jumps to 0x1803F844F (which throws a NRE) if m_paramLabel4 equals 0. Implicitly present in managed code, so ignored here.
		0x1803F8340: [!] Compares {Property System.Int32 System.Array::Length() on {'m_paramLabel4' (type UILabel[])}} and 3
		0x1803F8344: Jumps to 0x1803F843C (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'m_paramLabel4' (type UILabel[])}} is less than or equal to 3. Implicitly present in managed code, so ignored here.
		0x1803F834A: [!] Reads a value from the array {'m_paramLabel4' (type UILabel[])} at index 3, into a new local {'local38' (type UILabel)}

		0x1803F834E: Loads a pointer to stack offset 0x50 into register rdx as new constant constant70
		0x1803F8353: Loads the type definition for managed type System.Int32 as a constant "Int32" in rcx
		0x1803F835A: Moves local16 (type System.Int32) from register rdi to the stack at offset 80 (0x50)
		0x1803F835E: Boxes a cpp primitive value {'local16' (type System.Int32)} to managed type System.Int32 and stores the result in new local local39 in register rax.
		0x1803F8363: Loads the type definition for managed type System.Int32 as a constant "Int32" in rcx
		0x1803F836A: Loads a pointer to stack offset 0x60 into register rdx as new constant constant73
		0x1803F836F: Copies {'local39' (type System.Int32)} from rax into rdi
		0x1803F8372: Moves local16 (type System.Int32) from register rbp to the stack at offset 96 (0x60)
		0x1803F8376: Boxes a cpp primitive value {'local16' (type System.Int32)} to managed type System.Int32 and stores the result in new local local40 in register rax.
		0x1803F837B: Loads the type definition for managed type System.String as a constant "String" in rcx
		0x1803F8382: Copies {'local40' (type System.Int32)} from rax into rsi
		0x1803F8385: Compares "{il2cpp field on {'String' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" and 2
		0x1803F838C: Jumps to 0x1803F839C if "{il2cpp field on {'String' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" equals 2 ;  - This is probably a goto, jumping to 0x1803F839C which is after end of current block @ 0x1803F823C (started at 0x1803F823A)

		0x1803F838E: Compares "{il2cpp field on {'String' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" and 0
		0x1803F8395: Jumps to 0x1803F839C if "{il2cpp field on {'String' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" != 0 ;  - This is probably a goto, jumping to 0x1803F839C which is after end of current block @ 0x1803F823C (started at 0x1803F823A)

		0x1803F8397: Calls the il2cpp cctor for the type System.String
		0x1803F839C: Loads the string literal "{0} / {1}" as a constant "constant79" in rcx
		0x1803F83A6: Copies {'local40' (type System.Int32)} from rsi into r8
		0x1803F83A9: Copies {'local39' (type System.Int32)} from rdi into rdx
		0x1803F83AC: [!] Calls static managed method System.String System.String::Format(System.String,System.Object,System.Object) with arguments ["{0} / {1}", {'local39' (type System.Int32)}, {'local40' (type System.Int32)}] and stores the result in {'string' (type System.String)}

		0x1803F83B1: [!] Compares {'local38' (type UILabel)} and 0
		0x1803F83B4: Jumps to 0x1803F844F (which throws a NRE) if local38 equals 0. Implicitly present in managed code, so ignored here.
		0x1803F83BD: Copies {'string' (type System.String)} from rax into rdx
		0x1803F83C0: Copies {'local38' (type UILabel)} from rbx into rcx
		0x1803F83C3: [!] Calls managed method System.Void UILabel::set_text(System.String) on instance {'local38' (type UILabel)} with arguments [{'string' (type System.String)}]

		0x1803F83C8: Reads unknown value in stack, offset 32 (0x20) and stores the pointer in register r14 as new constant constant81
		0x1803F83CD: Reads unknown value in stack, offset 40 (0x28) and stores the pointer in register rdi as new constant constant82
		0x1803F83D2: Reads unknown value in stack, offset 48 (0x30) and stores the pointer in register rsi as new constant constant83
		0x1803F83D7: Reads unknown value in stack, offset 56 (0x38) and stores the pointer in register rbp as new constant constant84
		0x1803F83DC: Reads unknown value in stack, offset 88 (0x58) and stores the pointer in register rbx as new constant constant85
		0x1803F83E7: [!] Returns from the function

		0x1803F83EA: [!] Constructs and throws an exception of kind System.NullReferenceException




	Generated Pseudocode:

	Declaring Type: PersonalMinigameRecordItem
	System.Void Init()
		MinigameParam[] m_minigameParam = GameStateManager.m_minigameParam
		EMinigame m_type = this.m_type
		MinigameParam minigameParam = m_minigameParam[m_type]
		UILabel[] m_paramLabel = this.m_paramLabel
		UILabel local5 = m_paramLabel[0]

		local5.set_text()
		UILabel[] m_paramLabel2 = this.m_paramLabel
		UILabel local9 = m_paramLabel2[1]

		local9.set_text()
		UILabel[] m_paramLabel3 = this.m_paramLabel
		UILabel local13 = m_paramLabel3[2]

		local13.set_text()

		if (this.m_type == 1)
		    ulong local16 = 0
		    ulong local17 = 0

		    SplitDataParam splitDataParam = DataManager.GetSplitDataParam()
		    System.Collections.Generic.List`1<SplitParam> m_paramList = splitDataParam.m_paramList
		    System.Collections.Generic.List`1<SplitParam> list = new System.Collections.Generic.List`1<SplitParam>()

		    list..ctor(m_paramList) //(IEnumerable`1 collection)

		    System.Int32 count = list.Count

		    if (local16 < count)

		        SplitParam item = list.Item
		        ECondition m_unlockCon = item.m_unlockCon

		        System.Boolean isSatisfyCondition = DataManager.IsSatisfyCondition(m_unlockCon) //(ECondition conditionId)

		        if (isSatisfyCondition != False)
		            local16 += 1
		        endif
                
		        local16 += 1
		    endif
            
		    UnityEngine.GameObject m_splitObj = this.m_splitObj
		    ulong local28 = 0

		    System.Boolean boolean = UnityEngine.Object.op_Inequality(m_splitObj, local28) //(Object x, Object y)

		    if (boolean == False)
                goto INSN_1803F828E
            endif
		    UnityEngine.GameObject m_splitObj2 = this.m_splitObj
		    System.Boolean local31 = local16 > 0

		    m_splitObj2.SetActive(local31) //(Boolean value)

		    INSN_1803F828E:
		    System.Collections.Generic.List`1<System.Boolean> m_splitClearState = GameStateManager.m_splitClearState

		    System.Int32 count2 = m_splitClearState.Count

		    if (local16 >= count2)
                goto INSN_1803F8333
            endif
		    System.Collections.Generic.List`1<System.Boolean> m_splitClearState2 = GameStateManager.m_splitClearState

		    System.Boolean item2 = m_splitClearState2.Item

		    if (item2 == False)
                goto INSN_1803F832C
            endif
		    local16 += 1

		    INSN_1803F832C:
		    local16 += 1

		    INSN_1803F8333:
		    UILabel[] m_paramLabel4 = this.m_paramLabel
		    UILabel local38 = m_paramLabel4[3]

		    System.String string = System.String.Format("{0} / {1}", local39, local40) //(String format, Object arg0, Object arg1)

		    local38.text = string
		endif
        
		return
		throw new System.NullReferenceException()


Generated IL:
	Action of type Cpp2IL.Core.Analysis.Actions.x86.Important.CallManagedFunctionAction at (0x1803F80EC) is corrupt (Couldn't get arguments, or actual count (-1) is not equal to expected count (1)) and cannot be created as IL. Aborting here.


