Type: Episode2_19Define

Method: System.Void Episode2_19Define::.ctor():	Method Body (x86 ASM):
		0x1802068B0 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1802068B2 jmp near ptr 0000000180207540h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802068B7 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.Void Episode2_19Define::.ctor():
		End of function at 0x1802068B8
		Absolute End is at 0x1802068B8
		Identified Jump Destination addresses:

		0x1802068B2: [!] Calls managed method System.Void System.Object::.ctor() on instance {'this' (function parameter, type Episode2_19Define)}

		0x1802068B2: [!] Returns from the function




	Generated Pseudocode:

	Declaring Type: Episode2_19Define
	System.Void .ctor()

		base..ctor()
		return


Generated IL:
	IL_0000: ldarg.0
	IL_0001: call System.Void System.Object::.ctor()
	IL_0006: ret
	

Method: System.Void Episode2_19Define::.cctor():	Method Body (x86 ASM):
		0x1805FDFD0 mov [rsp+8],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RSP | 8 | None ||| N/A | N/A
		0x1805FDFD5 push rdi		; DEBUG: {Register}/RDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805FDFD6 sub rsp,20h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 32
		0x1805FDFDA cmp byte ptr [18183EE88h],0		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6467874440 | None ||| N/A | 0
		0x1805FDFE1 jne short 00000001805FDFF5h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FDFE3 mov ecx,[1814C7328h]		; DEBUG: {Register}/ECX {Memory}/None ||| RIP | 6464238376 | None ||| N/A | N/A
		0x1805FDFE9 call 00000001800FEB90h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FDFEE mov byte ptr [18183EE88h],1		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6467874440 | None ||| N/A | 1
		0x1805FDFF5 mov rcx,[181884F78h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468161400 | None ||| N/A | N/A
		0x1805FDFFC mov edx,21h		; DEBUG: {Register}/EDX {Immediate32}/None ||| None | 0 | None ||| N/A | 33
		0x1805FE001 call 0000000180141320h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE006 mov rcx,[181884228h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468157992 | None ||| N/A | N/A
		0x1805FE00D mov rdi,rax		; DEBUG: {Register}/RDI {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE010 mov rbx,[18187E130h]		; DEBUG: {Register}/RBX {Memory}/None ||| RIP | 6468133168 | None ||| N/A | N/A
		0x1805FE017 test byte ptr [rcx+127h],2		; DEBUG: {Memory}/None {Immediate8}/None ||| RCX | 295 | None ||| N/A | 2
		0x1805FE01E je short 00000001805FE02Eh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE020 cmp dword ptr [rcx+0D8h],0		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RCX | 216 | None ||| N/A | 0
		0x1805FE027 jne short 00000001805FE02Eh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE029 call 000000018010EAF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE02E xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FE030 mov rcx,rbx		; DEBUG: {Register}/RCX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x1805FE033 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE038 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE03B test rdi,rdi		; DEBUG: {Register}/RDI {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x1805FE03E je near ptr 00000001805FE7CFh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE044 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE047 je short 00000001805FE061h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE049 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1805FE04C mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE04F mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1805FE053 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE058 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE05B je near ptr 00000001805FE7D7h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE061 cmp dword ptr [rdi+18h],1		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 1
		0x1805FE065 jbe near ptr 00000001805FE7EAh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE06B mov [rdi+28h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 40 | None ||| N/A | N/A
		0x1805FE06F xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FE071 mov rcx,[18187E150h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468133200 | None ||| N/A | N/A
		0x1805FE078 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE07D mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE080 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE083 je short 00000001805FE09Dh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE085 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1805FE088 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE08B mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1805FE08F call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE094 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE097 je near ptr 00000001805FE7FDh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE09D cmp dword ptr [rdi+18h],2		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 2
		0x1805FE0A1 jbe near ptr 00000001805FE810h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE0A7 mov [rdi+30h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 48 | None ||| N/A | N/A
		0x1805FE0AB xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FE0AD mov rcx,[18187E178h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468133240 | None ||| N/A | N/A
		0x1805FE0B4 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE0B9 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE0BC test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE0BF je short 00000001805FE0D9h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE0C1 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1805FE0C4 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE0C7 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1805FE0CB call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE0D0 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE0D3 je near ptr 00000001805FE823h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE0D9 cmp dword ptr [rdi+18h],3		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 3
		0x1805FE0DD jbe near ptr 00000001805FE836h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE0E3 mov [rdi+38h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 56 | None ||| N/A | N/A
		0x1805FE0E7 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FE0E9 mov rcx,[18187E1B8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468133304 | None ||| N/A | N/A
		0x1805FE0F0 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE0F5 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE0F8 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE0FB je short 00000001805FE115h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE0FD mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1805FE100 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE103 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1805FE107 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE10C test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE10F je near ptr 00000001805FE849h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE115 cmp dword ptr [rdi+18h],4		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 4
		0x1805FE119 jbe near ptr 00000001805FE85Ch		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE11F mov [rdi+40h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 64 | None ||| N/A | N/A
		0x1805FE123 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FE125 mov rcx,[18187E1E8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468133352 | None ||| N/A | N/A
		0x1805FE12C call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE131 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE134 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE137 je short 00000001805FE151h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE139 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1805FE13C mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE13F mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1805FE143 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE148 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE14B je near ptr 00000001805FE86Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE151 cmp dword ptr [rdi+18h],5		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 5
		0x1805FE155 jbe near ptr 00000001805FE882h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE15B mov [rdi+48h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 72 | None ||| N/A | N/A
		0x1805FE15F xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FE161 mov rcx,[18187E200h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468133376 | None ||| N/A | N/A
		0x1805FE168 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE16D mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE170 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE173 je short 00000001805FE18Dh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE175 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1805FE178 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE17B mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1805FE17F call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE184 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE187 je near ptr 00000001805FE895h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE18D cmp dword ptr [rdi+18h],6		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 6
		0x1805FE191 jbe near ptr 00000001805FE8A8h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE197 mov [rdi+50h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 80 | None ||| N/A | N/A
		0x1805FE19B xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FE19D mov rcx,[18187E218h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468133400 | None ||| N/A | N/A
		0x1805FE1A4 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE1A9 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE1AC test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE1AF je short 00000001805FE1C9h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE1B1 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1805FE1B4 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE1B7 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1805FE1BB call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE1C0 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE1C3 je near ptr 00000001805FE8BBh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE1C9 cmp dword ptr [rdi+18h],7		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 7
		0x1805FE1CD jbe near ptr 00000001805FE8CEh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE1D3 mov [rdi+58h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 88 | None ||| N/A | N/A
		0x1805FE1D7 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FE1D9 mov rcx,[18187E240h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468133440 | None ||| N/A | N/A
		0x1805FE1E0 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE1E5 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE1E8 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE1EB je short 00000001805FE205h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE1ED mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1805FE1F0 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE1F3 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1805FE1F7 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE1FC test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE1FF je near ptr 00000001805FE8E1h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE205 cmp dword ptr [rdi+18h],8		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 8
		0x1805FE209 jbe near ptr 00000001805FE8F4h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE20F mov [rdi+60h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 96 | None ||| N/A | N/A
		0x1805FE213 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FE215 mov rcx,[18187E268h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468133480 | None ||| N/A | N/A
		0x1805FE21C call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE221 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE224 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE227 je short 00000001805FE241h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE229 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1805FE22C mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE22F mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1805FE233 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE238 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE23B je near ptr 00000001805FE907h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE241 cmp dword ptr [rdi+18h],9		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 9
		0x1805FE245 jbe near ptr 00000001805FE91Ah		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE24B mov [rdi+68h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 104 | None ||| N/A | N/A
		0x1805FE24F xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FE251 mov rcx,[18187E290h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468133520 | None ||| N/A | N/A
		0x1805FE258 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE25D mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE260 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE263 je short 00000001805FE27Dh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE265 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1805FE268 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE26B mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1805FE26F call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE274 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE277 je near ptr 00000001805FE92Dh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE27D cmp dword ptr [rdi+18h],0Ah		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 10
		0x1805FE281 jbe near ptr 00000001805FE940h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE287 mov [rdi+70h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 112 | None ||| N/A | N/A
		0x1805FE28B xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FE28D mov rcx,[18187E2B8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468133560 | None ||| N/A | N/A
		0x1805FE294 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE299 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE29C test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE29F je short 00000001805FE2B9h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE2A1 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1805FE2A4 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE2A7 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1805FE2AB call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE2B0 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE2B3 je near ptr 00000001805FE953h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE2B9 cmp dword ptr [rdi+18h],0Bh		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 11
		0x1805FE2BD jbe near ptr 00000001805FE966h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE2C3 mov [rdi+78h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 120 | None ||| N/A | N/A
		0x1805FE2C7 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FE2C9 mov rcx,[18187E2E8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468133608 | None ||| N/A | N/A
		0x1805FE2D0 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE2D5 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE2D8 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE2DB je short 00000001805FE2F5h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE2DD mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1805FE2E0 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE2E3 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1805FE2E7 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE2EC test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE2EF je near ptr 00000001805FE979h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE2F5 cmp dword ptr [rdi+18h],0Ch		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 12
		0x1805FE2F9 jbe near ptr 00000001805FE98Ch		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE2FF mov [rdi+80h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 128 | None ||| N/A | N/A
		0x1805FE306 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FE308 mov rcx,[18187E328h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468133672 | None ||| N/A | N/A
		0x1805FE30F call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE314 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE317 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE31A je short 00000001805FE334h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE31C mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1805FE31F mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE322 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1805FE326 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE32B test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE32E je near ptr 00000001805FE99Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE334 cmp dword ptr [rdi+18h],0Dh		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 13
		0x1805FE338 jbe near ptr 00000001805FE9B2h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE33E mov [rdi+88h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 136 | None ||| N/A | N/A
		0x1805FE345 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FE347 mov rcx,[18187E350h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468133712 | None ||| N/A | N/A
		0x1805FE34E call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE353 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE356 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE359 je short 00000001805FE373h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE35B mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1805FE35E mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE361 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1805FE365 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE36A test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE36D je near ptr 00000001805FE9C5h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE373 cmp dword ptr [rdi+18h],0Eh		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 14
		0x1805FE377 jbe near ptr 00000001805FE9D8h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE37D mov [rdi+90h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 144 | None ||| N/A | N/A
		0x1805FE384 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FE386 mov rcx,[18187E368h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468133736 | None ||| N/A | N/A
		0x1805FE38D call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE392 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE395 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE398 je short 00000001805FE3B2h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE39A mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1805FE39D mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE3A0 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1805FE3A4 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE3A9 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE3AC je near ptr 00000001805FE9EBh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE3B2 cmp dword ptr [rdi+18h],0Fh		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 15
		0x1805FE3B6 jbe near ptr 00000001805FE9FEh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE3BC mov [rdi+98h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 152 | None ||| N/A | N/A
		0x1805FE3C3 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FE3C5 mov rcx,[18187E398h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468133784 | None ||| N/A | N/A
		0x1805FE3CC call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE3D1 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE3D4 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE3D7 je short 00000001805FE3F1h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE3D9 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1805FE3DC mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE3DF mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1805FE3E3 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE3E8 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE3EB je near ptr 00000001805FEA11h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE3F1 cmp dword ptr [rdi+18h],10h		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 16
		0x1805FE3F5 jbe near ptr 00000001805FEA24h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE3FB mov [rdi+0A0h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 160 | None ||| N/A | N/A
		0x1805FE402 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FE404 mov rcx,[18187E3C8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468133832 | None ||| N/A | N/A
		0x1805FE40B call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE410 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE413 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE416 je short 00000001805FE430h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE418 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1805FE41B mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE41E mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1805FE422 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE427 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE42A je near ptr 00000001805FEA37h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE430 cmp dword ptr [rdi+18h],11h		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 17
		0x1805FE434 jbe near ptr 00000001805FEA4Ah		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE43A mov [rdi+0A8h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 168 | None ||| N/A | N/A
		0x1805FE441 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FE443 mov rcx,[18187E3E0h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468133856 | None ||| N/A | N/A
		0x1805FE44A call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE44F mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE452 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE455 je short 00000001805FE46Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE457 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1805FE45A mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE45D mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1805FE461 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE466 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE469 je near ptr 00000001805FEA5Dh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE46F cmp dword ptr [rdi+18h],12h		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 18
		0x1805FE473 jbe near ptr 00000001805FEA70h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE479 mov [rdi+0B0h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 176 | None ||| N/A | N/A
		0x1805FE480 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FE482 mov rcx,[18187E408h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468133896 | None ||| N/A | N/A
		0x1805FE489 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE48E mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE491 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE494 je short 00000001805FE4AEh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE496 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1805FE499 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE49C mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1805FE4A0 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE4A5 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE4A8 je near ptr 00000001805FEA83h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE4AE cmp dword ptr [rdi+18h],13h		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 19
		0x1805FE4B2 jbe near ptr 00000001805FEA96h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE4B8 mov [rdi+0B8h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 184 | None ||| N/A | N/A
		0x1805FE4BF xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FE4C1 mov rcx,[18187E430h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468133936 | None ||| N/A | N/A
		0x1805FE4C8 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE4CD mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE4D0 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE4D3 je short 00000001805FE4EDh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE4D5 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1805FE4D8 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE4DB mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1805FE4DF call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE4E4 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE4E7 je near ptr 00000001805FEAA9h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE4ED cmp dword ptr [rdi+18h],14h		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 20
		0x1805FE4F1 jbe near ptr 00000001805FEABCh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE4F7 mov [rdi+0C0h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 192 | None ||| N/A | N/A
		0x1805FE4FE xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FE500 mov rcx,[18187E460h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468133984 | None ||| N/A | N/A
		0x1805FE507 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE50C mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE50F test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE512 je short 00000001805FE52Ch		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE514 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1805FE517 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE51A mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1805FE51E call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE523 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE526 je near ptr 00000001805FEACFh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE52C cmp dword ptr [rdi+18h],15h		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 21
		0x1805FE530 jbe near ptr 00000001805FEAE2h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE536 mov [rdi+0C8h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 200 | None ||| N/A | N/A
		0x1805FE53D xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FE53F mov rcx,[18187E470h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468134000 | None ||| N/A | N/A
		0x1805FE546 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE54B mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE54E test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE551 je short 00000001805FE56Bh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE553 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1805FE556 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE559 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1805FE55D call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE562 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE565 je near ptr 00000001805FEAF5h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE56B cmp dword ptr [rdi+18h],16h		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 22
		0x1805FE56F jbe near ptr 00000001805FEB08h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE575 mov [rdi+0D0h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 208 | None ||| N/A | N/A
		0x1805FE57C xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FE57E mov rcx,[18187E4A0h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468134048 | None ||| N/A | N/A
		0x1805FE585 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE58A mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE58D test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE590 je short 00000001805FE5AAh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE592 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1805FE595 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE598 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1805FE59C call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE5A1 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE5A4 je near ptr 00000001805FEB1Bh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE5AA cmp dword ptr [rdi+18h],17h		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 23
		0x1805FE5AE jbe near ptr 00000001805FEB2Eh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE5B4 mov [rdi+0D8h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 216 | None ||| N/A | N/A
		0x1805FE5BB xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FE5BD mov rcx,[18187E4C0h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468134080 | None ||| N/A | N/A
		0x1805FE5C4 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE5C9 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE5CC test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE5CF je short 00000001805FE5E9h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE5D1 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1805FE5D4 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE5D7 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1805FE5DB call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE5E0 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE5E3 je near ptr 00000001805FEB41h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE5E9 cmp dword ptr [rdi+18h],18h		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 24
		0x1805FE5ED jbe near ptr 00000001805FEB54h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE5F3 mov [rdi+0E0h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 224 | None ||| N/A | N/A
		0x1805FE5FA xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FE5FC mov rcx,[18187E4E8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468134120 | None ||| N/A | N/A
		0x1805FE603 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE608 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE60B test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE60E je short 00000001805FE628h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE610 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1805FE613 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE616 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1805FE61A call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE61F test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE622 je near ptr 00000001805FEB67h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE628 cmp dword ptr [rdi+18h],19h		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 25
		0x1805FE62C jbe near ptr 00000001805FEB7Ah		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE632 mov [rdi+0E8h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 232 | None ||| N/A | N/A
		0x1805FE639 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FE63B mov rcx,[18187E510h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468134160 | None ||| N/A | N/A
		0x1805FE642 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE647 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE64A test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE64D je short 00000001805FE667h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE64F mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1805FE652 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE655 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1805FE659 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE65E test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE661 je near ptr 00000001805FEB8Dh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE667 cmp dword ptr [rdi+18h],1Ah		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 26
		0x1805FE66B jbe near ptr 00000001805FEBA0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE671 mov [rdi+0F0h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 240 | None ||| N/A | N/A
		0x1805FE678 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FE67A mov rcx,[18187E550h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468134224 | None ||| N/A | N/A
		0x1805FE681 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE686 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE689 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE68C je short 00000001805FE6A6h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE68E mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1805FE691 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE694 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1805FE698 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE69D test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE6A0 je near ptr 00000001805FEBB3h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE6A6 cmp dword ptr [rdi+18h],1Bh		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 27
		0x1805FE6AA jbe near ptr 00000001805FEBC6h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE6B0 mov [rdi+0F8h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 248 | None ||| N/A | N/A
		0x1805FE6B7 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FE6B9 mov rcx,[18187E570h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468134256 | None ||| N/A | N/A
		0x1805FE6C0 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE6C5 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE6C8 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE6CB je short 00000001805FE6E5h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE6CD mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1805FE6D0 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE6D3 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1805FE6D7 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE6DC test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE6DF je near ptr 00000001805FEBD9h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE6E5 cmp dword ptr [rdi+18h],1Ch		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 28
		0x1805FE6E9 jbe near ptr 00000001805FEBECh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE6EF mov [rdi+100h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 256 | None ||| N/A | N/A
		0x1805FE6F6 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FE6F8 mov rcx,[18187E5A0h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468134304 | None ||| N/A | N/A
		0x1805FE6FF call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE704 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE707 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE70A je short 00000001805FE724h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE70C mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1805FE70F mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE712 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1805FE716 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE71B test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE71E je near ptr 00000001805FEBFFh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE724 cmp dword ptr [rdi+18h],1Dh		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 29
		0x1805FE728 jbe near ptr 00000001805FEC12h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE72E mov [rdi+108h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 264 | None ||| N/A | N/A
		0x1805FE735 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FE737 mov rcx,[18187E5B0h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468134320 | None ||| N/A | N/A
		0x1805FE73E call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE743 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE746 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE749 je short 00000001805FE763h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE74B mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1805FE74E mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE751 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1805FE755 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE75A test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE75D je near ptr 00000001805FEC25h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE763 cmp dword ptr [rdi+18h],1Eh		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 30
		0x1805FE767 jbe near ptr 00000001805FEC38h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE76D mov [rdi+110h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 272 | None ||| N/A | N/A
		0x1805FE774 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FE776 mov rcx,[18187E5D8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468134360 | None ||| N/A | N/A
		0x1805FE77D call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE782 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE785 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE788 je short 00000001805FE7A2h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE78A mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1805FE78D mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE790 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1805FE794 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE799 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE79C je near ptr 00000001805FEC4Bh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE7A2 cmp dword ptr [rdi+18h],1Fh		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 31
		0x1805FE7A6 jbe near ptr 00000001805FEC5Eh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE7AC mov [rdi+118h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 280 | None ||| N/A | N/A
		0x1805FE7B3 mov rax,[1818A1F38h]		; DEBUG: {Register}/RAX {Memory}/None ||| RIP | 6468280120 | None ||| N/A | N/A
		0x1805FE7BA mov rbx,[rsp+30h]		; DEBUG: {Register}/RBX {Memory}/None ||| RSP | 48 | None ||| N/A | N/A
		0x1805FE7BF mov rcx,[rax+0B8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RAX | 184 | None ||| N/A | N/A
		0x1805FE7C6 mov [rcx],rdi		; DEBUG: {Memory}/None {Register}/RDI ||| RCX | 0 | None ||| N/A | N/A
		0x1805FE7C9 add rsp,20h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 32
		0x1805FE7CD pop rdi		; DEBUG: {Register}/RDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805FE7CE ret		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805FE7CF xor ecx,ecx		; DEBUG: {Register}/ECX {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x1805FE7D1 call 000000018012BDA0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE7D6 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805FE7D7 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE7DC mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE7DF xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805FE7E2 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FE7E4 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE7E9 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805FE7FD call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE802 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE805 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805FE808 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FE80A call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE80F int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805FE823 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE828 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE82B xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805FE82E xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FE830 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE835 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805FE849 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE84E mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE851 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805FE854 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FE856 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE85B int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805FE86F call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE874 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE877 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805FE87A xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FE87C call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE881 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805FE895 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE89A mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE89D xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805FE8A0 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FE8A2 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE8A7 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805FE8BB call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE8C0 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE8C3 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805FE8C6 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FE8C8 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE8CD int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805FE8E1 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE8E6 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE8E9 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805FE8EC xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FE8EE call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE8F3 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805FE907 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE90C mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE90F xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805FE912 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FE914 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE919 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805FE92D call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE932 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE935 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805FE938 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FE93A call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE93F int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805FE953 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE958 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE95B xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805FE95E xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FE960 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE965 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805FE979 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE97E mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE981 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805FE984 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FE986 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE98B int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805FE99F call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE9A4 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE9A7 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805FE9AA xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FE9AC call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE9B1 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805FE9C5 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE9CA mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE9CD xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805FE9D0 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FE9D2 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE9D7 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805FE9EB call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE9F0 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FE9F3 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805FE9F6 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FE9F8 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FE9FD int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805FEA11 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FEA16 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FEA19 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805FEA1C xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FEA1E call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FEA23 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805FEA37 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FEA3C mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FEA3F xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805FEA42 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FEA44 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FEA49 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805FEA5D call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FEA62 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FEA65 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805FEA68 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FEA6A call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FEA6F int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805FEA83 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FEA88 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FEA8B xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805FEA8E xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FEA90 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FEA95 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805FEAA9 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FEAAE mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FEAB1 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805FEAB4 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FEAB6 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FEABB int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805FEACF call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FEAD4 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FEAD7 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805FEADA xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FEADC call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FEAE1 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805FEAF5 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FEAFA mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FEAFD xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805FEB00 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FEB02 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FEB07 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805FEB1B call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FEB20 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FEB23 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805FEB26 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FEB28 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FEB2D int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805FEB41 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FEB46 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FEB49 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805FEB4C xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FEB4E call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FEB53 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805FEB67 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FEB6C mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FEB6F xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805FEB72 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FEB74 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FEB79 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805FEB8D call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FEB92 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FEB95 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805FEB98 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FEB9A call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FEB9F int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805FEBB3 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FEBB8 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FEBBB xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805FEBBE xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FEBC0 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FEBC5 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805FEBD9 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FEBDE mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FEBE1 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805FEBE4 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FEBE6 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FEBEB int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805FEBFF call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FEC04 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FEC07 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805FEC0A xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FEC0C call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FEC11 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805FEC25 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FEC2A mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FEC2D xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805FEC30 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FEC32 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FEC37 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805FEC4B call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FEC50 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805FEC53 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805FEC56 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805FEC58 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805FEC5D int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Static Method System.Void Episode2_19Define::.cctor():
		End of function at 0x1805FEC5E
		Absolute End is at 0x1805FEC5E
		Identified Jump Destination addresses:

		0x1805FDFD5: Saves the content of rdi to the stack
		0x1805FDFDA: Compares {Unknown Global at 0x18183EE88, first ten bytes are [64 231 1 0 163 231 1 0 224 60], or as chars "@ç £ç à<"} and 0
		0x1805FDFE1: Jumps to 0x1805FDFF5 if {Unknown Global at 0x18183EE88, first ten bytes are [64 231 1 0 163 231 1 0 224 60], or as chars "@ç £ç à<"} != 0

		0x1805FDFE3: Loads string "Ñ+" into register rcx as constant {'constant3' (constant value of type Cpp2IL.Core.Analysis.ResultModels.Il2CppString)}
		0x1805FDFE9: Attempts to load the il2cpp metadata for this method (method id 0) and init it cpp-side.

		0x1805FDFF5: Loads the type definition for managed type System.Type[] as a constant "Type[]" in rcx
		0x1805FDFFC: [!] Writes the constant 0x21 into operand 33 (type UInt64) in register rdx
		0x1805FE001: [!] Allocates an array of type System.Type[] of size 33 and stores the result as local0 in register rax

		0x1805FE006: Loads the type definition for managed type System.Type as a constant "Type" in rcx
		0x1805FE00D: Copies {'local0' (type System.Type[])} from rax into rdi
		0x1805FE010: Loads the type definition for managed type ESerifEP02_19_other_0000 as a constant "ESerifEP02_19_other_0000" in rbx
		0x1805FE017: Compares "{il2cpp field on {'Type' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" and 2
		0x1805FE01E: Jumps to 0x1805FE02E if "{il2cpp field on {'Type' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" equals 2

		0x1805FE020: Compares "{il2cpp field on {'Type' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" and 0
		0x1805FE027: Jumps to 0x1805FE02E if "{il2cpp field on {'Type' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" != 0

		0x1805FE029: Calls the il2cpp cctor for the type System.Type
		0x1805FE030: Copies {'ESerifEP02_19_other_0000' (constant value of type Mono.Cecil.TypeReference)} from rbx into rcx
		0x1805FE033: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEP02_19_other_0000' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle' (type System.Type)}

		0x1805FE038: Copies {'typeFromHandle' (type System.Type)} from rax into rbx
		0x1805FE03B: [!] Compares {'local0' (type System.Type[])} and 0
		0x1805FE03E: Jumps to 0x1805FE7CF (which throws a NRE) if local0 equals 0. Implicitly present in managed code, so ignored here.
		0x1805FE044: [!] Compares {'typeFromHandle' (type System.Type)} and 0
		0x1805FE047: Jumps to 0x1805FE061 (which is an if statement's body) if typeFromHandle equals 0 ;  - Increasing indentation - is standard if, unimportant is False

		0x1805FE049: Loads the class pointer from local0 into a constant constant14 in register rdx
		0x1805FE04C: Copies {'typeFromHandle' (type System.Type)} from rax into rcx
		0x1805FE04F: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x1805FE058: [!] Compares {'typeFromHandle' (type System.Type)} and 0
		0x1805FE05B: Jumps to 0x1805FE7D7 if typeFromHandle equals 0 ;  - This is probably a goto, jumping to 0x1805FE7D7 which is after end of current block @ 0x1805FE061 (started at 0x1805FE049)

		0x1805FE061: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 1
		0x1805FE065: Jumps to 0x1805FE7EA (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 1. Implicitly present in managed code, so ignored here.
		0x1805FE06B: Sets the value at offset 1 in array local0 to {'typeFromHandle' (type System.Type)}
		0x1805FE071: Loads the type definition for managed type ESerifEP02_19_Sce_0000 as a constant "ESerifEP02_19_Sce_0000" in rcx
		0x1805FE078: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEP02_19_Sce_0000' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle2' (type System.Type)}

		0x1805FE07D: Copies {'typeFromHandle2' (type System.Type)} from rax into rbx
		0x1805FE080: [!] Compares {'typeFromHandle2' (type System.Type)} and 0
		0x1805FE083: Jumps to 0x1805FE09D if typeFromHandle2 equals 0 ;  - This is probably a goto, jumping to 0x1805FE09D which is after end of current block @ 0x1805FE061 (started at 0x1805FE049)

		0x1805FE085: Loads the class pointer from local0 into a constant constant19 in register rdx
		0x1805FE088: Copies {'typeFromHandle2' (type System.Type)} from rax into rcx
		0x1805FE08B: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x1805FE094: [!] Compares {'typeFromHandle2' (type System.Type)} and 0
		0x1805FE097: Jumps to 0x1805FE7FD if typeFromHandle2 equals 0 ;  - This is probably a goto, jumping to 0x1805FE7FD which is after end of current block @ 0x1805FE061 (started at 0x1805FE049)

		0x1805FE09D: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 2
		0x1805FE0A1: Jumps to 0x1805FE810 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 2. Implicitly present in managed code, so ignored here.
		0x1805FE0A7: Sets the value at offset 2 in array local0 to {'typeFromHandle2' (type System.Type)}
		0x1805FE0AD: Loads the type definition for managed type ESerifEP02_19_pol_0000 as a constant "ESerifEP02_19_pol_0000" in rcx
		0x1805FE0B4: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEP02_19_pol_0000' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle3' (type System.Type)}

		0x1805FE0B9: Copies {'typeFromHandle3' (type System.Type)} from rax into rbx
		0x1805FE0BC: [!] Compares {'typeFromHandle3' (type System.Type)} and 0
		0x1805FE0BF: Jumps to 0x1805FE0D9 if typeFromHandle3 equals 0 ;  - This is probably a goto, jumping to 0x1805FE0D9 which is after end of current block @ 0x1805FE061 (started at 0x1805FE049)

		0x1805FE0C1: Loads the class pointer from local0 into a constant constant24 in register rdx
		0x1805FE0C4: Copies {'typeFromHandle3' (type System.Type)} from rax into rcx
		0x1805FE0C7: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x1805FE0D0: [!] Compares {'typeFromHandle3' (type System.Type)} and 0
		0x1805FE0D3: Jumps to 0x1805FE823 if typeFromHandle3 equals 0 ;  - This is probably a goto, jumping to 0x1805FE823 which is after end of current block @ 0x1805FE061 (started at 0x1805FE049)

		0x1805FE0D9: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 3
		0x1805FE0DD: Jumps to 0x1805FE836 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 3. Implicitly present in managed code, so ignored here.
		0x1805FE0E3: Sets the value at offset 3 in array local0 to {'typeFromHandle3' (type System.Type)}
		0x1805FE0E9: Loads the type definition for managed type ESerifEP02_19_Sce_0001 as a constant "ESerifEP02_19_Sce_0001" in rcx
		0x1805FE0F0: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEP02_19_Sce_0001' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle4' (type System.Type)}

		0x1805FE0F5: Copies {'typeFromHandle4' (type System.Type)} from rax into rbx
		0x1805FE0F8: [!] Compares {'typeFromHandle4' (type System.Type)} and 0
		0x1805FE0FB: Jumps to 0x1805FE115 if typeFromHandle4 equals 0 ;  - This is probably a goto, jumping to 0x1805FE115 which is after end of current block @ 0x1805FE061 (started at 0x1805FE049)

		0x1805FE0FD: Loads the class pointer from local0 into a constant constant29 in register rdx
		0x1805FE100: Copies {'typeFromHandle4' (type System.Type)} from rax into rcx
		0x1805FE103: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x1805FE10C: [!] Compares {'typeFromHandle4' (type System.Type)} and 0
		0x1805FE10F: Jumps to 0x1805FE849 if typeFromHandle4 equals 0 ;  - This is probably a goto, jumping to 0x1805FE849 which is after end of current block @ 0x1805FE061 (started at 0x1805FE049)

		0x1805FE115: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 4
		0x1805FE119: Jumps to 0x1805FE85C (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 4. Implicitly present in managed code, so ignored here.
		0x1805FE11F: Sets the value at offset 4 in array local0 to {'typeFromHandle4' (type System.Type)}
		0x1805FE125: Loads the type definition for managed type ESerifEP02_19_other_0001 as a constant "ESerifEP02_19_other_0001" in rcx
		0x1805FE12C: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEP02_19_other_0001' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle5' (type System.Type)}

		0x1805FE131: Copies {'typeFromHandle5' (type System.Type)} from rax into rbx
		0x1805FE134: [!] Compares {'typeFromHandle5' (type System.Type)} and 0
		0x1805FE137: Jumps to 0x1805FE151 if typeFromHandle5 equals 0 ;  - This is probably a goto, jumping to 0x1805FE151 which is after end of current block @ 0x1805FE061 (started at 0x1805FE049)

		0x1805FE139: Loads the class pointer from local0 into a constant constant34 in register rdx
		0x1805FE13C: Copies {'typeFromHandle5' (type System.Type)} from rax into rcx
		0x1805FE13F: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x1805FE148: [!] Compares {'typeFromHandle5' (type System.Type)} and 0
		0x1805FE14B: Jumps to 0x1805FE86F if typeFromHandle5 equals 0 ;  - This is probably a goto, jumping to 0x1805FE86F which is after end of current block @ 0x1805FE061 (started at 0x1805FE049)

		0x1805FE151: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 5
		0x1805FE155: Jumps to 0x1805FE882 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 5. Implicitly present in managed code, so ignored here.
		0x1805FE15B: Sets the value at offset 5 in array local0 to {'typeFromHandle5' (type System.Type)}
		0x1805FE161: Loads the type definition for managed type ESerifEP02_19_Inter_O_0000 as a constant "ESerifEP02_19_Inter_O_0000" in rcx
		0x1805FE168: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEP02_19_Inter_O_0000' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle6' (type System.Type)}

		0x1805FE16D: Copies {'typeFromHandle6' (type System.Type)} from rax into rbx
		0x1805FE170: [!] Compares {'typeFromHandle6' (type System.Type)} and 0
		0x1805FE173: Jumps to 0x1805FE18D if typeFromHandle6 equals 0 ;  - This is probably a goto, jumping to 0x1805FE18D which is after end of current block @ 0x1805FE061 (started at 0x1805FE049)

		0x1805FE175: Loads the class pointer from local0 into a constant constant39 in register rdx
		0x1805FE178: Copies {'typeFromHandle6' (type System.Type)} from rax into rcx
		0x1805FE17B: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x1805FE184: [!] Compares {'typeFromHandle6' (type System.Type)} and 0
		0x1805FE187: Jumps to 0x1805FE895 if typeFromHandle6 equals 0 ;  - This is probably a goto, jumping to 0x1805FE895 which is after end of current block @ 0x1805FE061 (started at 0x1805FE049)

		0x1805FE18D: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 6
		0x1805FE191: Jumps to 0x1805FE8A8 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 6. Implicitly present in managed code, so ignored here.
		0x1805FE197: Sets the value at offset 6 in array local0 to {'typeFromHandle6' (type System.Type)}
		0x1805FE19D: Loads the type definition for managed type ESerifEP02_19_Inter_T_0000 as a constant "ESerifEP02_19_Inter_T_0000" in rcx
		0x1805FE1A4: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEP02_19_Inter_T_0000' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle7' (type System.Type)}

		0x1805FE1A9: Copies {'typeFromHandle7' (type System.Type)} from rax into rbx
		0x1805FE1AC: [!] Compares {'typeFromHandle7' (type System.Type)} and 0
		0x1805FE1AF: Jumps to 0x1805FE1C9 if typeFromHandle7 equals 0 ;  - This is probably a goto, jumping to 0x1805FE1C9 which is after end of current block @ 0x1805FE061 (started at 0x1805FE049)

		0x1805FE1B1: Loads the class pointer from local0 into a constant constant44 in register rdx
		0x1805FE1B4: Copies {'typeFromHandle7' (type System.Type)} from rax into rcx
		0x1805FE1B7: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x1805FE1C0: [!] Compares {'typeFromHandle7' (type System.Type)} and 0
		0x1805FE1C3: Jumps to 0x1805FE8BB if typeFromHandle7 equals 0 ;  - This is probably a goto, jumping to 0x1805FE8BB which is after end of current block @ 0x1805FE061 (started at 0x1805FE049)

		0x1805FE1C9: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 7
		0x1805FE1CD: Jumps to 0x1805FE8CE (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 7. Implicitly present in managed code, so ignored here.
		0x1805FE1D3: Sets the value at offset 7 in array local0 to {'typeFromHandle7' (type System.Type)}
		0x1805FE1D9: Loads the type definition for managed type ESerifEP02_19_Inter_O_0001 as a constant "ESerifEP02_19_Inter_O_0001" in rcx
		0x1805FE1E0: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEP02_19_Inter_O_0001' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle8' (type System.Type)}

		0x1805FE1E5: Copies {'typeFromHandle8' (type System.Type)} from rax into rbx
		0x1805FE1E8: [!] Compares {'typeFromHandle8' (type System.Type)} and 0
		0x1805FE1EB: Jumps to 0x1805FE205 if typeFromHandle8 equals 0 ;  - This is probably a goto, jumping to 0x1805FE205 which is after end of current block @ 0x1805FE061 (started at 0x1805FE049)

		0x1805FE1ED: Loads the class pointer from local0 into a constant constant49 in register rdx
		0x1805FE1F0: Copies {'typeFromHandle8' (type System.Type)} from rax into rcx
		0x1805FE1F3: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x1805FE1FC: [!] Compares {'typeFromHandle8' (type System.Type)} and 0
		0x1805FE1FF: Jumps to 0x1805FE8E1 if typeFromHandle8 equals 0 ;  - This is probably a goto, jumping to 0x1805FE8E1 which is after end of current block @ 0x1805FE061 (started at 0x1805FE049)

		0x1805FE205: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 8
		0x1805FE209: Jumps to 0x1805FE8F4 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 8. Implicitly present in managed code, so ignored here.
		0x1805FE20F: Sets the value at offset 8 in array local0 to {'typeFromHandle8' (type System.Type)}
		0x1805FE215: Loads the type definition for managed type ESerifEP02_19_Inter_T_0001 as a constant "ESerifEP02_19_Inter_T_0001" in rcx
		0x1805FE21C: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEP02_19_Inter_T_0001' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle9' (type System.Type)}

		0x1805FE221: Copies {'typeFromHandle9' (type System.Type)} from rax into rbx
		0x1805FE224: [!] Compares {'typeFromHandle9' (type System.Type)} and 0
		0x1805FE227: Jumps to 0x1805FE241 if typeFromHandle9 equals 0 ;  - This is probably a goto, jumping to 0x1805FE241 which is after end of current block @ 0x1805FE061 (started at 0x1805FE049)

		0x1805FE229: Loads the class pointer from local0 into a constant constant54 in register rdx
		0x1805FE22C: Copies {'typeFromHandle9' (type System.Type)} from rax into rcx
		0x1805FE22F: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x1805FE238: [!] Compares {'typeFromHandle9' (type System.Type)} and 0
		0x1805FE23B: Jumps to 0x1805FE907 if typeFromHandle9 equals 0 ;  - This is probably a goto, jumping to 0x1805FE907 which is after end of current block @ 0x1805FE061 (started at 0x1805FE049)

		0x1805FE241: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 9
		0x1805FE245: Jumps to 0x1805FE91A (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 9. Implicitly present in managed code, so ignored here.
		0x1805FE24B: Sets the value at offset 9 in array local0 to {'typeFromHandle9' (type System.Type)}
		0x1805FE251: Loads the type definition for managed type ESerifEP02_19_other_0002 as a constant "ESerifEP02_19_other_0002" in rcx
		0x1805FE258: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEP02_19_other_0002' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle10' (type System.Type)}

		0x1805FE25D: Copies {'typeFromHandle10' (type System.Type)} from rax into rbx
		0x1805FE260: [!] Compares {'typeFromHandle10' (type System.Type)} and 0
		0x1805FE263: Jumps to 0x1805FE27D if typeFromHandle10 equals 0 ;  - This is probably a goto, jumping to 0x1805FE27D which is after end of current block @ 0x1805FE061 (started at 0x1805FE049)

		0x1805FE265: Loads the class pointer from local0 into a constant constant59 in register rdx
		0x1805FE268: Copies {'typeFromHandle10' (type System.Type)} from rax into rcx
		0x1805FE26B: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x1805FE274: [!] Compares {'typeFromHandle10' (type System.Type)} and 0
		0x1805FE277: Jumps to 0x1805FE92D if typeFromHandle10 equals 0 ;  - This is probably a goto, jumping to 0x1805FE92D which is after end of current block @ 0x1805FE061 (started at 0x1805FE049)

		0x1805FE27D: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 10
		0x1805FE281: Jumps to 0x1805FE940 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 10. Implicitly present in managed code, so ignored here.
		0x1805FE287: Sets the value at offset 10 in array local0 to {'typeFromHandle10' (type System.Type)}
		0x1805FE28D: Loads the type definition for managed type ESerifEP02_19_Inter_O_0002 as a constant "ESerifEP02_19_Inter_O_0002" in rcx
		0x1805FE294: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEP02_19_Inter_O_0002' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle11' (type System.Type)}

		0x1805FE299: Copies {'typeFromHandle11' (type System.Type)} from rax into rbx
		0x1805FE29C: [!] Compares {'typeFromHandle11' (type System.Type)} and 0
		0x1805FE29F: Jumps to 0x1805FE2B9 if typeFromHandle11 equals 0 ;  - This is probably a goto, jumping to 0x1805FE2B9 which is after end of current block @ 0x1805FE061 (started at 0x1805FE049)

		0x1805FE2A1: Loads the class pointer from local0 into a constant constant64 in register rdx
		0x1805FE2A4: Copies {'typeFromHandle11' (type System.Type)} from rax into rcx
		0x1805FE2A7: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x1805FE2B0: [!] Compares {'typeFromHandle11' (type System.Type)} and 0
		0x1805FE2B3: Jumps to 0x1805FE953 if typeFromHandle11 equals 0 ;  - This is probably a goto, jumping to 0x1805FE953 which is after end of current block @ 0x1805FE061 (started at 0x1805FE049)

		0x1805FE2B9: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 11
		0x1805FE2BD: Jumps to 0x1805FE966 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 11. Implicitly present in managed code, so ignored here.
		0x1805FE2C3: Sets the value at offset 11 in array local0 to {'typeFromHandle11' (type System.Type)}
		0x1805FE2C9: Loads the type definition for managed type ESerifEP02_19_Inter_T_0002 as a constant "ESerifEP02_19_Inter_T_0002" in rcx
		0x1805FE2D0: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEP02_19_Inter_T_0002' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle12' (type System.Type)}

		0x1805FE2D5: Copies {'typeFromHandle12' (type System.Type)} from rax into rbx
		0x1805FE2D8: [!] Compares {'typeFromHandle12' (type System.Type)} and 0
		0x1805FE2DB: Jumps to 0x1805FE2F5 if typeFromHandle12 equals 0 ;  - This is probably a goto, jumping to 0x1805FE2F5 which is after end of current block @ 0x1805FE061 (started at 0x1805FE049)

		0x1805FE2DD: Loads the class pointer from local0 into a constant constant69 in register rdx
		0x1805FE2E0: Copies {'typeFromHandle12' (type System.Type)} from rax into rcx
		0x1805FE2E3: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x1805FE2EC: [!] Compares {'typeFromHandle12' (type System.Type)} and 0
		0x1805FE2EF: Jumps to 0x1805FE979 if typeFromHandle12 equals 0 ;  - This is probably a goto, jumping to 0x1805FE979 which is after end of current block @ 0x1805FE061 (started at 0x1805FE049)

		0x1805FE2F5: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 12
		0x1805FE2F9: Jumps to 0x1805FE98C (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 12. Implicitly present in managed code, so ignored here.
		0x1805FE2FF: Sets the value at offset 12 in array local0 to {'typeFromHandle12' (type System.Type)}
		0x1805FE308: Loads the type definition for managed type ESerifEP02_19_other_0003 as a constant "ESerifEP02_19_other_0003" in rcx
		0x1805FE30F: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEP02_19_other_0003' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle13' (type System.Type)}

		0x1805FE314: Copies {'typeFromHandle13' (type System.Type)} from rax into rbx
		0x1805FE317: [!] Compares {'typeFromHandle13' (type System.Type)} and 0
		0x1805FE31A: Jumps to 0x1805FE334 if typeFromHandle13 equals 0 ;  - This is probably a goto, jumping to 0x1805FE334 which is after end of current block @ 0x1805FE061 (started at 0x1805FE049)

		0x1805FE31C: Loads the class pointer from local0 into a constant constant74 in register rdx
		0x1805FE31F: Copies {'typeFromHandle13' (type System.Type)} from rax into rcx
		0x1805FE322: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x1805FE32B: [!] Compares {'typeFromHandle13' (type System.Type)} and 0
		0x1805FE32E: Jumps to 0x1805FE99F if typeFromHandle13 equals 0 ;  - This is probably a goto, jumping to 0x1805FE99F which is after end of current block @ 0x1805FE061 (started at 0x1805FE049)

		0x1805FE334: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 13
		0x1805FE338: Jumps to 0x1805FE9B2 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 13. Implicitly present in managed code, so ignored here.
		0x1805FE33E: Sets the value at offset 13 in array local0 to {'typeFromHandle13' (type System.Type)}
		0x1805FE347: Loads the type definition for managed type ESerifEP02_19_Inter_O_0003 as a constant "ESerifEP02_19_Inter_O_0003" in rcx
		0x1805FE34E: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEP02_19_Inter_O_0003' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle14' (type System.Type)}

		0x1805FE353: Copies {'typeFromHandle14' (type System.Type)} from rax into rbx
		0x1805FE356: [!] Compares {'typeFromHandle14' (type System.Type)} and 0
		0x1805FE359: Jumps to 0x1805FE373 if typeFromHandle14 equals 0 ;  - This is probably a goto, jumping to 0x1805FE373 which is after end of current block @ 0x1805FE061 (started at 0x1805FE049)

		0x1805FE35B: Loads the class pointer from local0 into a constant constant79 in register rdx
		0x1805FE35E: Copies {'typeFromHandle14' (type System.Type)} from rax into rcx
		0x1805FE361: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x1805FE36A: [!] Compares {'typeFromHandle14' (type System.Type)} and 0
		0x1805FE36D: Jumps to 0x1805FE9C5 if typeFromHandle14 equals 0 ;  - This is probably a goto, jumping to 0x1805FE9C5 which is after end of current block @ 0x1805FE061 (started at 0x1805FE049)

		0x1805FE373: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 14
		0x1805FE377: Jumps to 0x1805FE9D8 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 14. Implicitly present in managed code, so ignored here.
		0x1805FE37D: Sets the value at offset 14 in array local0 to {'typeFromHandle14' (type System.Type)}
		0x1805FE386: Loads the type definition for managed type ESerifEP02_19_Inter_T_0003 as a constant "ESerifEP02_19_Inter_T_0003" in rcx
		0x1805FE38D: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEP02_19_Inter_T_0003' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle15' (type System.Type)}

		0x1805FE392: Copies {'typeFromHandle15' (type System.Type)} from rax into rbx
		0x1805FE395: [!] Compares {'typeFromHandle15' (type System.Type)} and 0
		0x1805FE398: Jumps to 0x1805FE3B2 if typeFromHandle15 equals 0 ;  - This is probably a goto, jumping to 0x1805FE3B2 which is after end of current block @ 0x1805FE061 (started at 0x1805FE049)

		0x1805FE39A: Loads the class pointer from local0 into a constant constant84 in register rdx
		0x1805FE39D: Copies {'typeFromHandle15' (type System.Type)} from rax into rcx
		0x1805FE3A0: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x1805FE3A9: [!] Compares {'typeFromHandle15' (type System.Type)} and 0
		0x1805FE3AC: Jumps to 0x1805FE9EB if typeFromHandle15 equals 0 ;  - This is probably a goto, jumping to 0x1805FE9EB which is after end of current block @ 0x1805FE061 (started at 0x1805FE049)

		0x1805FE3B2: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 15
		0x1805FE3B6: Jumps to 0x1805FE9FE (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 15. Implicitly present in managed code, so ignored here.
		0x1805FE3BC: Sets the value at offset 15 in array local0 to {'typeFromHandle15' (type System.Type)}
		0x1805FE3C5: Loads the type definition for managed type ESerifEP02_19_Sce_0002 as a constant "ESerifEP02_19_Sce_0002" in rcx
		0x1805FE3CC: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEP02_19_Sce_0002' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle16' (type System.Type)}

		0x1805FE3D1: Copies {'typeFromHandle16' (type System.Type)} from rax into rbx
		0x1805FE3D4: [!] Compares {'typeFromHandle16' (type System.Type)} and 0
		0x1805FE3D7: Jumps to 0x1805FE3F1 if typeFromHandle16 equals 0 ;  - This is probably a goto, jumping to 0x1805FE3F1 which is after end of current block @ 0x1805FE061 (started at 0x1805FE049)

		0x1805FE3D9: Loads the class pointer from local0 into a constant constant89 in register rdx
		0x1805FE3DC: Copies {'typeFromHandle16' (type System.Type)} from rax into rcx
		0x1805FE3DF: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x1805FE3E8: [!] Compares {'typeFromHandle16' (type System.Type)} and 0
		0x1805FE3EB: Jumps to 0x1805FEA11 if typeFromHandle16 equals 0 ;  - This is probably a goto, jumping to 0x1805FEA11 which is after end of current block @ 0x1805FE061 (started at 0x1805FE049)

		0x1805FE3F1: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 16
		0x1805FE3F5: Jumps to 0x1805FEA24 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 16. Implicitly present in managed code, so ignored here.
		0x1805FE3FB: Sets the value at offset 16 in array local0 to {'typeFromHandle16' (type System.Type)}
		0x1805FE404: Loads the type definition for managed type ESerifEP02_19_Sce_0003 as a constant "ESerifEP02_19_Sce_0003" in rcx
		0x1805FE40B: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEP02_19_Sce_0003' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle17' (type System.Type)}

		0x1805FE410: Copies {'typeFromHandle17' (type System.Type)} from rax into rbx
		0x1805FE413: [!] Compares {'typeFromHandle17' (type System.Type)} and 0
		0x1805FE416: Jumps to 0x1805FE430 if typeFromHandle17 equals 0 ;  - This is probably a goto, jumping to 0x1805FE430 which is after end of current block @ 0x1805FE061 (started at 0x1805FE049)

		0x1805FE418: Loads the class pointer from local0 into a constant constant94 in register rdx
		0x1805FE41B: Copies {'typeFromHandle17' (type System.Type)} from rax into rcx
		0x1805FE41E: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x1805FE427: [!] Compares {'typeFromHandle17' (type System.Type)} and 0
		0x1805FE42A: Jumps to 0x1805FEA37 if typeFromHandle17 equals 0 ;  - This is probably a goto, jumping to 0x1805FEA37 which is after end of current block @ 0x1805FE061 (started at 0x1805FE049)

		0x1805FE430: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 17
		0x1805FE434: Jumps to 0x1805FEA4A (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 17. Implicitly present in managed code, so ignored here.
		0x1805FE43A: Sets the value at offset 17 in array local0 to {'typeFromHandle17' (type System.Type)}
		0x1805FE443: Loads the type definition for managed type ESerifEP02_19_other_0004 as a constant "ESerifEP02_19_other_0004" in rcx
		0x1805FE44A: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEP02_19_other_0004' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle18' (type System.Type)}

		0x1805FE44F: Copies {'typeFromHandle18' (type System.Type)} from rax into rbx
		0x1805FE452: [!] Compares {'typeFromHandle18' (type System.Type)} and 0
		0x1805FE455: Jumps to 0x1805FE46F if typeFromHandle18 equals 0 ;  - This is probably a goto, jumping to 0x1805FE46F which is after end of current block @ 0x1805FE061 (started at 0x1805FE049)

		0x1805FE457: Loads the class pointer from local0 into a constant constant99 in register rdx
		0x1805FE45A: Copies {'typeFromHandle18' (type System.Type)} from rax into rcx
		0x1805FE45D: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x1805FE466: [!] Compares {'typeFromHandle18' (type System.Type)} and 0
		0x1805FE469: Jumps to 0x1805FEA5D if typeFromHandle18 equals 0 ;  - This is probably a goto, jumping to 0x1805FEA5D which is after end of current block @ 0x1805FE061 (started at 0x1805FE049)

		0x1805FE46F: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 18
		0x1805FE473: Jumps to 0x1805FEA70 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 18. Implicitly present in managed code, so ignored here.
		0x1805FE479: Sets the value at offset 18 in array local0 to {'typeFromHandle18' (type System.Type)}
		0x1805FE482: Loads the type definition for managed type ESerifEP02_19_Inter_O_0004 as a constant "ESerifEP02_19_Inter_O_0004" in rcx
		0x1805FE489: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEP02_19_Inter_O_0004' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle19' (type System.Type)}

		0x1805FE48E: Copies {'typeFromHandle19' (type System.Type)} from rax into rbx
		0x1805FE491: [!] Compares {'typeFromHandle19' (type System.Type)} and 0
		0x1805FE494: Jumps to 0x1805FE4AE if typeFromHandle19 equals 0 ;  - This is probably a goto, jumping to 0x1805FE4AE which is after end of current block @ 0x1805FE061 (started at 0x1805FE049)

		0x1805FE496: Loads the class pointer from local0 into a constant constant104 in register rdx
		0x1805FE499: Copies {'typeFromHandle19' (type System.Type)} from rax into rcx
		0x1805FE49C: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x1805FE4A5: [!] Compares {'typeFromHandle19' (type System.Type)} and 0
		0x1805FE4A8: Jumps to 0x1805FEA83 if typeFromHandle19 equals 0 ;  - This is probably a goto, jumping to 0x1805FEA83 which is after end of current block @ 0x1805FE061 (started at 0x1805FE049)

		0x1805FE4AE: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 19
		0x1805FE4B2: Jumps to 0x1805FEA96 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 19. Implicitly present in managed code, so ignored here.
		0x1805FE4B8: Sets the value at offset 19 in array local0 to {'typeFromHandle19' (type System.Type)}
		0x1805FE4C1: Loads the type definition for managed type ESerifEP02_19_Inter_T_0004 as a constant "ESerifEP02_19_Inter_T_0004" in rcx
		0x1805FE4C8: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEP02_19_Inter_T_0004' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle20' (type System.Type)}

		0x1805FE4CD: Copies {'typeFromHandle20' (type System.Type)} from rax into rbx
		0x1805FE4D0: [!] Compares {'typeFromHandle20' (type System.Type)} and 0
		0x1805FE4D3: Jumps to 0x1805FE4ED if typeFromHandle20 equals 0 ;  - This is probably a goto, jumping to 0x1805FE4ED which is after end of current block @ 0x1805FE061 (started at 0x1805FE049)

		0x1805FE4D5: Loads the class pointer from local0 into a constant constant109 in register rdx
		0x1805FE4D8: Copies {'typeFromHandle20' (type System.Type)} from rax into rcx
		0x1805FE4DB: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x1805FE4E4: [!] Compares {'typeFromHandle20' (type System.Type)} and 0
		0x1805FE4E7: Jumps to 0x1805FEAA9 if typeFromHandle20 equals 0 ;  - This is probably a goto, jumping to 0x1805FEAA9 which is after end of current block @ 0x1805FE061 (started at 0x1805FE049)

		0x1805FE4ED: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 20
		0x1805FE4F1: Jumps to 0x1805FEABC (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 20. Implicitly present in managed code, so ignored here.
		0x1805FE4F7: Sets the value at offset 20 in array local0 to {'typeFromHandle20' (type System.Type)}
		0x1805FE500: Loads the type definition for managed type ESerifEP02_19_Sce_0004 as a constant "ESerifEP02_19_Sce_0004" in rcx
		0x1805FE507: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEP02_19_Sce_0004' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle21' (type System.Type)}

		0x1805FE50C: Copies {'typeFromHandle21' (type System.Type)} from rax into rbx
		0x1805FE50F: [!] Compares {'typeFromHandle21' (type System.Type)} and 0
		0x1805FE512: Jumps to 0x1805FE52C if typeFromHandle21 equals 0 ;  - This is probably a goto, jumping to 0x1805FE52C which is after end of current block @ 0x1805FE061 (started at 0x1805FE049)

		0x1805FE514: Loads the class pointer from local0 into a constant constant114 in register rdx
		0x1805FE517: Copies {'typeFromHandle21' (type System.Type)} from rax into rcx
		0x1805FE51A: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x1805FE523: [!] Compares {'typeFromHandle21' (type System.Type)} and 0
		0x1805FE526: Jumps to 0x1805FEACF if typeFromHandle21 equals 0 ;  - This is probably a goto, jumping to 0x1805FEACF which is after end of current block @ 0x1805FE061 (started at 0x1805FE049)

		0x1805FE52C: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 21
		0x1805FE530: Jumps to 0x1805FEAE2 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 21. Implicitly present in managed code, so ignored here.
		0x1805FE536: Sets the value at offset 21 in array local0 to {'typeFromHandle21' (type System.Type)}
		0x1805FE53F: Loads the type definition for managed type ESerifEP02_19_other_0005 as a constant "ESerifEP02_19_other_0005" in rcx
		0x1805FE546: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEP02_19_other_0005' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle22' (type System.Type)}

		0x1805FE54B: Copies {'typeFromHandle22' (type System.Type)} from rax into rbx
		0x1805FE54E: [!] Compares {'typeFromHandle22' (type System.Type)} and 0
		0x1805FE551: Jumps to 0x1805FE56B if typeFromHandle22 equals 0 ;  - This is probably a goto, jumping to 0x1805FE56B which is after end of current block @ 0x1805FE061 (started at 0x1805FE049)

		0x1805FE553: Loads the class pointer from local0 into a constant constant119 in register rdx
		0x1805FE556: Copies {'typeFromHandle22' (type System.Type)} from rax into rcx
		0x1805FE559: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x1805FE562: [!] Compares {'typeFromHandle22' (type System.Type)} and 0
		0x1805FE565: Jumps to 0x1805FEAF5 if typeFromHandle22 equals 0 ;  - This is probably a goto, jumping to 0x1805FEAF5 which is after end of current block @ 0x1805FE061 (started at 0x1805FE049)

		0x1805FE56B: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 22
		0x1805FE56F: Jumps to 0x1805FEB08 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 22. Implicitly present in managed code, so ignored here.
		0x1805FE575: Sets the value at offset 22 in array local0 to {'typeFromHandle22' (type System.Type)}
		0x1805FE57E: Loads the type definition for managed type ESerifEP02_19_Inter_O_0005 as a constant "ESerifEP02_19_Inter_O_0005" in rcx
		0x1805FE585: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEP02_19_Inter_O_0005' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle23' (type System.Type)}

		0x1805FE58A: Copies {'typeFromHandle23' (type System.Type)} from rax into rbx
		0x1805FE58D: [!] Compares {'typeFromHandle23' (type System.Type)} and 0
		0x1805FE590: Jumps to 0x1805FE5AA if typeFromHandle23 equals 0 ;  - This is probably a goto, jumping to 0x1805FE5AA which is after end of current block @ 0x1805FE061 (started at 0x1805FE049)

		0x1805FE592: Loads the class pointer from local0 into a constant constant124 in register rdx
		0x1805FE595: Copies {'typeFromHandle23' (type System.Type)} from rax into rcx
		0x1805FE598: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x1805FE5A1: [!] Compares {'typeFromHandle23' (type System.Type)} and 0
		0x1805FE5A4: Jumps to 0x1805FEB1B if typeFromHandle23 equals 0 ;  - This is probably a goto, jumping to 0x1805FEB1B which is after end of current block @ 0x1805FE061 (started at 0x1805FE049)

		0x1805FE5AA: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 23
		0x1805FE5AE: Jumps to 0x1805FEB2E (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 23. Implicitly present in managed code, so ignored here.
		0x1805FE5B4: Sets the value at offset 23 in array local0 to {'typeFromHandle23' (type System.Type)}
		0x1805FE5BD: Loads the type definition for managed type ESerifEP02_19_Inter_T_0005 as a constant "ESerifEP02_19_Inter_T_0005" in rcx
		0x1805FE5C4: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEP02_19_Inter_T_0005' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle24' (type System.Type)}

		0x1805FE5C9: Copies {'typeFromHandle24' (type System.Type)} from rax into rbx
		0x1805FE5CC: [!] Compares {'typeFromHandle24' (type System.Type)} and 0
		0x1805FE5CF: Jumps to 0x1805FE5E9 if typeFromHandle24 equals 0 ;  - This is probably a goto, jumping to 0x1805FE5E9 which is after end of current block @ 0x1805FE061 (started at 0x1805FE049)

		0x1805FE5D1: Loads the class pointer from local0 into a constant constant129 in register rdx
		0x1805FE5D4: Copies {'typeFromHandle24' (type System.Type)} from rax into rcx
		0x1805FE5D7: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x1805FE5E0: [!] Compares {'typeFromHandle24' (type System.Type)} and 0
		0x1805FE5E3: Jumps to 0x1805FEB41 if typeFromHandle24 equals 0 ;  - This is probably a goto, jumping to 0x1805FEB41 which is after end of current block @ 0x1805FE061 (started at 0x1805FE049)

		0x1805FE5E9: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 24
		0x1805FE5ED: Jumps to 0x1805FEB54 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 24. Implicitly present in managed code, so ignored here.
		0x1805FE5F3: Sets the value at offset 24 in array local0 to {'typeFromHandle24' (type System.Type)}
		0x1805FE5FC: Loads the type definition for managed type ESerifEP02_19_Inter_O_0006 as a constant "ESerifEP02_19_Inter_O_0006" in rcx
		0x1805FE603: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEP02_19_Inter_O_0006' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle25' (type System.Type)}

		0x1805FE608: Copies {'typeFromHandle25' (type System.Type)} from rax into rbx
		0x1805FE60B: [!] Compares {'typeFromHandle25' (type System.Type)} and 0
		0x1805FE60E: Jumps to 0x1805FE628 if typeFromHandle25 equals 0 ;  - This is probably a goto, jumping to 0x1805FE628 which is after end of current block @ 0x1805FE061 (started at 0x1805FE049)

		0x1805FE610: Loads the class pointer from local0 into a constant constant134 in register rdx
		0x1805FE613: Copies {'typeFromHandle25' (type System.Type)} from rax into rcx
		0x1805FE616: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x1805FE61F: [!] Compares {'typeFromHandle25' (type System.Type)} and 0
		0x1805FE622: Jumps to 0x1805FEB67 if typeFromHandle25 equals 0 ;  - This is probably a goto, jumping to 0x1805FEB67 which is after end of current block @ 0x1805FE061 (started at 0x1805FE049)

		0x1805FE628: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 25
		0x1805FE62C: Jumps to 0x1805FEB7A (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 25. Implicitly present in managed code, so ignored here.
		0x1805FE632: Sets the value at offset 25 in array local0 to {'typeFromHandle25' (type System.Type)}
		0x1805FE63B: Loads the type definition for managed type ESerifEP02_19_Inter_T_0006 as a constant "ESerifEP02_19_Inter_T_0006" in rcx
		0x1805FE642: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEP02_19_Inter_T_0006' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle26' (type System.Type)}

		0x1805FE647: Copies {'typeFromHandle26' (type System.Type)} from rax into rbx
		0x1805FE64A: [!] Compares {'typeFromHandle26' (type System.Type)} and 0
		0x1805FE64D: Jumps to 0x1805FE667 if typeFromHandle26 equals 0 ;  - This is probably a goto, jumping to 0x1805FE667 which is after end of current block @ 0x1805FE061 (started at 0x1805FE049)

		0x1805FE64F: Loads the class pointer from local0 into a constant constant139 in register rdx
		0x1805FE652: Copies {'typeFromHandle26' (type System.Type)} from rax into rcx
		0x1805FE655: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x1805FE65E: [!] Compares {'typeFromHandle26' (type System.Type)} and 0
		0x1805FE661: Jumps to 0x1805FEB8D if typeFromHandle26 equals 0 ;  - This is probably a goto, jumping to 0x1805FEB8D which is after end of current block @ 0x1805FE061 (started at 0x1805FE049)

		0x1805FE667: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 26
		0x1805FE66B: Jumps to 0x1805FEBA0 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 26. Implicitly present in managed code, so ignored here.
		0x1805FE671: Sets the value at offset 26 in array local0 to {'typeFromHandle26' (type System.Type)}
		0x1805FE67A: Loads the type definition for managed type ESerifEP02_19_Sce_0005 as a constant "ESerifEP02_19_Sce_0005" in rcx
		0x1805FE681: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEP02_19_Sce_0005' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle27' (type System.Type)}

		0x1805FE686: Copies {'typeFromHandle27' (type System.Type)} from rax into rbx
		0x1805FE689: [!] Compares {'typeFromHandle27' (type System.Type)} and 0
		0x1805FE68C: Jumps to 0x1805FE6A6 if typeFromHandle27 equals 0 ;  - This is probably a goto, jumping to 0x1805FE6A6 which is after end of current block @ 0x1805FE061 (started at 0x1805FE049)

		0x1805FE68E: Loads the class pointer from local0 into a constant constant144 in register rdx
		0x1805FE691: Copies {'typeFromHandle27' (type System.Type)} from rax into rcx
		0x1805FE694: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x1805FE69D: [!] Compares {'typeFromHandle27' (type System.Type)} and 0
		0x1805FE6A0: Jumps to 0x1805FEBB3 if typeFromHandle27 equals 0 ;  - This is probably a goto, jumping to 0x1805FEBB3 which is after end of current block @ 0x1805FE061 (started at 0x1805FE049)

		0x1805FE6A6: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 27
		0x1805FE6AA: Jumps to 0x1805FEBC6 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 27. Implicitly present in managed code, so ignored here.
		0x1805FE6B0: Sets the value at offset 27 in array local0 to {'typeFromHandle27' (type System.Type)}
		0x1805FE6B9: Loads the type definition for managed type ESerifEP02_19_Inter_O_0007 as a constant "ESerifEP02_19_Inter_O_0007" in rcx
		0x1805FE6C0: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEP02_19_Inter_O_0007' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle28' (type System.Type)}

		0x1805FE6C5: Copies {'typeFromHandle28' (type System.Type)} from rax into rbx
		0x1805FE6C8: [!] Compares {'typeFromHandle28' (type System.Type)} and 0
		0x1805FE6CB: Jumps to 0x1805FE6E5 if typeFromHandle28 equals 0 ;  - This is probably a goto, jumping to 0x1805FE6E5 which is after end of current block @ 0x1805FE061 (started at 0x1805FE049)

		0x1805FE6CD: Loads the class pointer from local0 into a constant constant149 in register rdx
		0x1805FE6D0: Copies {'typeFromHandle28' (type System.Type)} from rax into rcx
		0x1805FE6D3: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x1805FE6DC: [!] Compares {'typeFromHandle28' (type System.Type)} and 0
		0x1805FE6DF: Jumps to 0x1805FEBD9 if typeFromHandle28 equals 0 ;  - This is probably a goto, jumping to 0x1805FEBD9 which is after end of current block @ 0x1805FE061 (started at 0x1805FE049)

		0x1805FE6E5: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 28
		0x1805FE6E9: Jumps to 0x1805FEBEC (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 28. Implicitly present in managed code, so ignored here.
		0x1805FE6EF: Sets the value at offset 28 in array local0 to {'typeFromHandle28' (type System.Type)}
		0x1805FE6F8: Loads the type definition for managed type ESerifEP02_19_Inter_T_0007 as a constant "ESerifEP02_19_Inter_T_0007" in rcx
		0x1805FE6FF: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEP02_19_Inter_T_0007' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle29' (type System.Type)}

		0x1805FE704: Copies {'typeFromHandle29' (type System.Type)} from rax into rbx
		0x1805FE707: [!] Compares {'typeFromHandle29' (type System.Type)} and 0
		0x1805FE70A: Jumps to 0x1805FE724 if typeFromHandle29 equals 0 ;  - This is probably a goto, jumping to 0x1805FE724 which is after end of current block @ 0x1805FE061 (started at 0x1805FE049)

		0x1805FE70C: Loads the class pointer from local0 into a constant constant154 in register rdx
		0x1805FE70F: Copies {'typeFromHandle29' (type System.Type)} from rax into rcx
		0x1805FE712: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x1805FE71B: [!] Compares {'typeFromHandle29' (type System.Type)} and 0
		0x1805FE71E: Jumps to 0x1805FEBFF if typeFromHandle29 equals 0 ;  - This is probably a goto, jumping to 0x1805FEBFF which is after end of current block @ 0x1805FE061 (started at 0x1805FE049)

		0x1805FE724: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 29
		0x1805FE728: Jumps to 0x1805FEC12 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 29. Implicitly present in managed code, so ignored here.
		0x1805FE72E: Sets the value at offset 29 in array local0 to {'typeFromHandle29' (type System.Type)}
		0x1805FE737: Loads the type definition for managed type ESerifEP02_19_Inter_O_0008 as a constant "ESerifEP02_19_Inter_O_0008" in rcx
		0x1805FE73E: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEP02_19_Inter_O_0008' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle30' (type System.Type)}

		0x1805FE743: Copies {'typeFromHandle30' (type System.Type)} from rax into rbx
		0x1805FE746: [!] Compares {'typeFromHandle30' (type System.Type)} and 0
		0x1805FE749: Jumps to 0x1805FE763 if typeFromHandle30 equals 0 ;  - This is probably a goto, jumping to 0x1805FE763 which is after end of current block @ 0x1805FE061 (started at 0x1805FE049)

		0x1805FE74B: Loads the class pointer from local0 into a constant constant159 in register rdx
		0x1805FE74E: Copies {'typeFromHandle30' (type System.Type)} from rax into rcx
		0x1805FE751: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x1805FE75A: [!] Compares {'typeFromHandle30' (type System.Type)} and 0
		0x1805FE75D: Jumps to 0x1805FEC25 if typeFromHandle30 equals 0 ;  - This is probably a goto, jumping to 0x1805FEC25 which is after end of current block @ 0x1805FE061 (started at 0x1805FE049)

		0x1805FE763: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 30
		0x1805FE767: Jumps to 0x1805FEC38 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 30. Implicitly present in managed code, so ignored here.
		0x1805FE76D: Sets the value at offset 30 in array local0 to {'typeFromHandle30' (type System.Type)}
		0x1805FE776: Loads the type definition for managed type ESerifEP02_19_Inter_T_0008 as a constant "ESerifEP02_19_Inter_T_0008" in rcx
		0x1805FE77D: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEP02_19_Inter_T_0008' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle31' (type System.Type)}

		0x1805FE782: Copies {'typeFromHandle31' (type System.Type)} from rax into rbx
		0x1805FE785: [!] Compares {'typeFromHandle31' (type System.Type)} and 0
		0x1805FE788: Jumps to 0x1805FE7A2 if typeFromHandle31 equals 0 ;  - This is probably a goto, jumping to 0x1805FE7A2 which is after end of current block @ 0x1805FE061 (started at 0x1805FE049)

		0x1805FE78A: Loads the class pointer from local0 into a constant constant164 in register rdx
		0x1805FE78D: Copies {'typeFromHandle31' (type System.Type)} from rax into rcx
		0x1805FE790: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x1805FE799: [!] Compares {'typeFromHandle31' (type System.Type)} and 0
		0x1805FE79C: Jumps to 0x1805FEC4B if typeFromHandle31 equals 0 ;  - This is probably a goto, jumping to 0x1805FEC4B which is after end of current block @ 0x1805FE061 (started at 0x1805FE049)

		0x1805FE7A2: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 31
		0x1805FE7A6: Jumps to 0x1805FEC5E (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 31. Implicitly present in managed code, so ignored here.
		0x1805FE7AC: Sets the value at offset 31 in array local0 to {'typeFromHandle31' (type System.Type)}
		0x1805FE7B3: Loads the type definition for managed type Episode2_19Define as a constant "Episode2_19Define" in rax
		0x1805FE7BA: Reads unknown value in stack, offset 48 (0x30) and stores the pointer in register rbx as new constant constant168
		0x1805FE7BF: Loads the pointer to the static fields for Episode2_19Define and stores it in constant169 in register rcx
		0x1805FE7C6: [!] Sets static field . to {'local0' (type System.Type[])}
		0x1805FE7CE: [!] Returns from the function

		0x1805FE7D1: [!] Constructs and throws an exception of kind System.NullReferenceException

		0x1805FE7DC: Copies {'local64' (type System.NullReferenceException)} from rax into rcx
		0x1805FE802: Copies {'local64' (type System.NullReferenceException)} from rax into rcx
		0x1805FE828: Copies {'local64' (type System.NullReferenceException)} from rax into rcx
		0x1805FE84E: Copies {'local64' (type System.NullReferenceException)} from rax into rcx
		0x1805FE874: Copies {'local64' (type System.NullReferenceException)} from rax into rcx
		0x1805FE89A: Copies {'local64' (type System.NullReferenceException)} from rax into rcx
		0x1805FE8C0: Copies {'local64' (type System.NullReferenceException)} from rax into rcx
		0x1805FE8E6: Copies {'local64' (type System.NullReferenceException)} from rax into rcx
		0x1805FE90C: Copies {'local64' (type System.NullReferenceException)} from rax into rcx
		0x1805FE932: Copies {'local64' (type System.NullReferenceException)} from rax into rcx
		0x1805FE958: Copies {'local64' (type System.NullReferenceException)} from rax into rcx
		0x1805FE97E: Copies {'local64' (type System.NullReferenceException)} from rax into rcx
		0x1805FE9A4: Copies {'local64' (type System.NullReferenceException)} from rax into rcx
		0x1805FE9CA: Copies {'local64' (type System.NullReferenceException)} from rax into rcx
		0x1805FE9F0: Copies {'local64' (type System.NullReferenceException)} from rax into rcx
		0x1805FEA16: Copies {'local64' (type System.NullReferenceException)} from rax into rcx
		0x1805FEA3C: Copies {'local64' (type System.NullReferenceException)} from rax into rcx
		0x1805FEA62: Copies {'local64' (type System.NullReferenceException)} from rax into rcx
		0x1805FEA88: Copies {'local64' (type System.NullReferenceException)} from rax into rcx
		0x1805FEAAE: Copies {'local64' (type System.NullReferenceException)} from rax into rcx
		0x1805FEAD4: Copies {'local64' (type System.NullReferenceException)} from rax into rcx
		0x1805FEAFA: Copies {'local64' (type System.NullReferenceException)} from rax into rcx
		0x1805FEB20: Copies {'local64' (type System.NullReferenceException)} from rax into rcx
		0x1805FEB46: Copies {'local64' (type System.NullReferenceException)} from rax into rcx
		0x1805FEB6C: Copies {'local64' (type System.NullReferenceException)} from rax into rcx
		0x1805FEB92: Copies {'local64' (type System.NullReferenceException)} from rax into rcx
		0x1805FEBB8: Copies {'local64' (type System.NullReferenceException)} from rax into rcx
		0x1805FEBDE: Copies {'local64' (type System.NullReferenceException)} from rax into rcx
		0x1805FEC04: Copies {'local64' (type System.NullReferenceException)} from rax into rcx
		0x1805FEC2A: Copies {'local64' (type System.NullReferenceException)} from rax into rcx
		0x1805FEC50: Copies {'local64' (type System.NullReferenceException)} from rax into rcx



	Generated Pseudocode:

	Declaring Type: Episode2_19Define
	static System.Void .cctor()
		System.Type[] local0 = new System.Type[33]

		System.Type typeFromHandle = System.Type.GetTypeFromHandle({'ESerifEP02_19_other_0000' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle != 0)

		    if (typeFromHandle == 0)
                goto INSN_1805FE7D7
            endif
		endif
        
		local0[1] = typeFromHandle

		System.Type typeFromHandle2 = System.Type.GetTypeFromHandle({'ESerifEP02_19_Sce_0000' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle2 == 0)
            goto INSN_1805FE09D
        endif

		if (typeFromHandle2 == 0)
            goto INSN_1805FE7FD
        endif

		INSN_1805FE09D:
		local0[2] = typeFromHandle2

		System.Type typeFromHandle3 = System.Type.GetTypeFromHandle({'ESerifEP02_19_pol_0000' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle3 == 0)
            goto INSN_1805FE0D9
        endif

		if (typeFromHandle3 == 0)
            goto INSN_1805FE823
        endif

		INSN_1805FE0D9:
		local0[3] = typeFromHandle3

		System.Type typeFromHandle4 = System.Type.GetTypeFromHandle({'ESerifEP02_19_Sce_0001' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle4 == 0)
            goto INSN_1805FE115
        endif

		if (typeFromHandle4 == 0)
            goto INSN_1805FE849
        endif

		INSN_1805FE115:
		local0[4] = typeFromHandle4

		System.Type typeFromHandle5 = System.Type.GetTypeFromHandle({'ESerifEP02_19_other_0001' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle5 == 0)
            goto INSN_1805FE151
        endif

		if (typeFromHandle5 == 0)
            goto INSN_1805FE86F
        endif

		INSN_1805FE151:
		local0[5] = typeFromHandle5

		System.Type typeFromHandle6 = System.Type.GetTypeFromHandle({'ESerifEP02_19_Inter_O_0000' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle6 == 0)
            goto INSN_1805FE18D
        endif

		if (typeFromHandle6 == 0)
            goto INSN_1805FE895
        endif

		INSN_1805FE18D:
		local0[6] = typeFromHandle6

		System.Type typeFromHandle7 = System.Type.GetTypeFromHandle({'ESerifEP02_19_Inter_T_0000' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle7 == 0)
            goto INSN_1805FE1C9
        endif

		if (typeFromHandle7 == 0)
            goto INSN_1805FE8BB
        endif

		INSN_1805FE1C9:
		local0[7] = typeFromHandle7

		System.Type typeFromHandle8 = System.Type.GetTypeFromHandle({'ESerifEP02_19_Inter_O_0001' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle8 == 0)
            goto INSN_1805FE205
        endif

		if (typeFromHandle8 == 0)
            goto INSN_1805FE8E1
        endif

		INSN_1805FE205:
		local0[8] = typeFromHandle8

		System.Type typeFromHandle9 = System.Type.GetTypeFromHandle({'ESerifEP02_19_Inter_T_0001' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle9 == 0)
            goto INSN_1805FE241
        endif

		if (typeFromHandle9 == 0)
            goto INSN_1805FE907
        endif

		INSN_1805FE241:
		local0[9] = typeFromHandle9

		System.Type typeFromHandle10 = System.Type.GetTypeFromHandle({'ESerifEP02_19_other_0002' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle10 == 0)
            goto INSN_1805FE27D
        endif

		if (typeFromHandle10 == 0)
            goto INSN_1805FE92D
        endif

		INSN_1805FE27D:
		local0[10] = typeFromHandle10

		System.Type typeFromHandle11 = System.Type.GetTypeFromHandle({'ESerifEP02_19_Inter_O_0002' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle11 == 0)
            goto INSN_1805FE2B9
        endif

		if (typeFromHandle11 == 0)
            goto INSN_1805FE953
        endif

		INSN_1805FE2B9:
		local0[11] = typeFromHandle11

		System.Type typeFromHandle12 = System.Type.GetTypeFromHandle({'ESerifEP02_19_Inter_T_0002' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle12 == 0)
            goto INSN_1805FE2F5
        endif

		if (typeFromHandle12 == 0)
            goto INSN_1805FE979
        endif

		INSN_1805FE2F5:
		local0[12] = typeFromHandle12

		System.Type typeFromHandle13 = System.Type.GetTypeFromHandle({'ESerifEP02_19_other_0003' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle13 == 0)
            goto INSN_1805FE334
        endif

		if (typeFromHandle13 == 0)
            goto INSN_1805FE99F
        endif

		INSN_1805FE334:
		local0[13] = typeFromHandle13

		System.Type typeFromHandle14 = System.Type.GetTypeFromHandle({'ESerifEP02_19_Inter_O_0003' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle14 == 0)
            goto INSN_1805FE373
        endif

		if (typeFromHandle14 == 0)
            goto INSN_1805FE9C5
        endif

		INSN_1805FE373:
		local0[14] = typeFromHandle14

		System.Type typeFromHandle15 = System.Type.GetTypeFromHandle({'ESerifEP02_19_Inter_T_0003' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle15 == 0)
            goto INSN_1805FE3B2
        endif

		if (typeFromHandle15 == 0)
            goto INSN_1805FE9EB
        endif

		INSN_1805FE3B2:
		local0[15] = typeFromHandle15

		System.Type typeFromHandle16 = System.Type.GetTypeFromHandle({'ESerifEP02_19_Sce_0002' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle16 == 0)
            goto INSN_1805FE3F1
        endif

		if (typeFromHandle16 == 0)
            goto INSN_1805FEA11
        endif

		INSN_1805FE3F1:
		local0[16] = typeFromHandle16

		System.Type typeFromHandle17 = System.Type.GetTypeFromHandle({'ESerifEP02_19_Sce_0003' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle17 == 0)
            goto INSN_1805FE430
        endif

		if (typeFromHandle17 == 0)
            goto INSN_1805FEA37
        endif

		INSN_1805FE430:
		local0[17] = typeFromHandle17

		System.Type typeFromHandle18 = System.Type.GetTypeFromHandle({'ESerifEP02_19_other_0004' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle18 == 0)
            goto INSN_1805FE46F
        endif

		if (typeFromHandle18 == 0)
            goto INSN_1805FEA5D
        endif

		INSN_1805FE46F:
		local0[18] = typeFromHandle18

		System.Type typeFromHandle19 = System.Type.GetTypeFromHandle({'ESerifEP02_19_Inter_O_0004' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle19 == 0)
            goto INSN_1805FE4AE
        endif

		if (typeFromHandle19 == 0)
            goto INSN_1805FEA83
        endif

		INSN_1805FE4AE:
		local0[19] = typeFromHandle19

		System.Type typeFromHandle20 = System.Type.GetTypeFromHandle({'ESerifEP02_19_Inter_T_0004' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle20 == 0)
            goto INSN_1805FE4ED
        endif

		if (typeFromHandle20 == 0)
            goto INSN_1805FEAA9
        endif

		INSN_1805FE4ED:
		local0[20] = typeFromHandle20

		System.Type typeFromHandle21 = System.Type.GetTypeFromHandle({'ESerifEP02_19_Sce_0004' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle21 == 0)
            goto INSN_1805FE52C
        endif

		if (typeFromHandle21 == 0)
            goto INSN_1805FEACF
        endif

		INSN_1805FE52C:
		local0[21] = typeFromHandle21

		System.Type typeFromHandle22 = System.Type.GetTypeFromHandle({'ESerifEP02_19_other_0005' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle22 == 0)
            goto INSN_1805FE56B
        endif

		if (typeFromHandle22 == 0)
            goto INSN_1805FEAF5
        endif

		INSN_1805FE56B:
		local0[22] = typeFromHandle22

		System.Type typeFromHandle23 = System.Type.GetTypeFromHandle({'ESerifEP02_19_Inter_O_0005' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle23 == 0)
            goto INSN_1805FE5AA
        endif

		if (typeFromHandle23 == 0)
            goto INSN_1805FEB1B
        endif

		INSN_1805FE5AA:
		local0[23] = typeFromHandle23

		System.Type typeFromHandle24 = System.Type.GetTypeFromHandle({'ESerifEP02_19_Inter_T_0005' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle24 == 0)
            goto INSN_1805FE5E9
        endif

		if (typeFromHandle24 == 0)
            goto INSN_1805FEB41
        endif

		INSN_1805FE5E9:
		local0[24] = typeFromHandle24

		System.Type typeFromHandle25 = System.Type.GetTypeFromHandle({'ESerifEP02_19_Inter_O_0006' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle25 == 0)
            goto INSN_1805FE628
        endif

		if (typeFromHandle25 == 0)
            goto INSN_1805FEB67
        endif

		INSN_1805FE628:
		local0[25] = typeFromHandle25

		System.Type typeFromHandle26 = System.Type.GetTypeFromHandle({'ESerifEP02_19_Inter_T_0006' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle26 == 0)
            goto INSN_1805FE667
        endif

		if (typeFromHandle26 == 0)
            goto INSN_1805FEB8D
        endif

		INSN_1805FE667:
		local0[26] = typeFromHandle26

		System.Type typeFromHandle27 = System.Type.GetTypeFromHandle({'ESerifEP02_19_Sce_0005' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle27 == 0)
            goto INSN_1805FE6A6
        endif

		if (typeFromHandle27 == 0)
            goto INSN_1805FEBB3
        endif

		INSN_1805FE6A6:
		local0[27] = typeFromHandle27

		System.Type typeFromHandle28 = System.Type.GetTypeFromHandle({'ESerifEP02_19_Inter_O_0007' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle28 == 0)
            goto INSN_1805FE6E5
        endif

		if (typeFromHandle28 == 0)
            goto INSN_1805FEBD9
        endif

		INSN_1805FE6E5:
		local0[28] = typeFromHandle28

		System.Type typeFromHandle29 = System.Type.GetTypeFromHandle({'ESerifEP02_19_Inter_T_0007' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle29 == 0)
            goto INSN_1805FE724
        endif

		if (typeFromHandle29 == 0)
            goto INSN_1805FEBFF
        endif

		INSN_1805FE724:
		local0[29] = typeFromHandle29

		System.Type typeFromHandle30 = System.Type.GetTypeFromHandle({'ESerifEP02_19_Inter_O_0008' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle30 == 0)
            goto INSN_1805FE763
        endif

		if (typeFromHandle30 == 0)
            goto INSN_1805FEC25
        endif

		INSN_1805FE763:
		local0[30] = typeFromHandle30

		System.Type typeFromHandle31 = System.Type.GetTypeFromHandle({'ESerifEP02_19_Inter_T_0008' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle31 == 0)
            goto INSN_1805FE7A2
        endif

		if (typeFromHandle31 == 0)
            goto INSN_1805FEC4B
        endif

		INSN_1805FE7A2:
		local0[31] = typeFromHandle31
		. = local0
		return
		throw new System.NullReferenceException()

		INSN_1805FE7D7:

		INSN_1805FE7FD:

		INSN_1805FE823:

		INSN_1805FE849:

		INSN_1805FE86F:

		INSN_1805FE895:

		INSN_1805FE8BB:

		INSN_1805FE8E1:

		INSN_1805FE907:

		INSN_1805FE92D:

		INSN_1805FE953:

		INSN_1805FE979:

		INSN_1805FE99F:

		INSN_1805FE9C5:

		INSN_1805FE9EB:

		INSN_1805FEA11:

		INSN_1805FEA37:

		INSN_1805FEA5D:

		INSN_1805FEA83:

		INSN_1805FEAA9:

		INSN_1805FEACF:

		INSN_1805FEAF5:

		INSN_1805FEB1B:

		INSN_1805FEB41:

		INSN_1805FEB67:

		INSN_1805FEB8D:

		INSN_1805FEBB3:

		INSN_1805FEBD9:

		INSN_1805FEBFF:

		INSN_1805FEC25:

		INSN_1805FEC4B:


Generated IL:
	Action of type Cpp2IL.Core.Analysis.Actions.x86.Important.RegToStaticFieldAction at (0x1805FE7C6) is corrupt (No further info) and cannot be created as IL. Aborting here.


