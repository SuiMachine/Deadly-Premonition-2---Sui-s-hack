Type: ListSaveData`1

Method: System.Void ListSaveData`1::.ctor():	Method Body (x86 ASM):
		0x180B18B30 mov [rsp+8],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RSP | 8 | None ||| N/A | N/A
		0x180B18B35 mov [rsp+10h],rsi		; DEBUG: {Memory}/None {Register}/RSI ||| RSP | 16 | None ||| N/A | N/A
		0x180B18B3A push rdi		; DEBUG: {Register}/RDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B18B3B sub rsp,20h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 32
		0x180B18B3F mov rax,[rdx+18h]		; DEBUG: {Register}/RAX {Memory}/None ||| RDX | 24 | None ||| N/A | N/A
		0x180B18B43 mov rdi,rdx		; DEBUG: {Register}/RDI {Register}/RDX ||| None | 0 | None ||| N/A | N/A
		0x180B18B46 mov rsi,rcx		; DEBUG: {Register}/RSI {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x180B18B49 mov r8,[rax+0C0h]		; DEBUG: {Register}/R8 {Memory}/None ||| RAX | 192 | None ||| N/A | N/A
		0x180B18B50 mov rbx,[r8]		; DEBUG: {Register}/RBX {Memory}/None ||| R8 | 0 | None ||| N/A | N/A
		0x180B18B53 test byte ptr [rbx+126h],1		; DEBUG: {Memory}/None {Immediate8}/None ||| RBX | 294 | None ||| N/A | 1
		0x180B18B5A jne short 0000000180B18B64h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B18B5C mov rcx,rbx		; DEBUG: {Register}/RCX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x180B18B5F call 00000001800F6690h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B18B64 mov rcx,rbx		; DEBUG: {Register}/RCX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x180B18B67 call 000000018013AC40h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B18B6C mov rcx,[rdi+18h]		; DEBUG: {Register}/RCX {Memory}/None ||| RDI | 24 | None ||| N/A | N/A
		0x180B18B70 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180B18B73 mov rdx,[rcx+0C0h]		; DEBUG: {Register}/RDX {Memory}/None ||| RCX | 192 | None ||| N/A | N/A
		0x180B18B7A mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180B18B7D mov r8,[rdx+8]		; DEBUG: {Register}/R8 {Memory}/None ||| RDX | 8 | None ||| N/A | N/A
		0x180B18B81 mov rdx,r8		; DEBUG: {Register}/RDX {Register}/R8 ||| None | 0 | None ||| N/A | N/A
		0x180B18B84 call qword ptr [r8]		; DEBUG: {Memory}/None {Register}/None ||| R8 | 0 | None ||| N/A | N/A
		0x180B18B87 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180B18B89 mov [rsi+18h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RSI | 24 | None ||| N/A | N/A
		0x180B18B8D mov rcx,rsi		; DEBUG: {Register}/RCX {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x180B18B90 mov rbx,[rsp+30h]		; DEBUG: {Register}/RBX {Memory}/None ||| RSP | 48 | None ||| N/A | N/A
		0x180B18B95 mov rsi,[rsp+38h]		; DEBUG: {Register}/RSI {Memory}/None ||| RSP | 56 | None ||| N/A | N/A
		0x180B18B9A add rsp,20h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 32
		0x180B18B9E pop rdi		; DEBUG: {Register}/RDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B18B9F jmp near ptr 0000000180207540h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B18BA4 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.Void ListSaveData`1::.ctor():
		End of function at 0x180B18BA5
		Absolute End is at 0x180B18BA5
		Identified Jump Destination addresses:

		0x180B18B3A: Saves the content of rdi to the stack
		0x180B18B3F: Reads the klass pointer representing the declaring type of this method (which is ListSaveData`1) and stores in new constant constant1 in register rax
		0x180B18B43: Copies {'il2cppMethodInfo' (type )} from rdx into rdi
		0x180B18B46: Copies {'this' (function parameter, type ListSaveData`1)} from rcx into rsi
		0x180B18B49: Reads RGCTX data for class ListSaveData`1 which has 8 entries/s and stores in new constant constant2 in register r8
		0x180B18B50: Reads the RGCTX data at index 0 in the array constant2, which has datapoint 46034 and is of type IL2CPP_RGCTX_DATA_CLASS (mapping to actual value System.Collections.Generic.List`1<T>), and stores the result in new constant constant3 in register rbx
		0x180B18B53: Compares "{il2cpp field on {'constant3' (constant value of type Mono.Cecil.TypeReference)}, offset 0x126}" and 1
		0x180B18B5A: Jumps to 0x180B18B64 if "{il2cpp field on {'constant3' (constant value of type Mono.Cecil.TypeReference)}, offset 0x126}" != 1

		0x180B18B5C: Copies {'constant3' (constant value of type Mono.Cecil.TypeReference)} from rbx into rcx
		0x180B18B64: Copies {'constant3' (constant value of type Mono.Cecil.TypeReference)} from rbx into rcx
		0x180B18B67: [!] Allocates an instance of type System.Collections.Generic.List`1<T> and stores it as list in rax.

		0x180B18B6C: Reads the klass pointer representing the declaring type of this method (which is ListSaveData`1) and stores in new constant constant6 in register rcx
		0x180B18B70: Copies {'list' (type System.Collections.Generic.List`1<T>)} from rax into rbx
		0x180B18B73: Reads RGCTX data for class ListSaveData`1 which has 8 entries/s and stores in new constant constant7 in register rdx
		0x180B18B7A: Copies {'list' (type System.Collections.Generic.List`1<T>)} from rax into rcx
		0x180B18B7D: Reads the RGCTX data at index 1 in the array constant7, which has datapoint 34269 and is of type IL2CPP_RGCTX_DATA_METHOD (mapping to actual value System.Void System.Collections.Generic.List`1<T>..ctor), and stores the result in new constant constant8 in register r8
		0x180B18B81: Copies {'constant8' (constant value of type LibCpp2IL.BinaryStructures.Il2CppMethodSpec)} from r8 into rdx
		0x180B18B84: [!] Calls managed method System.Void System.Collections.Generic.List`1<T>::.ctor() on instance {'list' (type System.Collections.Generic.List`1<T>)}

		0x180B18B89: [!] Sets the field  (Type ) on local {'this' (function parameter, type ListSaveData`1)} to the value stored in {'list' (type System.Collections.Generic.List`1<T>)}
		0x180B18B8D: Copies {'this' (function parameter, type ListSaveData`1)} from rsi into rcx
		0x180B18B90: Reads unknown value in stack, offset 48 (0x30) and stores the pointer in register rbx as new constant constant9
		0x180B18B95: Reads unknown value in stack, offset 56 (0x38) and stores the pointer in register rsi as new constant constant10
		0x180B18B9F: [!] Calls managed method System.Void System.Object::.ctor() on instance {'this' (function parameter, type ListSaveData`1)} ;  - Leftover parameters detected, but first few match.

		0x180B18B9F: [!] Returns from the function




	Generated Pseudocode:

	Declaring Type: ListSaveData`1
	System.Void .ctor()
		System.Collections.Generic.List`1<T> list = new System.Collections.Generic.List`1<T>()

		list..ctor()
		this. = list

		base..ctor()
		return


Generated IL:
	Action of type Cpp2IL.Core.Analysis.Actions.x86.Important.RegToFieldAction at (0x180B18B89) is corrupt (Instance or field is null) and cannot be created as IL. Aborting here.


Method: System.Boolean ListSaveData`1::WriteToBufferEntity(System.IO.MemoryStream):	Method Body (x86 ASM):
		0x180B178F0 push rsi		; DEBUG: {Register}/RSI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B178F2 push r14		; DEBUG: {Register}/R14 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B178F4 push r15		; DEBUG: {Register}/R15 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B178F6 sub rsp,50h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 80
		0x180B178FA cmp byte ptr [1818434FEh],0		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6467892478 | None ||| N/A | 0
		0x180B17901 mov r14,r8		; DEBUG: {Register}/R14 {Register}/R8 ||| None | 0 | None ||| N/A | N/A
		0x180B17904 mov r15,rdx		; DEBUG: {Register}/R15 {Register}/RDX ||| None | 0 | None ||| N/A | N/A
		0x180B17907 mov rsi,rcx		; DEBUG: {Register}/RSI {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x180B1790A jne short 0000000180B1791Eh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B1790C mov ecx,[1814B863Ch]		; DEBUG: {Register}/ECX {Memory}/None ||| RIP | 6464177724 | None ||| N/A | N/A
		0x180B17912 call 00000001800FEB90h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B17917 mov byte ptr [1818434FEh],1		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6467892478 | None ||| N/A | 1
		0x180B1791E mov rcx,[rsi+18h]		; DEBUG: {Register}/RCX {Memory}/None ||| RSI | 24 | None ||| N/A | N/A
		0x180B17922 test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x180B17925 je near ptr 0000000180B17B6Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B1792B mov rax,[r14+18h]		; DEBUG: {Register}/RAX {Memory}/None ||| R14 | 24 | None ||| N/A | N/A
		0x180B1792F mov [rsp+78h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RSP | 120 | None ||| N/A | N/A
		0x180B17934 mov rdx,[rax+0C0h]		; DEBUG: {Register}/RDX {Memory}/None ||| RAX | 192 | None ||| N/A | N/A
		0x180B1793B mov rax,[rdx+10h]		; DEBUG: {Register}/RAX {Memory}/None ||| RDX | 16 | None ||| N/A | N/A
		0x180B1793F mov rdx,rax		; DEBUG: {Register}/RDX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180B17942 call qword ptr [rax]		; DEBUG: {Memory}/None {Register}/None ||| RAX | 0 | None ||| N/A | N/A
		0x180B17944 mov [rsi+10h],eax		; DEBUG: {Memory}/None {Register}/EAX ||| RSI | 16 | None ||| N/A | N/A
		0x180B17947 mov rcx,[181884228h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468157992 | None ||| N/A | N/A
		0x180B1794E mov rbx,[18186AB40h]		; DEBUG: {Register}/RBX {Memory}/None ||| RIP | 6468053824 | None ||| N/A | N/A
		0x180B17955 test byte ptr [rcx+127h],2		; DEBUG: {Memory}/None {Immediate8}/None ||| RCX | 295 | None ||| N/A | 2
		0x180B1795C je short 0000000180B1796Ch		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B1795E cmp dword ptr [rcx+0D8h],0		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RCX | 216 | None ||| N/A | 0
		0x180B17965 jne short 0000000180B1796Ch		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B17967 call 000000018010EAF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B1796C xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180B1796E mov rcx,rbx		; DEBUG: {Register}/RCX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x180B17971 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B17976 mov rcx,[181884168h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468157800 | None ||| N/A | N/A
		0x180B1797D mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180B17980 test byte ptr [rcx+127h],2		; DEBUG: {Memory}/None {Immediate8}/None ||| RCX | 295 | None ||| N/A | 2
		0x180B17987 je short 0000000180B17997h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B17989 cmp dword ptr [rcx+0D8h],0		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RCX | 216 | None ||| N/A | 0
		0x180B17990 jne short 0000000180B17997h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B17992 call 000000018010EAF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B17997 mov [rsp+80h],rbp		; DEBUG: {Memory}/None {Register}/RBP ||| RSP | 128 | None ||| N/A | N/A
		0x180B1799F xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180B179A1 mov rcx,rbx		; DEBUG: {Register}/RCX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x180B179A4 mov [rsp+88h],rdi		; DEBUG: {Memory}/None {Register}/RDI ||| RSP | 136 | None ||| N/A | N/A
		0x180B179AC call 0000000180A67710h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B179B1 mov ecx,[rsi+10h]		; DEBUG: {Register}/ECX {Memory}/None ||| RSI | 16 | None ||| N/A | N/A
		0x180B179B4 lea rdx,[rsp+70h]		; DEBUG: {Register}/RDX {Memory}/None ||| RSP | 112 | None ||| N/A | N/A
		0x180B179B9 mov [rsp+70h],ecx		; DEBUG: {Memory}/None {Register}/ECX ||| RSP | 112 | None ||| N/A | N/A
		0x180B179BD mov ebx,eax		; DEBUG: {Register}/EBX {Register}/EAX ||| None | 0 | None ||| N/A | N/A
		0x180B179BF mov rcx,[1818841C8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468157896 | None ||| N/A | N/A
		0x180B179C6 call 000000018013A7F0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B179CB xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x180B179CE mov edx,ebx		; DEBUG: {Register}/EDX {Register}/EBX ||| None | 0 | None ||| N/A | N/A
		0x180B179D0 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180B179D3 call 000000018116F880h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B179D8 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180B179DB je near ptr 0000000180B17B6Bh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B179E1 cmp [rax+18h],ebx		; DEBUG: {Memory}/None {Register}/EBX ||| RAX | 24 | None ||| N/A | N/A
		0x180B179E4 jne near ptr 0000000180B17B6Bh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B179EA test r15,r15		; DEBUG: {Register}/R15 {Register}/R15 ||| None | 0 | None ||| N/A | N/A
		0x180B179ED je near ptr 0000000180B17B75h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B179F3 mov r10,[r15]		; DEBUG: {Register}/R10 {Memory}/None ||| R15 | 0 | None ||| N/A | N/A
		0x180B179F6 mov r9d,ebx		; DEBUG: {Register}/R9D {Register}/EBX ||| None | 0 | None ||| N/A | N/A
		0x180B179F9 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x180B179FC mov rdx,rax		; DEBUG: {Register}/RDX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180B179FF mov rcx,[r10+270h]		; DEBUG: {Register}/RCX {Memory}/None ||| R10 | 624 | None ||| N/A | N/A
		0x180B17A06 mov [rsp+20h],rcx		; DEBUG: {Memory}/None {Register}/RCX ||| RSP | 32 | None ||| N/A | N/A
		0x180B17A0B mov rcx,r15		; DEBUG: {Register}/RCX {Register}/R15 ||| None | 0 | None ||| N/A | N/A
		0x180B17A0E call qword ptr [r10+268h]		; DEBUG: {Memory}/None {Register}/None ||| R10 | 616 | None ||| N/A | N/A
		0x180B17A15 mov rax,[r14+18h]		; DEBUG: {Register}/RAX {Memory}/None ||| R14 | 24 | None ||| N/A | N/A
		0x180B17A19 mov rcx,[181884228h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468157992 | None ||| N/A | N/A
		0x180B17A20 mov rbx,[rax+0C0h]		; DEBUG: {Register}/RBX {Memory}/None ||| RAX | 192 | None ||| N/A | N/A
		0x180B17A27 test byte ptr [rcx+127h],2		; DEBUG: {Memory}/None {Immediate8}/None ||| RCX | 295 | None ||| N/A | 2
		0x180B17A2E mov rbx,[rbx+18h]		; DEBUG: {Register}/RBX {Memory}/None ||| RBX | 24 | None ||| N/A | N/A
		0x180B17A32 je short 0000000180B17A42h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B17A34 cmp dword ptr [rcx+0D8h],0		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RCX | 216 | None ||| N/A | 0
		0x180B17A3B jne short 0000000180B17A42h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B17A3D call 000000018010EAF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B17A42 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180B17A44 mov rcx,rbx		; DEBUG: {Register}/RCX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x180B17A47 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B17A4C mov rcx,[181884168h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468157800 | None ||| N/A | N/A
		0x180B17A53 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180B17A56 test byte ptr [rcx+127h],2		; DEBUG: {Memory}/None {Immediate8}/None ||| RCX | 295 | None ||| N/A | 2
		0x180B17A5D je short 0000000180B17A6Dh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B17A5F cmp dword ptr [rcx+0D8h],0		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RCX | 216 | None ||| N/A | 0
		0x180B17A66 jne short 0000000180B17A6Dh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B17A68 call 000000018010EAF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B17A6D xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180B17A6F mov rcx,rbx		; DEBUG: {Register}/RCX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x180B17A72 call 0000000180A67710h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B17A77 mov rcx,[rsi+18h]		; DEBUG: {Register}/RCX {Memory}/None ||| RSI | 24 | None ||| N/A | N/A
		0x180B17A7B xor ebx,ebx		; DEBUG: {Register}/EBX {Register}/EBX ||| None | 0 | None ||| N/A | N/A
		0x180B17A7D mov edi,eax		; DEBUG: {Register}/EDI {Register}/EAX ||| None | 0 | None ||| N/A | N/A
		0x180B17A7F mov ebp,ebx		; DEBUG: {Register}/EBP {Register}/EBX ||| None | 0 | None ||| N/A | N/A
		0x180B17A81 test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x180B17A84 je near ptr 0000000180B17B75h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B17A8A nop word ptr [rax+rax]		; DEBUG: {Memory}/None {Register}/None ||| RAX | 0 | RAX ||| N/A | N/A
		0x180B17A90 mov rdx,[r14+18h]		; DEBUG: {Register}/RDX {Memory}/None ||| R14 | 24 | None ||| N/A | N/A
		0x180B17A94 mov r8,[rdx+0C0h]		; DEBUG: {Register}/R8 {Memory}/None ||| RDX | 192 | None ||| N/A | N/A
		0x180B17A9B mov r9,[r8+10h]		; DEBUG: {Register}/R9 {Memory}/None ||| R8 | 16 | None ||| N/A | N/A
		0x180B17A9F mov rdx,r9		; DEBUG: {Register}/RDX {Register}/R9 ||| None | 0 | None ||| N/A | N/A
		0x180B17AA2 call qword ptr [r9]		; DEBUG: {Memory}/None {Register}/None ||| R9 | 0 | None ||| N/A | N/A
		0x180B17AA5 cmp ebp,eax		; DEBUG: {Register}/EBP {Register}/EAX ||| None | 0 | None ||| N/A | N/A
		0x180B17AA7 jge near ptr 0000000180B17B4Ah		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B17AAD mov rdx,[rsi+18h]		; DEBUG: {Register}/RDX {Memory}/None ||| RSI | 24 | None ||| N/A | N/A
		0x180B17AB1 test rdx,rdx		; DEBUG: {Register}/RDX {Register}/RDX ||| None | 0 | None ||| N/A | N/A
		0x180B17AB4 je near ptr 0000000180B17B7Dh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B17ABA mov rax,[r14+18h]		; DEBUG: {Register}/RAX {Memory}/None ||| R14 | 24 | None ||| N/A | N/A
		0x180B17ABE mov r8d,ebx		; DEBUG: {Register}/R8D {Register}/EBX ||| None | 0 | None ||| N/A | N/A
		0x180B17AC1 mov rcx,[rax+0C0h]		; DEBUG: {Register}/RCX {Memory}/None ||| RAX | 192 | None ||| N/A | N/A
		0x180B17AC8 mov rax,[rcx+20h]		; DEBUG: {Register}/RAX {Memory}/None ||| RCX | 32 | None ||| N/A | N/A
		0x180B17ACC lea rcx,[rsp+40h]		; DEBUG: {Register}/RCX {Memory}/None ||| RSP | 64 | None ||| N/A | N/A
		0x180B17AD1 mov r9,rax		; DEBUG: {Register}/R9 {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180B17AD4 call qword ptr [rax]		; DEBUG: {Memory}/None {Register}/None ||| RAX | 0 | None ||| N/A | N/A
		0x180B17AD6 movups xmm0,[rax]		; DEBUG: {Register}/XMM0 {Memory}/None ||| RAX | 0 | None ||| N/A | N/A
		0x180B17AD9 mov rax,[r14+18h]		; DEBUG: {Register}/RAX {Memory}/None ||| R14 | 24 | None ||| N/A | N/A
		0x180B17ADD movups [rsp+30h],xmm0		; DEBUG: {Memory}/None {Register}/XMM0 ||| RSP | 48 | None ||| N/A | N/A
		0x180B17AE2 mov rcx,[rax+0C0h]		; DEBUG: {Register}/RCX {Memory}/None ||| RAX | 192 | None ||| N/A | N/A
		0x180B17AE9 mov rbp,[rcx+28h]		; DEBUG: {Register}/RBP {Memory}/None ||| RCX | 40 | None ||| N/A | N/A
		0x180B17AED test byte ptr [rbp+126h],1		; DEBUG: {Memory}/None {Immediate8}/None ||| RBP | 294 | None ||| N/A | 1
		0x180B17AF4 jne short 0000000180B17AFEh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B17AF6 mov rcx,rbp		; DEBUG: {Register}/RCX {Register}/RBP ||| None | 0 | None ||| N/A | N/A
		0x180B17AF9 call 00000001800F6690h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B17AFE lea rdx,[rsp+30h]		; DEBUG: {Register}/RDX {Memory}/None ||| RSP | 48 | None ||| N/A | N/A
		0x180B17B03 mov rcx,rbp		; DEBUG: {Register}/RCX {Register}/RBP ||| None | 0 | None ||| N/A | N/A
		0x180B17B06 call 000000018013A7F0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B17B0B xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x180B17B0E mov edx,edi		; DEBUG: {Register}/EDX {Register}/EDI ||| None | 0 | None ||| N/A | N/A
		0x180B17B10 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180B17B13 call 000000018116F880h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B17B18 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180B17B1B je short 0000000180B17B6Bh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B17B1D cmp [rax+18h],edi		; DEBUG: {Memory}/None {Register}/EDI ||| RAX | 24 | None ||| N/A | N/A
		0x180B17B20 jne short 0000000180B17B6Bh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B17B22 xor r9d,r9d		; DEBUG: {Register}/R9D {Register}/R9D ||| None | 0 | None ||| N/A | N/A
		0x180B17B25 mov [rsp+20h],edi		; DEBUG: {Memory}/None {Register}/EDI ||| RSP | 32 | None ||| N/A | N/A
		0x180B17B29 mov r8,rax		; DEBUG: {Register}/R8 {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180B17B2C mov rdx,r15		; DEBUG: {Register}/RDX {Register}/R15 ||| None | 0 | None ||| N/A | N/A
		0x180B17B2F lea ecx,[r9+14h]		; DEBUG: {Register}/ECX {Memory}/None ||| R9 | 20 | None ||| N/A | N/A
		0x180B17B33 call 000000018005A5D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B17B38 mov rcx,[rsi+18h]		; DEBUG: {Register}/RCX {Memory}/None ||| RSI | 24 | None ||| N/A | N/A
		0x180B17B3C inc ebx		; DEBUG: {Register}/EBX {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B17B3E mov ebp,ebx		; DEBUG: {Register}/EBP {Register}/EBX ||| None | 0 | None ||| N/A | N/A
		0x180B17B40 test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x180B17B43 je short 0000000180B17B75h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B17B45 jmp near ptr 0000000180B17A90h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B17B4A mov al,1		; DEBUG: {Register}/AL {Immediate8}/None ||| None | 0 | None ||| N/A | 1
		0x180B17B4C mov rbp,[rsp+80h]		; DEBUG: {Register}/RBP {Memory}/None ||| RSP | 128 | None ||| N/A | N/A
		0x180B17B54 mov rdi,[rsp+88h]		; DEBUG: {Register}/RDI {Memory}/None ||| RSP | 136 | None ||| N/A | N/A
		0x180B17B5C mov rbx,[rsp+78h]		; DEBUG: {Register}/RBX {Memory}/None ||| RSP | 120 | None ||| N/A | N/A
		0x180B17B61 add rsp,50h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 80
		0x180B17B65 pop r15		; DEBUG: {Register}/R15 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B17B67 pop r14		; DEBUG: {Register}/R14 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B17B69 pop rsi		; DEBUG: {Register}/RSI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B17B6A ret		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B17B6B xor al,al		; DEBUG: {Register}/AL {Register}/AL ||| None | 0 | None ||| N/A | N/A
		0x180B17B6D jmp short 0000000180B17B4Ch		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B17B6F call 000000018012BDA0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B17B74 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.Boolean ListSaveData`1::WriteToBufferEntity(System.IO.MemoryStream):
		End of function at 0x180B17B75
		Absolute End is at 0x180B17B75
		Identified Jump Destination addresses:

		0x180B178F0: Saves the content of rsi to the stack
		0x180B178F2: Saves the content of r14 to the stack
		0x180B178F4: Saves the content of r15 to the stack
		0x180B178FA: Compares {Unknown Global at 0x1818434FE, first ten bytes are [4 0 249 74 4 0 184 62 103 1], or as chars " ùJ ¸>g"} and 0
		0x180B17901: Copies {'il2cppMethodInfo' (type )} from r8 into r14
		0x180B17904: Copies {'ms' (function parameter, type System.IO.MemoryStream)} from rdx into r15
		0x180B17907: Copies {'this' (function parameter, type ListSaveData`1)} from rcx into rsi
		0x180B1790A: Jumps to 0x180B1791E if {Unknown Global at 0x1818434FE, first ten bytes are [4 0 249 74 4 0 184 62 103 1], or as chars " ùJ ¸>g"} != 0

		0x180B1790C: Loads string "/>" into register rcx as constant {'constant3' (constant value of type Cpp2IL.Core.Analysis.ResultModels.Il2CppString)}
		0x180B17912: Attempts to load the il2cpp metadata for this method (method id 0) and init it cpp-side.

		0x180B1791E: [!] Reads field  from {'this' (function parameter, type ListSaveData`1)} and stores in a new local 

		0x180B17922: Compares {'constant3' (constant value of type Cpp2IL.Core.Analysis.ResultModels.Il2CppString)} and 0
		0x180B17925: Jumps to 0x180B17B6F (which throws a NRE) if constant3 equals 0. Implicitly present in managed code, so ignored here.
		0x180B1792B: Reads the klass pointer representing the declaring type of this method (which is ListSaveData`1) and stores in new constant constant5 in register rax
		0x180B17934: Reads RGCTX data for class ListSaveData`1 which has 8 entries/s and stores in new constant constant6 in register rdx
		0x180B1793B: Reads the RGCTX data at index 2 in the array constant6, which has datapoint 34270 and is of type IL2CPP_RGCTX_DATA_METHOD (mapping to actual value System.Int32 System.Collections.Generic.List`1<T>.get_Count), and stores the result in new constant constant7 in register rax
		0x180B1793F: Copies {'constant7' (constant value of type LibCpp2IL.BinaryStructures.Il2CppMethodSpec)} from rax into rdx
		0x180B17942: [!] Calls managed method System.Int32 System.Collections.Generic.List`1<T>::get_Count() on instance  and stores the result in {'count' (type System.Int32)}

		0x180B17944: [!] Sets the field Num (Type System.Int32) on local {'this' (function parameter, type ListSaveData`1)} to the value stored in {'count' (type System.Int32)}
		0x180B17947: Loads the type definition for managed type System.Type as a constant "Type" in rcx
		0x180B1794E: Loads the type definition for managed type System.Int32 as a constant "Int32" in rbx
		0x180B17955: Compares "{il2cpp field on {'Type' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" and 2
		0x180B1795C: Jumps to 0x180B1796C if "{il2cpp field on {'Type' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" equals 2

		0x180B1795E: Compares "{il2cpp field on {'Type' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" and 0
		0x180B17965: Jumps to 0x180B1796C if "{il2cpp field on {'Type' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" != 0

		0x180B17967: Calls the il2cpp cctor for the type System.Type
		0x180B1796E: Copies {'Int32' (constant value of type Mono.Cecil.TypeReference)} from rbx into rcx
		0x180B17971: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'Int32' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle' (type System.Type)}

		0x180B17976: Loads the type definition for managed type System.Runtime.InteropServices.Marshal as a constant "Marshal" in rcx
		0x180B1797D: Copies {'typeFromHandle' (type System.Type)} from rax into rbx
		0x180B17980: Compares "{il2cpp field on {'Marshal' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" and 2
		0x180B17987: Jumps to 0x180B17997 if "{il2cpp field on {'Marshal' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" equals 2

		0x180B17989: Compares "{il2cpp field on {'Marshal' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" and 0
		0x180B17990: Jumps to 0x180B17997 if "{il2cpp field on {'Marshal' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" != 0

		0x180B17992: Calls the il2cpp cctor for the type System.Runtime.InteropServices.Marshal
		0x180B179A1: Copies {'typeFromHandle' (type System.Type)} from rbx into rcx
		0x180B179AC: [!] Calls static managed method System.Int32 System.Runtime.InteropServices.Marshal::SizeOf(System.Type) with arguments [{'typeFromHandle' (type System.Type)}] and stores the result in {'int32' (type System.Int32)}

		0x180B179B1: [!] Reads field Num from {'this' (function parameter, type ListSaveData`1)} and stores in a new local {'int322' (type System.Int32)}

		0x180B179B4: Loads a pointer to stack offset 0x70 into register rdx as new constant constant19
		0x180B179B9: Moves int322 (type System.Int32) from register rcx to the stack at offset 112 (0x70)
		0x180B179BD: Copies {'int32' (type System.Int32)} from rax into rbx
		0x180B179BF: Loads the type definition for managed type System.Int32 as a constant "Int32" in rcx
		0x180B179C6: Boxes a cpp primitive value {'int322' (type System.Int32)} to managed type System.Int32 and stores the result in new local  in register rax.
		0x180B179CE: Copies {'int32' (type System.Int32)} from rbx into rdx
		0x180B179D0: Copies {'int32' (type System.Int32)} from rax into rcx
		0x180B179D3: [!] Calls static managed method System.Byte[] Utility::StructureToBytes(System.Object,System.Int32) with arguments [{'int32' (type System.Int32)}, {'int32' (type System.Int32)}] and stores the result in {'byteArray' (type System.Byte[])}

		0x180B179D8: [!] Compares {'byteArray' (type System.Byte[])} and 0
		0x180B179DB: Jumps to 0x180B17B6B (which is an if statement's body) if byteArray equals 0 ;  - Increasing indentation - is standard if, unimportant is False

		0x180B179E1: [!] Compares {Property System.Int32 System.Array::Length() on {'byteArray' (type System.Byte[])}} and {'int32' (type System.Int32)}
		0x180B179E4: Jumps to 0x180B17B6B (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'byteArray' (type System.Byte[])}} != {'int32' (type System.Int32)}. Implicitly present in managed code, so ignored here. ;  - Skipping if statement, is array type check
		0x180B179EA: [!] Compares {'ms' (function parameter, type System.IO.MemoryStream)} and 0
		0x180B179ED: Jumps to 0x180B17B75 (which throws a NRE) if ms equals 0. Implicitly present in managed code, so ignored here.
		0x180B179F3: Loads the class pointer from ms into a constant constant23 in register r10
		0x180B179F6: Copies {'int32' (type System.Int32)} from rbx into r9
		0x180B179F9: Clears register r8, yielding zero-local {'local10' (type System.Int32)}
		0x180B179FC: Copies {'byteArray' (type System.Byte[])} from rax into rdx
		0x180B179FF: Loads the pointer to the implementation of virtual function System.Void System.IO.MemoryStream::Write(System.Byte[],System.Int32,System.Int32) specific to System.IO.MemoryStream from the class pointer in r10, slot 20 (from memory offset 624) and stores in constant constant24
		0x180B17A06: Moves System.IO.MemoryStream.Write (type Mono.Cecil.MethodDefinition) from register rcx to the stack at offset 32 (0x20) as a new local local11
		0x180B17A0B: Copies {'ms' (function parameter, type System.IO.MemoryStream)} from r15 into rcx
		0x180B17A0E: [!] Calls managed method System.Void System.IO.MemoryStream::Write(System.Byte[],System.Int32,System.Int32) on instance {'ms' (function parameter, type System.IO.MemoryStream)} with arguments [{'byteArray' (type System.Byte[])}, {'local10' (type System.Int32)}, {'int32' (type System.Int32)}]

		0x180B17A15: Reads the klass pointer representing the declaring type of this method (which is ListSaveData`1) and stores in new constant constant25 in register rax
		0x180B17A19: Loads the type definition for managed type System.Type as a constant "Type" in rcx
		0x180B17A20: Reads RGCTX data for class ListSaveData`1 which has 8 entries/s and stores in new constant constant27 in register rbx
		0x180B17A27: Compares "{il2cpp field on {'Type' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" and 2
		0x180B17A2E: Reads the RGCTX data at index 3 in the array constant27, which has datapoint 46033 and is of type IL2CPP_RGCTX_DATA_TYPE (mapping to actual value ), and stores the result in new constant constant30 in register rbx
		0x180B17A32: Jumps to 0x180B17A42 if "{il2cpp field on {'Type' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" equals 2

		0x180B17A34: Compares "{il2cpp field on {'Type' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" and 0
		0x180B17A3B: Jumps to 0x180B17A42 if "{il2cpp field on {'Type' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" != 0

		0x180B17A3D: Calls the il2cpp cctor for the type System.Type
		0x180B17A44: Copies {'constant30' (constant value of type LibCpp2IL.BinaryStructures.Il2CppRGCTXDefinition)} from rbx into rcx
		0x180B17A47: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) and stores the result in {'typeFromHandle2' (type System.Type)} ;  - parameters do not match, but there is only one function at this address.

		0x180B17A4C: Loads the type definition for managed type System.Runtime.InteropServices.Marshal as a constant "Marshal" in rcx
		0x180B17A53: Copies {'typeFromHandle2' (type System.Type)} from rax into rbx
		0x180B17A56: Compares "{il2cpp field on {'Marshal' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" and 2
		0x180B17A5D: Jumps to 0x180B17A6D if "{il2cpp field on {'Marshal' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" equals 2

		0x180B17A5F: Compares "{il2cpp field on {'Marshal' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" and 0
		0x180B17A66: Jumps to 0x180B17A6D if "{il2cpp field on {'Marshal' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" != 0

		0x180B17A68: Calls the il2cpp cctor for the type System.Runtime.InteropServices.Marshal
		0x180B17A6F: Copies {'typeFromHandle2' (type System.Type)} from rbx into rcx
		0x180B17A72: [!] Calls static managed method System.Int32 System.Runtime.InteropServices.Marshal::SizeOf(System.Type) with arguments [{'typeFromHandle2' (type System.Type)}] and stores the result in {'int323' (type System.Int32)}

		0x180B17A77: [!] Reads field  from {'this' (function parameter, type ListSaveData`1)} and stores in a new local 

		0x180B17A7B: Clears register rbx, yielding zero-local {'local16' (type System.Int32)}
		0x180B17A7D: Copies {'int323' (type System.Int32)} from rax into rdi
		0x180B17A7F: Copies {'local16' (type System.Int32)} from rbx into rbp
		0x180B17A81: [!] Compares {'typeFromHandle2' (type System.Type)} and 0
		0x180B17A84: Jumps to 0x180B17B75 (which throws a NRE) if typeFromHandle2 equals 0. Implicitly present in managed code, so ignored here.

		Potential Loop Start (0x180B17A90):
		0x180B17A90: Reads the klass pointer representing the declaring type of this method (which is ListSaveData`1) and stores in new constant constant39 in register rdx
		0x180B17A94: Reads RGCTX data for class ListSaveData`1 which has 8 entries/s and stores in new constant constant40 in register r8
		0x180B17A9B: Reads the RGCTX data at index 2 in the array constant40, which has datapoint 34270 and is of type IL2CPP_RGCTX_DATA_METHOD (mapping to actual value System.Int32 System.Collections.Generic.List`1<T>.get_Count), and stores the result in new constant constant41 in register r9
		0x180B17A9F: Copies {'constant41' (constant value of type LibCpp2IL.BinaryStructures.Il2CppMethodSpec)} from r9 into rdx
		0x180B17AA2: [!] Calls managed method System.Int32 System.Collections.Generic.List`1<T>::get_Count() on instance {'typeFromHandle2' (type System.Type)} and stores the result in {'count2' (type System.Int32)}

		0x180B17AA5: [!] Compares {'local16' (type System.Int32)} and {'count2' (type System.Int32)}
		0x180B17AA7: Jumps to 0x180B17B4A (which throws a NRE) if {'local16' (type System.Int32)} is greater than or equal to {'count2' (type System.Int32)}. Implicitly present in managed code, so ignored here. ;  - Skipping if statement, is array type check
		0x180B17AAD: [!] Reads field  from {'this' (function parameter, type ListSaveData`1)} and stores in a new local 

		0x180B17AB1: [!] Compares {'constant41' (constant value of type LibCpp2IL.BinaryStructures.Il2CppMethodSpec)} and 0
		0x180B17AB4: Jumps to 0x180B17B7D (which throws a NRE) if constant41 equals 0. Implicitly present in managed code, so ignored here.
		0x180B17ABA: Reads the klass pointer representing the declaring type of this method (which is ListSaveData`1) and stores in new constant constant43 in register rax
		0x180B17ABE: Copies {'local16' (type System.Int32)} from rbx into r8
		0x180B17AC1: Reads RGCTX data for class ListSaveData`1 which has 8 entries/s and stores in new constant constant44 in register rcx
		0x180B17AC8: Reads the RGCTX data at index 4 in the array constant44, which has datapoint 34271 and is of type IL2CPP_RGCTX_DATA_METHOD (mapping to actual value T System.Collections.Generic.List`1<T>.get_Item), and stores the result in new constant constant45 in register rax
		0x180B17ACC: Loads a pointer to stack offset 0x40 into register rcx as new constant constant46
		0x180B17AD1: Copies {'constant45' (constant value of type LibCpp2IL.BinaryStructures.Il2CppMethodSpec)} from rax into r9
		0x180B17AD4: [!] Calls managed method T System.Collections.Generic.List`1<T>::get_Item(System.Int32) on instance  and stores the result in {'item' (type T)} ;  - Parameter mismatch!

		0x180B17AD6: Loads the class pointer from item into a constant constant47 in register xmm0
		0x180B17AD9: Reads the klass pointer representing the declaring type of this method (which is ListSaveData`1) and stores in new constant constant48 in register rax
		0x180B17ADD: Moves constant47 (type Cpp2IL.Core.Analysis.Il2CppClassIdentifier) from register xmm0 to the stack at offset 48 (0x30) as a new local local19
		0x180B17AE2: Reads RGCTX data for class ListSaveData`1 which has 8 entries/s and stores in new constant constant49 in register rcx
		0x180B17AE9: Reads the RGCTX data at index 5 in the array constant49, which has datapoint 46033 and is of type IL2CPP_RGCTX_DATA_CLASS (mapping to actual value T), and stores the result in new constant constant50 in register rbp
		0x180B17AED: Compares "{il2cpp field on {'constant50' (constant value of type Mono.Cecil.TypeReference)}, offset 0x126}" and 1
		0x180B17AF4: Jumps to 0x180B17AFE if "{il2cpp field on {'constant50' (constant value of type Mono.Cecil.TypeReference)}, offset 0x126}" != 1

		0x180B17AF6: Copies {'constant50' (constant value of type Mono.Cecil.TypeReference)} from rbp into rcx
		0x180B17AFE: Loads a pointer to stack offset 0x30 into register rdx as new constant constant53
		0x180B17B03: Copies {'constant50' (constant value of type Mono.Cecil.TypeReference)} from rbp into rcx
		0x180B17B06: Boxes a cpp primitive value {'local19' (type )} to managed type T and stores the result in new local  in register rax.
		0x180B17B0E: Copies {'int323' (type System.Int32)} from rdi into rdx
		0x180B17B10: Copies {'constant48' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} from rax into rcx
		0x180B17B13: [!] Calls static managed method System.Byte[] Utility::StructureToBytes(System.Object,System.Int32) and stores the result in {'byteArray2' (type System.Byte[])} ;  - parameters do not match, but there is only one function at this address.

		0x180B17B18: [!] Compares {'byteArray2' (type System.Byte[])} and 0
		0x180B17B1B: Jumps to 0x180B17B6B (which is an if statement's body) if byteArray2 equals 0 ;  - Increasing indentation - is standard if, unimportant is False

		0x180B17B1D: [!] Compares {Property System.Int32 System.Array::Length() on {'byteArray2' (type System.Byte[])}} and {'int323' (type System.Int32)}
		0x180B17B20: Jumps to 0x180B17B6B (which is an if statement's body) if {Property System.Int32 System.Array::Length() on {'byteArray2' (type System.Byte[])}} != {'int323' (type System.Int32)} ;  - Increasing indentation - is standard if, unimportant is False

		0x180B17B25: Moves int323 (type System.Int32) from register rdi to the stack at offset 32 (0x20)
		0x180B17B29: Copies {'byteArray2' (type System.Byte[])} from rax into r8
		0x180B17B2C: Copies {'ms' (function parameter, type System.IO.MemoryStream)} from r15 into rdx
		0x180B17B2F: [!] Loads the constant value 20 into the register rcx as constant constant55 using an LEA instruction
		0x180B17B38: [!] Reads field  from {'this' (function parameter, type ListSaveData`1)} and stores in a new local 

		0x180B17B3C: [!] Adds 1 to the value {'local16' (type System.Int32)}, stored in rbx
		0x180B17B3E: Copies {'local16' (type System.Int32)} from rbx into rbp
		0x180B17B40: [!] Compares 20 and 0
		0x180B17B43: Jumps to 0x180B17B75 (which throws a NRE) if 20 equals 0. Implicitly present in managed code, so ignored here.
		0x180B17B45: Jumps to 0x180B17A90 - which is still in this function, but further up. Probably indicative that this is a loop.
		0x180B17B4A: [!] Writes the constant 0x1 into operand True (type UInt64) in register rax

		Potential Loop Start (0x180B17B4C):
		0x180B17B4C: Reads unknown value in stack, offset 128 (0x80) and stores the pointer in register rbp as new constant constant58
		0x180B17B54: Reads unknown value in stack, offset 136 (0x88) and stores the pointer in register rdi as new constant constant59
		0x180B17B5C: Reads unknown value in stack, offset 120 (0x78) and stores the pointer in register rbx as new constant constant60
		0x180B17B6A: [!] Returns True from the function

		0x180B17B6D: Jumps to 0x180B17B4C - which is still in this function, but further up. Probably indicative that this is a loop.
		0x180B17B6F: [!] Constructs and throws an exception of kind System.NullReferenceException




	Generated Pseudocode:

	Declaring Type: ListSaveData`1
	System.Boolean WriteToBufferEntity(System.IO.MemoryStream ms)
		  = this.

		System.Int32 count = .get_Count()
		this.Num = count

		System.Type typeFromHandle = System.Type.GetTypeFromHandle({'Int32' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		System.Int32 int32 = System.Runtime.InteropServices.Marshal.SizeOf(typeFromHandle) //(Type t)
		System.Int32 int322 = this.Num

		System.Byte[] byteArray = Utility.StructureToBytes(int32, int32) //(Object obj, Int32 size)

		if (byteArray != 0)
		    ulong local10 = 0

		    ms.Write(byteArray, local10, int32) //(Byte[] buffer, Int32 offset, Int32 count)

		    System.Type typeFromHandle2 = System.Type.GetTypeFromHandle()

		    System.Int32 int323 = System.Runtime.InteropServices.Marshal.SizeOf(typeFromHandle2) //(Type t)
		      = this.
		    ulong local16 = 0

		    System.Int32 count2 = typeFromHandle2.get_Count()
		      = this.

		    T item = .get_Item()

		    System.Byte[] byteArray2 = Utility.StructureToBytes()

		    if (byteArray2 != 0)

		        if (byteArray2.Length == int323)
		            System.Int32 20 = 20
		              = this.
		            local16 += 1
		            return True
		        endif
                
		        throw new System.NullReferenceException()


Generated IL:
	IL Generation Skipped due to invalid local item of type T
	

Method: System.Int32 ListSaveData`1::ReadFromBufferEntity(System.Byte[],System.Int32):	Method Body (x86 ASM):
		0x180B14F40 mov [rsp+18h],r8d		; DEBUG: {Memory}/None {Register}/R8D ||| RSP | 24 | None ||| N/A | N/A
		0x180B14F45 mov [rsp+10h],rdx		; DEBUG: {Memory}/None {Register}/RDX ||| RSP | 16 | None ||| N/A | N/A
		0x180B14F4A push rbx		; DEBUG: {Register}/RBX {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B14F4B push rbp		; DEBUG: {Register}/RBP {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B14F4C push rsi		; DEBUG: {Register}/RSI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B14F4D push rdi		; DEBUG: {Register}/RDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B14F4E push r12		; DEBUG: {Register}/R12 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B14F50 push r13		; DEBUG: {Register}/R13 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B14F52 push r15		; DEBUG: {Register}/R15 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B14F54 sub rsp,40h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 64
		0x180B14F58 cmp byte ptr [1818434FFh],0		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6467892479 | None ||| N/A | 0
		0x180B14F5F mov r15,r9		; DEBUG: {Register}/R15 {Register}/R9 ||| None | 0 | None ||| N/A | N/A
		0x180B14F62 mov edi,r8d		; DEBUG: {Register}/EDI {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x180B14F65 mov rsi,rdx		; DEBUG: {Register}/RSI {Register}/RDX ||| None | 0 | None ||| N/A | N/A
		0x180B14F68 mov r13,rcx		; DEBUG: {Register}/R13 {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x180B14F6B jne short 0000000180B14F7Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B14F6D mov ecx,[1814B8570h]		; DEBUG: {Register}/ECX {Memory}/None ||| RIP | 6464177520 | None ||| N/A | N/A
		0x180B14F73 call 00000001800FEB90h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B14F78 mov byte ptr [1818434FFh],1		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6467892479 | None ||| N/A | 1
		0x180B14F7F mov rcx,[181884228h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468157992 | None ||| N/A | N/A
		0x180B14F86 mov rbx,[18186AB40h]		; DEBUG: {Register}/RBX {Memory}/None ||| RIP | 6468053824 | None ||| N/A | N/A
		0x180B14F8D test byte ptr [rcx+127h],2		; DEBUG: {Memory}/None {Immediate8}/None ||| RCX | 295 | None ||| N/A | 2
		0x180B14F94 je short 0000000180B14FA4h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B14F96 cmp dword ptr [rcx+0D8h],0		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RCX | 216 | None ||| N/A | 0
		0x180B14F9D jne short 0000000180B14FA4h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B14F9F call 000000018010EAF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B14FA4 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180B14FA6 mov rcx,rbx		; DEBUG: {Register}/RCX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x180B14FA9 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B14FAE mov rcx,[181884168h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468157800 | None ||| N/A | N/A
		0x180B14FB5 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180B14FB8 test byte ptr [rcx+127h],2		; DEBUG: {Memory}/None {Immediate8}/None ||| RCX | 295 | None ||| N/A | 2
		0x180B14FBF je short 0000000180B14FCFh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B14FC1 cmp dword ptr [rcx+0D8h],0		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RCX | 216 | None ||| N/A | 0
		0x180B14FC8 jne short 0000000180B14FCFh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B14FCA call 000000018010EAF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B14FCF xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180B14FD1 mov [rsp+80h],r14		; DEBUG: {Memory}/None {Register}/R14 ||| RSP | 128 | None ||| N/A | N/A
		0x180B14FD9 mov rcx,rbx		; DEBUG: {Register}/RCX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x180B14FDC call 0000000180A67710h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B14FE1 mov rcx,[18186AB40h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468053824 | None ||| N/A | N/A
		0x180B14FE8 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180B14FEA mov r12d,eax		; DEBUG: {Register}/R12D {Register}/EAX ||| None | 0 | None ||| N/A | N/A
		0x180B14FED call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B14FF2 xor ebp,ebp		; DEBUG: {Register}/EBP {Register}/EBP ||| None | 0 | None ||| N/A | N/A
		0x180B14FF4 mov r9,rax		; DEBUG: {Register}/R9 {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180B14FF7 mov r8d,r12d		; DEBUG: {Register}/R8D {Register}/R12D ||| None | 0 | None ||| N/A | N/A
		0x180B14FFA mov [rsp+20h],rbp		; DEBUG: {Memory}/None {Register}/RBP ||| RSP | 32 | None ||| N/A | N/A
		0x180B14FFF mov edx,edi		; DEBUG: {Register}/EDX {Register}/EDI ||| None | 0 | None ||| N/A | N/A
		0x180B15001 mov rcx,rsi		; DEBUG: {Register}/RCX {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x180B15004 call 000000018116F6C0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B15009 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180B1500C je near ptr 0000000180B1523Ah		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B15012 mov r8,[1818841C8h]		; DEBUG: {Register}/R8 {Memory}/None ||| RIP | 6468157896 | None ||| N/A | N/A
		0x180B15019 mov rdx,[rax]		; DEBUG: {Register}/RDX {Memory}/None ||| RAX | 0 | None ||| N/A | N/A
		0x180B1501C mov rcx,[r8+40h]		; DEBUG: {Register}/RCX {Memory}/None ||| R8 | 64 | None ||| N/A | N/A
		0x180B15020 cmp [rdx+40h],rcx		; DEBUG: {Memory}/None {Register}/RCX ||| RDX | 64 | None ||| N/A | N/A
		0x180B15024 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180B15027 jne near ptr 0000000180B152B3h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B1502D call 000000018013ADF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B15032 mov ecx,[rax]		; DEBUG: {Register}/ECX {Memory}/None ||| RAX | 0 | None ||| N/A | N/A
		0x180B15034 mov [r13+10h],ecx		; DEBUG: {Memory}/None {Register}/ECX ||| R13 | 16 | None ||| N/A | N/A
		0x180B15038 test ecx,ecx		; DEBUG: {Register}/ECX {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x180B1503A js near ptr 0000000180B1523Ah		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B15040 mov rax,[r15+18h]		; DEBUG: {Register}/RAX {Memory}/None ||| R15 | 24 | None ||| N/A | N/A
		0x180B15044 mov rcx,[181884228h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468157992 | None ||| N/A | N/A
		0x180B1504B mov rbx,[rax+0C0h]		; DEBUG: {Register}/RBX {Memory}/None ||| RAX | 192 | None ||| N/A | N/A
		0x180B15052 test byte ptr [rcx+127h],2		; DEBUG: {Memory}/None {Immediate8}/None ||| RCX | 295 | None ||| N/A | 2
		0x180B15059 mov rbx,[rbx+18h]		; DEBUG: {Register}/RBX {Memory}/None ||| RBX | 24 | None ||| N/A | N/A
		0x180B1505D je short 0000000180B1506Ch		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B1505F cmp [rcx+0D8h],ebp		; DEBUG: {Memory}/None {Register}/EBP ||| RCX | 216 | None ||| N/A | N/A
		0x180B15065 jne short 0000000180B1506Ch		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B15067 call 000000018010EAF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B1506C xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180B1506E mov rcx,rbx		; DEBUG: {Register}/RCX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x180B15071 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B15076 mov rcx,[181884168h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468157800 | None ||| N/A | N/A
		0x180B1507D mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180B15080 test byte ptr [rcx+127h],2		; DEBUG: {Memory}/None {Immediate8}/None ||| RCX | 295 | None ||| N/A | 2
		0x180B15087 je short 0000000180B15096h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B15089 cmp [rcx+0D8h],ebp		; DEBUG: {Memory}/None {Register}/EBP ||| RCX | 216 | None ||| N/A | N/A
		0x180B1508F jne short 0000000180B15096h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B15091 call 000000018010EAF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B15096 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180B15098 mov rcx,rbx		; DEBUG: {Register}/RCX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x180B1509B call 0000000180A67710h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B150A0 mov edx,[r13+10h]		; DEBUG: {Register}/EDX {Memory}/None ||| R13 | 16 | None ||| N/A | N/A
		0x180B150A4 mov r14d,eax		; DEBUG: {Register}/R14D {Register}/EAX ||| None | 0 | None ||| N/A | N/A
		0x180B150A7 mov rcx,[1818843E8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468158440 | None ||| N/A | N/A
		0x180B150AE call 0000000180141320h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B150B3 mov rdi,rax		; DEBUG: {Register}/RDI {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180B150B6 mov esi,ebp		; DEBUG: {Register}/ESI {Register}/EBP ||| None | 0 | None ||| N/A | N/A
		0x180B150B8 mov edx,ebp		; DEBUG: {Register}/EDX {Register}/EBP ||| None | 0 | None ||| N/A | N/A
		0x180B150BA test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180B150BD je near ptr 0000000180B152ABh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B150C3 mov ecx,[rax+18h]		; DEBUG: {Register}/ECX {Memory}/None ||| RAX | 24 | None ||| N/A | N/A
		0x180B150C6 cmp edx,ecx		; DEBUG: {Register}/EDX {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x180B150C8 jge near ptr 0000000180B15177h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B150CE mov rax,[r15+18h]		; DEBUG: {Register}/RAX {Memory}/None ||| R15 | 24 | None ||| N/A | N/A
		0x180B150D2 mov rcx,[181884228h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468157992 | None ||| N/A | N/A
		0x180B150D9 mov rbx,[rax+0C0h]		; DEBUG: {Register}/RBX {Memory}/None ||| RAX | 192 | None ||| N/A | N/A
		0x180B150E0 test byte ptr [rcx+127h],2		; DEBUG: {Memory}/None {Immediate8}/None ||| RCX | 295 | None ||| N/A | 2
		0x180B150E7 mov rbx,[rbx+18h]		; DEBUG: {Register}/RBX {Memory}/None ||| RBX | 24 | None ||| N/A | N/A
		0x180B150EB je short 0000000180B150FAh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B150ED cmp [rcx+0D8h],ebp		; DEBUG: {Memory}/None {Register}/EBP ||| RCX | 216 | None ||| N/A | N/A
		0x180B150F3 jne short 0000000180B150FAh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B150F5 call 000000018010EAF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B150FA xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180B150FC mov rcx,rbx		; DEBUG: {Register}/RCX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x180B150FF call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B15104 mov edx,[rsp+90h]		; DEBUG: {Register}/EDX {Memory}/None ||| RSP | 144 | None ||| N/A | N/A
		0x180B1510B mov r9,rax		; DEBUG: {Register}/R9 {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180B1510E mov rcx,[rsp+88h]		; DEBUG: {Register}/RCX {Memory}/None ||| RSP | 136 | None ||| N/A | N/A
		0x180B15116 add edx,r12d		; DEBUG: {Register}/EDX {Register}/R12D ||| None | 0 | None ||| N/A | N/A
		0x180B15119 mov r8d,r14d		; DEBUG: {Register}/R8D {Register}/R14D ||| None | 0 | None ||| N/A | N/A
		0x180B1511C mov [rsp+20h],rbp		; DEBUG: {Memory}/None {Register}/RBP ||| RSP | 32 | None ||| N/A | N/A
		0x180B15121 call 000000018116F6C0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B15126 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180B15129 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180B1512C je short 0000000180B15146h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B1512E mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x180B15131 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180B15134 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x180B15138 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B1513D test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180B15140 je near ptr 0000000180B15256h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B15146 cmp esi,[rdi+18h]		; DEBUG: {Register}/ESI {Memory}/None ||| RDI | 24 | None ||| N/A | N/A
		0x180B15149 jae near ptr 0000000180B1527Ch		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B1514F movsxd rax,esi		; DEBUG: {Register}/RAX {Register}/ESI ||| None | 0 | None ||| N/A | N/A
		0x180B15152 mov [rdi+rax*8+20h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 32 | RAX ||| N/A | N/A
		0x180B15157 mov ecx,[rdi+18h]		; DEBUG: {Register}/ECX {Memory}/None ||| RDI | 24 | None ||| N/A | N/A
		0x180B1515A cmp esi,ecx		; DEBUG: {Register}/ESI {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x180B1515C jae near ptr 0000000180B15269h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B15162 test rbx,rbx		; DEBUG: {Register}/RBX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x180B15165 je near ptr 0000000180B1523Ah		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B1516B add r12d,r14d		; DEBUG: {Register}/R12D {Register}/R14D ||| None | 0 | None ||| N/A | N/A
		0x180B1516E inc esi		; DEBUG: {Register}/ESI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B15170 mov edx,esi		; DEBUG: {Register}/EDX {Register}/ESI ||| None | 0 | None ||| N/A | N/A
		0x180B15172 jmp near ptr 0000000180B150C6h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B15177 mov rcx,[r13+18h]		; DEBUG: {Register}/RCX {Memory}/None ||| R13 | 24 | None ||| N/A | N/A
		0x180B1517B test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x180B1517E je near ptr 0000000180B152ABh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B15184 mov rax,[r15+18h]		; DEBUG: {Register}/RAX {Memory}/None ||| R15 | 24 | None ||| N/A | N/A
		0x180B15188 mov rdx,[rax+0C0h]		; DEBUG: {Register}/RDX {Memory}/None ||| RAX | 192 | None ||| N/A | N/A
		0x180B1518F mov rax,[rdx+30h]		; DEBUG: {Register}/RAX {Memory}/None ||| RDX | 48 | None ||| N/A | N/A
		0x180B15193 mov rdx,rax		; DEBUG: {Register}/RDX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180B15196 call qword ptr [rax]		; DEBUG: {Memory}/None {Register}/None ||| RAX | 0 | None ||| N/A | N/A
		0x180B15198 mov ecx,ebp		; DEBUG: {Register}/ECX {Register}/EBP ||| None | 0 | None ||| N/A | N/A
		0x180B1519A nop word ptr [rax+rax]		; DEBUG: {Memory}/None {Register}/None ||| RAX | 0 | RAX ||| N/A | N/A
		0x180B151A0 mov eax,[rdi+18h]		; DEBUG: {Register}/EAX {Memory}/None ||| RDI | 24 | None ||| N/A | N/A
		0x180B151A3 cmp ecx,eax		; DEBUG: {Register}/ECX {Register}/EAX ||| None | 0 | None ||| N/A | N/A
		0x180B151A5 jge near ptr 0000000180B15235h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B151AB cmp ebp,eax		; DEBUG: {Register}/EBP {Register}/EAX ||| None | 0 | None ||| N/A | N/A
		0x180B151AD jae near ptr 0000000180B15298h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B151B3 mov r14,[r13+18h]		; DEBUG: {Register}/R14 {Memory}/None ||| R13 | 24 | None ||| N/A | N/A
		0x180B151B7 movsxd rax,ebp		; DEBUG: {Register}/RAX {Register}/EBP ||| None | 0 | None ||| N/A | N/A
		0x180B151BA mov rsi,[rdi+rax*8+20h]		; DEBUG: {Register}/RSI {Memory}/None ||| RDI | 32 | RAX ||| N/A | N/A
		0x180B151BF test r14,r14		; DEBUG: {Register}/R14 {Register}/R14 ||| None | 0 | None ||| N/A | N/A
		0x180B151C2 je near ptr 0000000180B152ABh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B151C8 mov rax,[r15+18h]		; DEBUG: {Register}/RAX {Memory}/None ||| R15 | 24 | None ||| N/A | N/A
		0x180B151CC mov rcx,[rax+0C0h]		; DEBUG: {Register}/RCX {Memory}/None ||| RAX | 192 | None ||| N/A | N/A
		0x180B151D3 mov rbx,[rcx+28h]		; DEBUG: {Register}/RBX {Memory}/None ||| RCX | 40 | None ||| N/A | N/A
		0x180B151D7 test byte ptr [rbx+126h],1		; DEBUG: {Memory}/None {Immediate8}/None ||| RBX | 294 | None ||| N/A | 1
		0x180B151DE jne short 0000000180B151E8h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B151E0 mov rcx,rbx		; DEBUG: {Register}/RCX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x180B151E3 call 00000001800F6690h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B151E8 test rsi,rsi		; DEBUG: {Register}/RSI {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x180B151EB je near ptr 0000000180B152ABh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B151F1 mov rdx,[rsi]		; DEBUG: {Register}/RDX {Memory}/None ||| RSI | 0 | None ||| N/A | N/A
		0x180B151F4 mov rcx,rsi		; DEBUG: {Register}/RCX {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x180B151F7 mov rax,[rbx+40h]		; DEBUG: {Register}/RAX {Memory}/None ||| RBX | 64 | None ||| N/A | N/A
		0x180B151FB cmp [rdx+40h],rax		; DEBUG: {Memory}/None {Register}/RAX ||| RDX | 64 | None ||| N/A | N/A
		0x180B151FF jne near ptr 0000000180B1528Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B15205 call 000000018013ADF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B1520A mov rcx,r14		; DEBUG: {Register}/RCX {Register}/R14 ||| None | 0 | None ||| N/A | N/A
		0x180B1520D movups xmm0,[rax]		; DEBUG: {Register}/XMM0 {Memory}/None ||| RAX | 0 | None ||| N/A | N/A
		0x180B15210 mov rax,[r15+18h]		; DEBUG: {Register}/RAX {Memory}/None ||| R15 | 24 | None ||| N/A | N/A
		0x180B15214 movaps [rsp+30h],xmm0		; DEBUG: {Memory}/None {Register}/XMM0 ||| RSP | 48 | None ||| N/A | N/A
		0x180B15219 mov rdx,[rax+0C0h]		; DEBUG: {Register}/RDX {Memory}/None ||| RAX | 192 | None ||| N/A | N/A
		0x180B15220 mov rax,[rdx+38h]		; DEBUG: {Register}/RAX {Memory}/None ||| RDX | 56 | None ||| N/A | N/A
		0x180B15224 lea rdx,[rsp+30h]		; DEBUG: {Register}/RDX {Memory}/None ||| RSP | 48 | None ||| N/A | N/A
		0x180B15229 mov r8,rax		; DEBUG: {Register}/R8 {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180B1522C call qword ptr [rax]		; DEBUG: {Memory}/None {Register}/None ||| RAX | 0 | None ||| N/A | N/A
		0x180B1522E inc ebp		; DEBUG: {Register}/EBP {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B15230 jmp near ptr 0000000180B15198h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B15235 mov eax,r12d		; DEBUG: {Register}/EAX {Register}/R12D ||| None | 0 | None ||| N/A | N/A
		0x180B15238 jmp short 0000000180B1523Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B1523A mov eax,0FFFFFFFFh		; DEBUG: {Register}/EAX {Immediate32}/None ||| None | 0 | None ||| N/A | 4294967295
		0x180B1523F mov r14,[rsp+80h]		; DEBUG: {Register}/R14 {Memory}/None ||| RSP | 128 | None ||| N/A | N/A
		0x180B15247 add rsp,40h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 64
		0x180B1524B pop r15		; DEBUG: {Register}/R15 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B1524D pop r13		; DEBUG: {Register}/R13 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B1524F pop r12		; DEBUG: {Register}/R12 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B15251 pop rdi		; DEBUG: {Register}/RDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B15252 pop rsi		; DEBUG: {Register}/RSI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B15253 pop rbp		; DEBUG: {Register}/RBP {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B15254 pop rbx		; DEBUG: {Register}/RBX {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B15255 ret		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B15256 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B1525B mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180B1525E xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x180B15261 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180B15263 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B15268 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.Int32 ListSaveData`1::ReadFromBufferEntity(System.Byte[],System.Int32):
		End of function at 0x180B15269
		Absolute End is at 0x180B15269
		Identified Jump Destination addresses:
			0x180B1523F
		0x180B14F40: Moves offset (type System.Int32) from register r8 to the stack at offset 24 (0x18)
		0x180B14F45: Moves buffer (type System.Byte[]) from register rdx to the stack at offset 16 (0x10)
		0x180B14F4A: Saves the content of rbx to the stack
		0x180B14F4B: Saves the content of rbp to the stack
		0x180B14F4C: Saves the content of rsi to the stack
		0x180B14F4D: Saves the content of rdi to the stack
		0x180B14F4E: Saves the content of r12 to the stack
		0x180B14F50: Saves the content of r13 to the stack
		0x180B14F52: Saves the content of r15 to the stack
		0x180B14F58: Compares {Unknown Global at 0x1818434FF, first ten bytes are [0 249 74 4 0 184 62 103 1 0], or as chars " ùJ ¸>g "} and 0
		0x180B14F5F: Copies {'il2cppMethodInfo' (type )} from r9 into r15
		0x180B14F62: Copies {'offset' (function parameter, type System.Int32)} from r8 into rdi
		0x180B14F65: Copies {'buffer' (function parameter, type System.Byte[])} from rdx into rsi
		0x180B14F68: Copies {'this' (function parameter, type ListSaveData`1)} from rcx into r13
		0x180B14F6B: Jumps to 0x180B14F7F if {Unknown Global at 0x1818434FF, first ten bytes are [0 249 74 4 0 184 62 103 1 0], or as chars " ùJ ¸>g "} != 0

		0x180B14F6D: Loads string "">" into register rcx as constant {'constant3' (constant value of type Cpp2IL.Core.Analysis.ResultModels.Il2CppString)}
		0x180B14F73: Attempts to load the il2cpp metadata for this method (method id 0) and init it cpp-side.

		0x180B14F7F: Loads the type definition for managed type System.Type as a constant "Type" in rcx
		0x180B14F86: Loads the type definition for managed type System.Int32 as a constant "Int32" in rbx
		0x180B14F8D: Compares "{il2cpp field on {'Type' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" and 2
		0x180B14F94: Jumps to 0x180B14FA4 if "{il2cpp field on {'Type' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" equals 2

		0x180B14F96: Compares "{il2cpp field on {'Type' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" and 0
		0x180B14F9D: Jumps to 0x180B14FA4 if "{il2cpp field on {'Type' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" != 0

		0x180B14F9F: Calls the il2cpp cctor for the type System.Type
		0x180B14FA6: Copies {'Int32' (constant value of type Mono.Cecil.TypeReference)} from rbx into rcx
		0x180B14FA9: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'Int32' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle' (type System.Type)}

		0x180B14FAE: Loads the type definition for managed type System.Runtime.InteropServices.Marshal as a constant "Marshal" in rcx
		0x180B14FB5: Copies {'typeFromHandle' (type System.Type)} from rax into rbx
		0x180B14FB8: Compares "{il2cpp field on {'Marshal' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" and 2
		0x180B14FBF: Jumps to 0x180B14FCF if "{il2cpp field on {'Marshal' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" equals 2

		0x180B14FC1: Compares "{il2cpp field on {'Marshal' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" and 0
		0x180B14FC8: Jumps to 0x180B14FCF if "{il2cpp field on {'Marshal' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" != 0

		0x180B14FCA: Calls the il2cpp cctor for the type System.Runtime.InteropServices.Marshal
		0x180B14FD9: Copies {'typeFromHandle' (type System.Type)} from rbx into rcx
		0x180B14FDC: [!] Calls static managed method System.Int32 System.Runtime.InteropServices.Marshal::SizeOf(System.Type) with arguments [{'typeFromHandle' (type System.Type)}] and stores the result in {'int32' (type System.Int32)}

		0x180B14FE1: Loads the type definition for managed type System.Int32 as a constant "Int32" in rcx
		0x180B14FEA: Copies {'int32' (type System.Int32)} from rax into r12
		0x180B14FED: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'Int32' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle2' (type System.Type)}

		0x180B14FF2: Clears register rbp, yielding zero-local {'local9' (type System.Int32)}
		0x180B14FF4: Copies {'typeFromHandle2' (type System.Type)} from rax into r9
		0x180B14FF7: Copies {'int32' (type System.Int32)} from r12 into r8
		0x180B14FFA: Moves local9 (type System.Int32) from register rbp to the stack at offset 32 (0x20)
		0x180B14FFF: Copies {'offset' (function parameter, type System.Int32)} from rdi into rdx
		0x180B15001: Copies {'buffer' (function parameter, type System.Byte[])} from rsi into rcx
		0x180B15004: [!] Calls static managed method System.Object Utility::BytesToStructure(System.Byte[],System.Int32,System.Int32,System.Type) with arguments [{'buffer' (function parameter, type System.Byte[])}, {'offset' (function parameter, type System.Int32)}, {'offset' (function parameter, type System.Int32)}, {'typeFromHandle2' (type System.Type)}] and stores the result in {'object' (type System.Object)}

		0x180B15009: [!] Compares {'object' (type System.Object)} and 0
		0x180B1500C: Jumps to 0x180B1523A if object equals 0 ;  - Increasing indentation - is if-else, unimportant is False

		0x180B15012: Loads the type definition for managed type System.Int32 as a constant "Int32" in r8
		0x180B15019: Loads the class pointer from object into a constant constant18 in register rdx
		0x180B15020: Compares "{il2cpp field on {'constant18' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)}, offset 0x40}" and {'buffer' (function parameter, type System.Byte[])}
		0x180B15024: Copies {'object' (type System.Object)} from rax into rcx
		0x180B15027: Jumps to 0x180B152B3 if "{il2cpp field on {'constant18' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)}, offset 0x40}" != {'buffer' (function parameter, type System.Byte[])} ;  - This is probably a goto, jumping to 0x180B152B3 which is after end of current block @ 0x180B1523A (started at 0x180B15012)

		0x180B15032: Dereference and moves local object to local11
		0x180B15034: [!] Sets the field Num (Type System.Int32) on local {'this' (function parameter, type ListSaveData`1)} to the value stored in {'local11' (type System.Object)}
		0x180B15038: [!] Compares {'local11' (type System.Object)} and 0
		0x180B15040: Reads the klass pointer representing the declaring type of this method (which is ListSaveData`1) and stores in new constant constant22 in register rax
		0x180B15044: Loads the type definition for managed type System.Type as a constant "Type" in rcx
		0x180B1504B: Reads RGCTX data for class ListSaveData`1 which has 8 entries/s and stores in new constant constant24 in register rbx
		0x180B15052: Compares "{il2cpp field on {'Type' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" and 2
		0x180B15059: Reads the RGCTX data at index 3 in the array constant24, which has datapoint 46033 and is of type IL2CPP_RGCTX_DATA_TYPE (mapping to actual value ), and stores the result in new constant constant27 in register rbx
		0x180B1505D: Jumps to 0x180B1506C if "{il2cpp field on {'Type' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" equals 2

		0x180B1505F: Compares "{il2cpp field on {'Type' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" and {'local9' (type System.Int32)}
		0x180B15065: Jumps to 0x180B1506C if "{il2cpp field on {'Type' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" != {'local9' (type System.Int32)}

		0x180B15067: Calls the il2cpp cctor for the type System.Type
		0x180B1506E: Copies {'constant27' (constant value of type LibCpp2IL.BinaryStructures.Il2CppRGCTXDefinition)} from rbx into rcx
		0x180B15071: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) and stores the result in {'typeFromHandle3' (type System.Type)} ;  - parameters do not match, but there is only one function at this address.

		0x180B15076: Loads the type definition for managed type System.Runtime.InteropServices.Marshal as a constant "Marshal" in rcx
		0x180B1507D: Copies {'typeFromHandle3' (type System.Type)} from rax into rbx
		0x180B15080: Compares "{il2cpp field on {'Marshal' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" and 2
		0x180B15087: Jumps to 0x180B15096 if "{il2cpp field on {'Marshal' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" equals 2

		0x180B15089: Compares "{il2cpp field on {'Marshal' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" and {'local9' (type System.Int32)}
		0x180B1508F: Jumps to 0x180B15096 if "{il2cpp field on {'Marshal' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" != {'local9' (type System.Int32)}

		0x180B15091: Calls the il2cpp cctor for the type System.Runtime.InteropServices.Marshal
		0x180B15098: Copies {'typeFromHandle3' (type System.Type)} from rbx into rcx
		0x180B1509B: [!] Calls static managed method System.Int32 System.Runtime.InteropServices.Marshal::SizeOf(System.Type) with arguments [{'typeFromHandle3' (type System.Type)}] and stores the result in {'int322' (type System.Int32)}

		0x180B150A0: [!] Reads field Num from {'this' (function parameter, type ListSaveData`1)} and stores in a new local {'int323' (type System.Int32)}

		0x180B150A4: Copies {'int322' (type System.Int32)} from rax into r14
		0x180B150A7: Loads the type definition for managed type System.Object[] as a constant "Object[]" in rcx
		0x180B150AE: [!] Allocates an array of type System.Object[] of size int323 and stores the result as local17 in register rax

		0x180B150B3: Copies {'local17' (type System.Object[])} from rax into rdi
		0x180B150B6: Copies {'local9' (type System.Int32)} from rbp into rsi
		0x180B150B8: Copies {'local9' (type System.Int32)} from rbp into rdx
		0x180B150BA: [!] Compares {'local17' (type System.Object[])} and 0
		0x180B150BD: Jumps to 0x180B152AB (which throws a NRE) if local17 equals 0. Implicitly present in managed code, so ignored here.
		0x180B150C3: Reads the length of the array "{'local17' (type System.Object[])}" and stores it in new local {'length' (type System.Int32)} in register rcx

		Potential Loop Start (0x180B150C6):
		0x180B150C6: [!] Compares {'local9' (type System.Int32)} and {'length' (type System.Int32)}
		0x180B150C8: Jumps to 0x180B15177 if {'local9' (type System.Int32)} is greater than or equal to {'length' (type System.Int32)} ;  - Increasing indentation - is while loop, unimportant is False

		0x180B150CE: Reads the klass pointer representing the declaring type of this method (which is ListSaveData`1) and stores in new constant constant35 in register rax
		0x180B150D2: Loads the type definition for managed type System.Type as a constant "Type" in rcx
		0x180B150D9: Reads RGCTX data for class ListSaveData`1 which has 8 entries/s and stores in new constant constant37 in register rbx
		0x180B150E0: Compares "{il2cpp field on {'Type' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" and 2
		0x180B150E7: Reads the RGCTX data at index 3 in the array constant37, which has datapoint 46033 and is of type IL2CPP_RGCTX_DATA_TYPE (mapping to actual value ), and stores the result in new constant constant40 in register rbx
		0x180B150EB: Jumps to 0x180B150FA if "{il2cpp field on {'Type' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" equals 2

		0x180B150ED: Compares "{il2cpp field on {'Type' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" and {'local9' (type System.Int32)}
		0x180B150F3: Jumps to 0x180B150FA if "{il2cpp field on {'Type' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" != {'local9' (type System.Int32)}

		0x180B150F5: Calls the il2cpp cctor for the type System.Type
		0x180B150FC: Copies {'constant40' (constant value of type LibCpp2IL.BinaryStructures.Il2CppRGCTXDefinition)} from rbx into rcx
		0x180B150FF: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) and stores the result in {'typeFromHandle4' (type System.Type)} ;  - parameters do not match, but there is only one function at this address.

		0x180B15104: Reads unknown value in stack, offset 144 (0x90) and stores the pointer in register rdx as new constant constant42
		0x180B1510B: Copies {'typeFromHandle4' (type System.Type)} from rax into r9
		0x180B1510E: Reads unknown value in stack, offset 136 (0x88) and stores the pointer in register rcx as new constant constant43
		0x180B15116: [!] Adds  and {'int32' (type System.Int32)} and stores the result in 
		0x180B15119: Copies {'int322' (type System.Int32)} from r14 into r8
		0x180B1511C: Moves local9 (type System.Int32) from register rbp to the stack at offset 32 (0x20)
		0x180B15121: [!] Calls static managed method System.Object Utility::BytesToStructure(System.Byte[],System.Int32,System.Int32,System.Type) and stores the result in {'object2' (type System.Object)} ;  - parameters do not match, but there is only one function at this address.

		0x180B15126: Copies {'object2' (type System.Object)} from rax into rbx
		0x180B15129: [!] Compares {'object2' (type System.Object)} and 0
		0x180B1512C: Jumps to 0x180B15146 (which is an if statement's body) if object2 equals 0 ;  - Increasing indentation - is standard if, unimportant is False

		0x180B1512E: Loads the class pointer from local17 into a constant constant45 in register rdx
		0x180B15131: Copies {'object2' (type System.Object)} from rax into rcx
		0x180B15134: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Object', parentType=null] and stores in register rdx
		0x180B1513D: [!] Compares {'object2' (type System.Object)} and 0
		0x180B15140: Jumps to 0x180B15256 if object2 equals 0 ;  - This is probably a goto, jumping to 0x180B15256 which is after end of current block @ 0x180B15146 (started at 0x180B1512E)

		0x180B15146: [!] Compares {'local9' (type System.Int32)} and {Property System.Int32 System.Array::Length() on {'local17' (type System.Object[])}}
		0x180B15149: Jumps to 0x180B1527C (which throws a NRE) if {'local9' (type System.Int32)} is greater than or equal to {Property System.Int32 System.Array::Length() on {'local17' (type System.Object[])}}. Implicitly present in managed code, so ignored here.
		0x180B1514F: Copies {'local9' (type System.Int32)} from rsi into rax
		0x180B15152: Sets the value at offset 0 in array local17 to {'object2' (type System.Object)}
		0x180B15157: Reads the length of the array "{'local17' (type System.Object[])}" and stores it in new local {'length2' (type System.Int32)} in register rcx
		0x180B1515A: [!] Compares {'local9' (type System.Int32)} and {'length2' (type System.Int32)}
		0x180B1515C: Jumps to 0x180B15269 (which throws a NRE) if {'local9' (type System.Int32)} is greater than or equal to {'length2' (type System.Int32)}. Implicitly present in managed code, so ignored here.
		0x180B15162: [!] Compares {'object2' (type System.Object)} and 0
		0x180B15165: Jumps to 0x180B1523A if object2 equals 0 ;  - This is probably a goto, jumping to 0x180B1523A which is after end of current block @ 0x180B15146 (started at 0x180B1512E)

		0x180B1516B: [!] Adds {'int32' (type System.Int32)} and {'int322' (type System.Int32)} and stores the result in {'int32' (type System.Int32)}
		0x180B1516E: [!] Adds 1 to the value {'local9' (type System.Int32)}, stored in rsi
		0x180B15170: Copies {'local9' (type System.Int32)} from rsi into rdx
		0x180B15172: Jumps to 0x180B150C6 - which is still in this function, but further up. Probably indicative that this is a loop.
		0x180B15177: [!] Reads field  from {'this' (function parameter, type ListSaveData`1)} and stores in a new local 

		0x180B1517B: [!] Compares {'length2' (type System.Int32)} and 0
		0x180B1517E: Jumps to 0x180B152AB (which throws a NRE) if length2 equals 0. Implicitly present in managed code, so ignored here.
		0x180B15184: Reads the klass pointer representing the declaring type of this method (which is ListSaveData`1) and stores in new constant constant49 in register rax
		0x180B15188: Reads RGCTX data for class ListSaveData`1 which has 8 entries/s and stores in new constant constant50 in register rdx
		0x180B1518F: Reads the RGCTX data at index 6 in the array constant50, which has datapoint 34272 and is of type IL2CPP_RGCTX_DATA_METHOD (mapping to actual value System.Void System.Collections.Generic.List`1<T>.Clear), and stores the result in new constant constant51 in register rax
		0x180B15193: Copies {'constant51' (constant value of type LibCpp2IL.BinaryStructures.Il2CppMethodSpec)} from rax into rdx
		0x180B15196: [!] Calls managed method System.Void System.Collections.Generic.List`1<T>::Clear() on instance {'length2' (type System.Int32)}


		Potential Loop Start (0x180B15198):
		0x180B15198: Copies {'local9' (type System.Int32)} from rbp into rcx
		0x180B151A0: Reads the length of the array "{'local17' (type System.Object[])}" and stores it in new local {'length3' (type System.Int32)} in register rax
		0x180B151A3: [!] Compares {'local9' (type System.Int32)} and {'length3' (type System.Int32)}
		0x180B151A5: Jumps to 0x180B15235 if {'local9' (type System.Int32)} is greater than or equal to {'length3' (type System.Int32)} ;  - This is probably a goto, jumping to 0x180B15235 which is after end of current block @ 0x180B15146 (started at 0x180B1512E)

		0x180B151AB: [!] Compares {'local9' (type System.Int32)} and {'length3' (type System.Int32)}
		0x180B151AD: Jumps to 0x180B15298 (which throws a NRE) if {'local9' (type System.Int32)} is greater than or equal to {'length3' (type System.Int32)}. Implicitly present in managed code, so ignored here.
		0x180B151B3: [!] Reads field  from {'this' (function parameter, type ListSaveData`1)} and stores in a new local 

		0x180B151B7: Copies {'local9' (type System.Int32)} from rbp into rax
		0x180B151BA: Copies the element in the array {'local17' (type System.Object[])} at the index specified by {'local9' (type System.Int32)} into new local {'object3' (type System.Object)}
		0x180B151BF: [!] Compares {'int322' (type System.Int32)} and 0
		0x180B151C2: Jumps to 0x180B152AB (which throws a NRE) if int322 equals 0. Implicitly present in managed code, so ignored here.
		0x180B151C8: Reads the klass pointer representing the declaring type of this method (which is ListSaveData`1) and stores in new constant constant53 in register rax
		0x180B151CC: Reads RGCTX data for class ListSaveData`1 which has 8 entries/s and stores in new constant constant54 in register rcx
		0x180B151D3: Reads the RGCTX data at index 5 in the array constant54, which has datapoint 46033 and is of type IL2CPP_RGCTX_DATA_CLASS (mapping to actual value T), and stores the result in new constant constant55 in register rbx
		0x180B151D7: Compares "{il2cpp field on {'constant55' (constant value of type Mono.Cecil.TypeReference)}, offset 0x126}" and 1
		0x180B151DE: Jumps to 0x180B151E8 if "{il2cpp field on {'constant55' (constant value of type Mono.Cecil.TypeReference)}, offset 0x126}" != 1 ;  - This is probably a goto, jumping to 0x180B151E8 which is after end of current block @ 0x180B15146 (started at 0x180B1512E)

		0x180B151E0: Copies {'constant55' (constant value of type Mono.Cecil.TypeReference)} from rbx into rcx
		0x180B151E8: [!] Compares {'object3' (type System.Object)} and 0
		0x180B151EB: Jumps to 0x180B152AB (which throws a NRE) if object3 equals 0. Implicitly present in managed code, so ignored here.
		0x180B151F1: Loads the class pointer from object3 into a constant constant59 in register rdx
		0x180B151F4: Copies {'object3' (type System.Object)} from rsi into rcx
		0x180B151FB: Compares "{il2cpp field on {'constant59' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)}, offset 0x40}" and {'constant53' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)}
		0x180B151FF: Jumps to 0x180B1528F if "{il2cpp field on {'constant59' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)}, offset 0x40}" != {'constant53' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} ;  - This is probably a goto, jumping to 0x180B1528F which is after end of current block @ 0x180B15146 (started at 0x180B1512E)

		0x180B1520A: Copies {'int322' (type System.Int32)} from r14 into rcx
		0x180B1520D: Dereference and moves local object3 to local25
		0x180B15210: Reads the klass pointer representing the declaring type of this method (which is ListSaveData`1) and stores in new constant constant62 in register rax
		0x180B15214: Moves local25 (type System.Object) from register xmm0 to the stack at offset 48 (0x30)
		0x180B15219: Reads RGCTX data for class ListSaveData`1 which has 8 entries/s and stores in new constant constant63 in register rdx
		0x180B15220: Reads the RGCTX data at index 7 in the array constant63, which has datapoint 34273 and is of type IL2CPP_RGCTX_DATA_METHOD (mapping to actual value System.Void System.Collections.Generic.List`1<T>.Add), and stores the result in new constant constant64 in register rax
		0x180B15224: Loads a pointer to stack offset 0x30 into register rdx as new constant constant65
		0x180B15229: Copies {'constant64' (constant value of type LibCpp2IL.BinaryStructures.Il2CppMethodSpec)} from rax into r8
		0x180B1522C: [!] Calls managed method System.Void System.Collections.Generic.List`1<T>::Add(T) on instance {'int322' (type System.Int32)} ;  - Parameter mismatch!

		0x180B1522E: [!] Adds 1 to the value {'local9' (type System.Int32)}, stored in rbp
		0x180B15230: Jumps to 0x180B15198 - which is still in this function, but further up. Probably indicative that this is a loop.
		0x180B15235: Copies {'int32' (type System.Int32)} from r12 into rax
		0x180B15238: Jumps to 0x180B1523F (which is an function-local jump destination)

		0x180B1523A: [!] Writes the constant 0xFFFFFFFF into operand {'local26' (type System.UInt32)} (type UInt64) in register rax

		End Of If-Else Block (at 0x180B1523F) where the else started at 0x180B1523A
		0x180B1523F: Reads unknown value in stack, offset 128 (0x80) and stores the pointer in register r14 as new constant constant66
		0x180B15255: [!] Returns {'local26' (type System.UInt32)} from the function

		0x180B1525B: Copies {'local26' (type System.UInt32)} from rax into rcx



	Generated Pseudocode:

	Declaring Type: ListSaveData`1
	System.Int32 ReadFromBufferEntity(System.Byte[] buffer, System.Int32 offset)

		System.Type typeFromHandle = System.Type.GetTypeFromHandle({'Int32' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		System.Int32 int32 = System.Runtime.InteropServices.Marshal.SizeOf(typeFromHandle) //(Type t)

		System.Type typeFromHandle2 = System.Type.GetTypeFromHandle({'Int32' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)
		ulong local9 = 0
		offset = int32

		System.Object object = Utility.BytesToStructure(buffer, offset, offset, typeFromHandle2) //(Byte[] bytes, Int32 offset, Int32 size, Type structType)

		if (object != 0)
		    local11 = object
		    this.Num = local11

		    System.Type typeFromHandle3 = System.Type.GetTypeFromHandle()

		    System.Int32 int322 = System.Runtime.InteropServices.Marshal.SizeOf(typeFromHandle3) //(Type t)
		    System.Int32 int323 = this.Num
		    System.Object[] local17 = new System.Object[int323]
		    System.Int32 length = local17.Length

		    while (local9 < length)

		        System.Type typeFromHandle4 = System.Type.GetTypeFromHandle()
		         += int32

		        System.Object object2 = Utility.BytesToStructure()

		        if (object2 != 0)

		            if (object2 == 0)
                        goto INSN_180B15256
                    endif
		        endif
                
		        local17[0] = object2
		        System.Int32 length2 = local17.Length

		        if (object2 == 0)
                    goto INSN_180B1523A
                endif
		        int32 += int322
		        local9 += 1
		    endwhile
            
		      = this.

		    length2.Clear()
		    System.Int32 length3 = local17.Length

		    if (local9 >= length3)
                goto INSN_180B15235
            endif
		      = this.
		    System.Object object3 = local17[local9]
		    local25 = object3

		    int322.Add()
		    local9 += 1

		    INSN_180B15235:
		else
		    System.Int64 local26 = 0xFFFFFFFF
		endif
        
		return local26

		INSN_180B15256:


Generated IL:
	Action of type Cpp2IL.Core.Analysis.Actions.x86.RegToRegMoveAction at (0x180B14FF7) is corrupt (Local being overwritten, {'offset' (function parameter, type System.Int32)} has been stripped or is a parameter) and cannot be created as IL. Aborting here.


