Type: EnemyNoDamageCollider

Method: System.Void EnemyNoDamageCollider::.ctor():	Method Body (x86 ASM):
		0x1805E3210 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805E3212 jmp near ptr 00000001802B8E10h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E3217 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.Void EnemyNoDamageCollider::.ctor():
		End of function at 0x1805E3218
		Absolute End is at 0x1805E3218
		Identified Jump Destination addresses:

		0x1805E3212: [!] Calls managed method System.Void CharaDamage::.ctor() on instance {'this' (function parameter, type EnemyNoDamageCollider)}

		0x1805E3212: [!] Returns from the function




	Generated Pseudocode:

	Declaring Type: EnemyNoDamageCollider
	System.Void .ctor()

		base..ctor()
		return


Generated IL:
	IL_0000: ldarg.0
	IL_0001: call System.Void CharaDamage::.ctor()
	IL_0006: ret
	

Method: System.Void EnemyNoDamageCollider::Damage(System.Int32,UnityEngine.Vector3,System.Boolean,System.Boolean,System.Single,EBadStatus,System.Int32,EAttribute,UnityEngine.Vector3,ESEKind,ESEKind):	Method Body (x86 ASM):
		0x1805E2FC0 mov [rsp+18h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RSP | 24 | None ||| N/A | N/A
		0x1805E2FC5 mov [rsp+20h],rbp		; DEBUG: {Memory}/None {Register}/RBP ||| RSP | 32 | None ||| N/A | N/A
		0x1805E2FCA push rsi		; DEBUG: {Register}/RSI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805E2FCB sub rsp,70h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 112
		0x1805E2FCF cmp byte ptr [18183EDF1h],0		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6467874289 | None ||| N/A | 0
		0x1805E2FD6 mov rbp,r8		; DEBUG: {Register}/RBP {Register}/R8 ||| None | 0 | None ||| N/A | N/A
		0x1805E2FD9 movaps [rsp+60h],xmm6		; DEBUG: {Memory}/None {Register}/XMM6 ||| RSP | 96 | None ||| N/A | N/A
		0x1805E2FDE mov esi,edx		; DEBUG: {Register}/ESI {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805E2FE0 mov rbx,rcx		; DEBUG: {Register}/RBX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x1805E2FE3 jne short 00000001805E2FF7h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E2FE5 mov ecx,[1814C4E6Ch]		; DEBUG: {Register}/ECX {Memory}/None ||| RIP | 6464228972 | None ||| N/A | N/A
		0x1805E2FEB call 00000001800FEB90h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E2FF0 mov byte ptr [18183EDF1h],1		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6467874289 | None ||| N/A | 1
		0x1805E2FF7 mov rax,[181899C78h]		; DEBUG: {Register}/RAX {Memory}/None ||| RIP | 6468246648 | None ||| N/A | N/A
		0x1805E2FFE test byte ptr [rax+127h],2		; DEBUG: {Memory}/None {Immediate8}/None ||| RAX | 295 | None ||| N/A | 2
		0x1805E3005 je short 00000001805E301Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E3007 cmp dword ptr [rax+0D8h],0		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RAX | 216 | None ||| N/A | 0
		0x1805E300E jne short 00000001805E301Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E3010 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805E3013 call 000000018010EAF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E3018 mov rax,[181899C78h]		; DEBUG: {Register}/RAX {Memory}/None ||| RIP | 6468246648 | None ||| N/A | N/A
		0x1805E301F mov rax,[rax+0B8h]		; DEBUG: {Register}/RAX {Memory}/None ||| RAX | 184 | None ||| N/A | N/A
		0x1805E3026 mov rcx,[rbx+20h]		; DEBUG: {Register}/RCX {Memory}/None ||| RBX | 32 | None ||| N/A | N/A
		0x1805E302A movss xmm6,dword ptr [rax+374h]		; DEBUG: {Register}/XMM6 {Memory}/None ||| RAX | 884 | None ||| N/A | N/A
		0x1805E3032 test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x1805E3035 je near ptr 00000001805E31FBh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E303B mov rdx,[18186CF78h]		; DEBUG: {Register}/RDX {Memory}/None ||| RIP | 6468063096 | None ||| N/A | N/A
		0x1805E3042 mov [rsp+80h],rdi		; DEBUG: {Memory}/None {Register}/RDI ||| RSP | 128 | None ||| N/A | N/A
		0x1805E304A call 000000018090CFC0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E304F mov rdi,rax		; DEBUG: {Register}/RDI {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805E3052 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805E3055 je near ptr 00000001805E31A7h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E305B mov r11,[rax]		; DEBUG: {Register}/R11 {Memory}/None ||| RAX | 0 | None ||| N/A | N/A
		0x1805E305E mov r10,[18189BFF8h]		; DEBUG: {Register}/R10 {Memory}/None ||| RIP | 6468255736 | None ||| N/A | N/A
		0x1805E3065 movd xmm0,esi		; DEBUG: {Register}/XMM0 {Register}/ESI ||| None | 0 | None ||| N/A | N/A
		0x1805E3069 cvtdq2ps xmm0,xmm0		; DEBUG: {Register}/XMM0 {Register}/XMM0 ||| None | 0 | None ||| N/A | N/A
		0x1805E306C movzx r9d,word ptr [r11+11Eh]		; DEBUG: {Register}/R9D {Memory}/None ||| R11 | 286 | None ||| N/A | N/A
		0x1805E3074 mov [rsp+88h],r14		; DEBUG: {Memory}/None {Register}/R14 ||| RSP | 136 | None ||| N/A | N/A
		0x1805E307C movzx r14d,byte ptr [rbx+28h]		; DEBUG: {Register}/R14D {Memory}/None ||| RBX | 40 | None ||| N/A | N/A
		0x1805E3081 xor ebx,ebx		; DEBUG: {Register}/EBX {Register}/EBX ||| None | 0 | None ||| N/A | N/A
		0x1805E3083 movzx ecx,bx		; DEBUG: {Register}/ECX {Register}/BX ||| None | 0 | None ||| N/A | N/A
		0x1805E3086 mulss xmm0,xmm6		; DEBUG: {Register}/XMM0 {Register}/XMM6 ||| None | 0 | None ||| N/A | N/A
		0x1805E308A cvttss2si esi,xmm0		; DEBUG: {Register}/ESI {Register}/XMM0 ||| None | 0 | None ||| N/A | N/A
		0x1805E308E cmp bx,r9w		; DEBUG: {Register}/BX {Register}/R9W ||| None | 0 | None ||| N/A | N/A
		0x1805E3092 jae short 00000001805E30BBh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E3094 mov r8,[r11+0B0h]		; DEBUG: {Register}/R8 {Memory}/None ||| R11 | 176 | None ||| N/A | N/A
		0x1805E309B nop dword ptr [rax+rax]		; DEBUG: {Memory}/None {Register}/None ||| RAX | 0 | RAX ||| N/A | N/A
		0x1805E30A0 movzx edx,cx		; DEBUG: {Register}/EDX {Register}/CX ||| None | 0 | None ||| N/A | N/A
		0x1805E30A3 mov eax,edx		; DEBUG: {Register}/EAX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805E30A5 add rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805E30A8 cmp [r8+rax*8],r10		; DEBUG: {Memory}/None {Register}/R10 ||| R8 | 0 | RAX ||| N/A | N/A
		0x1805E30AC je near ptr 00000001805E31C6h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E30B2 inc cx		; DEBUG: {Register}/CX {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805E30B5 cmp cx,r9w		; DEBUG: {Register}/CX {Register}/R9W ||| None | 0 | None ||| N/A | N/A
		0x1805E30B9 jb short 00000001805E30A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E30BB xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805E30BE mov rdx,r10		; DEBUG: {Register}/RDX {Register}/R10 ||| None | 0 | None ||| N/A | N/A
		0x1805E30C1 mov rcx,rdi		; DEBUG: {Register}/RCX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x1805E30C4 call 00000001800F5B10h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E30C9 mov r9,rax		; DEBUG: {Register}/R9 {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805E30CC mov rcx,[rsp+0C8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RSP | 200 | None ||| N/A | N/A
		0x1805E30D4 lea rax,[rsp+40h]		; DEBUG: {Register}/RAX {Memory}/None ||| RSP | 64 | None ||| N/A | N/A
		0x1805E30D9 xorps xmm3,xmm3		; DEBUG: {Register}/XMM3 {Register}/XMM3 ||| None | 0 | None ||| N/A | N/A
		0x1805E30DC lea r8,[rsp+50h]		; DEBUG: {Register}/R8 {Memory}/None ||| RSP | 80 | None ||| N/A | N/A
		0x1805E30E1 mov edx,esi		; DEBUG: {Register}/EDX {Register}/ESI ||| None | 0 | None ||| N/A | N/A
		0x1805E30E3 movsd xmm0,qword ptr [rcx]		; DEBUG: {Register}/XMM0 {Memory}/None ||| RCX | 0 | None ||| N/A | N/A
		0x1805E30E7 mov ecx,[rcx+8]		; DEBUG: {Register}/ECX {Memory}/None ||| RCX | 8 | None ||| N/A | N/A
		0x1805E30EA mov [rsp+48h],ecx		; DEBUG: {Memory}/None {Register}/ECX ||| RSP | 72 | None ||| N/A | N/A
		0x1805E30EE mov ecx,[rbp+8]		; DEBUG: {Register}/ECX {Memory}/None ||| RBP | 8 | None ||| N/A | N/A
		0x1805E30F1 mov [rsp+58h],ecx		; DEBUG: {Memory}/None {Register}/ECX ||| RSP | 88 | None ||| N/A | N/A
		0x1805E30F5 mov rcx,[r9+8]		; DEBUG: {Register}/RCX {Memory}/None ||| R9 | 8 | None ||| N/A | N/A
		0x1805E30F9 mov [rsp+38h],rcx		; DEBUG: {Memory}/None {Register}/RCX ||| RSP | 56 | None ||| N/A | N/A
		0x1805E30FE mov rcx,rdi		; DEBUG: {Register}/RCX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x1805E3101 mov [rsp+30h],rax		; DEBUG: {Memory}/None {Register}/RAX ||| RSP | 48 | None ||| N/A | N/A
		0x1805E3106 mov eax,[rsp+0C0h]		; DEBUG: {Register}/EAX {Memory}/None ||| RSP | 192 | None ||| N/A | N/A
		0x1805E310D movsd qword ptr [rsp+40h],xmm0		; DEBUG: {Memory}/None {Register}/XMM0 ||| RSP | 64 | None ||| N/A | N/A
		0x1805E3113 movsd xmm0,qword ptr [rbp]		; DEBUG: {Register}/XMM0 {Memory}/None ||| RBP | 0 | None ||| N/A | N/A
		0x1805E3118 mov [rsp+28h],eax		; DEBUG: {Memory}/None {Register}/EAX ||| RSP | 40 | None ||| N/A | N/A
		0x1805E311C mov [rsp+20h],r14b		; DEBUG: {Memory}/None {Register}/R14L ||| RSP | 32 | None ||| N/A | N/A
		0x1805E3121 movsd qword ptr [rsp+50h],xmm0		; DEBUG: {Memory}/None {Register}/XMM0 ||| RSP | 80 | None ||| N/A | N/A
		0x1805E3127 call qword ptr [r9]		; DEBUG: {Memory}/None {Register}/None ||| R9 | 0 | None ||| N/A | N/A
		0x1805E312A mov r14,[rsp+88h]		; DEBUG: {Register}/R14 {Memory}/None ||| RSP | 136 | None ||| N/A | N/A
		0x1805E3132 cmp [rsp+0A0h],bl		; DEBUG: {Memory}/None {Register}/BL ||| RSP | 160 | None ||| N/A | N/A
		0x1805E3139 je short 00000001805E31A7h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E313B mov r10,[rdi]		; DEBUG: {Register}/R10 {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1805E313E mov r9,[18189BFF8h]		; DEBUG: {Register}/R9 {Memory}/None ||| RIP | 6468255736 | None ||| N/A | N/A
		0x1805E3145 movzx edx,word ptr [r10+11Eh]		; DEBUG: {Register}/EDX {Memory}/None ||| R10 | 286 | None ||| N/A | N/A
		0x1805E314D cmp bx,dx		; DEBUG: {Register}/BX {Register}/DX ||| None | 0 | None ||| N/A | N/A
		0x1805E3150 jae short 00000001805E3176h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E3152 mov r8,[r10+0B0h]		; DEBUG: {Register}/R8 {Memory}/None ||| R10 | 176 | None ||| N/A | N/A
		0x1805E3159 nop dword ptr [rax]		; DEBUG: {Memory}/None {Register}/None ||| RAX | 0 | None ||| N/A | N/A
		0x1805E3160 movzx ecx,bx		; DEBUG: {Register}/ECX {Register}/BX ||| None | 0 | None ||| N/A | N/A
		0x1805E3163 mov eax,ecx		; DEBUG: {Register}/EAX {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x1805E3165 add rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805E3168 cmp [r8+rax*8],r9		; DEBUG: {Memory}/None {Register}/R9 ||| R8 | 0 | RAX ||| N/A | N/A
		0x1805E316C je short 00000001805E31E1h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E316E inc bx		; DEBUG: {Register}/BX {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805E3171 cmp bx,dx		; DEBUG: {Register}/BX {Register}/DX ||| None | 0 | None ||| N/A | N/A
		0x1805E3174 jb short 00000001805E3160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E3176 mov r8d,1		; DEBUG: {Register}/R8D {Immediate32}/None ||| None | 0 | None ||| N/A | 1
		0x1805E317C mov rdx,r9		; DEBUG: {Register}/RDX {Register}/R9 ||| None | 0 | None ||| N/A | N/A
		0x1805E317F mov rcx,rdi		; DEBUG: {Register}/RCX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x1805E3182 call 00000001800F5B10h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E3187 mov ecx,[rbp+8]		; DEBUG: {Register}/ECX {Memory}/None ||| RBP | 8 | None ||| N/A | N/A
		0x1805E318A lea rdx,[rsp+50h]		; DEBUG: {Register}/RDX {Memory}/None ||| RSP | 80 | None ||| N/A | N/A
		0x1805E318F movsd xmm0,qword ptr [rbp]		; DEBUG: {Register}/XMM0 {Memory}/None ||| RBP | 0 | None ||| N/A | N/A
		0x1805E3194 mov r8,[rax+8]		; DEBUG: {Register}/R8 {Memory}/None ||| RAX | 8 | None ||| N/A | N/A
		0x1805E3198 mov [rsp+58h],ecx		; DEBUG: {Memory}/None {Register}/ECX ||| RSP | 88 | None ||| N/A | N/A
		0x1805E319C mov rcx,rdi		; DEBUG: {Register}/RCX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x1805E319F movsd qword ptr [rsp+50h],xmm0		; DEBUG: {Memory}/None {Register}/XMM0 ||| RSP | 80 | None ||| N/A | N/A
		0x1805E31A5 call qword ptr [rax]		; DEBUG: {Memory}/None {Register}/None ||| RAX | 0 | None ||| N/A | N/A
		0x1805E31A7 mov rdi,[rsp+80h]		; DEBUG: {Register}/RDI {Memory}/None ||| RSP | 128 | None ||| N/A | N/A
		0x1805E31AF movaps xmm6,[rsp+60h]		; DEBUG: {Register}/XMM6 {Memory}/None ||| RSP | 96 | None ||| N/A | N/A
		0x1805E31B4 lea r11,[rsp+70h]		; DEBUG: {Register}/R11 {Memory}/None ||| RSP | 112 | None ||| N/A | N/A
		0x1805E31B9 mov rbx,[r11+20h]		; DEBUG: {Register}/RBX {Memory}/None ||| R11 | 32 | None ||| N/A | N/A
		0x1805E31BD mov rbp,[r11+28h]		; DEBUG: {Register}/RBP {Memory}/None ||| R11 | 40 | None ||| N/A | N/A
		0x1805E31C1 mov rsp,r11		; DEBUG: {Register}/RSP {Register}/R11 ||| None | 0 | None ||| N/A | N/A
		0x1805E31C4 pop rsi		; DEBUG: {Register}/RSI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805E31C5 ret		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805E31C6 add rdx,rdx		; DEBUG: {Register}/RDX {Register}/RDX ||| None | 0 | None ||| N/A | N/A
		0x1805E31C9 lea r9,[r11+128h]		; DEBUG: {Register}/R9 {Memory}/None ||| R11 | 296 | None ||| N/A | N/A
		0x1805E31D0 mov eax,[r8+rdx*8+8]		; DEBUG: {Register}/EAX {Memory}/None ||| R8 | 8 | RDX ||| N/A | N/A
		0x1805E31D5 shl rax,4		; DEBUG: {Register}/RAX {Immediate8}/None ||| None | 0 | None ||| N/A | 4
		0x1805E31D9 add r9,rax		; DEBUG: {Register}/R9 {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805E31DC jmp near ptr 00000001805E30CCh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E31E1 add rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x1805E31E4 lea rax,[r10+128h]		; DEBUG: {Register}/RAX {Memory}/None ||| R10 | 296 | None ||| N/A | N/A
		0x1805E31EB mov ecx,[r8+rcx*8+8]		; DEBUG: {Register}/ECX {Memory}/None ||| R8 | 8 | RCX ||| N/A | N/A
		0x1805E31F0 inc ecx		; DEBUG: {Register}/ECX {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805E31F2 shl rcx,4		; DEBUG: {Register}/RCX {Immediate8}/None ||| None | 0 | None ||| N/A | 4
		0x1805E31F6 add rax,rcx		; DEBUG: {Register}/RAX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x1805E31F9 jmp short 00000001805E3187h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E31FB call 000000018012BDA0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E3200 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.Void EnemyNoDamageCollider::Damage(System.Int32,UnityEngine.Vector3,System.Boolean,System.Boolean,System.Single,EBadStatus,System.Int32,EAttribute,UnityEngine.Vector3,ESEKind,ESEKind):
		End of function at 0x1805E3201
		Absolute End is at 0x1805E3201
		Identified Jump Destination addresses:

		0x1805E2FCA: Saves the content of rsi to the stack
		0x1805E2FCF: Compares {Unknown Global at 0x18183EDF1, first ten bytes are [225 1 0 192 60 103 1 80 225 1], or as chars "á À<gPá"} and 0
		0x1805E2FD6: Copies {'position' (function parameter, type UnityEngine.Vector3)} from r8 into rbp
		0x1805E2FDE: Copies {'value' (function parameter, type System.Int32)} from rdx into rsi
		0x1805E2FE0: Copies {'this' (function parameter, type EnemyNoDamageCollider)} from rcx into rbx
		0x1805E2FE3: Jumps to 0x1805E2FF7 if {Unknown Global at 0x18183EDF1, first ten bytes are [225 1 0 192 60 103 1 80 225 1], or as chars "á À<gPá"} != 0

		0x1805E2FE5: Loads string ")" into register rcx as constant {'constant3' (constant value of type Cpp2IL.Core.Analysis.ResultModels.Il2CppString)}
		0x1805E2FEB: Attempts to load the il2cpp metadata for this method (method id 0) and init it cpp-side.

		0x1805E2FF7: Loads the type definition for managed type CommonGameDefine as a constant "CommonGameDefine" in rax
		0x1805E2FFE: Compares "{il2cpp field on {'CommonGameDefine' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" and 2
		0x1805E3005: Jumps to 0x1805E301F if "{il2cpp field on {'CommonGameDefine' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" equals 2

		0x1805E3007: Compares "{il2cpp field on {'CommonGameDefine' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" and 0
		0x1805E300E: Jumps to 0x1805E301F if "{il2cpp field on {'CommonGameDefine' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" != 0

		0x1805E3010: Copies {'CommonGameDefine' (constant value of type Mono.Cecil.TypeReference)} from rax into rcx
		0x1805E3013: Calls the il2cpp cctor for the type CommonGameDefine
		0x1805E3018: Loads the type definition for managed type CommonGameDefine as a constant "CommonGameDefine" in rax
		0x1805E301F: Loads the pointer to the static fields for CommonGameDefine and stores it in constant10 in register rax
		0x1805E3026: [!] Reads field m_chara from {'this' (function parameter, type EnemyNoDamageCollider)} and stores in a new local {'m_chara' (type UnityEngine.GameObject)}

		0x1805E302A: [!] Reads the static field System.Single CommonGameDefine::scEnemyDamageCutVal into new local scEnemyDamageCutVal
		0x1805E3032: [!] Compares {'m_chara' (type UnityEngine.GameObject)} and 0
		0x1805E3035: Jumps to 0x1805E31FB (which throws a NRE) if m_chara equals 0. Implicitly present in managed code, so ignored here.
		0x1805E303B: Loads the global generic method reference for method T UnityEngine.GameObject::GetComponent<IDamage>() on type UnityEngine.GameObject and stores the result in constant {'GetComponent' (constant value of type Cpp2IL.Core.Analysis.ResultModels.GenericMethodReference)} in rdx
		0x1805E304A: [!] Calls managed method T UnityEngine.GameObject::GetComponent<IDamage>() on instance {'m_chara' (type UnityEngine.GameObject)} and stores the result in {'component' (type IDamage)} ;  - Method resolved from concrete implementations at this address, with the help of a constant value to identify which concrete implementation.

		0x1805E304F: Copies {'component' (type IDamage)} from rax into rdi
		0x1805E3052: [!] Compares {'component' (type IDamage)} and 0
		0x1805E3055: Jumps to 0x1805E31A7 (which is an if statement's body) if component equals 0 ;  - Increasing indentation - is standard if, unimportant is False

		0x1805E305B: Loads the class pointer from component into a constant constant14 in register r11
		0x1805E305E: Loads the type definition for managed type IDamage as a constant "IDamage" in r10
		0x1805E306C: [!!] Reads value at unknown offset 286 (0x11E) on a klass pointer
		0x1805E307C: [!] Reads field m_isWeakPoint from {'this' (function parameter, type EnemyNoDamageCollider)} and stores in a new local {'m_isWeakPoint' (type System.Boolean)}

		0x1805E3081: Clears register rbx, yielding zero-local {'local16' (type System.Int32)}
		0x1805E3083: Copies {'local16' (type System.Int32)} from rbx into rcx
		0x1805E308E: [!] Compares {'local16' (type System.Int32)} and {'isEnableHeadShot' (function parameter, type System.Boolean)}
		0x1805E3092: Jumps to 0x1805E30BB (which is an if statement's body) if {'local16' (type System.Int32)} is greater than or equal to {'isEnableHeadShot' (function parameter, type System.Boolean)} ;  - Increasing indentation - is standard if, unimportant is False

		0x1805E3094: Loads the interface offsets for the class pointer to IDamage, which contains 0 offsets, and stores them as a constant constant16 in reg r8
		0x1805E30A0: Copies {'local16' (type System.Int32)} from rcx into rdx
		0x1805E30A3: Copies {'local16' (type System.Int32)} from rdx into rax
		0x1805E30A5: [!] Adds {'local16' (type System.Int32)} and {'local16' (type System.Int32)} and stores the result in {'local16' (type System.Int32)}
		0x1805E30A8: Checks for specific interface offset of type IDamage which resolves to offset  ;  - Warning: Could not find an interface offset for class IDamage, where it implements interface IDamage.
		0x1805E30B2: [!] Adds 1 to the value {'local16' (type System.Int32)}, stored in rcx
		0x1805E30B5: [!] Compares {'local16' (type System.Int32)} and {'isEnableHeadShot' (function parameter, type System.Boolean)}
		0x1805E30BE: Copies {'IDamage' (constant value of type Mono.Cecil.TypeReference)} from r10 into rdx
		0x1805E30C1: Copies {'component' (type IDamage)} from rdi into rcx
		0x1805E30C9: Copies {'component' (type IDamage)} from rax into r9

		Potential Loop Start (0x1805E30CC):
		0x1805E30CC: Reads unknown value in stack, offset 200 (0xC8) and stores the pointer in register rcx as new constant constant17
		0x1805E30D4: Loads a pointer to stack offset 0x40 into register rax as new constant constant18
		0x1805E30DC: Loads a pointer to stack offset 0x50 into register r8 as new constant constant19
		0x1805E30E1: Copies {'value' (function parameter, type System.Int32)} from rsi into rdx
		0x1805E30EA: Moves constant17 (type Cpp2IL.Core.Analysis.ResultModels.StackPointer) from register rcx to the stack at offset 72 (0x48) as a new local local19
		0x1805E30EE: [!] Reads field z from {'position' (function parameter, type UnityEngine.Vector3)} and stores in a new local {'single' (type System.Single)}

		0x1805E30F1: Moves single (type System.Single) from register rcx to the stack at offset 88 (0x58)
		0x1805E30F5: [!] Reads field  from {'component' (type IDamage)} and stores in a new local 

		0x1805E30F9: Moves single (type System.Single) from register rcx to the stack at offset 56 (0x38)
		0x1805E30FE: Copies {'component' (type IDamage)} from rdi into rcx
		0x1805E3101: Moves constant18 (type Cpp2IL.Core.Analysis.ResultModels.StackPointer) from register rax to the stack at offset 48 (0x30) as a new local local21
		0x1805E3106: Reads unknown value in stack, offset 192 (0xC0) and stores the pointer in register rax as new constant constant20
		0x1805E3118: Moves constant20 (type Cpp2IL.Core.Analysis.ResultModels.StackPointer) from register rax to the stack at offset 40 (0x28) as a new local local22
		0x1805E311C: Moves m_isWeakPoint (type System.Boolean) from register r14 to the stack at offset 32 (0x20)
		0x1805E312A: Reads unknown value in stack, offset 136 (0x88) and stores the pointer in register r14 as new constant constant21
		0x1805E3132: [!] Compares  and {'local16' (type System.Int32)}
		0x1805E3139: Jumps to 0x1805E31A7 if  equals local16 ;  - This is probably a goto, jumping to 0x1805E31A7 which is after end of current block @ 0x1805E30BB (started at 0x1805E3094)

		0x1805E313B: Loads the class pointer from component into a constant constant22 in register r10
		0x1805E313E: Loads the type definition for managed type IDamage as a constant "IDamage" in r9
		0x1805E3145: [!!] Reads value at unknown offset 286 (0x11E) on a klass pointer
		0x1805E314D: [!] Compares {'local16' (type System.Int32)} and {'value' (function parameter, type System.Int32)}
		0x1805E3150: Jumps to 0x1805E3176 if {'local16' (type System.Int32)} is greater than or equal to {'value' (function parameter, type System.Int32)} ;  - This is probably a goto, jumping to 0x1805E3176 which is after end of current block @ 0x1805E30BB (started at 0x1805E3094)

		0x1805E3152: Loads the interface offsets for the class pointer to IDamage, which contains 0 offsets, and stores them as a constant constant24 in reg r8
		0x1805E3160: Copies {'local16' (type System.Int32)} from rbx into rcx
		0x1805E3163: Copies {'local16' (type System.Int32)} from rcx into rax
		0x1805E3165: [!] Adds {'local16' (type System.Int32)} and {'local16' (type System.Int32)} and stores the result in {'local16' (type System.Int32)}
		0x1805E3168: Checks for specific interface offset of type IDamage which resolves to offset  ;  - Warning: Could not find an interface offset for class IDamage, where it implements interface IDamage.
		0x1805E316E: [!] Adds 1 to the value {'local16' (type System.Int32)}, stored in rbx
		0x1805E3171: [!] Compares {'local16' (type System.Int32)} and {'value' (function parameter, type System.Int32)}
		0x1805E317C: Copies {'IDamage' (constant value of type Mono.Cecil.TypeReference)} from r9 into rdx
		0x1805E317F: Copies {'component' (type IDamage)} from rdi into rcx
		0x1805E3182: Loads the pointer to the interface function defined in IDamage - specifically the implementation in IDamage - which has slot number 1, which resolves to , and stores in constant  in rax

		Potential Loop Start (0x1805E3187):
		0x1805E3187: [!] Reads field z from {'position' (function parameter, type UnityEngine.Vector3)} and stores in a new local {'single2' (type System.Single)}

		0x1805E318A: Loads a pointer to stack offset 0x50 into register rdx as new constant constant25
		0x1805E3194: [!] Reads field  from {'local16' (type System.Int32)} and stores in a new local 

		0x1805E3198: Moves single2 (type System.Single) from register rcx to the stack at offset 88 (0x58)
		0x1805E319C: Copies {'component' (type IDamage)} from rdi into rcx
		0x1805E31A7: Reads unknown value in stack, offset 128 (0x80) and stores the pointer in register rdi as new constant constant26
		0x1805E31AF: Reads unknown value in stack, offset 96 (0x60) and stores the pointer in register xmm6 as new constant constant27
		0x1805E31B4: Loads a pointer to stack offset 0x70 into register r11 as new constant constant28
		0x1805E31C1: Copies {'constant28' (constant value of type Cpp2IL.Core.Analysis.ResultModels.StackPointer)} from r11 into rsp
		0x1805E31C5: [!] Returns from the function

		0x1805E31C6: [!] Adds  and {'GetComponent' (constant value of type Cpp2IL.Core.Analysis.ResultModels.GenericMethodReference)} and stores the result in 
		0x1805E31D9: [!] Adds {'isEnableHeadShot' (function parameter, type System.Boolean)} and {'component' (type IDamage)} and stores the result in {'isEnableHeadShot' (function parameter, type System.Boolean)}
		0x1805E31DC: Jumps to 0x1805E30CC - which is still in this function, but further up. Probably indicative that this is a loop.
		0x1805E31E1: [!] Adds {'m_chara' (type UnityEngine.GameObject)} and {'m_chara' (type UnityEngine.GameObject)} and stores the result in {'m_chara' (type UnityEngine.GameObject)}
		0x1805E31F0: [!] Adds 1 to the value {'m_chara' (type UnityEngine.GameObject)}, stored in rcx ;  - Type being added to is non-numeric!
		0x1805E31F6: [!] Adds {'component' (type IDamage)} and {'m_chara' (type UnityEngine.GameObject)} and stores the result in {'component' (type IDamage)}
		0x1805E31F9: Jumps to 0x1805E3187 - which is still in this function, but further up. Probably indicative that this is a loop.
		0x1805E31FB: [!] Constructs and throws an exception of kind System.NullReferenceException




	Generated Pseudocode:

	Declaring Type: EnemyNoDamageCollider
	System.Void Damage(System.Int32 value, UnityEngine.Vector3 position, System.Boolean isEnableHeadShot, System.Boolean isMelee, System.Single losesBalanceValue, EBadStatus badStatus, System.Int32 basStatusValue, EAttribute attribute, UnityEngine.Vector3 hitPoint, ESEKind normalSE, ESEKind criticalSE)
		UnityEngine.GameObject m_chara = this.m_chara
		System.Single scEnemyDamageCutVal = CommonGameDefine.scEnemyDamageCutVal

		IDamage component = m_chara.GetComponent<IDamage>()

		if (component != 0)
		    //UNKNOWN CLASS OFFSET READ HERE
		    System.Boolean m_isWeakPoint = this.m_isWeakPoint
		    ulong local16 = 0

		    if (local16 < isEnableHeadShot)
		        local16 += local16
		        local16 += 1
		    endif
            
		    System.Single single = position.z
		      = component.

		    if ( == local16)
                goto INSN_1805E31A7
            endif
		    //UNKNOWN CLASS OFFSET READ HERE

		    if (local16 >= value)
                goto INSN_1805E3176
            endif
		    local16 += local16
		    local16 += 1

		    INSN_1805E3176:
		    System.Single single2 = position.z
		      = local16.
		endif
        
		return
		 += GetComponent
		isEnableHeadShot += component
		m_chara += m_chara
		m_chara += 1
		component += m_chara
		throw new System.NullReferenceException()


Generated IL:
	Action of type Cpp2IL.Core.Analysis.Actions.x86.UnknownClassOffsetReadAction at (0x1805E306C) is corrupt (Unknown class offset read) and cannot be created as IL. Aborting here.


