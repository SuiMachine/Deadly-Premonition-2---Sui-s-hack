Type: C025_SideQuest_Define

Method: System.Void C025_SideQuest_Define::.ctor():	Method Body (x86 ASM):
		0x1802068B0 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1802068B2 jmp near ptr 0000000180207540h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802068B7 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.Void C025_SideQuest_Define::.ctor():
		End of function at 0x1802068B8
		Absolute End is at 0x1802068B8
		Identified Jump Destination addresses:

		0x1802068B2: [!] Calls managed method System.Void System.Object::.ctor() on instance {'this' (function parameter, type C025_SideQuest_Define)}

		0x1802068B2: [!] Returns from the function




	Generated Pseudocode:

	Declaring Type: C025_SideQuest_Define
	System.Void .ctor()

		base..ctor()
		return


Generated IL:
	IL_0000: ldarg.0
	IL_0001: call System.Void System.Object::.ctor()
	IL_0006: ret
	

Method: System.Void C025_SideQuest_Define::.cctor():	Method Body (x86 ASM):
		0x180220630 mov [rsp+8],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RSP | 8 | None ||| N/A | N/A
		0x180220635 push rdi		; DEBUG: {Register}/RDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180220636 sub rsp,20h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 32
		0x18022063A cmp byte ptr [18183D2D6h],0		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6467867350 | None ||| N/A | 0
		0x180220641 jne short 0000000180220655h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180220643 mov ecx,[18151608Ch]		; DEBUG: {Register}/ECX {Memory}/None ||| RIP | 6464561292 | None ||| N/A | N/A
		0x180220649 call 00000001800FEB90h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18022064E mov byte ptr [18183D2D6h],1		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6467867350 | None ||| N/A | 1
		0x180220655 mov rcx,[181884F78h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468161400 | None ||| N/A | N/A
		0x18022065C mov edx,0Eh		; DEBUG: {Register}/EDX {Immediate32}/None ||| None | 0 | None ||| N/A | 14
		0x180220661 call 0000000180141320h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180220666 mov rcx,[181884228h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468157992 | None ||| N/A | N/A
		0x18022066D mov rdi,rax		; DEBUG: {Register}/RDI {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180220670 mov rbx,[181876D40h]		; DEBUG: {Register}/RBX {Memory}/None ||| RIP | 6468103488 | None ||| N/A | N/A
		0x180220677 test byte ptr [rcx+127h],2		; DEBUG: {Memory}/None {Immediate8}/None ||| RCX | 295 | None ||| N/A | 2
		0x18022067E je short 000000018022068Eh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180220680 cmp dword ptr [rcx+0D8h],0		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RCX | 216 | None ||| N/A | 0
		0x180220687 jne short 000000018022068Eh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180220689 call 000000018010EAF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18022068E xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180220690 mov rcx,rbx		; DEBUG: {Register}/RCX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x180220693 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180220698 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18022069B test rdi,rdi		; DEBUG: {Register}/RDI {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x18022069E je near ptr 0000000180220982h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802206A4 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1802206A7 je short 00000001802206C1h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802206A9 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1802206AC mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1802206AF mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1802206B3 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802206B8 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1802206BB je near ptr 000000018022098Ah		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802206C1 cmp dword ptr [rdi+18h],1		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 1
		0x1802206C5 jbe near ptr 000000018022099Dh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802206CB mov [rdi+28h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 40 | None ||| N/A | N/A
		0x1802206CF xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1802206D1 mov rcx,[181876D68h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468103528 | None ||| N/A | N/A
		0x1802206D8 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802206DD mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1802206E0 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1802206E3 je short 00000001802206FDh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802206E5 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1802206E8 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1802206EB mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1802206EF call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802206F4 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1802206F7 je near ptr 00000001802209B0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802206FD cmp dword ptr [rdi+18h],2		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 2
		0x180220701 jbe near ptr 00000001802209C3h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180220707 mov [rdi+30h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 48 | None ||| N/A | N/A
		0x18022070B xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18022070D mov rcx,[181876D98h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468103576 | None ||| N/A | N/A
		0x180220714 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180220719 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18022071C test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18022071F je short 0000000180220739h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180220721 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x180220724 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180220727 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18022072B call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180220730 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180220733 je near ptr 00000001802209D6h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180220739 cmp dword ptr [rdi+18h],3		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 3
		0x18022073D jbe near ptr 00000001802209E9h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180220743 mov [rdi+38h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 56 | None ||| N/A | N/A
		0x180220747 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180220749 mov rcx,[181876DD0h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468103632 | None ||| N/A | N/A
		0x180220750 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180220755 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180220758 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18022075B je short 0000000180220775h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18022075D mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x180220760 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180220763 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x180220767 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18022076C test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18022076F je near ptr 00000001802209FCh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180220775 cmp dword ptr [rdi+18h],4		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 4
		0x180220779 jbe near ptr 0000000180220A0Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18022077F mov [rdi+40h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 64 | None ||| N/A | N/A
		0x180220783 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180220785 mov rcx,[181876DF0h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468103664 | None ||| N/A | N/A
		0x18022078C call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180220791 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180220794 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180220797 je short 00000001802207B1h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180220799 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18022079C mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18022079F mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1802207A3 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802207A8 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1802207AB je near ptr 0000000180220A22h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802207B1 cmp dword ptr [rdi+18h],5		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 5
		0x1802207B5 jbe near ptr 0000000180220A35h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802207BB mov [rdi+48h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 72 | None ||| N/A | N/A
		0x1802207BF xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1802207C1 mov rcx,[181876E10h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468103696 | None ||| N/A | N/A
		0x1802207C8 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802207CD mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1802207D0 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1802207D3 je short 00000001802207EDh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802207D5 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1802207D8 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1802207DB mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1802207DF call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802207E4 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1802207E7 je near ptr 0000000180220A48h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802207ED cmp dword ptr [rdi+18h],6		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 6
		0x1802207F1 jbe near ptr 0000000180220A5Bh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802207F7 mov [rdi+50h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 80 | None ||| N/A | N/A
		0x1802207FB xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1802207FD mov rcx,[181876E30h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468103728 | None ||| N/A | N/A
		0x180220804 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180220809 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18022080C test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18022080F je short 0000000180220829h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180220811 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x180220814 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180220817 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18022081B call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180220820 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180220823 je near ptr 0000000180220A6Eh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180220829 cmp dword ptr [rdi+18h],7		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 7
		0x18022082D jbe near ptr 0000000180220A81h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180220833 mov [rdi+58h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 88 | None ||| N/A | N/A
		0x180220837 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180220839 mov rcx,[181876E70h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468103792 | None ||| N/A | N/A
		0x180220840 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180220845 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180220848 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18022084B je short 0000000180220865h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18022084D mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x180220850 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180220853 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x180220857 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18022085C test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18022085F je near ptr 0000000180220A94h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180220865 cmp dword ptr [rdi+18h],8		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 8
		0x180220869 jbe near ptr 0000000180220AA7h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18022086F mov [rdi+60h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 96 | None ||| N/A | N/A
		0x180220873 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180220875 mov rcx,[181876E88h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468103816 | None ||| N/A | N/A
		0x18022087C call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180220881 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180220884 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180220887 je short 00000001802208A1h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180220889 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18022088C mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18022088F mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x180220893 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180220898 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18022089B je near ptr 0000000180220ABAh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802208A1 cmp dword ptr [rdi+18h],9		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 9
		0x1802208A5 jbe near ptr 0000000180220ACDh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802208AB mov [rdi+68h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 104 | None ||| N/A | N/A
		0x1802208AF xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1802208B1 mov rcx,[181876EB0h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468103856 | None ||| N/A | N/A
		0x1802208B8 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802208BD mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1802208C0 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1802208C3 je short 00000001802208DDh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802208C5 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1802208C8 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1802208CB mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1802208CF call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802208D4 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1802208D7 je near ptr 0000000180220AE0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802208DD cmp dword ptr [rdi+18h],0Ah		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 10
		0x1802208E1 jbe near ptr 0000000180220AF3h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802208E7 mov [rdi+70h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 112 | None ||| N/A | N/A
		0x1802208EB xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1802208ED mov rcx,[181876ED8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468103896 | None ||| N/A | N/A
		0x1802208F4 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802208F9 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1802208FC test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1802208FF je short 0000000180220919h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180220901 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x180220904 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180220907 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18022090B call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180220910 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180220913 je near ptr 0000000180220B06h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180220919 cmp dword ptr [rdi+18h],0Bh		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 11
		0x18022091D jbe near ptr 0000000180220B19h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180220923 mov [rdi+78h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 120 | None ||| N/A | N/A
		0x180220927 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180220929 mov rcx,[181876F00h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468103936 | None ||| N/A | N/A
		0x180220930 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180220935 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180220938 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18022093B je short 0000000180220955h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18022093D mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x180220940 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180220943 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x180220947 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18022094C test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18022094F je near ptr 0000000180220B2Ch		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180220955 cmp dword ptr [rdi+18h],0Ch		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 12
		0x180220959 jbe near ptr 0000000180220B3Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18022095F mov [rdi+80h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 128 | None ||| N/A | N/A
		0x180220966 mov rax,[18189BB20h]		; DEBUG: {Register}/RAX {Memory}/None ||| RIP | 6468254496 | None ||| N/A | N/A
		0x18022096D mov rbx,[rsp+30h]		; DEBUG: {Register}/RBX {Memory}/None ||| RSP | 48 | None ||| N/A | N/A
		0x180220972 mov rcx,[rax+0B8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RAX | 184 | None ||| N/A | N/A
		0x180220979 mov [rcx],rdi		; DEBUG: {Memory}/None {Register}/RDI ||| RCX | 0 | None ||| N/A | N/A
		0x18022097C add rsp,20h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 32
		0x180220980 pop rdi		; DEBUG: {Register}/RDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180220981 ret		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180220982 xor ecx,ecx		; DEBUG: {Register}/ECX {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x180220984 call 000000018012BDA0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180220989 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18022098A call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18022098F mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180220992 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x180220995 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180220997 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18022099C int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1802209B0 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802209B5 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1802209B8 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1802209BB xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1802209BD call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802209C2 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1802209D6 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802209DB mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1802209DE xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1802209E1 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1802209E3 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802209E8 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1802209FC call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180220A01 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180220A04 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x180220A07 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180220A09 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180220A0E int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180220A22 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180220A27 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180220A2A xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x180220A2D xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180220A2F call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180220A34 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180220A48 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180220A4D mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180220A50 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x180220A53 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180220A55 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180220A5A int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180220A6E call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180220A73 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180220A76 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x180220A79 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180220A7B call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180220A80 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180220A94 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180220A99 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180220A9C xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x180220A9F xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180220AA1 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180220AA6 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180220ABA call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180220ABF mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180220AC2 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x180220AC5 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180220AC7 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180220ACC int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180220AE0 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180220AE5 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180220AE8 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x180220AEB xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180220AED call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180220AF2 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180220B06 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180220B0B mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180220B0E xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x180220B11 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180220B13 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180220B18 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180220B2C call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180220B31 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180220B34 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x180220B37 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180220B39 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180220B3E int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Static Method System.Void C025_SideQuest_Define::.cctor():
		End of function at 0x180220B3F
		Absolute End is at 0x180220B3F
		Identified Jump Destination addresses:

		0x180220635: Saves the content of rdi to the stack
		0x18022063A: Compares {Unknown Global at 0x18183D2D6, first ten bytes are [0 0 0 0 0 0 0 0 0 0], or as chars "          "} and 0
		0x180220641: Jumps to 0x180220655 if {Unknown Global at 0x18183D2D6, first ten bytes are [0 0 0 0 0 0 0 0 0 0], or as chars "          "} != 0

		0x180220643: Loads string "ò" into register rcx as constant {'constant3' (constant value of type Cpp2IL.Core.Analysis.ResultModels.Il2CppString)}
		0x180220649: Attempts to load the il2cpp metadata for this method (method id 0) and init it cpp-side.

		0x180220655: Loads the type definition for managed type System.Type[] as a constant "Type[]" in rcx
		0x18022065C: [!] Writes the constant 0xE into operand 14 (type UInt64) in register rdx
		0x180220661: [!] Allocates an array of type System.Type[] of size 14 and stores the result as local0 in register rax

		0x180220666: Loads the type definition for managed type System.Type as a constant "Type" in rcx
		0x18022066D: Copies {'local0' (type System.Type[])} from rax into rdi
		0x180220670: Loads the type definition for managed type ESerifSideQ_Pol_C025_1000 as a constant "ESerifSideQ_Pol_C025_1000" in rbx
		0x180220677: Compares "{il2cpp field on {'Type' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" and 2
		0x18022067E: Jumps to 0x18022068E if "{il2cpp field on {'Type' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" equals 2

		0x180220680: Compares "{il2cpp field on {'Type' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" and 0
		0x180220687: Jumps to 0x18022068E if "{il2cpp field on {'Type' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" != 0

		0x180220689: Calls the il2cpp cctor for the type System.Type
		0x180220690: Copies {'ESerifSideQ_Pol_C025_1000' (constant value of type Mono.Cecil.TypeReference)} from rbx into rcx
		0x180220693: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C025_1000' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle' (type System.Type)}

		0x180220698: Copies {'typeFromHandle' (type System.Type)} from rax into rbx
		0x18022069B: [!] Compares {'local0' (type System.Type[])} and 0
		0x18022069E: Jumps to 0x180220982 (which throws a NRE) if local0 equals 0. Implicitly present in managed code, so ignored here.
		0x1802206A4: [!] Compares {'typeFromHandle' (type System.Type)} and 0
		0x1802206A7: Jumps to 0x1802206C1 (which is an if statement's body) if typeFromHandle equals 0 ;  - Increasing indentation - is standard if, unimportant is False

		0x1802206A9: Loads the class pointer from local0 into a constant constant14 in register rdx
		0x1802206AC: Copies {'typeFromHandle' (type System.Type)} from rax into rcx
		0x1802206AF: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x1802206B8: [!] Compares {'typeFromHandle' (type System.Type)} and 0
		0x1802206BB: Jumps to 0x18022098A if typeFromHandle equals 0 ;  - This is probably a goto, jumping to 0x18022098A which is after end of current block @ 0x1802206C1 (started at 0x1802206A9)

		0x1802206C1: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 1
		0x1802206C5: Jumps to 0x18022099D (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 1. Implicitly present in managed code, so ignored here.
		0x1802206CB: Sets the value at offset 1 in array local0 to {'typeFromHandle' (type System.Type)}
		0x1802206D1: Loads the type definition for managed type ESerifSideQ_Pol_C025_1001 as a constant "ESerifSideQ_Pol_C025_1001" in rcx
		0x1802206D8: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C025_1001' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle2' (type System.Type)}

		0x1802206DD: Copies {'typeFromHandle2' (type System.Type)} from rax into rbx
		0x1802206E0: [!] Compares {'typeFromHandle2' (type System.Type)} and 0
		0x1802206E3: Jumps to 0x1802206FD if typeFromHandle2 equals 0 ;  - This is probably a goto, jumping to 0x1802206FD which is after end of current block @ 0x1802206C1 (started at 0x1802206A9)

		0x1802206E5: Loads the class pointer from local0 into a constant constant19 in register rdx
		0x1802206E8: Copies {'typeFromHandle2' (type System.Type)} from rax into rcx
		0x1802206EB: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x1802206F4: [!] Compares {'typeFromHandle2' (type System.Type)} and 0
		0x1802206F7: Jumps to 0x1802209B0 if typeFromHandle2 equals 0 ;  - This is probably a goto, jumping to 0x1802209B0 which is after end of current block @ 0x1802206C1 (started at 0x1802206A9)

		0x1802206FD: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 2
		0x180220701: Jumps to 0x1802209C3 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 2. Implicitly present in managed code, so ignored here.
		0x180220707: Sets the value at offset 2 in array local0 to {'typeFromHandle2' (type System.Type)}
		0x18022070D: Loads the type definition for managed type ESerifSideQ_Pol_C025_1002 as a constant "ESerifSideQ_Pol_C025_1002" in rcx
		0x180220714: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C025_1002' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle3' (type System.Type)}

		0x180220719: Copies {'typeFromHandle3' (type System.Type)} from rax into rbx
		0x18022071C: [!] Compares {'typeFromHandle3' (type System.Type)} and 0
		0x18022071F: Jumps to 0x180220739 if typeFromHandle3 equals 0 ;  - This is probably a goto, jumping to 0x180220739 which is after end of current block @ 0x1802206C1 (started at 0x1802206A9)

		0x180220721: Loads the class pointer from local0 into a constant constant24 in register rdx
		0x180220724: Copies {'typeFromHandle3' (type System.Type)} from rax into rcx
		0x180220727: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x180220730: [!] Compares {'typeFromHandle3' (type System.Type)} and 0
		0x180220733: Jumps to 0x1802209D6 if typeFromHandle3 equals 0 ;  - This is probably a goto, jumping to 0x1802209D6 which is after end of current block @ 0x1802206C1 (started at 0x1802206A9)

		0x180220739: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 3
		0x18022073D: Jumps to 0x1802209E9 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 3. Implicitly present in managed code, so ignored here.
		0x180220743: Sets the value at offset 3 in array local0 to {'typeFromHandle3' (type System.Type)}
		0x180220749: Loads the type definition for managed type ESerifSideQ_Pol_C025_1003 as a constant "ESerifSideQ_Pol_C025_1003" in rcx
		0x180220750: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C025_1003' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle4' (type System.Type)}

		0x180220755: Copies {'typeFromHandle4' (type System.Type)} from rax into rbx
		0x180220758: [!] Compares {'typeFromHandle4' (type System.Type)} and 0
		0x18022075B: Jumps to 0x180220775 if typeFromHandle4 equals 0 ;  - This is probably a goto, jumping to 0x180220775 which is after end of current block @ 0x1802206C1 (started at 0x1802206A9)

		0x18022075D: Loads the class pointer from local0 into a constant constant29 in register rdx
		0x180220760: Copies {'typeFromHandle4' (type System.Type)} from rax into rcx
		0x180220763: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18022076C: [!] Compares {'typeFromHandle4' (type System.Type)} and 0
		0x18022076F: Jumps to 0x1802209FC if typeFromHandle4 equals 0 ;  - This is probably a goto, jumping to 0x1802209FC which is after end of current block @ 0x1802206C1 (started at 0x1802206A9)

		0x180220775: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 4
		0x180220779: Jumps to 0x180220A0F (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 4. Implicitly present in managed code, so ignored here.
		0x18022077F: Sets the value at offset 4 in array local0 to {'typeFromHandle4' (type System.Type)}
		0x180220785: Loads the type definition for managed type ESerifSideQ_Pol_C025_2000 as a constant "ESerifSideQ_Pol_C025_2000" in rcx
		0x18022078C: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C025_2000' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle5' (type System.Type)}

		0x180220791: Copies {'typeFromHandle5' (type System.Type)} from rax into rbx
		0x180220794: [!] Compares {'typeFromHandle5' (type System.Type)} and 0
		0x180220797: Jumps to 0x1802207B1 if typeFromHandle5 equals 0 ;  - This is probably a goto, jumping to 0x1802207B1 which is after end of current block @ 0x1802206C1 (started at 0x1802206A9)

		0x180220799: Loads the class pointer from local0 into a constant constant34 in register rdx
		0x18022079C: Copies {'typeFromHandle5' (type System.Type)} from rax into rcx
		0x18022079F: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x1802207A8: [!] Compares {'typeFromHandle5' (type System.Type)} and 0
		0x1802207AB: Jumps to 0x180220A22 if typeFromHandle5 equals 0 ;  - This is probably a goto, jumping to 0x180220A22 which is after end of current block @ 0x1802206C1 (started at 0x1802206A9)

		0x1802207B1: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 5
		0x1802207B5: Jumps to 0x180220A35 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 5. Implicitly present in managed code, so ignored here.
		0x1802207BB: Sets the value at offset 5 in array local0 to {'typeFromHandle5' (type System.Type)}
		0x1802207C1: Loads the type definition for managed type ESerifSideQ_Pol_C025_2001 as a constant "ESerifSideQ_Pol_C025_2001" in rcx
		0x1802207C8: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C025_2001' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle6' (type System.Type)}

		0x1802207CD: Copies {'typeFromHandle6' (type System.Type)} from rax into rbx
		0x1802207D0: [!] Compares {'typeFromHandle6' (type System.Type)} and 0
		0x1802207D3: Jumps to 0x1802207ED if typeFromHandle6 equals 0 ;  - This is probably a goto, jumping to 0x1802207ED which is after end of current block @ 0x1802206C1 (started at 0x1802206A9)

		0x1802207D5: Loads the class pointer from local0 into a constant constant39 in register rdx
		0x1802207D8: Copies {'typeFromHandle6' (type System.Type)} from rax into rcx
		0x1802207DB: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x1802207E4: [!] Compares {'typeFromHandle6' (type System.Type)} and 0
		0x1802207E7: Jumps to 0x180220A48 if typeFromHandle6 equals 0 ;  - This is probably a goto, jumping to 0x180220A48 which is after end of current block @ 0x1802206C1 (started at 0x1802206A9)

		0x1802207ED: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 6
		0x1802207F1: Jumps to 0x180220A5B (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 6. Implicitly present in managed code, so ignored here.
		0x1802207F7: Sets the value at offset 6 in array local0 to {'typeFromHandle6' (type System.Type)}
		0x1802207FD: Loads the type definition for managed type ESerifSideQ_Pol_C025_2002 as a constant "ESerifSideQ_Pol_C025_2002" in rcx
		0x180220804: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C025_2002' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle7' (type System.Type)}

		0x180220809: Copies {'typeFromHandle7' (type System.Type)} from rax into rbx
		0x18022080C: [!] Compares {'typeFromHandle7' (type System.Type)} and 0
		0x18022080F: Jumps to 0x180220829 if typeFromHandle7 equals 0 ;  - This is probably a goto, jumping to 0x180220829 which is after end of current block @ 0x1802206C1 (started at 0x1802206A9)

		0x180220811: Loads the class pointer from local0 into a constant constant44 in register rdx
		0x180220814: Copies {'typeFromHandle7' (type System.Type)} from rax into rcx
		0x180220817: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x180220820: [!] Compares {'typeFromHandle7' (type System.Type)} and 0
		0x180220823: Jumps to 0x180220A6E if typeFromHandle7 equals 0 ;  - This is probably a goto, jumping to 0x180220A6E which is after end of current block @ 0x1802206C1 (started at 0x1802206A9)

		0x180220829: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 7
		0x18022082D: Jumps to 0x180220A81 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 7. Implicitly present in managed code, so ignored here.
		0x180220833: Sets the value at offset 7 in array local0 to {'typeFromHandle7' (type System.Type)}
		0x180220839: Loads the type definition for managed type ESerifSideQ_Pol_C025_2003 as a constant "ESerifSideQ_Pol_C025_2003" in rcx
		0x180220840: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C025_2003' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle8' (type System.Type)}

		0x180220845: Copies {'typeFromHandle8' (type System.Type)} from rax into rbx
		0x180220848: [!] Compares {'typeFromHandle8' (type System.Type)} and 0
		0x18022084B: Jumps to 0x180220865 if typeFromHandle8 equals 0 ;  - This is probably a goto, jumping to 0x180220865 which is after end of current block @ 0x1802206C1 (started at 0x1802206A9)

		0x18022084D: Loads the class pointer from local0 into a constant constant49 in register rdx
		0x180220850: Copies {'typeFromHandle8' (type System.Type)} from rax into rcx
		0x180220853: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18022085C: [!] Compares {'typeFromHandle8' (type System.Type)} and 0
		0x18022085F: Jumps to 0x180220A94 if typeFromHandle8 equals 0 ;  - This is probably a goto, jumping to 0x180220A94 which is after end of current block @ 0x1802206C1 (started at 0x1802206A9)

		0x180220865: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 8
		0x180220869: Jumps to 0x180220AA7 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 8. Implicitly present in managed code, so ignored here.
		0x18022086F: Sets the value at offset 8 in array local0 to {'typeFromHandle8' (type System.Type)}
		0x180220875: Loads the type definition for managed type ESerifSideQ_Pol_C025_3000 as a constant "ESerifSideQ_Pol_C025_3000" in rcx
		0x18022087C: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C025_3000' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle9' (type System.Type)}

		0x180220881: Copies {'typeFromHandle9' (type System.Type)} from rax into rbx
		0x180220884: [!] Compares {'typeFromHandle9' (type System.Type)} and 0
		0x180220887: Jumps to 0x1802208A1 if typeFromHandle9 equals 0 ;  - This is probably a goto, jumping to 0x1802208A1 which is after end of current block @ 0x1802206C1 (started at 0x1802206A9)

		0x180220889: Loads the class pointer from local0 into a constant constant54 in register rdx
		0x18022088C: Copies {'typeFromHandle9' (type System.Type)} from rax into rcx
		0x18022088F: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x180220898: [!] Compares {'typeFromHandle9' (type System.Type)} and 0
		0x18022089B: Jumps to 0x180220ABA if typeFromHandle9 equals 0 ;  - This is probably a goto, jumping to 0x180220ABA which is after end of current block @ 0x1802206C1 (started at 0x1802206A9)

		0x1802208A1: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 9
		0x1802208A5: Jumps to 0x180220ACD (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 9. Implicitly present in managed code, so ignored here.
		0x1802208AB: Sets the value at offset 9 in array local0 to {'typeFromHandle9' (type System.Type)}
		0x1802208B1: Loads the type definition for managed type ESerifSideQ_Pol_C025_3001 as a constant "ESerifSideQ_Pol_C025_3001" in rcx
		0x1802208B8: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C025_3001' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle10' (type System.Type)}

		0x1802208BD: Copies {'typeFromHandle10' (type System.Type)} from rax into rbx
		0x1802208C0: [!] Compares {'typeFromHandle10' (type System.Type)} and 0
		0x1802208C3: Jumps to 0x1802208DD if typeFromHandle10 equals 0 ;  - This is probably a goto, jumping to 0x1802208DD which is after end of current block @ 0x1802206C1 (started at 0x1802206A9)

		0x1802208C5: Loads the class pointer from local0 into a constant constant59 in register rdx
		0x1802208C8: Copies {'typeFromHandle10' (type System.Type)} from rax into rcx
		0x1802208CB: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x1802208D4: [!] Compares {'typeFromHandle10' (type System.Type)} and 0
		0x1802208D7: Jumps to 0x180220AE0 if typeFromHandle10 equals 0 ;  - This is probably a goto, jumping to 0x180220AE0 which is after end of current block @ 0x1802206C1 (started at 0x1802206A9)

		0x1802208DD: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 10
		0x1802208E1: Jumps to 0x180220AF3 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 10. Implicitly present in managed code, so ignored here.
		0x1802208E7: Sets the value at offset 10 in array local0 to {'typeFromHandle10' (type System.Type)}
		0x1802208ED: Loads the type definition for managed type ESerifSideQ_Pol_C025_3002 as a constant "ESerifSideQ_Pol_C025_3002" in rcx
		0x1802208F4: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C025_3002' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle11' (type System.Type)}

		0x1802208F9: Copies {'typeFromHandle11' (type System.Type)} from rax into rbx
		0x1802208FC: [!] Compares {'typeFromHandle11' (type System.Type)} and 0
		0x1802208FF: Jumps to 0x180220919 if typeFromHandle11 equals 0 ;  - This is probably a goto, jumping to 0x180220919 which is after end of current block @ 0x1802206C1 (started at 0x1802206A9)

		0x180220901: Loads the class pointer from local0 into a constant constant64 in register rdx
		0x180220904: Copies {'typeFromHandle11' (type System.Type)} from rax into rcx
		0x180220907: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x180220910: [!] Compares {'typeFromHandle11' (type System.Type)} and 0
		0x180220913: Jumps to 0x180220B06 if typeFromHandle11 equals 0 ;  - This is probably a goto, jumping to 0x180220B06 which is after end of current block @ 0x1802206C1 (started at 0x1802206A9)

		0x180220919: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 11
		0x18022091D: Jumps to 0x180220B19 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 11. Implicitly present in managed code, so ignored here.
		0x180220923: Sets the value at offset 11 in array local0 to {'typeFromHandle11' (type System.Type)}
		0x180220929: Loads the type definition for managed type ESerifSideQ_Pol_C025_3003 as a constant "ESerifSideQ_Pol_C025_3003" in rcx
		0x180220930: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C025_3003' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle12' (type System.Type)}

		0x180220935: Copies {'typeFromHandle12' (type System.Type)} from rax into rbx
		0x180220938: [!] Compares {'typeFromHandle12' (type System.Type)} and 0
		0x18022093B: Jumps to 0x180220955 if typeFromHandle12 equals 0 ;  - This is probably a goto, jumping to 0x180220955 which is after end of current block @ 0x1802206C1 (started at 0x1802206A9)

		0x18022093D: Loads the class pointer from local0 into a constant constant69 in register rdx
		0x180220940: Copies {'typeFromHandle12' (type System.Type)} from rax into rcx
		0x180220943: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18022094C: [!] Compares {'typeFromHandle12' (type System.Type)} and 0
		0x18022094F: Jumps to 0x180220B2C if typeFromHandle12 equals 0 ;  - This is probably a goto, jumping to 0x180220B2C which is after end of current block @ 0x1802206C1 (started at 0x1802206A9)

		0x180220955: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 12
		0x180220959: Jumps to 0x180220B3F (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 12. Implicitly present in managed code, so ignored here.
		0x18022095F: Sets the value at offset 12 in array local0 to {'typeFromHandle12' (type System.Type)}
		0x180220966: Loads the type definition for managed type C025_SideQuest_Define as a constant "C025_SideQuest_Define" in rax
		0x18022096D: Reads unknown value in stack, offset 48 (0x30) and stores the pointer in register rbx as new constant constant73
		0x180220972: Loads the pointer to the static fields for C025_SideQuest_Define and stores it in constant74 in register rcx
		0x180220979: [!] Sets static field . to {'local0' (type System.Type[])}
		0x180220981: [!] Returns from the function

		0x180220984: [!] Constructs and throws an exception of kind System.NullReferenceException

		0x18022098F: Copies {'local26' (type System.NullReferenceException)} from rax into rcx
		0x1802209B5: Copies {'local26' (type System.NullReferenceException)} from rax into rcx
		0x1802209DB: Copies {'local26' (type System.NullReferenceException)} from rax into rcx
		0x180220A01: Copies {'local26' (type System.NullReferenceException)} from rax into rcx
		0x180220A27: Copies {'local26' (type System.NullReferenceException)} from rax into rcx
		0x180220A4D: Copies {'local26' (type System.NullReferenceException)} from rax into rcx
		0x180220A73: Copies {'local26' (type System.NullReferenceException)} from rax into rcx
		0x180220A99: Copies {'local26' (type System.NullReferenceException)} from rax into rcx
		0x180220ABF: Copies {'local26' (type System.NullReferenceException)} from rax into rcx
		0x180220AE5: Copies {'local26' (type System.NullReferenceException)} from rax into rcx
		0x180220B0B: Copies {'local26' (type System.NullReferenceException)} from rax into rcx
		0x180220B31: Copies {'local26' (type System.NullReferenceException)} from rax into rcx



	Generated Pseudocode:

	Declaring Type: C025_SideQuest_Define
	static System.Void .cctor()
		System.Type[] local0 = new System.Type[14]

		System.Type typeFromHandle = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C025_1000' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle != 0)

		    if (typeFromHandle == 0)
                goto INSN_18022098A
            endif
		endif
        
		local0[1] = typeFromHandle

		System.Type typeFromHandle2 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C025_1001' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle2 == 0)
            goto INSN_1802206FD
        endif

		if (typeFromHandle2 == 0)
            goto INSN_1802209B0
        endif

		INSN_1802206FD:
		local0[2] = typeFromHandle2

		System.Type typeFromHandle3 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C025_1002' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle3 == 0)
            goto INSN_180220739
        endif

		if (typeFromHandle3 == 0)
            goto INSN_1802209D6
        endif

		INSN_180220739:
		local0[3] = typeFromHandle3

		System.Type typeFromHandle4 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C025_1003' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle4 == 0)
            goto INSN_180220775
        endif

		if (typeFromHandle4 == 0)
            goto INSN_1802209FC
        endif

		INSN_180220775:
		local0[4] = typeFromHandle4

		System.Type typeFromHandle5 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C025_2000' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle5 == 0)
            goto INSN_1802207B1
        endif

		if (typeFromHandle5 == 0)
            goto INSN_180220A22
        endif

		INSN_1802207B1:
		local0[5] = typeFromHandle5

		System.Type typeFromHandle6 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C025_2001' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle6 == 0)
            goto INSN_1802207ED
        endif

		if (typeFromHandle6 == 0)
            goto INSN_180220A48
        endif

		INSN_1802207ED:
		local0[6] = typeFromHandle6

		System.Type typeFromHandle7 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C025_2002' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle7 == 0)
            goto INSN_180220829
        endif

		if (typeFromHandle7 == 0)
            goto INSN_180220A6E
        endif

		INSN_180220829:
		local0[7] = typeFromHandle7

		System.Type typeFromHandle8 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C025_2003' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle8 == 0)
            goto INSN_180220865
        endif

		if (typeFromHandle8 == 0)
            goto INSN_180220A94
        endif

		INSN_180220865:
		local0[8] = typeFromHandle8

		System.Type typeFromHandle9 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C025_3000' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle9 == 0)
            goto INSN_1802208A1
        endif

		if (typeFromHandle9 == 0)
            goto INSN_180220ABA
        endif

		INSN_1802208A1:
		local0[9] = typeFromHandle9

		System.Type typeFromHandle10 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C025_3001' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle10 == 0)
            goto INSN_1802208DD
        endif

		if (typeFromHandle10 == 0)
            goto INSN_180220AE0
        endif

		INSN_1802208DD:
		local0[10] = typeFromHandle10

		System.Type typeFromHandle11 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C025_3002' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle11 == 0)
            goto INSN_180220919
        endif

		if (typeFromHandle11 == 0)
            goto INSN_180220B06
        endif

		INSN_180220919:
		local0[11] = typeFromHandle11

		System.Type typeFromHandle12 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C025_3003' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle12 == 0)
            goto INSN_180220955
        endif

		if (typeFromHandle12 == 0)
            goto INSN_180220B2C
        endif

		INSN_180220955:
		local0[12] = typeFromHandle12
		. = local0
		return
		throw new System.NullReferenceException()

		INSN_18022098A:

		INSN_1802209B0:

		INSN_1802209D6:

		INSN_1802209FC:

		INSN_180220A22:

		INSN_180220A48:

		INSN_180220A6E:

		INSN_180220A94:

		INSN_180220ABA:

		INSN_180220AE0:

		INSN_180220B06:

		INSN_180220B2C:


Generated IL:
	Action of type Cpp2IL.Core.Analysis.Actions.x86.Important.RegToStaticFieldAction at (0x180220979) is corrupt (No further info) and cannot be created as IL. Aborting here.


