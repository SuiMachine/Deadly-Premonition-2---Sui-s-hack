Type: TagRuby

Method: System.Void TagRuby::.ctor():	Method Body (x86 ASM):
		0x180203000 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180203002 jmp near ptr 0000000180CE1E90h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180203007 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.Void TagRuby::.ctor():
		End of function at 0x180203008
		Absolute End is at 0x180203008
		Identified Jump Destination addresses:

		0x180203002: [!] Calls managed method System.Void UnityEngine.MonoBehaviour::.ctor() on instance {'this' (function parameter, type TagRuby)}

		0x180203002: [!] Returns from the function




	Generated Pseudocode:

	Declaring Type: TagRuby
	System.Void .ctor()

		base..ctor()
		return


Generated IL:
	IL_0000: ldarg.0
	IL_0001: call System.Void UnityEngine.MonoBehaviour::.ctor()
	IL_0006: ret
	

Method: System.Void TagRuby::Init(SceUILabel,ETag):	Method Body (x86 ASM):
		0x18032D580 mov [rsp+8],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RSP | 8 | None ||| N/A | N/A
		0x18032D585 mov [rsp+10h],rbp		; DEBUG: {Memory}/None {Register}/RBP ||| RSP | 16 | None ||| N/A | N/A
		0x18032D58A mov [rsp+18h],rsi		; DEBUG: {Memory}/None {Register}/RSI ||| RSP | 24 | None ||| N/A | N/A
		0x18032D58F push rdi		; DEBUG: {Register}/RDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18032D590 sub rsp,30h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 48
		0x18032D594 cmp byte ptr [18183DA45h],0		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6467869253 | None ||| N/A | 0
		0x18032D59B mov ebx,r8d		; DEBUG: {Register}/EBX {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18032D59E mov rsi,rdx		; DEBUG: {Register}/RSI {Register}/RDX ||| None | 0 | None ||| N/A | N/A
		0x18032D5A1 mov rdi,rcx		; DEBUG: {Register}/RDI {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x18032D5A4 jne short 000000018032D5B8h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D5A6 mov ecx,[1814C5F84h]		; DEBUG: {Register}/ECX {Memory}/None ||| RIP | 6464233348 | None ||| N/A | N/A
		0x18032D5AC call 00000001800FEB90h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D5B1 mov byte ptr [18183DA45h],1		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6467869253 | None ||| N/A | 1
		0x18032D5B8 xor r9d,r9d		; DEBUG: {Register}/R9D {Register}/R9D ||| None | 0 | None ||| N/A | N/A
		0x18032D5BB mov r8d,ebx		; DEBUG: {Register}/R8D {Register}/EBX ||| None | 0 | None ||| N/A | N/A
		0x18032D5BE mov rdx,rsi		; DEBUG: {Register}/RDX {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x18032D5C1 mov rcx,rdi		; DEBUG: {Register}/RCX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x18032D5C4 call 00000001803270E0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D5C9 mov rcx,[18188B4E0h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468187360 | None ||| N/A | N/A
		0x18032D5D0 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18032D5D2 call 0000000180CD3D90h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D5D7 xor ebx,ebx		; DEBUG: {Register}/EBX {Register}/EBX ||| None | 0 | None ||| N/A | N/A
		0x18032D5D9 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18032D5DC test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18032D5DF je short 000000018032D5EFh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D5E1 mov rax,[181891300h]		; DEBUG: {Register}/RAX {Memory}/None ||| RIP | 6468211456 | None ||| N/A | N/A
		0x18032D5E8 cmp [rcx],rax		; DEBUG: {Memory}/None {Register}/RAX ||| RCX | 0 | None ||| N/A | N/A
		0x18032D5EB cmove rbx,rcx		; DEBUG: {Register}/RBX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x18032D5EF xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18032D5F1 mov rcx,rdi		; DEBUG: {Register}/RCX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x18032D5F4 call 0000000180B297A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D5F9 mov rcx,[18188D758h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468196184 | None ||| N/A | N/A
		0x18032D600 mov rbp,rax		; DEBUG: {Register}/RBP {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18032D603 test byte ptr [rcx+127h],2		; DEBUG: {Memory}/None {Immediate8}/None ||| RCX | 295 | None ||| N/A | 2
		0x18032D60A je short 000000018032D61Ah		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D60C cmp dword ptr [rcx+0D8h],0		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RCX | 216 | None ||| N/A | 0
		0x18032D613 jne short 000000018032D61Ah		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D615 call 000000018010EAF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D61A mov r8,[181870960h]		; DEBUG: {Register}/R8 {Memory}/None ||| RIP | 6468077920 | None ||| N/A | N/A
		0x18032D621 mov rdx,rbp		; DEBUG: {Register}/RDX {Register}/RBP ||| None | 0 | None ||| N/A | N/A
		0x18032D624 mov rcx,rbx		; DEBUG: {Register}/RCX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x18032D627 call 000000018090D950h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D62C mov [rdi+48h],rax		; DEBUG: {Memory}/None {Register}/RAX ||| RDI | 72 | None ||| N/A | N/A
		0x18032D630 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18032D633 je near ptr 000000018032D702h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D639 mov rdx,[18186EC38h]		; DEBUG: {Register}/RDX {Memory}/None ||| RIP | 6468070456 | None ||| N/A | N/A
		0x18032D640 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18032D643 call 000000018090CFC0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D648 mov rbx,[rdi+48h]		; DEBUG: {Register}/RBX {Memory}/None ||| RDI | 72 | None ||| N/A | N/A
		0x18032D64C xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18032D64E mov rcx,rdi		; DEBUG: {Register}/RCX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x18032D651 mov [rdi+50h],rax		; DEBUG: {Memory}/None {Register}/RAX ||| RDI | 80 | None ||| N/A | N/A
		0x18032D655 call 0000000180327290h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D65A test rbx,rbx		; DEBUG: {Register}/RBX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x18032D65D je near ptr 000000018032D702h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D663 test al,al		; DEBUG: {Register}/AL {Register}/AL ||| None | 0 | None ||| N/A | N/A
		0x18032D665 mov rcx,rbx		; DEBUG: {Register}/RCX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x18032D668 sete dl		; DEBUG: {Register}/DL {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18032D66B xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18032D66E call 0000000180B2E5A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D673 mov rbx,[rdi+50h]		; DEBUG: {Register}/RBX {Memory}/None ||| RDI | 80 | None ||| N/A | N/A
		0x18032D677 test rsi,rsi		; DEBUG: {Register}/RSI {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x18032D67A je near ptr 000000018032D702h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D680 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18032D682 mov rcx,rsi		; DEBUG: {Register}/RCX {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x18032D685 call 000000018060C3F0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D68A test rbx,rbx		; DEBUG: {Register}/RBX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x18032D68D je short 000000018032D702h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D68F xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18032D692 mov edx,eax		; DEBUG: {Register}/EDX {Register}/EAX ||| None | 0 | None ||| N/A | N/A
		0x18032D694 mov rcx,rbx		; DEBUG: {Register}/RCX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x18032D697 call 000000018060D1A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D69C mov rbx,[rdi+50h]		; DEBUG: {Register}/RBX {Memory}/None ||| RDI | 80 | None ||| N/A | N/A
		0x18032D6A0 lea rcx,[rsp+20h]		; DEBUG: {Register}/RCX {Memory}/None ||| RSP | 32 | None ||| N/A | N/A
		0x18032D6A5 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18032D6A8 mov rdx,rsi		; DEBUG: {Register}/RDX {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x18032D6AB call 000000018060C3C0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D6B0 test rbx,rbx		; DEBUG: {Register}/RBX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x18032D6B3 je short 000000018032D702h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D6B5 movups xmm0,[rax]		; DEBUG: {Register}/XMM0 {Memory}/None ||| RAX | 0 | None ||| N/A | N/A
		0x18032D6B8 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18032D6BB lea rdx,[rsp+20h]		; DEBUG: {Register}/RDX {Memory}/None ||| RSP | 32 | None ||| N/A | N/A
		0x18032D6C0 mov rcx,rbx		; DEBUG: {Register}/RCX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x18032D6C3 movaps [rsp+20h],xmm0		; DEBUG: {Memory}/None {Register}/XMM0 ||| RSP | 32 | None ||| N/A | N/A
		0x18032D6C8 call 000000018060D090h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D6CD mov rbx,[rdi+50h]		; DEBUG: {Register}/RBX {Memory}/None ||| RDI | 80 | None ||| N/A | N/A
		0x18032D6D1 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18032D6D3 mov rcx,rsi		; DEBUG: {Register}/RCX {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x18032D6D6 call 000000018060C3D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D6DB test rbx,rbx		; DEBUG: {Register}/RBX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x18032D6DE je short 000000018032D702h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D6E0 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18032D6E3 mov rdx,rax		; DEBUG: {Register}/RDX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18032D6E6 mov rcx,rbx		; DEBUG: {Register}/RCX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x18032D6E9 mov rbx,[rsp+40h]		; DEBUG: {Register}/RBX {Memory}/None ||| RSP | 64 | None ||| N/A | N/A
		0x18032D6EE mov rbp,[rsp+48h]		; DEBUG: {Register}/RBP {Memory}/None ||| RSP | 72 | None ||| N/A | N/A
		0x18032D6F3 mov rsi,[rsp+50h]		; DEBUG: {Register}/RSI {Memory}/None ||| RSP | 80 | None ||| N/A | N/A
		0x18032D6F8 add rsp,30h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 48
		0x18032D6FC pop rdi		; DEBUG: {Register}/RDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18032D6FD jmp near ptr 000000018060D100h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D702 xor ecx,ecx		; DEBUG: {Register}/ECX {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x18032D704 call 000000018012BDA0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D709 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.Void TagRuby::Init(SceUILabel,ETag):
		End of function at 0x18032D70A
		Absolute End is at 0x18032D70A
		Identified Jump Destination addresses:

		0x18032D58F: Saves the content of rdi to the stack
		0x18032D594: Compares {Unknown Global at 0x18183DA45, first ten bytes are [60 103 1 80 54 1 0 152 54 1], or as chars "<gP6 6"} and 0
		0x18032D59B: [!] Implicitly reads field at offset 0 (which is value__) from struct tag of type ETag and stores in new local {'local3' (type System.Int32)}
		0x18032D59E: Copies {'sceLabel' (function parameter, type SceUILabel)} from rdx into rsi
		0x18032D5A1: Copies {'this' (function parameter, type TagRuby)} from rcx into rdi
		0x18032D5A4: Jumps to 0x18032D5B8 if {Unknown Global at 0x18183DA45, first ten bytes are [60 103 1 80 54 1 0 152 54 1], or as chars "<gP6 6"} != 0

		0x18032D5A6: Reads {Unknown Global at 0x1814C5F84, first ten bytes are [150 106 0 0 151 74 0 0 151 10], or as chars "j  J  
"} into register rcx as a constant constant3
		0x18032D5AC: Attempts to load the il2cpp metadata for this method (method id 27286) and init it cpp-side.

		0x18032D5BB: Copies {'local3' (type System.Int32)} from rbx into r8
		0x18032D5BE: Copies {'sceLabel' (function parameter, type SceUILabel)} from rsi into rdx
		0x18032D5C1: Copies {'this' (function parameter, type TagRuby)} from rdi into rcx
		0x18032D5C4: [!] Calls managed method System.Void TagBase::Init(SceUILabel,ETag) on instance {'this' (function parameter, type TagRuby)} ;  - parameters do not match, but there is only one function at this address.

		0x18032D5C9: Loads the string literal "TagRuby" as a constant "constant4" in rcx
		0x18032D5D2: [!] Calls static managed method UnityEngine.Object UnityEngine.Resources::Load(System.String) with arguments ["TagRuby"] and stores the result in {'object' (type UnityEngine.Object)}

		0x18032D5D7: Clears register rbx, yielding zero-local {'local7' (type System.Int32)}
		0x18032D5D9: Copies {'object' (type UnityEngine.Object)} from rax into rcx
		0x18032D5DC: [!] Compares {'object' (type UnityEngine.Object)} and 0
		0x18032D5DF: Jumps to 0x18032D5EF (which is an if statement's body) if object equals 0 ;  - Increasing indentation - is standard if, unimportant is False

		0x18032D5E1: Loads the type definition for managed type UnityEngine.GameObject as a constant "GameObject" in rax
		0x18032D5E8: [!] Compares {'constant7' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} and {'GameObject' (constant value of type Mono.Cecil.TypeReference)}
		0x18032D5EB: [!] Copies {'object' (type UnityEngine.Object)} from rcx into rbx based on previous comparison
		0x18032D5F1: Copies {'this' (function parameter, type TagRuby)} from rdi into rcx
		0x18032D5F4: [!] Calls managed method UnityEngine.Transform UnityEngine.Component::get_transform() on instance {'this' (function parameter, type TagRuby)} and stores the result in {'transform' (type UnityEngine.Transform)}

		0x18032D5F9: Loads the type definition for managed type UnityEngine.Object as a constant "Object" in rcx
		0x18032D600: Copies {'transform' (type UnityEngine.Transform)} from rax into rbp
		0x18032D603: Compares "{il2cpp field on {'Object' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" and 2
		0x18032D60A: Jumps to 0x18032D61A if "{il2cpp field on {'Object' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" equals 2 ;  - This is probably a goto, jumping to 0x18032D61A which is after end of current block @ 0x18032D5EF (started at 0x18032D5E1)

		0x18032D60C: Compares "{il2cpp field on {'Object' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" and 0
		0x18032D613: Jumps to 0x18032D61A if "{il2cpp field on {'Object' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" != 0 ;  - This is probably a goto, jumping to 0x18032D61A which is after end of current block @ 0x18032D5EF (started at 0x18032D5E1)

		0x18032D615: Calls the il2cpp cctor for the type UnityEngine.Object
		0x18032D61A: Loads the global generic method reference for method T UnityEngine.Object::Instantiate<UnityEngine.GameObject>(T,UnityEngine.Transform) on type UnityEngine.Object and stores the result in constant {'Instantiate' (constant value of type Cpp2IL.Core.Analysis.ResultModels.GenericMethodReference)} in r8
		0x18032D621: Copies {'transform' (type UnityEngine.Transform)} from rbp into rdx
		0x18032D624: Copies {'local7' (type System.Int32)} from rbx into rcx
		0x18032D627: [!] Calls static managed method T UnityEngine.Object::Instantiate<UnityEngine.GameObject>(T,UnityEngine.Transform) with arguments [{'local7' (type System.Int32)}, {'transform' (type UnityEngine.Transform)}] and stores the result in {'gameObject' (type UnityEngine.GameObject)} ;  - Method resolved from concrete implementations at this address, with the help of a constant value to identify which concrete implementation.

		0x18032D62C: [!] Sets the field m_obj (Type UnityEngine.GameObject) on local {'this' (function parameter, type TagRuby)} to the value stored in {'gameObject' (type UnityEngine.GameObject)}
		0x18032D630: [!] Compares {'gameObject' (type UnityEngine.GameObject)} and 0
		0x18032D633: Jumps to 0x18032D702 (which throws a NRE) if gameObject equals 0. Implicitly present in managed code, so ignored here.
		0x18032D639: Loads the global generic method reference for method T UnityEngine.GameObject::GetComponent<UILabel>() on type UnityEngine.GameObject and stores the result in constant {'GetComponent' (constant value of type Cpp2IL.Core.Analysis.ResultModels.GenericMethodReference)} in rdx
		0x18032D640: Copies {'gameObject' (type UnityEngine.GameObject)} from rax into rcx
		0x18032D643: [!] Calls managed method T UnityEngine.GameObject::GetComponent<UILabel>() on instance {'gameObject' (type UnityEngine.GameObject)} and stores the result in {'component' (type UILabel)} ;  - Method resolved from concrete implementations at this address, with the help of a constant value to identify which concrete implementation.

		0x18032D648: [!] Reads field m_obj from {'this' (function parameter, type TagRuby)} and stores in a new local {'m_obj' (type UnityEngine.GameObject)}

		0x18032D64E: Copies {'this' (function parameter, type TagRuby)} from rdi into rcx
		0x18032D651: [!] Sets the field m_rubyLabel (Type UILabel) on local {'this' (function parameter, type TagRuby)} to the value stored in {'component' (type UILabel)}
		0x18032D655: [!] Calls managed method System.Boolean TagBase::IsValidTypewriter() on instance {'this' (function parameter, type TagRuby)} and stores the result in {'isValidTypewriter' (type System.Boolean)}

		0x18032D65A: [!] Compares {'m_obj' (type UnityEngine.GameObject)} and 0
		0x18032D65D: Jumps to 0x18032D702 (which throws a NRE) if m_obj equals 0. Implicitly present in managed code, so ignored here.
		0x18032D663: [!] Compares {'isValidTypewriter' (type System.Boolean)} and False
		0x18032D665: Copies {'m_obj' (type UnityEngine.GameObject)} from rbx into rcx
		0x18032D668: [!] Sets the boolean {'local15' (type System.Boolean)} in rdx to true if isValidTypewriter is equal to False, otherwise false.
		0x18032D66E: [!] Calls managed method System.Void UnityEngine.GameObject::SetActive(System.Boolean) on instance {'m_obj' (type UnityEngine.GameObject)} with arguments [{'local15' (type System.Boolean)}]

		0x18032D673: [!] Reads field m_rubyLabel from {'this' (function parameter, type TagRuby)} and stores in a new local {'m_rubyLabel' (type UILabel)}

		0x18032D677: [!] Compares {'sceLabel' (function parameter, type SceUILabel)} and 0
		0x18032D67A: Jumps to 0x18032D702 (which throws a NRE) if sceLabel equals 0. Implicitly present in managed code, so ignored here.
		0x18032D682: Copies {'sceLabel' (function parameter, type SceUILabel)} from rsi into rcx
		0x18032D685: [!] Calls managed method UILabel/Effect UILabel::get_effectStyle() on instance {'sceLabel' (function parameter, type SceUILabel)} and stores the result in {'effectStyle' (type UILabel/Effect)}

		0x18032D68A: [!] Compares {'m_rubyLabel' (type UILabel)} and 0
		0x18032D68D: Jumps to 0x18032D702 (which throws a NRE) if m_rubyLabel equals 0. Implicitly present in managed code, so ignored here.
		0x18032D692: [!] Implicitly reads field at offset 0 (which is value__) from struct effectStyle of type UILabel/Effect and stores in new local {'local21' (type System.Int32)}
		0x18032D694: Copies {'m_rubyLabel' (type UILabel)} from rbx into rcx
		0x18032D697: [!] Calls managed method System.Void UILabel::set_effectStyle(UILabel/Effect) on instance {'m_rubyLabel' (type UILabel)} ;  - parameters do not match, but there is only one function at this address.

		0x18032D69C: [!] Reads field m_rubyLabel from {'this' (function parameter, type TagRuby)} and stores in a new local {'m_rubyLabel2' (type UILabel)}

		0x18032D6A0: Loads a pointer to stack offset 0x20 into register rcx as new constant constant20
		0x18032D6A8: Copies {'sceLabel' (function parameter, type SceUILabel)} from rsi into rdx
		0x18032D6AB: [!] Calls managed method UnityEngine.Color UILabel::get_effectColor() on instance  and stores the result in {'effectColor' (type UnityEngine.Color)}

		0x18032D6B0: [!] Compares {'m_rubyLabel2' (type UILabel)} and 0
		0x18032D6B3: Jumps to 0x18032D702 (which throws a NRE) if m_rubyLabel2 equals 0. Implicitly present in managed code, so ignored here.
		0x18032D6B5: Loads the class pointer from effectColor into a constant constant22 in register xmm0
		0x18032D6BB: Loads a pointer to stack offset 0x20 into register rdx as new constant constant23
		0x18032D6C0: Copies {'m_rubyLabel2' (type UILabel)} from rbx into rcx
		0x18032D6C3: Moves constant22 (type Cpp2IL.Core.Analysis.Il2CppClassIdentifier) from register xmm0 to the stack at offset 32 (0x20) as a new local local26
		0x18032D6C8: [!] Calls managed method System.Void UILabel::set_effectColor(UnityEngine.Color) on instance {'m_rubyLabel2' (type UILabel)} ;  - parameters do not match, but there is only one function at this address.

		0x18032D6CD: [!] Reads field m_rubyLabel from {'this' (function parameter, type TagRuby)} and stores in a new local {'m_rubyLabel3' (type UILabel)}

		0x18032D6D3: Copies {'sceLabel' (function parameter, type SceUILabel)} from rsi into rcx
		0x18032D6D6: [!] Calls managed method UnityEngine.Vector2 UILabel::get_effectDistance() on instance {'sceLabel' (function parameter, type SceUILabel)} and stores the result in {'effectDistance' (type UnityEngine.Vector2)}

		0x18032D6DB: [!] Compares {'m_rubyLabel3' (type UILabel)} and 0
		0x18032D6DE: Jumps to 0x18032D702 (which throws a NRE) if m_rubyLabel3 equals 0. Implicitly present in managed code, so ignored here.
		0x18032D6E3: Copies {'effectDistance' (type UnityEngine.Vector2)} from rax into rdx
		0x18032D6E6: Copies {'m_rubyLabel3' (type UILabel)} from rbx into rcx
		0x18032D6E9: Reads unknown value in stack, offset 64 (0x40) and stores the pointer in register rbx as new constant constant25
		0x18032D6EE: Reads unknown value in stack, offset 72 (0x48) and stores the pointer in register rbp as new constant constant26
		0x18032D6F3: Reads unknown value in stack, offset 80 (0x50) and stores the pointer in register rsi as new constant constant27
		0x18032D6FD: [!] Calls managed method System.Void UILabel::set_effectDistance(UnityEngine.Vector2) on instance {'m_rubyLabel3' (type UILabel)} with arguments [{'effectDistance' (type UnityEngine.Vector2)}]

		0x18032D6FD: [!] Returns from the function

		0x18032D704: [!] Constructs and throws an exception of kind System.NullReferenceException




	Generated Pseudocode:

	Declaring Type: TagRuby
	System.Void Init(SceUILabel sceLabel, ETag tag)
		System.Int32 local3 = tag.value__

		base.Init()

		UnityEngine.Object object = UnityEngine.Resources.Load("TagRuby") //(String path)
		ulong local7 = 0

		if (object != 0)
		endif
        

		UnityEngine.Transform transform = base.transform

		UnityEngine.GameObject gameObject = UnityEngine.Object.Instantiate<UnityEngine.GameObject>(local7, transform) //(T original, Transform parent)
		this.m_obj = gameObject

		UILabel component = gameObject.GetComponent<UILabel>()
		UnityEngine.GameObject m_obj = this.m_obj
		this.m_rubyLabel = component

		System.Boolean isValidTypewriter = base.IsValidTypewriter()
		System.Boolean local15 = isValidTypewriter == False

		m_obj.SetActive(local15) //(Boolean value)
		UILabel m_rubyLabel = this.m_rubyLabel

		UILabel/Effect effectStyle = sceLabel.effectStyle
		System.Int32 local21 = effectStyle.value__

		m_rubyLabel.set_effectStyle()
		UILabel m_rubyLabel2 = this.m_rubyLabel

		UnityEngine.Color effectColor = .effectColor

		m_rubyLabel2.set_effectColor()
		UILabel m_rubyLabel3 = this.m_rubyLabel

		UnityEngine.Vector2 effectDistance = sceLabel.effectDistance

		m_rubyLabel3.effectDistance = effectDistance
		return
		throw new System.NullReferenceException()


Generated IL:
	Action of type Cpp2IL.Core.Analysis.Actions.x86.Important.Implicit4ByteFieldReadAction at (0x18032D59B) is corrupt (Local local3 has been stripped out for being unused, so doesn't have a variable.) and cannot be created as IL. Aborting here.


Method: System.Void TagRuby::AfterParse():	Method Body (x86 ASM):
		0x18032D070 push rdi		; DEBUG: {Register}/RDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18032D072 sub rsp,20h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 32
		0x18032D076 cmp byte ptr [18183DA46h],0		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6467869254 | None ||| N/A | 0
		0x18032D07D mov rdi,rcx		; DEBUG: {Register}/RDI {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x18032D080 jne short 000000018032D094h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D082 mov ecx,[1814C5F68h]		; DEBUG: {Register}/ECX {Memory}/None ||| RIP | 6464233320 | None ||| N/A | N/A
		0x18032D088 call 00000001800FEB90h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D08D mov byte ptr [18183DA46h],1		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6467869254 | None ||| N/A | 1
		0x18032D094 mov rcx,[rdi+18h]		; DEBUG: {Register}/RCX {Memory}/None ||| RDI | 24 | None ||| N/A | N/A
		0x18032D098 mov [rsp+30h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RSP | 48 | None ||| N/A | N/A
		0x18032D09D mov [rsp+38h],rbp		; DEBUG: {Memory}/None {Register}/RBP ||| RSP | 56 | None ||| N/A | N/A
		0x18032D0A2 mov [rsp+40h],rsi		; DEBUG: {Memory}/None {Register}/RSI ||| RSP | 64 | None ||| N/A | N/A
		0x18032D0A7 test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x18032D0AA je near ptr 000000018032D3CBh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D0B0 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18032D0B2 call 000000018060C530h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D0B7 movd xmm0,eax		; DEBUG: {Register}/XMM0 {Register}/EAX ||| None | 0 | None ||| N/A | N/A
		0x18032D0BB mov rax,[rdi+28h]		; DEBUG: {Register}/RAX {Memory}/None ||| RDI | 40 | None ||| N/A | N/A
		0x18032D0BF cvtdq2ps xmm0,xmm0		; DEBUG: {Register}/XMM0 {Register}/XMM0 ||| None | 0 | None ||| N/A | N/A
		0x18032D0C2 mulss xmm0,dword ptr [181261E80h]		; DEBUG: {Register}/XMM0 {Memory}/None ||| RIP | 6461726336 | None ||| N/A | N/A
		0x18032D0CA movss dword ptr [rdi+5Ch],xmm0		; DEBUG: {Memory}/None {Register}/XMM0 ||| RDI | 92 | None ||| N/A | N/A
		0x18032D0CF test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18032D0D2 je near ptr 000000018032D3CBh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D0D8 cmp dword ptr [rax+18h],0		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RAX | 24 | None ||| N/A | 0
		0x18032D0DC jbe near ptr 000000018032D3D3h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D0E2 mov esi,[rax+20h]		; DEBUG: {Register}/ESI {Memory}/None ||| RAX | 32 | None ||| N/A | N/A
		0x18032D0E5 mov rax,[rdi+30h]		; DEBUG: {Register}/RAX {Memory}/None ||| RDI | 48 | None ||| N/A | N/A
		0x18032D0E9 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18032D0EC je near ptr 000000018032D3CBh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D0F2 cmp dword ptr [rax+18h],0		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RAX | 24 | None ||| N/A | 0
		0x18032D0F6 jbe near ptr 000000018032D3E6h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D0FC cmp byte ptr [18183DA17h],0		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6467869207 | None ||| N/A | 0
		0x18032D103 mov rbp,[rax+20h]		; DEBUG: {Register}/RBP {Memory}/None ||| RAX | 32 | None ||| N/A | N/A
		0x18032D107 jne short 000000018032D11Bh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D109 mov ecx,[1814C5C58h]		; DEBUG: {Register}/ECX {Memory}/None ||| RIP | 6464232536 | None ||| N/A | N/A
		0x18032D10F call 00000001800FEB90h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D114 mov byte ptr [18183DA17h],1		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6467869207 | None ||| N/A | 1
		0x18032D11B mov rcx,[18189B288h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468252296 | None ||| N/A | N/A
		0x18032D122 test byte ptr [rcx+127h],2		; DEBUG: {Memory}/None {Immediate8}/None ||| RCX | 295 | None ||| N/A | 2
		0x18032D129 je short 000000018032D139h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D12B cmp dword ptr [rcx+0D8h],0		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RCX | 216 | None ||| N/A | 0
		0x18032D132 jne short 000000018032D139h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D134 call 000000018010EAF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D139 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18032D13B mov rcx,rbp		; DEBUG: {Register}/RCX {Register}/RBP ||| None | 0 | None ||| N/A | N/A
		0x18032D13E call 00000001802D1B70h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D143 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18032D145 mov rcx,rbp		; DEBUG: {Register}/RCX {Register}/RBP ||| None | 0 | None ||| N/A | N/A
		0x18032D148 mov ebx,eax		; DEBUG: {Register}/EBX {Register}/EAX ||| None | 0 | None ||| N/A | N/A
		0x18032D14A call 00000001802D1EF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D14F sub esi,ebx		; DEBUG: {Register}/ESI {Register}/EBX ||| None | 0 | None ||| N/A | N/A
		0x18032D151 sub esi,eax		; DEBUG: {Register}/ESI {Register}/EAX ||| None | 0 | None ||| N/A | N/A
		0x18032D153 mov rax,[rdi+28h]		; DEBUG: {Register}/RAX {Memory}/None ||| RDI | 40 | None ||| N/A | N/A
		0x18032D157 sub esi,2		; DEBUG: {Register}/ESI {Immediate8to32}/None ||| None | 0 | None ||| N/A | 2
		0x18032D15A mov [rdi+60h],esi		; DEBUG: {Memory}/None {Register}/ESI ||| RDI | 96 | None ||| N/A | N/A
		0x18032D15D test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18032D160 je near ptr 000000018032D3CBh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D166 cmp dword ptr [rax+18h],1		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RAX | 24 | None ||| N/A | 1
		0x18032D16A jbe near ptr 000000018032D3F9h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D170 mov esi,[rax+24h]		; DEBUG: {Register}/ESI {Memory}/None ||| RAX | 36 | None ||| N/A | N/A
		0x18032D173 mov rax,[rdi+30h]		; DEBUG: {Register}/RAX {Memory}/None ||| RDI | 48 | None ||| N/A | N/A
		0x18032D177 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18032D17A je near ptr 000000018032D3CBh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D180 cmp dword ptr [rax+18h],0		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RAX | 24 | None ||| N/A | 0
		0x18032D184 jbe near ptr 000000018032D40Ch		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D18A cmp byte ptr [18183DA17h],0		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6467869207 | None ||| N/A | 0
		0x18032D191 mov rbp,[rax+20h]		; DEBUG: {Register}/RBP {Memory}/None ||| RAX | 32 | None ||| N/A | N/A
		0x18032D195 jne short 000000018032D1A9h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D197 mov ecx,[1814C5C58h]		; DEBUG: {Register}/ECX {Memory}/None ||| RIP | 6464232536 | None ||| N/A | N/A
		0x18032D19D call 00000001800FEB90h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D1A2 mov byte ptr [18183DA17h],1		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6467869207 | None ||| N/A | 1
		0x18032D1A9 mov rcx,[18189B288h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468252296 | None ||| N/A | N/A
		0x18032D1B0 test byte ptr [rcx+127h],2		; DEBUG: {Memory}/None {Immediate8}/None ||| RCX | 295 | None ||| N/A | 2
		0x18032D1B7 je short 000000018032D1C7h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D1B9 cmp dword ptr [rcx+0D8h],0		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RCX | 216 | None ||| N/A | 0
		0x18032D1C0 jne short 000000018032D1C7h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D1C2 call 000000018010EAF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D1C7 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18032D1C9 mov rcx,rbp		; DEBUG: {Register}/RCX {Register}/RBP ||| None | 0 | None ||| N/A | N/A
		0x18032D1CC call 00000001802D1B70h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D1D1 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18032D1D3 mov rcx,rbp		; DEBUG: {Register}/RCX {Register}/RBP ||| None | 0 | None ||| N/A | N/A
		0x18032D1D6 mov ebx,eax		; DEBUG: {Register}/EBX {Register}/EAX ||| None | 0 | None ||| N/A | N/A
		0x18032D1D8 call 00000001802D1EF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D1DD mov rcx,[rdi+30h]		; DEBUG: {Register}/RCX {Memory}/None ||| RDI | 48 | None ||| N/A | N/A
		0x18032D1E1 lea ebp,[rbx+rax]		; DEBUG: {Register}/EBP {Memory}/None ||| RBX | 0 | RAX ||| N/A | N/A
		0x18032D1E4 test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x18032D1E7 je near ptr 000000018032D3CBh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D1ED cmp dword ptr [rcx+18h],1		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RCX | 24 | None ||| N/A | 1
		0x18032D1F1 jbe near ptr 000000018032D41Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D1F7 mov rbx,[rcx+28h]		; DEBUG: {Register}/RBX {Memory}/None ||| RCX | 40 | None ||| N/A | N/A
		0x18032D1FB mov rcx,[18189B288h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468252296 | None ||| N/A | N/A
		0x18032D202 test byte ptr [rcx+127h],2		; DEBUG: {Memory}/None {Immediate8}/None ||| RCX | 295 | None ||| N/A | 2
		0x18032D209 je short 000000018032D219h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D20B cmp dword ptr [rcx+0D8h],0		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RCX | 216 | None ||| N/A | 0
		0x18032D212 jne short 000000018032D219h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D214 call 000000018010EAF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D219 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18032D21B mov rcx,rbx		; DEBUG: {Register}/RCX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x18032D21E call 00000001802D1B70h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D223 sub esi,[rdi+58h]		; DEBUG: {Register}/ESI {Memory}/None ||| RDI | 88 | None ||| N/A | N/A
		0x18032D226 sub esi,eax		; DEBUG: {Register}/ESI {Register}/EAX ||| None | 0 | None ||| N/A | N/A
		0x18032D228 mov rax,[rdi+30h]		; DEBUG: {Register}/RAX {Memory}/None ||| RDI | 48 | None ||| N/A | N/A
		0x18032D22C sub esi,ebp		; DEBUG: {Register}/ESI {Register}/EBP ||| None | 0 | None ||| N/A | N/A
		0x18032D22E sub esi,4		; DEBUG: {Register}/ESI {Immediate8to32}/None ||| None | 0 | None ||| N/A | 4
		0x18032D231 mov [rdi+64h],esi		; DEBUG: {Memory}/None {Register}/ESI ||| RDI | 100 | None ||| N/A | N/A
		0x18032D234 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18032D237 je near ptr 000000018032D3CBh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D23D cmp dword ptr [rax+18h],1		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RAX | 24 | None ||| N/A | 1
		0x18032D241 jbe near ptr 000000018032D432h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D247 mov rcx,[18185E770h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468003696 | None ||| N/A | N/A
		0x18032D24E mov rbx,[rax+28h]		; DEBUG: {Register}/RBX {Memory}/None ||| RAX | 40 | None ||| N/A | N/A
		0x18032D252 test byte ptr [rcx+127h],2		; DEBUG: {Memory}/None {Immediate8}/None ||| RCX | 295 | None ||| N/A | 2
		0x18032D259 je short 000000018032D269h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D25B cmp dword ptr [rcx+0D8h],0		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RCX | 216 | None ||| N/A | 0
		0x18032D262 jne short 000000018032D269h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D264 call 000000018010EAF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D269 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18032D26B mov rcx,rbx		; DEBUG: {Register}/RCX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x18032D26E call 00000001807ABEA0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D273 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18032D275 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18032D278 mov rsi,rax		; DEBUG: {Register}/RSI {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18032D27B call 00000001802D1EF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D280 mov rcx,[rdi+18h]		; DEBUG: {Register}/RCX {Memory}/None ||| RDI | 24 | None ||| N/A | N/A
		0x18032D284 mov [rdi+58h],eax		; DEBUG: {Memory}/None {Register}/EAX ||| RDI | 88 | None ||| N/A | N/A
		0x18032D287 test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x18032D28A je near ptr 000000018032D3CBh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D290 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18032D292 call 000000018060C530h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D297 xor r9d,r9d		; DEBUG: {Register}/R9D {Register}/R9D ||| None | 0 | None ||| N/A | N/A
		0x18032D29A mov r8d,eax		; DEBUG: {Register}/R8D {Register}/EAX ||| None | 0 | None ||| N/A | N/A
		0x18032D29D mov rdx,rsi		; DEBUG: {Register}/RDX {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x18032D2A0 mov rcx,rdi		; DEBUG: {Register}/RCX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x18032D2A3 call 000000018032D4B0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D2A8 mov rcx,[rdi+30h]		; DEBUG: {Register}/RCX {Memory}/None ||| RDI | 48 | None ||| N/A | N/A
		0x18032D2AC mov ebp,eax		; DEBUG: {Register}/EBP {Register}/EAX ||| None | 0 | None ||| N/A | N/A
		0x18032D2AE test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x18032D2B1 je near ptr 000000018032D3CBh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D2B7 cmp dword ptr [rcx+18h],2		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RCX | 24 | None ||| N/A | 2
		0x18032D2BB jbe near ptr 000000018032D445h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D2C1 mov rbx,[rcx+30h]		; DEBUG: {Register}/RBX {Memory}/None ||| RCX | 48 | None ||| N/A | N/A
		0x18032D2C5 mov rcx,[rdi+50h]		; DEBUG: {Register}/RCX {Memory}/None ||| RDI | 80 | None ||| N/A | N/A
		0x18032D2C9 test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x18032D2CC je near ptr 000000018032D3CBh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D2D2 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18032D2D4 call 000000018060C530h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D2D9 xor r9d,r9d		; DEBUG: {Register}/R9D {Register}/R9D ||| None | 0 | None ||| N/A | N/A
		0x18032D2DC mov r8d,eax		; DEBUG: {Register}/R8D {Register}/EAX ||| None | 0 | None ||| N/A | N/A
		0x18032D2DF mov rdx,rbx		; DEBUG: {Register}/RDX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x18032D2E2 mov rcx,rdi		; DEBUG: {Register}/RCX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x18032D2E5 call 000000018032D4B0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D2EA sub ebp,eax		; DEBUG: {Register}/EBP {Register}/EAX ||| None | 0 | None ||| N/A | N/A
		0x18032D2EC mov rbx,[rdi+30h]		; DEBUG: {Register}/RBX {Memory}/None ||| RDI | 48 | None ||| N/A | N/A
		0x18032D2F0 jns near ptr 000000018032D384h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D2F6 test rbx,rbx		; DEBUG: {Register}/RBX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x18032D2F9 je near ptr 000000018032D3CBh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D2FF cmp dword ptr [rbx+18h],1		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RBX | 24 | None ||| N/A | 1
		0x18032D303 jbe near ptr 000000018032D458h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D309 mov rbp,[rbx+28h]		; DEBUG: {Register}/RBP {Memory}/None ||| RBX | 40 | None ||| N/A | N/A
		0x18032D30D xor r9d,r9d		; DEBUG: {Register}/R9D {Register}/R9D ||| None | 0 | None ||| N/A | N/A
		0x18032D310 mov r8d,eax		; DEBUG: {Register}/R8D {Register}/EAX ||| None | 0 | None ||| N/A | N/A
		0x18032D313 mov rdx,rsi		; DEBUG: {Register}/RDX {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x18032D316 mov rcx,rdi		; DEBUG: {Register}/RCX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x18032D319 call 000000018032D710h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D31E test rbp,rbp		; DEBUG: {Register}/RBP {Register}/RBP ||| None | 0 | None ||| N/A | N/A
		0x18032D321 je near ptr 000000018032D3CBh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D327 xor r9d,r9d		; DEBUG: {Register}/R9D {Register}/R9D ||| None | 0 | None ||| N/A | N/A
		0x18032D32A mov r8,rax		; DEBUG: {Register}/R8 {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18032D32D mov rdx,rsi		; DEBUG: {Register}/RDX {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x18032D330 mov rcx,rbp		; DEBUG: {Register}/RCX {Register}/RBP ||| None | 0 | None ||| N/A | N/A
		0x18032D333 call 0000000180D53370h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D338 mov rdi,rax		; DEBUG: {Register}/RDI {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18032D33B test rbx,rbx		; DEBUG: {Register}/RBX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x18032D33E je near ptr 000000018032D3CBh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D344 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18032D347 je short 000000018032D361h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D349 mov rdx,[rbx]		; DEBUG: {Register}/RDX {Memory}/None ||| RBX | 0 | None ||| N/A | N/A
		0x18032D34C mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18032D34F mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18032D353 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D358 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18032D35B je near ptr 000000018032D46Bh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D361 cmp dword ptr [rbx+18h],1		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RBX | 24 | None ||| N/A | 1
		0x18032D365 jbe near ptr 000000018032D47Eh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D36B mov [rbx+28h],rdi		; DEBUG: {Memory}/None {Register}/RDI ||| RBX | 40 | None ||| N/A | N/A
		0x18032D36F mov rsi,[rsp+40h]		; DEBUG: {Register}/RSI {Memory}/None ||| RSP | 64 | None ||| N/A | N/A
		0x18032D374 mov rbp,[rsp+38h]		; DEBUG: {Register}/RBP {Memory}/None ||| RSP | 56 | None ||| N/A | N/A
		0x18032D379 mov rbx,[rsp+30h]		; DEBUG: {Register}/RBX {Memory}/None ||| RSP | 48 | None ||| N/A | N/A
		0x18032D37E add rsp,20h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 32
		0x18032D382 pop rdi		; DEBUG: {Register}/RDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18032D383 ret		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18032D384 mov rdi,[rdi+50h]		; DEBUG: {Register}/RDI {Memory}/None ||| RDI | 80 | None ||| N/A | N/A
		0x18032D388 test rbx,rbx		; DEBUG: {Register}/RBX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x18032D38B je short 000000018032D3CBh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D38D cmp dword ptr [rbx+18h],2		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RBX | 24 | None ||| N/A | 2
		0x18032D391 jbe near ptr 000000018032D491h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D397 mov rcx,[rbx+30h]		; DEBUG: {Register}/RCX {Memory}/None ||| RBX | 48 | None ||| N/A | N/A
		0x18032D39B test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x18032D39E je short 000000018032D3CBh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D3A0 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18032D3A2 call 00000001804C6330h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D3A7 test rdi,rdi		; DEBUG: {Register}/RDI {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x18032D3AA je short 000000018032D3CBh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D3AC movd xmm1,ebp		; DEBUG: {Register}/XMM1 {Register}/EBP ||| None | 0 | None ||| N/A | N/A
		0x18032D3B0 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18032D3B3 movd xmm0,eax		; DEBUG: {Register}/XMM0 {Register}/EAX ||| None | 0 | None ||| N/A | N/A
		0x18032D3B7 mov rcx,rdi		; DEBUG: {Register}/RCX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x18032D3BA cvtdq2ps xmm1,xmm1		; DEBUG: {Register}/XMM1 {Register}/XMM1 ||| None | 0 | None ||| N/A | N/A
		0x18032D3BD cvtdq2ps xmm0,xmm0		; DEBUG: {Register}/XMM0 {Register}/XMM0 ||| None | 0 | None ||| N/A | N/A
		0x18032D3C0 divss xmm1,xmm0		; DEBUG: {Register}/XMM1 {Register}/XMM0 ||| None | 0 | None ||| N/A | N/A
		0x18032D3C4 call 000000018060D1C0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D3C9 jmp short 000000018032D36Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D3CB xor ecx,ecx		; DEBUG: {Register}/ECX {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x18032D3CD call 000000018012BDA0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D3D2 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.Void TagRuby::AfterParse():
		End of function at 0x18032D3D3
		Absolute End is at 0x18032D3D3
		Identified Jump Destination addresses:

		0x18032D070: Saves the content of rdi to the stack
		0x18032D076: Compares {Unknown Global at 0x18183DA46, first ten bytes are [103 1 80 54 1 0 152 54 1 0], or as chars "gP6 6 "} and 0
		0x18032D07D: Copies {'this' (function parameter, type TagRuby)} from rcx into rdi
		0x18032D080: Jumps to 0x18032D094 if {Unknown Global at 0x18183DA46, first ten bytes are [103 1 80 54 1 0 152 54 1 0], or as chars "gP6 6 "} != 0

		0x18032D082: Reads {Unknown Global at 0x1814C5F68, first ten bytes are [149 106 0 0 149 10 0 0 149 42], or as chars "j  
  *"} into register rcx as a constant constant3
		0x18032D088: Attempts to load the il2cpp metadata for this method (method id 27285) and init it cpp-side.

		0x18032D094: [!] Reads field m_sceLabel from {'this' (function parameter, type TagRuby)} and stores in a new local {'m_sceLabel' (type SceUILabel)}

		0x18032D0A7: [!] Compares {'m_sceLabel' (type SceUILabel)} and 0
		0x18032D0AA: Jumps to 0x18032D3CB (which throws a NRE) if m_sceLabel equals 0. Implicitly present in managed code, so ignored here.
		0x18032D0B2: [!] Calls managed method System.Int32 UILabel::get_fontSize() on instance {'m_sceLabel' (type SceUILabel)} and stores the result in {'fontSize' (type System.Int32)}

		0x18032D0BB: [!] Reads field m_tagIndices from {'this' (function parameter, type TagRuby)} and stores in a new local {'m_tagIndices' (type System.Int32[])}

		0x18032D0C2: Multiplies  by the constant value at 0x181261E80 in the binary, which is 0,8, and stores the result in new local {'local5' (type System.Single)} in register xmm0
		0x18032D0CA: [!] Sets the field m_dy (Type System.Single) on local {'this' (function parameter, type TagRuby)} to the value stored in {'local5' (type System.Single)}
		0x18032D0CF: [!] Compares {'m_tagIndices' (type System.Int32[])} and 0
		0x18032D0D2: Jumps to 0x18032D3CB (which throws a NRE) if m_tagIndices equals 0. Implicitly present in managed code, so ignored here.
		0x18032D0D8: [!] Compares {Property System.Int32 System.Array::Length() on {'m_tagIndices' (type System.Int32[])}} and 0
		0x18032D0DC: Jumps to 0x18032D3D3 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'m_tagIndices' (type System.Int32[])}} is less than or equal to 0. Implicitly present in managed code, so ignored here.
		0x18032D0E2: [!] Reads a value from the array {'m_tagIndices' (type System.Int32[])} at index 0, into a new local {'local6' (type System.Int32)}

		0x18032D0E5: [!] Reads field m_subs from {'this' (function parameter, type TagRuby)} and stores in a new local {'m_subs' (type System.String[])}

		0x18032D0E9: [!] Compares {'m_subs' (type System.String[])} and 0
		0x18032D0EC: Jumps to 0x18032D3CB (which throws a NRE) if m_subs equals 0. Implicitly present in managed code, so ignored here.
		0x18032D0F2: [!] Compares {Property System.Int32 System.Array::Length() on {'m_subs' (type System.String[])}} and 0
		0x18032D0F6: Jumps to 0x18032D3E6 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'m_subs' (type System.String[])}} is less than or equal to 0. Implicitly present in managed code, so ignored here.
		0x18032D0FC: Compares {Unknown Global at 0x18183DA17, first ten bytes are [1 0 53 1 0 99 53 1 0 224], or as chars " 5 c5 à"} and 0
		0x18032D103: [!] Reads a value from the array {'m_subs' (type System.String[])} at index 0, into a new local {'local8' (type System.String)}

		0x18032D107: Jumps to 0x18032D11B if {Unknown Global at 0x18183DA17, first ten bytes are [1 0 53 1 0 99 53 1 0 224], or as chars " 5 c5 à"} != 0

		0x18032D109: Loads string "dj" into register rcx as constant {'constant11' (constant value of type Cpp2IL.Core.Analysis.ResultModels.Il2CppString)}
		0x18032D10F: Attempts to load the il2cpp metadata for this method (method id 0) and init it cpp-side.

		0x18032D11B: Loads the type definition for managed type DisplayUtility as a constant "DisplayUtility" in rcx
		0x18032D122: Compares "{il2cpp field on {'DisplayUtility' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" and 2
		0x18032D129: Jumps to 0x18032D139 if "{il2cpp field on {'DisplayUtility' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" equals 2

		0x18032D12B: Compares "{il2cpp field on {'DisplayUtility' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" and 0
		0x18032D132: Jumps to 0x18032D139 if "{il2cpp field on {'DisplayUtility' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" != 0

		0x18032D134: Calls the il2cpp cctor for the type DisplayUtility
		0x18032D13B: Copies {'local8' (type System.String)} from rbp into rcx
		0x18032D13E: [!] Calls static managed method System.Int32 DisplayUtility::GetBBCodeLength(System.String) with arguments [{'local8' (type System.String)}] and stores the result in {'bBCodeLength' (type System.Int32)}

		0x18032D145: Copies {'local8' (type System.String)} from rbp into rcx
		0x18032D148: Copies {'bBCodeLength' (type System.Int32)} from rax into rbx
		0x18032D14A: [!] Calls static managed method System.Int32 DisplayUtility::GetSpaceLength(System.String) with arguments [{'local8' (type System.String)}] and stores the result in {'spaceLength' (type System.Int32)}

		0x18032D14F: [!] Subtracts {'bBCodeLength' (type System.Int32)} from {'local6' (type System.Int32)} and stores the result in {'local6' (type System.Int32)}
		0x18032D151: [!] Subtracts {'spaceLength' (type System.Int32)} from {'local6' (type System.Int32)} and stores the result in {'local6' (type System.Int32)}
		0x18032D153: [!] Reads field m_tagIndices from {'this' (function parameter, type TagRuby)} and stores in a new local {'m_tagIndices2' (type System.Int32[])}

		0x18032D15A: [!] Sets the field m_sb (Type System.Int32) on local {'this' (function parameter, type TagRuby)} to the value stored in {'local6' (type System.Int32)}
		0x18032D15D: [!] Compares {'m_tagIndices2' (type System.Int32[])} and 0
		0x18032D160: Jumps to 0x18032D3CB (which throws a NRE) if m_tagIndices2 equals 0. Implicitly present in managed code, so ignored here.
		0x18032D166: [!] Compares {Property System.Int32 System.Array::Length() on {'m_tagIndices2' (type System.Int32[])}} and 1
		0x18032D16A: Jumps to 0x18032D3F9 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'m_tagIndices2' (type System.Int32[])}} is less than or equal to 1. Implicitly present in managed code, so ignored here.
		0x18032D170: [!] Reads a value from the array {'m_tagIndices2' (type System.Int32[])} at index 0, into a new local {'local14' (type System.Int32)}

		0x18032D173: [!] Reads field m_subs from {'this' (function parameter, type TagRuby)} and stores in a new local {'m_subs2' (type System.String[])}

		0x18032D177: [!] Compares {'m_subs2' (type System.String[])} and 0
		0x18032D17A: Jumps to 0x18032D3CB (which throws a NRE) if m_subs2 equals 0. Implicitly present in managed code, so ignored here.
		0x18032D180: [!] Compares {Property System.Int32 System.Array::Length() on {'m_subs2' (type System.String[])}} and 0
		0x18032D184: Jumps to 0x18032D40C (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'m_subs2' (type System.String[])}} is less than or equal to 0. Implicitly present in managed code, so ignored here.
		0x18032D18A: Compares {Unknown Global at 0x18183DA17, first ten bytes are [1 0 53 1 0 99 53 1 0 224], or as chars " 5 c5 à"} and 0
		0x18032D191: [!] Reads a value from the array {'m_subs2' (type System.String[])} at index 0, into a new local {'local16' (type System.String)}

		0x18032D195: Jumps to 0x18032D1A9 if {Unknown Global at 0x18183DA17, first ten bytes are [1 0 53 1 0 99 53 1 0 224], or as chars " 5 c5 à"} != 0

		0x18032D197: Loads string "dj" into register rcx as constant {'constant23' (constant value of type Cpp2IL.Core.Analysis.ResultModels.Il2CppString)}
		0x18032D19D: Attempts to load the il2cpp metadata for this method (method id 0) and init it cpp-side.

		0x18032D1A9: Loads the type definition for managed type DisplayUtility as a constant "DisplayUtility" in rcx
		0x18032D1B0: Compares "{il2cpp field on {'DisplayUtility' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" and 2
		0x18032D1B7: Jumps to 0x18032D1C7 if "{il2cpp field on {'DisplayUtility' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" equals 2

		0x18032D1B9: Compares "{il2cpp field on {'DisplayUtility' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" and 0
		0x18032D1C0: Jumps to 0x18032D1C7 if "{il2cpp field on {'DisplayUtility' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" != 0

		0x18032D1C2: Calls the il2cpp cctor for the type DisplayUtility
		0x18032D1C9: Copies {'local16' (type System.String)} from rbp into rcx
		0x18032D1CC: [!] Calls static managed method System.Int32 DisplayUtility::GetBBCodeLength(System.String) with arguments [{'local16' (type System.String)}] and stores the result in {'bBCodeLength2' (type System.Int32)}

		0x18032D1D3: Copies {'local16' (type System.String)} from rbp into rcx
		0x18032D1D6: Copies {'bBCodeLength2' (type System.Int32)} from rax into rbx
		0x18032D1D8: [!] Calls static managed method System.Int32 DisplayUtility::GetSpaceLength(System.String) with arguments [{'local16' (type System.String)}] and stores the result in {'spaceLength2' (type System.Int32)}

		0x18032D1DD: [!] Reads field m_subs from {'this' (function parameter, type TagRuby)} and stores in a new local {'m_subs3' (type System.String[])}

		0x18032D1E4: [!] Compares {'m_subs3' (type System.String[])} and 0
		0x18032D1E7: Jumps to 0x18032D3CB (which throws a NRE) if m_subs3 equals 0. Implicitly present in managed code, so ignored here.
		0x18032D1ED: [!] Compares {Property System.Int32 System.Array::Length() on {'m_subs3' (type System.String[])}} and 1
		0x18032D1F1: Jumps to 0x18032D41F (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'m_subs3' (type System.String[])}} is less than or equal to 1. Implicitly present in managed code, so ignored here.
		0x18032D1F7: [!] Reads a value from the array {'m_subs3' (type System.String[])} at index 1, into a new local {'local22' (type System.String)}

		0x18032D1FB: Loads the type definition for managed type DisplayUtility as a constant "DisplayUtility" in rcx
		0x18032D202: Compares "{il2cpp field on {'DisplayUtility' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" and 2
		0x18032D209: Jumps to 0x18032D219 if "{il2cpp field on {'DisplayUtility' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" equals 2

		0x18032D20B: Compares "{il2cpp field on {'DisplayUtility' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" and 0
		0x18032D212: Jumps to 0x18032D219 if "{il2cpp field on {'DisplayUtility' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" != 0

		0x18032D214: Calls the il2cpp cctor for the type DisplayUtility
		0x18032D21B: Copies {'local22' (type System.String)} from rbx into rcx
		0x18032D21E: [!] Calls static managed method System.Int32 DisplayUtility::GetBBCodeLength(System.String) with arguments [{'local22' (type System.String)}] and stores the result in {'bBCodeLength3' (type System.Int32)}

		0x18032D226: [!] Subtracts {'bBCodeLength3' (type System.Int32)} from {'local14' (type System.Int32)} and stores the result in {'local14' (type System.Int32)}
		0x18032D228: [!] Reads field m_subs from {'this' (function parameter, type TagRuby)} and stores in a new local {'m_subs4' (type System.String[])}

		0x18032D22C: [!] Subtracts {'local16' (type System.String)} from {'local14' (type System.Int32)} and stores the result in {'local14' (type System.Int32)}
		0x18032D231: [!] Sets the field m_eb (Type System.Int32) on local {'this' (function parameter, type TagRuby)} to the value stored in {'local14' (type System.Int32)}
		0x18032D234: [!] Compares {'m_subs4' (type System.String[])} and 0
		0x18032D237: Jumps to 0x18032D3CB (which throws a NRE) if m_subs4 equals 0. Implicitly present in managed code, so ignored here.
		0x18032D23D: [!] Compares {Property System.Int32 System.Array::Length() on {'m_subs4' (type System.String[])}} and 1
		0x18032D241: Jumps to 0x18032D432 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'m_subs4' (type System.String[])}} is less than or equal to 1. Implicitly present in managed code, so ignored here.
		0x18032D247: Loads the type definition for managed type NGUIText as a constant "NGUIText" in rcx
		0x18032D24E: [!] Reads a value from the array {'m_subs4' (type System.String[])} at index 1, into a new local {'local26' (type System.String)}

		0x18032D252: Compares "{il2cpp field on {'NGUIText' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" and 2
		0x18032D259: Jumps to 0x18032D269 if "{il2cpp field on {'NGUIText' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" equals 2

		0x18032D25B: Compares "{il2cpp field on {'NGUIText' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" and 0
		0x18032D262: Jumps to 0x18032D269 if "{il2cpp field on {'NGUIText' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" != 0

		0x18032D264: Calls the il2cpp cctor for the type NGUIText
		0x18032D26B: Copies {'local26' (type System.String)} from rbx into rcx
		0x18032D26E: [!] Calls static managed method System.String NGUIText::StripSymbols(System.String) with arguments [{'local26' (type System.String)}] and stores the result in {'string' (type System.String)}

		0x18032D275: Copies {'string' (type System.String)} from rax into rcx
		0x18032D278: Copies {'string' (type System.String)} from rax into rsi
		0x18032D27B: [!] Calls static managed method System.Int32 DisplayUtility::GetSpaceLength(System.String) with arguments [{'string' (type System.String)}] and stores the result in {'spaceLength3' (type System.Int32)}

		0x18032D280: [!] Reads field m_sceLabel from {'this' (function parameter, type TagRuby)} and stores in a new local {'m_sceLabel2' (type SceUILabel)}

		0x18032D284: [!] Sets the field m_spaceNum (Type System.Int32) on local {'this' (function parameter, type TagRuby)} to the value stored in {'spaceLength3' (type System.Int32)}
		0x18032D287: [!] Compares {'m_sceLabel2' (type SceUILabel)} and 0
		0x18032D28A: Jumps to 0x18032D3CB (which throws a NRE) if m_sceLabel2 equals 0. Implicitly present in managed code, so ignored here.
		0x18032D292: [!] Calls managed method System.Int32 UILabel::get_fontSize() on instance {'m_sceLabel2' (type SceUILabel)} and stores the result in {'fontSize2' (type System.Int32)}

		0x18032D29A: Copies {'fontSize2' (type System.Int32)} from rax into r8
		0x18032D29D: Copies {'string' (type System.String)} from rsi into rdx
		0x18032D2A0: Copies {'this' (function parameter, type TagRuby)} from rdi into rcx
		0x18032D2A3: [!] Calls managed method System.Int32 TagRuby::CalcTextWidth(System.String,System.Int32) on instance {'this' (function parameter, type TagRuby)} with arguments [{'string' (type System.String)}, {'fontSize2' (type System.Int32)}] and stores the result in {'int32' (type System.Int32)}

		0x18032D2A8: [!] Reads field m_subs from {'this' (function parameter, type TagRuby)} and stores in a new local {'m_subs5' (type System.String[])}

		0x18032D2AC: Copies {'int32' (type System.Int32)} from rax into rbp
		0x18032D2AE: [!] Compares {'m_subs5' (type System.String[])} and 0
		0x18032D2B1: Jumps to 0x18032D3CB (which throws a NRE) if m_subs5 equals 0. Implicitly present in managed code, so ignored here.
		0x18032D2B7: [!] Compares {Property System.Int32 System.Array::Length() on {'m_subs5' (type System.String[])}} and 2
		0x18032D2BB: Jumps to 0x18032D445 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'m_subs5' (type System.String[])}} is less than or equal to 2. Implicitly present in managed code, so ignored here.
		0x18032D2C1: [!] Reads a value from the array {'m_subs5' (type System.String[])} at index 2, into a new local {'local37' (type System.String)}

		0x18032D2C5: [!] Reads field m_rubyLabel from {'this' (function parameter, type TagRuby)} and stores in a new local {'m_rubyLabel' (type UILabel)}

		0x18032D2C9: [!] Compares {'m_rubyLabel' (type UILabel)} and 0
		0x18032D2CC: Jumps to 0x18032D3CB (which throws a NRE) if m_rubyLabel equals 0. Implicitly present in managed code, so ignored here.
		0x18032D2D4: [!] Calls managed method System.Int32 UILabel::get_fontSize() on instance {'m_rubyLabel' (type UILabel)} and stores the result in {'fontSize3' (type System.Int32)}

		0x18032D2DC: Copies {'fontSize3' (type System.Int32)} from rax into r8
		0x18032D2DF: Copies {'local37' (type System.String)} from rbx into rdx
		0x18032D2E2: Copies {'this' (function parameter, type TagRuby)} from rdi into rcx
		0x18032D2E5: [!] Calls managed method System.Int32 TagRuby::CalcTextWidth(System.String,System.Int32) on instance {'this' (function parameter, type TagRuby)} with arguments [{'local37' (type System.String)}, {'fontSize2' (type System.Int32)}] and stores the result in {'int322' (type System.Int32)}

		0x18032D2EA: [!] Subtracts {'int322' (type System.Int32)} from {'int32' (type System.Int32)} and stores the result in {'int32' (type System.Int32)}
		0x18032D2EC: [!] Reads field m_subs from {'this' (function parameter, type TagRuby)} and stores in a new local {'m_subs6' (type System.String[])}

		0x18032D2F6: [!] Compares {'m_subs6' (type System.String[])} and 0
		0x18032D2F9: Jumps to 0x18032D3CB (which throws a NRE) if m_subs6 equals 0. Implicitly present in managed code, so ignored here.
		0x18032D2FF: [!] Compares {Property System.Int32 System.Array::Length() on {'m_subs6' (type System.String[])}} and 1
		0x18032D303: Jumps to 0x18032D458 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'m_subs6' (type System.String[])}} is less than or equal to 1. Implicitly present in managed code, so ignored here.
		0x18032D309: [!] Reads a value from the array {'m_subs6' (type System.String[])} at index 1, into a new local {'local44' (type System.String)}

		0x18032D310: Copies {'int322' (type System.Int32)} from rax into r8
		0x18032D313: Copies {'string' (type System.String)} from rsi into rdx
		0x18032D316: Copies {'this' (function parameter, type TagRuby)} from rdi into rcx
		0x18032D319: [!] Calls managed method System.String TagRuby::InsertBlank(System.String,System.Int32) on instance {'this' (function parameter, type TagRuby)} with arguments [{'string' (type System.String)}, {'fontSize2' (type System.Int32)}] and stores the result in {'string2' (type System.String)}

		0x18032D31E: [!] Compares {'local44' (type System.String)} and 0
		0x18032D321: Jumps to 0x18032D3CB (which throws a NRE) if local44 equals 0. Implicitly present in managed code, so ignored here.
		0x18032D32A: Copies {'string2' (type System.String)} from rax into r8
		0x18032D32D: Copies {'string' (type System.String)} from rsi into rdx
		0x18032D330: Copies {'local44' (type System.String)} from rbp into rcx
		0x18032D333: [!] Calls managed method System.String System.String::Replace(System.String,System.String) on instance {'local44' (type System.String)} with arguments [{'string' (type System.String)}, {'string2' (type System.String)}] and stores the result in {'string3' (type System.String)}

		0x18032D338: Copies {'string3' (type System.String)} from rax into rdi
		0x18032D33B: [!] Compares {'m_subs6' (type System.String[])} and 0
		0x18032D33E: Jumps to 0x18032D3CB (which throws a NRE) if m_subs6 equals 0. Implicitly present in managed code, so ignored here.
		0x18032D344: [!] Compares {'string3' (type System.String)} and 0
		0x18032D347: Jumps to 0x18032D361 (which is an if statement's body) if string3 equals 0 ;  - Increasing indentation - is standard if, unimportant is False

		0x18032D349: Loads the class pointer from m_subs6 into a constant constant52 in register rdx
		0x18032D34C: Copies {'string3' (type System.String)} from rax into rcx
		0x18032D34F: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='String', parentType=System.Object] and stores in register rdx
		0x18032D358: [!] Compares {'string3' (type System.String)} and 0
		0x18032D35B: Jumps to 0x18032D46B if string3 equals 0 ;  - This is probably a goto, jumping to 0x18032D46B which is after end of current block @ 0x18032D361 (started at 0x18032D349)

		0x18032D361: [!] Compares {Property System.Int32 System.Array::Length() on {'m_subs6' (type System.String[])}} and 1
		0x18032D365: Jumps to 0x18032D47E (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'m_subs6' (type System.String[])}} is less than or equal to 1. Implicitly present in managed code, so ignored here.
		0x18032D36B: Sets the value at offset 1 in array m_subs6 to {'string3' (type System.String)}

		Potential Loop Start (0x18032D36F):
		0x18032D36F: Reads unknown value in stack, offset 64 (0x40) and stores the pointer in register rsi as new constant constant55
		0x18032D374: Reads unknown value in stack, offset 56 (0x38) and stores the pointer in register rbp as new constant constant56
		0x18032D379: Reads unknown value in stack, offset 48 (0x30) and stores the pointer in register rbx as new constant constant57
		0x18032D383: [!] Returns from the function

		0x18032D384: [!] Reads field  from {'string3' (type System.String)} and stores in a new local 

		0x18032D388: [!] Compares {'constant57' (constant value of type Cpp2IL.Core.Analysis.ResultModels.StackPointer)} and 0
		0x18032D38B: Jumps to 0x18032D3CB (which throws a NRE) if constant57 equals 0. Implicitly present in managed code, so ignored here.
		0x18032D38D: Compares "{il2cpp field on {'constant57' (constant value of type Cpp2IL.Core.Analysis.ResultModels.StackPointer)}, offset 0x18}" and 2
		0x18032D391: Jumps to 0x18032D491 (which throws a NRE) if "{il2cpp field on {'constant57' (constant value of type Cpp2IL.Core.Analysis.ResultModels.StackPointer)}, offset 0x18}" is less than or equal to 2. Implicitly present in managed code, so ignored here.
		0x18032D39B: [!] Compares {'local44' (type System.String)} and 0
		0x18032D39E: Jumps to 0x18032D3CB (which throws a NRE) if local44 equals 0. Implicitly present in managed code, so ignored here.
		0x18032D3A0: Clears register rdx, yielding zero-local {'local49' (type System.Int32)}
		0x18032D3A2: [!] Calls managed method System.Int32 System.String::get_Length() on instance {'local44' (type System.String)} and stores the result in {'length' (type System.Int32)}

		0x18032D3A7: [!] Compares {'string3' (type System.String)} and 0
		0x18032D3AA: Jumps to 0x18032D3CB (which throws a NRE) if string3 equals 0. Implicitly present in managed code, so ignored here.
		0x18032D3B7: Copies {'string3' (type System.String)} from rdi into rcx
		0x18032D3C4: [!] Calls managed method System.Void UILabel::set_floatSpacingX(System.Single) on instance {'string3' (type System.String)} with arguments [{'local49' (type System.Int32)}] ;  - This is an instance method, but the type of the 'this' parameter is mismatched. Expecting UILabel, actually System.String

		0x18032D3C9: Jumps to 0x18032D36F - which is still in this function, but further up. Probably indicative that this is a loop.
		0x18032D3CD: [!] Constructs and throws an exception of kind System.NullReferenceException




	Generated Pseudocode:

	Declaring Type: TagRuby
	System.Void AfterParse()
		SceUILabel m_sceLabel = this.m_sceLabel

		System.Int32 fontSize = m_sceLabel.fontSize
		System.Int32[] m_tagIndices = this.m_tagIndices
		System.Single local5 =  * 0,8
		this.m_dy = local5
		System.Int32 local6 = m_tagIndices[0]
		System.String[] m_subs = this.m_subs
		System.String local8 = m_subs[0]

		System.Int32 bBCodeLength = DisplayUtility.GetBBCodeLength(local8) //(String self)

		System.Int32 spaceLength = DisplayUtility.GetSpaceLength(local8) //(String self)
		local6 -= bBCodeLength
		local6 -= spaceLength
		System.Int32[] m_tagIndices2 = this.m_tagIndices
		this.m_sb = local6
		System.Int32 local14 = m_tagIndices2[0]
		System.String[] m_subs2 = this.m_subs
		System.String local16 = m_subs2[0]

		System.Int32 bBCodeLength2 = DisplayUtility.GetBBCodeLength(local16) //(String self)
		bBCodeLength = bBCodeLength2

		System.Int32 spaceLength2 = DisplayUtility.GetSpaceLength(local16) //(String self)
		System.String[] m_subs3 = this.m_subs
		System.String local22 = m_subs3[1]

		System.Int32 bBCodeLength3 = DisplayUtility.GetBBCodeLength(local22) //(String self)
		local14 -= bBCodeLength3
		System.String[] m_subs4 = this.m_subs
		local14 -= local16
		this.m_eb = local14
		System.String local26 = m_subs4[1]

		System.String string = NGUIText.StripSymbols(local26) //(String text)

		System.Int32 spaceLength3 = DisplayUtility.GetSpaceLength(string) //(String self)
		SceUILabel m_sceLabel2 = this.m_sceLabel
		this.m_spaceNum = spaceLength3

		System.Int32 fontSize2 = m_sceLabel2.fontSize

		System.Int32 int32 = this.CalcTextWidth(string, fontSize2) //(String str, Int32 fontSize)
		System.String[] m_subs5 = this.m_subs
		System.String local37 = m_subs5[2]
		UILabel m_rubyLabel = this.m_rubyLabel

		System.Int32 fontSize3 = m_rubyLabel.fontSize
		fontSize2 = fontSize3

		System.Int32 int322 = this.CalcTextWidth(local37, fontSize2) //(String str, Int32 fontSize)
		int32 -= int322
		System.String[] m_subs6 = this.m_subs
		System.String local44 = m_subs6[1]
		fontSize2 = int322

		System.String string2 = this.InsertBlank(string, fontSize2) //(String str, Int32 rubyWidth)

		System.String string3 = local44.Replace(string, string2) //(String oldValue, String newValue)

		if (string3 != 0)

		    if (string3 == 0)
                goto INSN_18032D46B
            endif
		endif
        
		m_subs6[1] = string3
		return
		  = string3.
		ulong local49 = 0

		System.Int32 length = local44.Length

		string3.floatSpacingX = local49
		throw new System.NullReferenceException()


Generated IL:
	Action of type Cpp2IL.Core.Analysis.Actions.x86.Important.MultiplyRegByGlobalAction at (0x18032D0C2) is corrupt (Operand we were multiplying by is null or local made was stripped) and cannot be created as IL. Aborting here.


Method: System.String TagRuby::InsertBlank(System.String,System.Int32):	Method Body (x86 ASM):
		0x18032D710 mov [rsp+18h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RSP | 24 | None ||| N/A | N/A
		0x18032D715 push rsi		; DEBUG: {Register}/RSI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18032D716 push r14		; DEBUG: {Register}/R14 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18032D718 push r15		; DEBUG: {Register}/R15 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18032D71A sub rsp,20h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 32
		0x18032D71E cmp byte ptr [18183DA47h],0		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6467869255 | None ||| N/A | 0
		0x18032D725 mov r15d,r8d		; DEBUG: {Register}/R15D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18032D728 mov rbx,rdx		; DEBUG: {Register}/RBX {Register}/RDX ||| None | 0 | None ||| N/A | N/A
		0x18032D72B mov r14,rcx		; DEBUG: {Register}/R14 {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x18032D72E jne short 000000018032D742h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D730 mov ecx,[1814C5F94h]		; DEBUG: {Register}/ECX {Memory}/None ||| RIP | 6464233364 | None ||| N/A | N/A
		0x18032D736 call 00000001800FEB90h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D73B mov byte ptr [18183DA47h],1		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6467869255 | None ||| N/A | 1
		0x18032D742 mov rax,[181883F70h]		; DEBUG: {Register}/RAX {Memory}/None ||| RIP | 6468157296 | None ||| N/A | N/A
		0x18032D749 test byte ptr [rax+127h],2		; DEBUG: {Memory}/None {Immediate8}/None ||| RAX | 295 | None ||| N/A | 2
		0x18032D750 je short 000000018032D76Ah		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D752 cmp dword ptr [rax+0D8h],0		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RAX | 216 | None ||| N/A | 0
		0x18032D759 jne short 000000018032D76Ah		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D75B mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18032D75E call 000000018010EAF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D763 mov rax,[181883F70h]		; DEBUG: {Register}/RAX {Memory}/None ||| RIP | 6468157296 | None ||| N/A | N/A
		0x18032D76A mov rax,[rax+0B8h]		; DEBUG: {Register}/RAX {Memory}/None ||| RAX | 184 | None ||| N/A | N/A
		0x18032D771 mov [rsp+40h],rbp		; DEBUG: {Memory}/None {Register}/RBP ||| RSP | 64 | None ||| N/A | N/A
		0x18032D776 mov [rsp+48h],rdi		; DEBUG: {Memory}/None {Register}/RDI ||| RSP | 72 | None ||| N/A | N/A
		0x18032D77B mov rsi,[rax]		; DEBUG: {Register}/RSI {Memory}/None ||| RAX | 0 | None ||| N/A | N/A
		0x18032D77E test rbx,rbx		; DEBUG: {Register}/RBX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x18032D781 je near ptr 000000018032D8FEh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D787 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18032D789 mov rcx,rbx		; DEBUG: {Register}/RCX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x18032D78C call 00000001804C6330h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D791 xor ebp,ebp		; DEBUG: {Register}/EBP {Register}/EBP ||| None | 0 | None ||| N/A | N/A
		0x18032D793 mov edi,eax		; DEBUG: {Register}/EDI {Register}/EAX ||| None | 0 | None ||| N/A | N/A
		0x18032D795 cmp eax,1		; DEBUG: {Register}/EAX {Immediate8to32}/None ||| None | 0 | None ||| N/A | 1
		0x18032D798 je near ptr 000000018032D830h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D79E xchg ax,ax		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18032D7A0 mov rcx,[r14+18h]		; DEBUG: {Register}/RCX {Memory}/None ||| R14 | 24 | None ||| N/A | N/A
		0x18032D7A4 test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x18032D7A7 je near ptr 000000018032D8FEh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D7AD xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18032D7AF call 000000018060C530h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D7B4 xor r9d,r9d		; DEBUG: {Register}/R9D {Register}/R9D ||| None | 0 | None ||| N/A | N/A
		0x18032D7B7 mov r8d,eax		; DEBUG: {Register}/R8D {Register}/EAX ||| None | 0 | None ||| N/A | N/A
		0x18032D7BA mov rdx,rbx		; DEBUG: {Register}/RDX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x18032D7BD mov rcx,r14		; DEBUG: {Register}/RCX {Register}/R14 ||| None | 0 | None ||| N/A | N/A
		0x18032D7C0 call 000000018032D4B0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D7C5 cmp eax,r15d		; DEBUG: {Register}/EAX {Register}/R15D ||| None | 0 | None ||| N/A | N/A
		0x18032D7C8 jns near ptr 000000018032D8E2h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D7CE dec edi		; DEBUG: {Register}/EDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18032D7D0 cmp edi,1		; DEBUG: {Register}/EDI {Immediate8to32}/None ||| None | 0 | None ||| N/A | 1
		0x18032D7D3 jl short 000000018032D806h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D7D5 test rbx,rbx		; DEBUG: {Register}/RBX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x18032D7D8 je near ptr 000000018032D8FEh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D7DE mov r8,[18187A660h]		; DEBUG: {Register}/R8 {Memory}/None ||| RIP | 6468118112 | None ||| N/A | N/A
		0x18032D7E5 xor r9d,r9d		; DEBUG: {Register}/R9D {Register}/R9D ||| None | 0 | None ||| N/A | N/A
		0x18032D7E8 mov edx,edi		; DEBUG: {Register}/EDX {Register}/EDI ||| None | 0 | None ||| N/A | N/A
		0x18032D7EA mov rcx,rbx		; DEBUG: {Register}/RCX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x18032D7ED call 0000000180D50FC0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D7F2 mov ecx,0FFFFFFFFh		; DEBUG: {Register}/ECX {Immediate32}/None ||| None | 0 | None ||| N/A | 4294967295
		0x18032D7F7 mov rsi,rax		; DEBUG: {Register}/RSI {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18032D7FA sub ecx,ebp		; DEBUG: {Register}/ECX {Register}/EBP ||| None | 0 | None ||| N/A | N/A
		0x18032D7FC mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18032D7FF add edi,ecx		; DEBUG: {Register}/EDI {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x18032D801 cmp edi,1		; DEBUG: {Register}/EDI {Immediate8to32}/None ||| None | 0 | None ||| N/A | 1
		0x18032D804 jge short 000000018032D7D5h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D806 test rsi,rsi		; DEBUG: {Register}/RSI {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x18032D809 je near ptr 000000018032D8FEh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D80F xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18032D811 mov rcx,rsi		; DEBUG: {Register}/RCX {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x18032D814 call 00000001804C6330h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D819 inc ebp		; DEBUG: {Register}/EBP {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18032D81B mov edi,eax		; DEBUG: {Register}/EDI {Register}/EAX ||| None | 0 | None ||| N/A | N/A
		0x18032D81D cmp ebp,32h		; DEBUG: {Register}/EBP {Immediate8to32}/None ||| None | 0 | None ||| N/A | 50
		0x18032D820 jle near ptr 000000018032D7A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D826 jmp near ptr 000000018032D8B6h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D82B nop dword ptr [rax+rax]		; DEBUG: {Memory}/None {Register}/None ||| RAX | 0 | RAX ||| N/A | N/A
		0x18032D830 mov rcx,[r14+18h]		; DEBUG: {Register}/RCX {Memory}/None ||| R14 | 24 | None ||| N/A | N/A
		0x18032D834 test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x18032D837 je near ptr 000000018032D8FEh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D83D xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18032D83F call 000000018060C530h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D844 xor r9d,r9d		; DEBUG: {Register}/R9D {Register}/R9D ||| None | 0 | None ||| N/A | N/A
		0x18032D847 mov r8d,eax		; DEBUG: {Register}/R8D {Register}/EAX ||| None | 0 | None ||| N/A | N/A
		0x18032D84A mov rdx,rbx		; DEBUG: {Register}/RDX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x18032D84D mov rcx,r14		; DEBUG: {Register}/RCX {Register}/R14 ||| None | 0 | None ||| N/A | N/A
		0x18032D850 call 000000018032D4B0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D855 cmp eax,r15d		; DEBUG: {Register}/EAX {Register}/R15D ||| None | 0 | None ||| N/A | N/A
		0x18032D858 jns near ptr 000000018032D8E2h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D85E test rbx,rbx		; DEBUG: {Register}/RBX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x18032D861 je near ptr 000000018032D8FEh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D867 mov r8,[18187A660h]		; DEBUG: {Register}/R8 {Memory}/None ||| RIP | 6468118112 | None ||| N/A | N/A
		0x18032D86E xor r9d,r9d		; DEBUG: {Register}/R9D {Register}/R9D ||| None | 0 | None ||| N/A | N/A
		0x18032D871 mov edx,edi		; DEBUG: {Register}/EDX {Register}/EDI ||| None | 0 | None ||| N/A | N/A
		0x18032D873 mov rcx,rbx		; DEBUG: {Register}/RCX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x18032D876 call 0000000180D50FC0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D87B test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18032D87E je short 000000018032D8FEh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D880 mov r8,[18187A660h]		; DEBUG: {Register}/R8 {Memory}/None ||| RIP | 6468118112 | None ||| N/A | N/A
		0x18032D887 xor r9d,r9d		; DEBUG: {Register}/R9D {Register}/R9D ||| None | 0 | None ||| N/A | N/A
		0x18032D88A xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18032D88C mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18032D88F call 0000000180D50FC0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D894 mov rsi,rax		; DEBUG: {Register}/RSI {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18032D897 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18032D89A test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18032D89D je short 000000018032D8FEh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D89F xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18032D8A1 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18032D8A4 call 00000001804C6330h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D8A9 inc ebp		; DEBUG: {Register}/EBP {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18032D8AB mov edi,eax		; DEBUG: {Register}/EDI {Register}/EAX ||| None | 0 | None ||| N/A | N/A
		0x18032D8AD cmp ebp,32h		; DEBUG: {Register}/EBP {Immediate8to32}/None ||| None | 0 | None ||| N/A | 50
		0x18032D8B0 jle near ptr 000000018032D830h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D8B6 mov rcx,[18188D688h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468195976 | None ||| N/A | N/A
		0x18032D8BD test byte ptr [rcx+127h],2		; DEBUG: {Memory}/None {Immediate8}/None ||| RCX | 295 | None ||| N/A | 2
		0x18032D8C4 je short 000000018032D8D4h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D8C6 cmp dword ptr [rcx+0D8h],0		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RCX | 216 | None ||| N/A | 0
		0x18032D8CD jne short 000000018032D8D4h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D8CF call 000000018010EAF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D8D4 mov rcx,[18189A1D0h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468248016 | None ||| N/A | N/A
		0x18032D8DB xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18032D8DD call 0000000180B2C440h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D8E2 mov rdi,[rsp+48h]		; DEBUG: {Register}/RDI {Memory}/None ||| RSP | 72 | None ||| N/A | N/A
		0x18032D8E7 mov rax,rsi		; DEBUG: {Register}/RAX {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x18032D8EA mov rbp,[rsp+40h]		; DEBUG: {Register}/RBP {Memory}/None ||| RSP | 64 | None ||| N/A | N/A
		0x18032D8EF mov rbx,[rsp+50h]		; DEBUG: {Register}/RBX {Memory}/None ||| RSP | 80 | None ||| N/A | N/A
		0x18032D8F4 add rsp,20h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 32
		0x18032D8F8 pop r15		; DEBUG: {Register}/R15 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18032D8FA pop r14		; DEBUG: {Register}/R14 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18032D8FC pop rsi		; DEBUG: {Register}/RSI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18032D8FD ret		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18032D8FE xor ecx,ecx		; DEBUG: {Register}/ECX {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x18032D900 call 000000018012BDA0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D905 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.String TagRuby::InsertBlank(System.String,System.Int32):
		End of function at 0x18032D906
		Absolute End is at 0x18032D906
		Identified Jump Destination addresses:
			0x18032D8B6
		0x18032D715: Saves the content of rsi to the stack
		0x18032D716: Saves the content of r14 to the stack
		0x18032D718: Saves the content of r15 to the stack
		0x18032D71E: Compares {Unknown Global at 0x18183DA47, first ten bytes are [1 80 54 1 0 152 54 1 0 216], or as chars "P6 6 Ø"} and 0
		0x18032D725: Copies {'rubyWidth' (function parameter, type System.Int32)} from r8 into r15
		0x18032D728: Copies {'str' (function parameter, type System.String)} from rdx into rbx
		0x18032D72B: Copies {'this' (function parameter, type TagRuby)} from rcx into r14
		0x18032D72E: Jumps to 0x18032D742 if {Unknown Global at 0x18183DA47, first ten bytes are [1 80 54 1 0 152 54 1 0 216], or as chars "P6 6 Ø"} != 0

		0x18032D730: Reads {Unknown Global at 0x1814C5F94, first ten bytes are [151 106 0 0 152 74 0 0 152 106], or as chars "j  J  j"} into register rcx as a constant constant3
		0x18032D736: Attempts to load the il2cpp metadata for this method (method id 27287) and init it cpp-side.

		0x18032D742: Loads the type definition for managed type System.String as a constant "String" in rax
		0x18032D749: Compares "{il2cpp field on {'String' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" and 2
		0x18032D750: Jumps to 0x18032D76A if "{il2cpp field on {'String' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" equals 2

		0x18032D752: Compares "{il2cpp field on {'String' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" and 0
		0x18032D759: Jumps to 0x18032D76A if "{il2cpp field on {'String' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" != 0

		0x18032D75B: Copies {'String' (constant value of type Mono.Cecil.TypeReference)} from rax into rcx
		0x18032D75E: Calls the il2cpp cctor for the type System.String
		0x18032D763: Loads the type definition for managed type System.String as a constant "String" in rax
		0x18032D76A: Loads the pointer to the static fields for System.String and stores it in constant10 in register rax
		0x18032D77B: [!] Reads the static field System.String System.String::Empty into new local empty
		0x18032D77E: [!] Compares {'str' (function parameter, type System.String)} and 0
		0x18032D781: Jumps to 0x18032D8FE (which throws a NRE) if str equals 0. Implicitly present in managed code, so ignored here.
		0x18032D789: Copies {'str' (function parameter, type System.String)} from rbx into rcx
		0x18032D78C: [!] Calls managed method System.Int32 System.String::get_Length() on instance {'str' (function parameter, type System.String)} and stores the result in {'length' (type System.Int32)}

		0x18032D791: Clears register rbp, yielding zero-local {'local6' (type System.Int32)}
		0x18032D793: Copies {'length' (type System.Int32)} from rax into rdi
		0x18032D795: [!] Compares {'length' (type System.Int32)} and 1
		0x18032D798: Jumps to 0x18032D830 (which is an if statement's body) if length equals 1 ;  - Increasing indentation - is standard if, unimportant is False

		0x18032D7A0: [!] Reads field m_sceLabel from {'this' (function parameter, type TagRuby)} and stores in a new local {'m_sceLabel' (type SceUILabel)}

		0x18032D7A4: [!] Compares {'m_sceLabel' (type SceUILabel)} and 0
		0x18032D7A7: Jumps to 0x18032D8FE (which throws a NRE) if m_sceLabel equals 0. Implicitly present in managed code, so ignored here.
		0x18032D7AF: [!] Calls managed method System.Int32 UILabel::get_fontSize() on instance {'m_sceLabel' (type SceUILabel)} and stores the result in {'fontSize' (type System.Int32)}

		0x18032D7B7: Copies {'fontSize' (type System.Int32)} from rax into r8
		0x18032D7BA: Copies {'str' (function parameter, type System.String)} from rbx into rdx
		0x18032D7BD: Copies {'this' (function parameter, type TagRuby)} from r14 into rcx
		0x18032D7C0: [!] Calls managed method System.Int32 TagRuby::CalcTextWidth(System.String,System.Int32) on instance {'this' (function parameter, type TagRuby)} with arguments [{'str' (function parameter, type System.String)}, {'rubyWidth' (function parameter, type System.Int32)}] and stores the result in {'int32' (type System.Int32)}

		0x18032D7C5: [!] Compares {'int32' (type System.Int32)} and {'rubyWidth' (function parameter, type System.Int32)}
		0x18032D7D0: [!] Compares {'length' (type System.Int32)} and 1
		0x18032D7D5: [!] Compares {'str' (function parameter, type System.String)} and 0
		0x18032D7D8: Jumps to 0x18032D8FE (which throws a NRE) if str equals 0. Implicitly present in managed code, so ignored here.
		0x18032D7DE: Loads the string literal " " as a constant "constant16" in r8
		0x18032D7E8: Copies {'length' (type System.Int32)} from rdi into rdx
		0x18032D7EA: Copies {'str' (function parameter, type System.String)} from rbx into rcx
		0x18032D7ED: [!] Calls managed method System.String System.String::Insert(System.Int32,System.String) on instance {'str' (function parameter, type System.String)} with arguments [{'length' (type System.Int32)}, " "] and stores the result in {'string' (type System.String)}

		0x18032D7F2: [!] Writes the constant 0xFFFFFFFF into operand {'local14' (type System.UInt32)} (type UInt64) in register rcx
		0x18032D7F7: Copies {'string' (type System.String)} from rax into rsi
		0x18032D7FA: [!] Subtracts {'local6' (type System.Int32)} from {'local14' (type System.UInt32)} and stores the result in {'local14' (type System.UInt32)}
		0x18032D7FC: Copies {'string' (type System.String)} from rax into rbx
		0x18032D7FF: [!] Adds {'length' (type System.Int32)} and {'local14' (type System.UInt32)} and stores the result in {'length' (type System.Int32)}
		0x18032D801: [!] Compares {'length' (type System.Int32)} and 1
		0x18032D804: Jumps to 0x18032D7D5 (which is an if statement's body) if {'length' (type System.Int32)} is greater than or equal to 1 ;  - Increasing indentation - is standard if, unimportant is False

		0x18032D806: [!] Compares {'string' (type System.String)} and 0
		0x18032D809: Jumps to 0x18032D8FE (which throws a NRE) if string equals 0. Implicitly present in managed code, so ignored here.
		0x18032D811: Copies {'string' (type System.String)} from rsi into rcx
		0x18032D814: [!] Calls managed method System.Int32 System.String::get_Length() on instance {'string' (type System.String)} and stores the result in {'length2' (type System.Int32)}

		0x18032D819: [!] Adds 1 to the value {'local6' (type System.Int32)}, stored in rbp
		0x18032D81B: Copies {'length2' (type System.Int32)} from rax into rdi
		0x18032D81D: [!] Compares {'local6' (type System.Int32)} and 50
		0x18032D820: Jumps to 0x18032D7A0 (which is an if statement's body) if {'local6' (type System.Int32)} is less than or equal to 50 ;  - Increasing indentation - is standard if, unimportant is False

		0x18032D826: Jumps to 0x18032D8B6 (which is an function-local jump destination)

		0x18032D830: [!] Reads field m_sceLabel from {'this' (function parameter, type TagRuby)} and stores in a new local {'m_sceLabel2' (type SceUILabel)}

		0x18032D834: [!] Compares {'m_sceLabel2' (type SceUILabel)} and 0
		0x18032D837: Jumps to 0x18032D8FE (which throws a NRE) if m_sceLabel2 equals 0. Implicitly present in managed code, so ignored here.
		0x18032D83F: [!] Calls managed method System.Int32 UILabel::get_fontSize() on instance {'m_sceLabel2' (type SceUILabel)} and stores the result in {'fontSize2' (type System.Int32)}

		0x18032D847: Copies {'fontSize2' (type System.Int32)} from rax into r8
		0x18032D84A: Copies {'str' (function parameter, type System.String)} from rbx into rdx
		0x18032D84D: Copies {'this' (function parameter, type TagRuby)} from r14 into rcx
		0x18032D850: [!] Calls managed method System.Int32 TagRuby::CalcTextWidth(System.String,System.Int32) on instance {'this' (function parameter, type TagRuby)} with arguments [{'str' (function parameter, type System.String)}, {'rubyWidth' (function parameter, type System.Int32)}] and stores the result in {'int322' (type System.Int32)}

		0x18032D855: [!] Compares {'int322' (type System.Int32)} and {'rubyWidth' (function parameter, type System.Int32)}
		0x18032D85E: [!] Compares {'str' (function parameter, type System.String)} and 0
		0x18032D861: Jumps to 0x18032D8FE (which throws a NRE) if str equals 0. Implicitly present in managed code, so ignored here.
		0x18032D867: Loads the string literal " " as a constant "constant22" in r8
		0x18032D871: Copies {'length' (type System.Int32)} from rdi into rdx
		0x18032D873: Copies {'str' (function parameter, type System.String)} from rbx into rcx
		0x18032D876: [!] Calls managed method System.String System.String::Insert(System.Int32,System.String) on instance {'str' (function parameter, type System.String)} with arguments [{'length' (type System.Int32)}, " "] and stores the result in {'string2' (type System.String)}

		0x18032D87B: [!] Compares {'string2' (type System.String)} and 0
		0x18032D87E: Jumps to 0x18032D8FE (which throws a NRE) if string2 equals 0. Implicitly present in managed code, so ignored here.
		0x18032D880: Loads the string literal " " as a constant "constant24" in r8
		0x18032D88A: Clears register rdx, yielding zero-local {'local25' (type System.Int32)}
		0x18032D88C: Copies {'string2' (type System.String)} from rax into rcx
		0x18032D88F: [!] Calls managed method System.String System.String::Insert(System.Int32,System.String) on instance {'string2' (type System.String)} with arguments [{'local25' (type System.Int32)}, " "] and stores the result in {'string3' (type System.String)}

		0x18032D894: Copies {'string3' (type System.String)} from rax into rsi
		0x18032D897: Copies {'string3' (type System.String)} from rax into rbx
		0x18032D89A: [!] Compares {'string3' (type System.String)} and 0
		0x18032D89D: Jumps to 0x18032D8FE (which throws a NRE) if string3 equals 0. Implicitly present in managed code, so ignored here.
		0x18032D8A1: Copies {'string3' (type System.String)} from rax into rcx
		0x18032D8A4: [!] Calls managed method System.Int32 System.String::get_Length() on instance {'string3' (type System.String)} and stores the result in {'length3' (type System.Int32)}

		0x18032D8A9: [!] Adds 1 to the value {'local6' (type System.Int32)}, stored in rbp
		0x18032D8AB: Copies {'length3' (type System.Int32)} from rax into rdi
		0x18032D8AD: [!] Compares {'local6' (type System.Int32)} and 50
		0x18032D8B0: Jumps to 0x18032D830 if {'local6' (type System.Int32)} is less than or equal to 50 ;  - This is probably a goto, jumping to 0x18032D830 which is after end of current block @ 0x18032D7A0 (started at 0x18032D826)


		Jump Destination (0x18032D8B6):
		0x18032D8B6: Loads the type definition for managed type UnityEngine.Debug as a constant "Debug" in rcx
		0x18032D8BD: Compares "{il2cpp field on {'Debug' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" and 2
		0x18032D8C4: Jumps to 0x18032D8D4 if "{il2cpp field on {'Debug' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" equals 2 ;  - This is probably a goto, jumping to 0x18032D8D4 which is after end of current block @ 0x18032D7A0 (started at 0x18032D826)

		0x18032D8C6: Compares "{il2cpp field on {'Debug' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" and 0
		0x18032D8CD: Jumps to 0x18032D8D4 if "{il2cpp field on {'Debug' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" != 0 ;  - This is probably a goto, jumping to 0x18032D8D4 which is after end of current block @ 0x18032D7A0 (started at 0x18032D826)

		0x18032D8CF: Calls the il2cpp cctor for the type UnityEngine.Debug
		0x18032D8D4: Loads the string literal "ERROR" as a constant "constant32" in rcx
		0x18032D8DD: [!] Calls static managed method System.Void UnityEngine.Debug::LogWarning(System.Object) with arguments ["ERROR"]

		0x18032D8E2: Reads unknown value in stack, offset 72 (0x48) and stores the pointer in register rdi as new constant constant33
		0x18032D8E7: Copies {'string3' (type System.String)} from rsi into rax
		0x18032D8EA: Reads unknown value in stack, offset 64 (0x40) and stores the pointer in register rbp as new constant constant34
		0x18032D8EF: Reads unknown value in stack, offset 80 (0x50) and stores the pointer in register rbx as new constant constant35
		0x18032D8FD: [!] Returns {'string3' (type System.String)} from the function

		0x18032D900: [!] Constructs and throws an exception of kind System.NullReferenceException




	Generated Pseudocode:

	Declaring Type: TagRuby
	System.String InsertBlank(System.String str, System.Int32 rubyWidth)
		System.String empty = System.String.Empty

		System.Int32 length = str.Length
		ulong local6 = 0

		if (length != 1)
		    SceUILabel m_sceLabel = this.m_sceLabel

		    System.Int32 fontSize = m_sceLabel.fontSize
		    rubyWidth = fontSize

		    System.Int32 int32 = this.CalcTextWidth(str, rubyWidth) //(String str, Int32 fontSize)

		    System.String string = str.Insert(length, " ") //(Int32 startIndex, String value)
		    System.Int64 local14 = 0xFFFFFFFF
		    local14 -= local6
		    length += local14

		    if (length < 1)
		    endwhile
            
		    goto INSN_18032D8FE
            

		    System.Int32 length2 = string.Length
		    local6 += 1
		    length = length2

		    if (local6 > 50)
		    endif
            
		    SceUILabel m_sceLabel2 = this.m_sceLabel

		    System.Int32 fontSize2 = m_sceLabel2.fontSize
		    rubyWidth = fontSize2

		    System.Int32 int322 = this.CalcTextWidth(str, rubyWidth) //(String str, Int32 fontSize)

		    System.String string2 = str.Insert(length, " ") //(Int32 startIndex, String value)
		    ulong local25 = 0

		    System.String string3 = string2.Insert(local25, " ") //(Int32 startIndex, String value)

		    System.Int32 length3 = string3.Length
		    local6 += 1
		    length = length3

		    if (local6 <= 50)
                goto INSN_18032D830
            endif

		    UnityEngine.Debug.LogWarning("ERROR") //(Object message)
		    return string3

		    INSN_18032D8FE:
		    throw new System.NullReferenceException()


Generated IL:
	Action of type Cpp2IL.Core.Analysis.Actions.x86.RegToRegMoveAction at (0x18032D7B7) is corrupt (Local being overwritten, {'rubyWidth' (function parameter, type System.Int32)} has been stripped or is a parameter) and cannot be created as IL. Aborting here.


Method: System.Void TagRuby::OnPostFill(System.Collections.Generic.List`1<UnityEngine.Vector3>,System.Collections.Generic.List`1<UnityEngine.Vector2>,System.Collections.Generic.List`1<UnityEngine.Color>):	Method Body (x86 ASM):
		0x18032DA20 mov [rsp+18h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RSP | 24 | None ||| N/A | N/A
		0x18032DA25 push rdi		; DEBUG: {Register}/RDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18032DA26 sub rsp,60h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 96
		0x18032DA2A cmp byte ptr [18183DA48h],0		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6467869256 | None ||| N/A | 0
		0x18032DA31 mov rdi,rdx		; DEBUG: {Register}/RDI {Register}/RDX ||| None | 0 | None ||| N/A | N/A
		0x18032DA34 mov rbx,rcx		; DEBUG: {Register}/RBX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x18032DA37 jne short 000000018032DA4Bh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032DA39 mov ecx,[1814C5FACh]		; DEBUG: {Register}/ECX {Memory}/None ||| RIP | 6464233388 | None ||| N/A | N/A
		0x18032DA3F call 00000001800FEB90h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032DA44 mov byte ptr [18183DA48h],1		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6467869256 | None ||| N/A | 1
		0x18032DA4B cmp byte ptr [rbx+38h],0		; DEBUG: {Memory}/None {Immediate8}/None ||| RBX | 56 | None ||| N/A | 0
		0x18032DA4F jne near ptr 000000018032DC8Dh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032DA55 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18032DA58 mov rdx,rdi		; DEBUG: {Register}/RDX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x18032DA5B mov rcx,rbx		; DEBUG: {Register}/RCX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x18032DA5E call 0000000180326780h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032DA63 mov rdi,rax		; DEBUG: {Register}/RDI {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18032DA66 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18032DA69 je near ptr 000000018032DC9Bh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032DA6F mov rdx,[18189EBF8h]		; DEBUG: {Register}/RDX {Memory}/None ||| RIP | 6468267000 | None ||| N/A | N/A
		0x18032DA76 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18032DA79 call 000000018029B0C0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032DA7E cmp eax,[rbx+60h]		; DEBUG: {Register}/EAX {Memory}/None ||| RBX | 96 | None ||| N/A | N/A
		0x18032DA81 jle near ptr 000000018032DC8Dh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032DA87 mov rdx,[18189EBF8h]		; DEBUG: {Register}/RDX {Memory}/None ||| RIP | 6468267000 | None ||| N/A | N/A
		0x18032DA8E mov rcx,rdi		; DEBUG: {Register}/RCX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x18032DA91 call 000000018029B0C0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032DA96 cmp eax,[rbx+64h]		; DEBUG: {Register}/EAX {Memory}/None ||| RBX | 100 | None ||| N/A | N/A
		0x18032DA99 jle near ptr 000000018032DC8Dh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032DA9F movaps [rsp+50h],xmm7		; DEBUG: {Memory}/None {Register}/XMM7 ||| RSP | 80 | None ||| N/A | N/A
		0x18032DAA4 movaps [rsp+40h],xmm8		; DEBUG: {Memory}/None {Register}/XMM8 ||| RSP | 64 | None ||| N/A | N/A
		0x18032DAAA mov edx,[rbx+60h]		; DEBUG: {Register}/EDX {Memory}/None ||| RBX | 96 | None ||| N/A | N/A
		0x18032DAAD mov rcx,rdi		; DEBUG: {Register}/RCX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x18032DAB0 mov byte ptr [rbx+38h],1		; DEBUG: {Memory}/None {Immediate8}/None ||| RBX | 56 | None ||| N/A | 1
		0x18032DAB4 mov r8,[181878A98h]		; DEBUG: {Register}/R8 {Memory}/None ||| RIP | 6468111000 | None ||| N/A | N/A
		0x18032DABB call 00000001810860B0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032DAC0 mov r8,[181878A98h]		; DEBUG: {Register}/R8 {Memory}/None ||| RIP | 6468111000 | None ||| N/A | N/A
		0x18032DAC7 mov rcx,rdi		; DEBUG: {Register}/RCX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x18032DACA mov edx,[rbx+64h]		; DEBUG: {Register}/EDX {Memory}/None ||| RBX | 100 | None ||| N/A | N/A
		0x18032DACD mov [rsp+30h],rax		; DEBUG: {Memory}/None {Register}/RAX ||| RSP | 48 | None ||| N/A | N/A
		0x18032DAD2 call 00000001810860B0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032DAD7 mov r8,[181878A98h]		; DEBUG: {Register}/R8 {Memory}/None ||| RIP | 6468111000 | None ||| N/A | N/A
		0x18032DADE mov rcx,rdi		; DEBUG: {Register}/RCX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x18032DAE1 mov edx,[rbx+60h]		; DEBUG: {Register}/EDX {Memory}/None ||| RBX | 96 | None ||| N/A | N/A
		0x18032DAE4 mov [rsp+20h],rax		; DEBUG: {Memory}/None {Register}/RAX ||| RSP | 32 | None ||| N/A | N/A
		0x18032DAE9 movss xmm8,dword ptr [rsp+20h]		; DEBUG: {Register}/XMM8 {Memory}/None ||| RSP | 32 | None ||| N/A | N/A
		0x18032DAF0 addss xmm8,dword ptr [rsp+30h]		; DEBUG: {Register}/XMM8 {Memory}/None ||| RSP | 48 | None ||| N/A | N/A
		0x18032DAF7 mulss xmm8,dword ptr [181261CF8h]		; DEBUG: {Register}/XMM8 {Memory}/None ||| RIP | 6461725944 | None ||| N/A | N/A
		0x18032DB00 call 00000001810860B0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032DB05 mov r8,[181878A98h]		; DEBUG: {Register}/R8 {Memory}/None ||| RIP | 6468111000 | None ||| N/A | N/A
		0x18032DB0C mov rcx,rdi		; DEBUG: {Register}/RCX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x18032DB0F mov edx,[rbx+64h]		; DEBUG: {Register}/EDX {Memory}/None ||| RBX | 100 | None ||| N/A | N/A
		0x18032DB12 mov [rsp+20h],rax		; DEBUG: {Memory}/None {Register}/RAX ||| RSP | 32 | None ||| N/A | N/A
		0x18032DB17 call 00000001810860B0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032DB1C mov rdi,[rbx+48h]		; DEBUG: {Register}/RDI {Memory}/None ||| RBX | 72 | None ||| N/A | N/A
		0x18032DB20 mov [rsp+30h],rax		; DEBUG: {Memory}/None {Register}/RAX ||| RSP | 48 | None ||| N/A | N/A
		0x18032DB25 movss xmm7,dword ptr [rsp+34h]		; DEBUG: {Register}/XMM7 {Memory}/None ||| RSP | 52 | None ||| N/A | N/A
		0x18032DB2B addss xmm7,dword ptr [rsp+24h]		; DEBUG: {Register}/XMM7 {Memory}/None ||| RSP | 36 | None ||| N/A | N/A
		0x18032DB31 mov rax,[rbx+30h]		; DEBUG: {Register}/RAX {Memory}/None ||| RBX | 48 | None ||| N/A | N/A
		0x18032DB35 mulss xmm7,dword ptr [181261CF8h]		; DEBUG: {Register}/XMM7 {Memory}/None ||| RIP | 6461725944 | None ||| N/A | N/A
		0x18032DB3D addss xmm7,dword ptr [rbx+5Ch]		; DEBUG: {Register}/XMM7 {Memory}/None ||| RBX | 92 | None ||| N/A | N/A
		0x18032DB42 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18032DB45 je near ptr 000000018032DCC9h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032DB4B cmp dword ptr [rax+18h],2		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RAX | 24 | None ||| N/A | 2
		0x18032DB4F jbe near ptr 000000018032DCA3h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032DB55 mov rcx,[181883F70h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468157296 | None ||| N/A | N/A
		0x18032DB5C mov [rsp+78h],rsi		; DEBUG: {Memory}/None {Register}/RSI ||| RSP | 120 | None ||| N/A | N/A
		0x18032DB61 mov rsi,[rax+30h]		; DEBUG: {Register}/RSI {Memory}/None ||| RAX | 48 | None ||| N/A | N/A
		0x18032DB65 test byte ptr [rcx+127h],2		; DEBUG: {Memory}/None {Immediate8}/None ||| RCX | 295 | None ||| N/A | 2
		0x18032DB6C je short 000000018032DB7Ch		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032DB6E cmp dword ptr [rcx+0D8h],0		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RCX | 216 | None ||| N/A | 0
		0x18032DB75 jne short 000000018032DB7Ch		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032DB77 call 000000018010EAF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032DB7C mov rcx,[18188B748h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468187976 | None ||| N/A | N/A
		0x18032DB83 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18032DB86 mov rdx,rsi		; DEBUG: {Register}/RDX {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x18032DB89 call 0000000180D4D090h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032DB8E mov rsi,[rsp+78h]		; DEBUG: {Register}/RSI {Memory}/None ||| RSP | 120 | None ||| N/A | N/A
		0x18032DB93 test rdi,rdi		; DEBUG: {Register}/RDI {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x18032DB96 je near ptr 000000018032DCC9h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032DB9C xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18032DB9F mov rdx,rax		; DEBUG: {Register}/RDX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18032DBA2 mov rcx,rdi		; DEBUG: {Register}/RCX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x18032DBA5 call 0000000180EA68E0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032DBAA mov rcx,[rbx+48h]		; DEBUG: {Register}/RCX {Memory}/None ||| RBX | 72 | None ||| N/A | N/A
		0x18032DBAE test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x18032DBB1 je near ptr 000000018032DCC9h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032DBB7 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18032DBB9 call 0000000180B2EA90h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032DBBE xor r9d,r9d		; DEBUG: {Register}/R9D {Register}/R9D ||| None | 0 | None ||| N/A | N/A
		0x18032DBC1 mov qword ptr [rsp+70h],0		; DEBUG: {Memory}/None {Immediate32to64}/None ||| RSP | 112 | None ||| N/A | 0
		0x18032DBCA movaps xmm2,xmm7		; DEBUG: {Register}/XMM2 {Register}/XMM7 ||| None | 0 | None ||| N/A | N/A
		0x18032DBCD lea rcx,[rsp+70h]		; DEBUG: {Register}/RCX {Memory}/None ||| RSP | 112 | None ||| N/A | N/A
		0x18032DBD2 movaps xmm1,xmm8		; DEBUG: {Register}/XMM1 {Register}/XMM8 ||| None | 0 | None ||| N/A | N/A
		0x18032DBD6 mov rdi,rax		; DEBUG: {Register}/RDI {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18032DBD9 call 0000000180CE43E0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032DBDE mov rcx,[18188D960h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468196704 | None ||| N/A | N/A
		0x18032DBE5 test byte ptr [rcx+127h],2		; DEBUG: {Memory}/None {Immediate8}/None ||| RCX | 295 | None ||| N/A | 2
		0x18032DBEC je short 000000018032DBFCh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032DBEE cmp dword ptr [rcx+0D8h],0		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RCX | 216 | None ||| N/A | 0
		0x18032DBF5 jne short 000000018032DBFCh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032DBF7 call 000000018010EAF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032DBFC mov rdx,[rsp+70h]		; DEBUG: {Register}/RDX {Memory}/None ||| RSP | 112 | None ||| N/A | N/A
		0x18032DC01 lea rcx,[rsp+20h]		; DEBUG: {Register}/RCX {Memory}/None ||| RSP | 32 | None ||| N/A | N/A
		0x18032DC06 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18032DC09 call 0000000180CE4B90h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032DC0E test rdi,rdi		; DEBUG: {Register}/RDI {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x18032DC11 je near ptr 000000018032DCC9h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032DC17 movsd xmm0,qword ptr [rax]		; DEBUG: {Register}/XMM0 {Memory}/None ||| RAX | 0 | None ||| N/A | N/A
		0x18032DC1B lea rdx,[rsp+30h]		; DEBUG: {Register}/RDX {Memory}/None ||| RSP | 48 | None ||| N/A | N/A
		0x18032DC20 mov eax,[rax+8]		; DEBUG: {Register}/EAX {Memory}/None ||| RAX | 8 | None ||| N/A | N/A
		0x18032DC23 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18032DC26 mov rcx,rdi		; DEBUG: {Register}/RCX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x18032DC29 movsd qword ptr [rsp+30h],xmm0		; DEBUG: {Memory}/None {Register}/XMM0 ||| RSP | 48 | None ||| N/A | N/A
		0x18032DC2F mov [rsp+38h],eax		; DEBUG: {Memory}/None {Register}/EAX ||| RSP | 56 | None ||| N/A | N/A
		0x18032DC33 call 0000000180CE2F90h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032DC38 mov rdx,[rbx+30h]		; DEBUG: {Register}/RDX {Memory}/None ||| RBX | 48 | None ||| N/A | N/A
		0x18032DC3C mov rcx,[rbx+50h]		; DEBUG: {Register}/RCX {Memory}/None ||| RBX | 80 | None ||| N/A | N/A
		0x18032DC40 test rdx,rdx		; DEBUG: {Register}/RDX {Register}/RDX ||| None | 0 | None ||| N/A | N/A
		0x18032DC43 je near ptr 000000018032DCC9h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032DC49 cmp dword ptr [rdx+18h],2		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDX | 24 | None ||| N/A | 2
		0x18032DC4D jbe short 000000018032DCB6h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032DC4F test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x18032DC52 je short 000000018032DCC9h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032DC54 mov rdx,[rdx+30h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 48 | None ||| N/A | N/A
		0x18032DC58 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18032DC5B call 000000018060D730h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032DC60 mov rcx,[rbx+48h]		; DEBUG: {Register}/RCX {Memory}/None ||| RBX | 72 | None ||| N/A | N/A
		0x18032DC64 test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x18032DC67 je short 000000018032DCC9h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032DC69 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18032DC6B call 0000000180AF9580h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032DC70 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18032DC73 je short 000000018032DCC9h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032DC75 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18032DC78 mov dl,1		; DEBUG: {Register}/DL {Immediate8}/None ||| None | 0 | None ||| N/A | 1
		0x18032DC7A mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18032DC7D call 0000000180B2E5A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032DC82 movaps xmm7,[rsp+50h]		; DEBUG: {Register}/XMM7 {Memory}/None ||| RSP | 80 | None ||| N/A | N/A
		0x18032DC87 movaps xmm8,[rsp+40h]		; DEBUG: {Register}/XMM8 {Memory}/None ||| RSP | 64 | None ||| N/A | N/A
		0x18032DC8D mov rbx,[rsp+80h]		; DEBUG: {Register}/RBX {Memory}/None ||| RSP | 128 | None ||| N/A | N/A
		0x18032DC95 add rsp,60h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 96
		0x18032DC99 pop rdi		; DEBUG: {Register}/RDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18032DC9A ret		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18032DC9B xor ecx,ecx		; DEBUG: {Register}/ECX {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x18032DC9D call 000000018012BDA0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032DCA2 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.Void TagRuby::OnPostFill(System.Collections.Generic.List`1<UnityEngine.Vector3>,System.Collections.Generic.List`1<UnityEngine.Vector2>,System.Collections.Generic.List`1<UnityEngine.Color>):
		End of function at 0x18032DCA3
		Absolute End is at 0x18032DCA3
		Identified Jump Destination addresses:

		0x18032DA25: Saves the content of rdi to the stack
		0x18032DA2A: Compares {Unknown Global at 0x18183DA48, first ten bytes are [80 54 1 0 152 54 1 0 216 60], or as chars "P6 6 Ø<"} and 0
		0x18032DA31: Copies {'verts' (function parameter, type System.Collections.Generic.List`1<UnityEngine.Vector3>)} from rdx into rdi
		0x18032DA34: Copies {'this' (function parameter, type TagRuby)} from rcx into rbx
		0x18032DA37: Jumps to 0x18032DA4B if {Unknown Global at 0x18183DA48, first ten bytes are [80 54 1 0 152 54 1 0 216 60], or as chars "P6 6 Ø<"} != 0

		0x18032DA39: Reads {Unknown Global at 0x1814C5FAC, first ten bytes are [153 106 0 0 153 42 0 0 153 74], or as chars "j  *  J"} into register rcx as a constant constant3
		0x18032DA3F: Attempts to load the il2cpp metadata for this method (method id 27289) and init it cpp-side.

		0x18032DA4B: [!] Compares  and 0
		0x18032DA4F: Jumps to 0x18032DC8D (which is an if statement's body) if  != 0 ;  - Increasing indentation - is standard if, unimportant is False

		0x18032DA58: Copies {'verts' (function parameter, type System.Collections.Generic.List`1<UnityEngine.Vector3>)} from rdi into rdx
		0x18032DA5B: Copies {'this' (function parameter, type TagRuby)} from rbx into rcx
		0x18032DA5E: [!] Calls managed method System.Collections.Generic.List`1<UnityEngine.Vector2> TagBase::GetCenterPosList(System.Collections.Generic.List`1<UnityEngine.Vector3>) on instance {'this' (function parameter, type TagRuby)} with arguments [{'verts' (function parameter, type System.Collections.Generic.List`1<UnityEngine.Vector3>)}] and stores the result in {'centerPosList' (type System.Collections.Generic.List`1<UnityEngine.Vector2>)}

		0x18032DA63: Copies {'centerPosList' (type System.Collections.Generic.List`1<UnityEngine.Vector2>)} from rax into rdi
		0x18032DA66: [!] Compares {'centerPosList' (type System.Collections.Generic.List`1<UnityEngine.Vector2>)} and 0
		0x18032DA69: Jumps to 0x18032DC9B (which throws a NRE) if centerPosList equals 0. Implicitly present in managed code, so ignored here.
		0x18032DA6F: Loads the global generic method reference for method System.Int32 System.Collections.Generic.List`1::get_Count() on type System.Collections.Generic.List`1<UnityEngine.Vector2> and stores the result in constant {'get_Count' (constant value of type Cpp2IL.Core.Analysis.ResultModels.GenericMethodReference)} in rdx
		0x18032DA76: Copies {'centerPosList' (type System.Collections.Generic.List`1<UnityEngine.Vector2>)} from rax into rcx
		0x18032DA79: [!] Calls managed method System.Int32 System.Collections.Generic.List`1::get_Count() on instance {'centerPosList' (type System.Collections.Generic.List`1<UnityEngine.Vector2>)} and stores the result in {'count' (type System.Int32)} ;  - Method resolved from concrete implementations at this address, with the help of a constant value to identify which concrete implementation.

		0x18032DA7E: [!] Compares {'count' (type System.Int32)} and {field m_sb, read from local {'this' (function parameter, type TagRuby)}}
		0x18032DA81: Jumps to 0x18032DC8D (which is an if statement's body) if {'count' (type System.Int32)} is less than or equal to {field m_sb, read from local {'this' (function parameter, type TagRuby)}} ;  - Increasing indentation - is standard if, unimportant is False

		0x18032DA87: Loads the global generic method reference for method System.Int32 System.Collections.Generic.List`1::get_Count() on type System.Collections.Generic.List`1<UnityEngine.Vector2> and stores the result in constant {'get_Count' (constant value of type Cpp2IL.Core.Analysis.ResultModels.GenericMethodReference)} in rdx
		0x18032DA8E: Copies {'centerPosList' (type System.Collections.Generic.List`1<UnityEngine.Vector2>)} from rdi into rcx
		0x18032DA91: [!] Calls managed method System.Int32 System.Collections.Generic.List`1::get_Count() on instance {'centerPosList' (type System.Collections.Generic.List`1<UnityEngine.Vector2>)} and stores the result in {'count2' (type System.Int32)} ;  - Method resolved from concrete implementations at this address, with the help of a constant value to identify which concrete implementation.

		0x18032DA96: [!] Compares {'count2' (type System.Int32)} and {field m_eb, read from local {'this' (function parameter, type TagRuby)}}
		0x18032DA99: Jumps to 0x18032DC8D (which is an if statement's body) if {'count2' (type System.Int32)} is less than or equal to {field m_eb, read from local {'this' (function parameter, type TagRuby)}} ;  - Increasing indentation - is standard if, unimportant is False

		0x18032DAAA: [!] Reads field m_sb from {'this' (function parameter, type TagRuby)} and stores in a new local {'m_sb' (type System.Int32)}

		0x18032DAAD: Copies {'centerPosList' (type System.Collections.Generic.List`1<UnityEngine.Vector2>)} from rdi into rcx
		0x18032DAB0: [!] Sets the field m_isCompletedFill (Type System.Boolean) on local {'this' (function parameter, type TagRuby)} to the value stored in True
		0x18032DAB4: Loads the global generic method reference for method T System.Collections.Generic.List`1::get_Item(System.Int32) on type System.Collections.Generic.List`1<UnityEngine.Vector2> and stores the result in constant {'get_Item' (constant value of type Cpp2IL.Core.Analysis.ResultModels.GenericMethodReference)} in r8
		0x18032DABB: [!] Calls managed method T System.Collections.Generic.List`1::get_Item(System.Int32) on instance {'centerPosList' (type System.Collections.Generic.List`1<UnityEngine.Vector2>)} with arguments [{'m_sb' (type System.Int32)}] and stores the result in {'item' (type UnityEngine.Vector2)} ;  - Method resolved from concrete implementations at this address, with the help of a constant value to identify which concrete implementation.

		0x18032DAC0: Loads the global generic method reference for method T System.Collections.Generic.List`1::get_Item(System.Int32) on type System.Collections.Generic.List`1<UnityEngine.Vector2> and stores the result in constant {'get_Item' (constant value of type Cpp2IL.Core.Analysis.ResultModels.GenericMethodReference)} in r8
		0x18032DAC7: Copies {'centerPosList' (type System.Collections.Generic.List`1<UnityEngine.Vector2>)} from rdi into rcx
		0x18032DACA: [!] Reads field m_eb from {'this' (function parameter, type TagRuby)} and stores in a new local {'m_eb' (type System.Int32)}

		0x18032DACD: Moves item (type UnityEngine.Vector2) from register rax to the stack at offset 48 (0x30)
		0x18032DAD2: [!] Calls managed method T System.Collections.Generic.List`1::get_Item(System.Int32) on instance {'centerPosList' (type System.Collections.Generic.List`1<UnityEngine.Vector2>)} with arguments [{'m_eb' (type System.Int32)}] and stores the result in {'item2' (type UnityEngine.Vector2)} ;  - Method resolved from concrete implementations at this address, with the help of a constant value to identify which concrete implementation.

		0x18032DAD7: Loads the global generic method reference for method T System.Collections.Generic.List`1::get_Item(System.Int32) on type System.Collections.Generic.List`1<UnityEngine.Vector2> and stores the result in constant {'get_Item' (constant value of type Cpp2IL.Core.Analysis.ResultModels.GenericMethodReference)} in r8
		0x18032DADE: Copies {'centerPosList' (type System.Collections.Generic.List`1<UnityEngine.Vector2>)} from rdi into rcx
		0x18032DAE1: [!] Reads field m_sb from {'this' (function parameter, type TagRuby)} and stores in a new local {'m_sb2' (type System.Int32)}

		0x18032DAE4: Moves item2 (type UnityEngine.Vector2) from register rax to the stack at offset 32 (0x20)
		0x18032DAE9: Reads local {'item2' (type UnityEngine.Vector2)} from stack offset 32 (0x20) into register xmm8
		0x18032DAF7: Multiplies {'item2' (type UnityEngine.Vector2)} by the constant value at 0x181261CF8 in the binary, which is 0,5, and stores the result in new local {'local13' (type System.Single)} in register xmm8
		0x18032DB00: [!] Calls managed method T System.Collections.Generic.List`1::get_Item(System.Int32) on instance {'centerPosList' (type System.Collections.Generic.List`1<UnityEngine.Vector2>)} with arguments [{'m_sb2' (type System.Int32)}] and stores the result in {'item3' (type UnityEngine.Vector2)} ;  - Method resolved from concrete implementations at this address, with the help of a constant value to identify which concrete implementation.

		0x18032DB05: Loads the global generic method reference for method T System.Collections.Generic.List`1::get_Item(System.Int32) on type System.Collections.Generic.List`1<UnityEngine.Vector2> and stores the result in constant {'get_Item' (constant value of type Cpp2IL.Core.Analysis.ResultModels.GenericMethodReference)} in r8
		0x18032DB0C: Copies {'centerPosList' (type System.Collections.Generic.List`1<UnityEngine.Vector2>)} from rdi into rcx
		0x18032DB0F: [!] Reads field m_eb from {'this' (function parameter, type TagRuby)} and stores in a new local {'m_eb2' (type System.Int32)}

		0x18032DB12: Moves item3 (type UnityEngine.Vector2) from register rax to the stack at offset 32 (0x20)
		0x18032DB17: [!] Calls managed method T System.Collections.Generic.List`1::get_Item(System.Int32) on instance {'centerPosList' (type System.Collections.Generic.List`1<UnityEngine.Vector2>)} with arguments [{'m_eb2' (type System.Int32)}] and stores the result in {'item4' (type UnityEngine.Vector2)} ;  - Method resolved from concrete implementations at this address, with the help of a constant value to identify which concrete implementation.

		0x18032DB1C: [!] Reads field m_obj from {'this' (function parameter, type TagRuby)} and stores in a new local {'m_obj' (type UnityEngine.GameObject)}

		0x18032DB20: Moves item4 (type UnityEngine.Vector2) from register rax to the stack at offset 48 (0x30)
		0x18032DB25: Reads unknown value in stack, offset 52 (0x34) and stores the pointer in register xmm7 as new constant constant12
		0x18032DB31: [!] Reads field m_subs from {'this' (function parameter, type TagRuby)} and stores in a new local {'m_subs' (type System.String[])}

		0x18032DB35: Multiplies  by the constant value at 0x181261CF8 in the binary, which is 0,5, and stores the result in new local {'local19' (type System.Single)} in register xmm7
		0x18032DB42: [!] Compares {'m_subs' (type System.String[])} and 0
		0x18032DB45: Jumps to 0x18032DCC9 (which throws a NRE) if m_subs equals 0. Implicitly present in managed code, so ignored here.
		0x18032DB4B: [!] Compares {Property System.Int32 System.Array::Length() on {'m_subs' (type System.String[])}} and 2
		0x18032DB4F: Jumps to 0x18032DCA3 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'m_subs' (type System.String[])}} is less than or equal to 2. Implicitly present in managed code, so ignored here.
		0x18032DB55: Loads the type definition for managed type System.String as a constant "String" in rcx
		0x18032DB61: [!] Reads a value from the array {'m_subs' (type System.String[])} at index 2, into a new local {'local20' (type System.String)}

		0x18032DB65: Compares "{il2cpp field on {'String' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" and 2
		0x18032DB6C: Jumps to 0x18032DB7C if "{il2cpp field on {'String' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" equals 2

		0x18032DB6E: Compares "{il2cpp field on {'String' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" and 0
		0x18032DB75: Jumps to 0x18032DB7C if "{il2cpp field on {'String' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" != 0

		0x18032DB77: Calls the il2cpp cctor for the type System.String
		0x18032DB7C: Loads the string literal "ruby_" as a constant "constant20" in rcx
		0x18032DB86: Copies {'local20' (type System.String)} from rsi into rdx
		0x18032DB89: [!] Calls static managed method System.String System.String::Concat(System.String,System.String) with arguments ["ruby_", {'local20' (type System.String)}] and stores the result in {'string' (type System.String)}

		0x18032DB8E: Reads unknown value in stack, offset 120 (0x78) and stores the pointer in register rsi as new constant constant21
		0x18032DB93: [!] Compares {'m_obj' (type UnityEngine.GameObject)} and 0
		0x18032DB96: Jumps to 0x18032DCC9 (which throws a NRE) if m_obj equals 0. Implicitly present in managed code, so ignored here.
		0x18032DB9F: Copies {'string' (type System.String)} from rax into rdx
		0x18032DBA2: Copies {'m_obj' (type UnityEngine.GameObject)} from rdi into rcx
		0x18032DBA5: [!] Calls managed method System.Void UnityEngine.Object::set_name(System.String) on instance {'m_obj' (type UnityEngine.GameObject)} with arguments [{'string' (type System.String)}]

		0x18032DBAA: [!] Reads field m_obj from {'this' (function parameter, type TagRuby)} and stores in a new local {'m_obj2' (type UnityEngine.GameObject)}

		0x18032DBAE: [!] Compares {'m_obj2' (type UnityEngine.GameObject)} and 0
		0x18032DBB1: Jumps to 0x18032DCC9 (which throws a NRE) if m_obj2 equals 0. Implicitly present in managed code, so ignored here.
		0x18032DBB9: [!] Calls managed method UnityEngine.Transform UnityEngine.GameObject::get_transform() on instance {'m_obj2' (type UnityEngine.GameObject)} and stores the result in {'transform' (type UnityEngine.Transform)}

		0x18032DBC1: Moves 0 (immediate ulong value) to the stack at offset 112 as a new local local28
		0x18032DBCA: Copies {'local19' (type System.Single)} from xmm7 into xmm2
		0x18032DBCD: Loads a pointer to stack offset 0x70 into register rcx as new constant constant24
		0x18032DBD2: Copies {'local13' (type System.Single)} from xmm8 into xmm1
		0x18032DBD6: Copies {'transform' (type UnityEngine.Transform)} from rax into rdi
		0x18032DBDE: Loads the type definition for managed type UnityEngine.Vector2 as a constant "Vector2" in rcx
		0x18032DBE5: Compares "{il2cpp field on {'Vector2' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" and 2
		0x18032DBEC: Jumps to 0x18032DBFC if "{il2cpp field on {'Vector2' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" equals 2

		0x18032DBEE: Compares "{il2cpp field on {'Vector2' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" and 0
		0x18032DBF5: Jumps to 0x18032DBFC if "{il2cpp field on {'Vector2' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" != 0

		0x18032DBF7: Calls the il2cpp cctor for the type UnityEngine.Vector2
		0x18032DBFC: Reads local {'local28' (type System.UInt64)} from stack offset 112 (0x70) into register rdx
		0x18032DC01: Loads a pointer to stack offset 0x20 into register rcx as new constant constant30
		0x18032DC09: [!] Calls static managed method UnityEngine.Vector3 UnityEngine.Vector2::op_Implicit(UnityEngine.Vector2) with arguments [{'item3' (type UnityEngine.Vector2)}] and stores the result in {'vector3' (type UnityEngine.Vector3)}

		0x18032DC0E: [!] Compares {'transform' (type UnityEngine.Transform)} and 0
		0x18032DC11: Jumps to 0x18032DCC9 (which throws a NRE) if transform equals 0. Implicitly present in managed code, so ignored here.
		0x18032DC1B: Loads a pointer to stack offset 0x30 into register rdx as new constant constant32
		0x18032DC20: [!] Reads field z from {'vector3' (type UnityEngine.Vector3)} and stores in a new local {'single' (type System.Single)}

		0x18032DC26: Copies {'transform' (type UnityEngine.Transform)} from rdi into rcx
		0x18032DC2F: Moves single (type System.Single) from register rax to the stack at offset 56 (0x38)
		0x18032DC33: [!] Calls managed method System.Void UnityEngine.Transform::set_localPosition(UnityEngine.Vector3) on instance {'transform' (type UnityEngine.Transform)} ;  - parameters do not match, but there is only one function at this address.

		0x18032DC38: [!] Reads field m_subs from {'this' (function parameter, type TagRuby)} and stores in a new local {'m_subs2' (type System.String[])}

		0x18032DC3C: [!] Reads field m_rubyLabel from {'this' (function parameter, type TagRuby)} and stores in a new local {'m_rubyLabel' (type UILabel)}

		0x18032DC40: [!] Compares {'m_subs2' (type System.String[])} and 0
		0x18032DC43: Jumps to 0x18032DCC9 (which throws a NRE) if m_subs2 equals 0. Implicitly present in managed code, so ignored here.
		0x18032DC49: [!] Compares {Property System.Int32 System.Array::Length() on {'m_subs2' (type System.String[])}} and 2
		0x18032DC4D: Jumps to 0x18032DCB6 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'m_subs2' (type System.String[])}} is less than or equal to 2. Implicitly present in managed code, so ignored here.
		0x18032DC4F: [!] Compares {'m_rubyLabel' (type UILabel)} and 0
		0x18032DC52: Jumps to 0x18032DCC9 (which throws a NRE) if m_rubyLabel equals 0. Implicitly present in managed code, so ignored here.
		0x18032DC54: [!] Reads a value from the array {'m_subs2' (type System.String[])} at index 2, into a new local {'local35' (type System.String)}

		0x18032DC5B: [!] Calls managed method System.Void UILabel::set_text(System.String) on instance {'m_rubyLabel' (type UILabel)} with arguments [{'local35' (type System.String)}]

		0x18032DC60: [!] Reads field m_obj from {'this' (function parameter, type TagRuby)} and stores in a new local {'m_obj3' (type UnityEngine.GameObject)}

		0x18032DC64: [!] Compares {'m_obj3' (type UnityEngine.GameObject)} and 0
		0x18032DC67: Jumps to 0x18032DCC9 (which throws a NRE) if m_obj3 equals 0. Implicitly present in managed code, so ignored here.
		0x18032DC6B: [!] Calls managed method UnityEngine.GameObject UnityEngine.GameObject::get_gameObject() on instance {'m_obj3' (type UnityEngine.GameObject)} and stores the result in {'gameObject' (type UnityEngine.GameObject)}

		0x18032DC70: [!] Compares {'gameObject' (type UnityEngine.GameObject)} and 0
		0x18032DC73: Jumps to 0x18032DCC9 (which throws a NRE) if gameObject equals 0. Implicitly present in managed code, so ignored here.
		0x18032DC78: [!] Writes the constant 0x1 into operand True (type UInt64) in register rdx
		0x18032DC7A: Copies {'gameObject' (type UnityEngine.GameObject)} from rax into rcx
		0x18032DC7D: [!] Calls managed method System.Void UnityEngine.GameObject::SetActive(System.Boolean) on instance {'gameObject' (type UnityEngine.GameObject)} with arguments [True]

		0x18032DC82: Reads unknown value in stack, offset 80 (0x50) and stores the pointer in register xmm7 as new constant constant39
		0x18032DC87: Reads unknown value in stack, offset 64 (0x40) and stores the pointer in register xmm8 as new constant constant40
		0x18032DC8D: Reads unknown value in stack, offset 128 (0x80) and stores the pointer in register rbx as new constant constant41
		0x18032DC9A: [!] Returns from the function

		0x18032DC9D: [!] Constructs and throws an exception of kind System.NullReferenceException




	Generated Pseudocode:

	Declaring Type: TagRuby
	System.Void OnPostFill(System.Collections.Generic.List`1<UnityEngine.Vector3> verts, System.Collections.Generic.List`1<UnityEngine.Vector2> uvs, System.Collections.Generic.List`1<UnityEngine.Color> cols)

		if ( == 0)

		    System.Collections.Generic.List`1<UnityEngine.Vector2> centerPosList = base.GetCenterPosList(verts) //(List`1 verts)

		    System.Int32 count = centerPosList.Count

		    if (count > this.m_sb)

		        System.Int32 count2 = centerPosList.Count

		        if (count2 > this.m_eb)
		            System.Int32 m_sb = this.m_sb
		            this.m_isCompletedFill = True

		            UnityEngine.Vector2 item = centerPosList.Item
		            System.Int32 m_eb = this.m_eb

		            UnityEngine.Vector2 item2 = centerPosList.Item
		            System.Int32 m_sb2 = this.m_sb
		            System.Single local13 = item2 * 0,5

		            UnityEngine.Vector2 item3 = centerPosList.Item
		            System.Int32 m_eb2 = this.m_eb

		            UnityEngine.Vector2 item4 = centerPosList.Item
		            UnityEngine.GameObject m_obj = this.m_obj
		            System.String[] m_subs = this.m_subs
		            System.Single local19 =  * 0,5
		            System.String local20 = m_subs[2]

		            System.String string = System.String.Concat("ruby_", local20) //(String str0, String str1)

		            m_obj.name = string
		            UnityEngine.GameObject m_obj2 = this.m_obj

		            UnityEngine.Transform transform = m_obj2.transform

		            UnityEngine.Vector3 vector3 = UnityEngine.Vector2.op_Implicit(item3) //(Vector2 v)
		            System.Single single = vector3.z

		            transform.set_localPosition()
		            System.String[] m_subs2 = this.m_subs
		            UILabel m_rubyLabel = this.m_rubyLabel
		            System.String local35 = m_subs2[2]

		            m_rubyLabel.text = local35
		            UnityEngine.GameObject m_obj3 = this.m_obj

		            UnityEngine.GameObject gameObject = m_obj3.gameObject

		            gameObject.SetActive(True) //(Boolean value)
		        endif
                
		        return
		        throw new System.NullReferenceException()


Generated IL:
	Action of type Cpp2IL.Core.Analysis.Actions.x86.Important.JumpIfNonZeroOrNonNullAction at (0x18032DA4F) is corrupt (One of the arguments is null) and cannot be created as IL. Aborting here.


Method: System.Int32 TagRuby::CalcTextWidth(System.String,System.Int32):	Method Body (x86 ASM):
		0x18032D4B0 push rbx		; DEBUG: {Register}/RBX {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18032D4B2 push rbp		; DEBUG: {Register}/RBP {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18032D4B3 push rsi		; DEBUG: {Register}/RSI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18032D4B4 push rdi		; DEBUG: {Register}/RDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18032D4B5 push r14		; DEBUG: {Register}/R14 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18032D4B7 sub rsp,20h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 32
		0x18032D4BB xor ebp,ebp		; DEBUG: {Register}/EBP {Register}/EBP ||| None | 0 | None ||| N/A | N/A
		0x18032D4BD xor edi,edi		; DEBUG: {Register}/EDI {Register}/EDI ||| None | 0 | None ||| N/A | N/A
		0x18032D4BF xor ebx,ebx		; DEBUG: {Register}/EBX {Register}/EBX ||| None | 0 | None ||| N/A | N/A
		0x18032D4C1 mov r14d,r8d		; DEBUG: {Register}/R14D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18032D4C4 mov rsi,rdx		; DEBUG: {Register}/RSI {Register}/RDX ||| None | 0 | None ||| N/A | N/A
		0x18032D4C7 test rdx,rdx		; DEBUG: {Register}/RDX {Register}/RDX ||| None | 0 | None ||| N/A | N/A
		0x18032D4CA je near ptr 000000018032D571h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D4D0 mov [rsp+50h],r12		; DEBUG: {Memory}/None {Register}/R12 ||| RSP | 80 | None ||| N/A | N/A
		0x18032D4D5 mov [rsp+58h],r13		; DEBUG: {Memory}/None {Register}/R13 ||| RSP | 88 | None ||| N/A | N/A
		0x18032D4DA mov r13d,9Fh		; DEBUG: {Register}/R13D {Immediate32}/None ||| None | 0 | None ||| N/A | 159
		0x18032D4E0 mov [rsp+60h],r15		; DEBUG: {Memory}/None {Register}/R15 ||| RSP | 96 | None ||| N/A | N/A
		0x18032D4E5 mov r15d,0F8F0h		; DEBUG: {Register}/R15D {Immediate32}/None ||| None | 0 | None ||| N/A | 63728
		0x18032D4EB lea r12d,[r15+1]		; DEBUG: {Register}/R12D {Memory}/None ||| R15 | 1 | None ||| N/A | N/A
		0x18032D4EF nop		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18032D4F0 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18032D4F2 mov rcx,rsi		; DEBUG: {Register}/RCX {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x18032D4F5 call 00000001804C6330h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D4FA cmp ebx,eax		; DEBUG: {Register}/EBX {Register}/EAX ||| None | 0 | None ||| N/A | N/A
		0x18032D4FC jge short 000000018032D555h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D4FE xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18032D501 mov edx,edi		; DEBUG: {Register}/EDX {Register}/EDI ||| None | 0 | None ||| N/A | N/A
		0x18032D503 mov rcx,rsi		; DEBUG: {Register}/RCX {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x18032D506 call 0000000180D55D10h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D50B mov ecx,81h		; DEBUG: {Register}/ECX {Immediate32}/None ||| None | 0 | None ||| N/A | 129
		0x18032D510 cmp ax,cx		; DEBUG: {Register}/AX {Register}/CX ||| None | 0 | None ||| N/A | N/A
		0x18032D513 jb short 000000018032D53Ah		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D515 cmp ax,r15w		; DEBUG: {Register}/AX {Register}/R15W ||| None | 0 | None ||| N/A | N/A
		0x18032D519 je short 000000018032D53Ah		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D51B lea ecx,[rax+r13]		; DEBUG: {Register}/ECX {Memory}/None ||| RAX | 0 | R13 ||| N/A | N/A
		0x18032D51F cmp cx,3Eh		; DEBUG: {Register}/CX {Immediate8to16}/None ||| None | 0 | None ||| N/A | 62
		0x18032D523 jbe short 000000018032D53Ah		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D525 xor ecx,ecx		; DEBUG: {Register}/ECX {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x18032D527 cmp ax,r12w		; DEBUG: {Register}/AX {Register}/R12W ||| None | 0 | None ||| N/A | N/A
		0x18032D52B jb short 000000018032D53Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D52D mov edx,0F8F4h		; DEBUG: {Register}/EDX {Immediate32}/None ||| None | 0 | None ||| N/A | 63732
		0x18032D532 cmp ax,dx		; DEBUG: {Register}/AX {Register}/DX ||| None | 0 | None ||| N/A | N/A
		0x18032D535 setb cl		; DEBUG: {Register}/CL {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18032D538 jmp short 000000018032D53Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D53A mov ecx,1		; DEBUG: {Register}/ECX {Immediate32}/None ||| None | 0 | None ||| N/A | 1
		0x18032D53F inc edi		; DEBUG: {Register}/EDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18032D541 mov eax,r14d		; DEBUG: {Register}/EAX {Register}/R14D ||| None | 0 | None ||| N/A | N/A
		0x18032D544 cdq		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18032D545 mov ebx,edi		; DEBUG: {Register}/EBX {Register}/EDI ||| None | 0 | None ||| N/A | N/A
		0x18032D547 sub eax,edx		; DEBUG: {Register}/EAX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18032D549 sar eax,1		; DEBUG: {Register}/EAX {Immediate8}/None ||| None | 0 | None ||| N/A | 1
		0x18032D54B test ecx,ecx		; DEBUG: {Register}/ECX {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x18032D54D cmove eax,r14d		; DEBUG: {Register}/EAX {Register}/R14D ||| None | 0 | None ||| N/A | N/A
		0x18032D551 add ebp,eax		; DEBUG: {Register}/EBP {Register}/EAX ||| None | 0 | None ||| N/A | N/A
		0x18032D553 jmp short 000000018032D4F0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D555 mov r15,[rsp+60h]		; DEBUG: {Register}/R15 {Memory}/None ||| RSP | 96 | None ||| N/A | N/A
		0x18032D55A mov eax,ebp		; DEBUG: {Register}/EAX {Register}/EBP ||| None | 0 | None ||| N/A | N/A
		0x18032D55C mov r13,[rsp+58h]		; DEBUG: {Register}/R13 {Memory}/None ||| RSP | 88 | None ||| N/A | N/A
		0x18032D561 mov r12,[rsp+50h]		; DEBUG: {Register}/R12 {Memory}/None ||| RSP | 80 | None ||| N/A | N/A
		0x18032D566 add rsp,20h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 32
		0x18032D56A pop r14		; DEBUG: {Register}/R14 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18032D56C pop rdi		; DEBUG: {Register}/RDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18032D56D pop rsi		; DEBUG: {Register}/RSI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18032D56E pop rbp		; DEBUG: {Register}/RBP {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18032D56F pop rbx		; DEBUG: {Register}/RBX {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18032D570 ret		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18032D571 xor ecx,ecx		; DEBUG: {Register}/ECX {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x18032D573 call 000000018012BDA0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D578 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.Int32 TagRuby::CalcTextWidth(System.String,System.Int32):
		End of function at 0x18032D579
		Absolute End is at 0x18032D579
		Identified Jump Destination addresses:
			0x18032D53F
		0x18032D4B0: Saves the content of rbx to the stack
		0x18032D4B2: Saves the content of rbp to the stack
		0x18032D4B3: Saves the content of rsi to the stack
		0x18032D4B4: Saves the content of rdi to the stack
		0x18032D4B5: Saves the content of r14 to the stack
		0x18032D4BB: Clears register rbp, yielding zero-local {'local3' (type System.Int32)}
		0x18032D4BD: Clears register rdi, yielding zero-local {'local4' (type System.Int32)}
		0x18032D4BF: Clears register rbx, yielding zero-local {'local5' (type System.Int32)}
		0x18032D4C1: Copies {'fontSize' (function parameter, type System.Int32)} from r8 into r14
		0x18032D4C4: Copies {'str' (function parameter, type System.String)} from rdx into rsi
		0x18032D4C7: [!] Compares {'str' (function parameter, type System.String)} and 0
		0x18032D4CA: Jumps to 0x18032D571 (which throws a NRE) if str equals 0. Implicitly present in managed code, so ignored here.
		0x18032D4E5: [!] Writes the constant 0xF8F0 into operand {'local7' (type System.UInt32)} (type UInt64) in register r15
		0x18032D4EB: Adds 1 to local7 and stores the result in local8

		Potential Loop Start (0x18032D4F0):
		0x18032D4F2: Copies {'str' (function parameter, type System.String)} from rsi into rcx
		0x18032D4F5: [!] Calls managed method System.Int32 System.String::get_Length() on instance {'str' (function parameter, type System.String)} and stores the result in {'length' (type System.Int32)}

		0x18032D4FA: [!] Compares {'local5' (type System.Int32)} and {'length' (type System.Int32)}
		0x18032D4FC: Jumps to 0x18032D555 (which is an if statement's body) if {'local5' (type System.Int32)} is greater than or equal to {'length' (type System.Int32)} ;  - Increasing indentation - is standard if, unimportant is False

		0x18032D501: Copies {'local4' (type System.Int32)} from rdi into rdx
		0x18032D503: Copies {'str' (function parameter, type System.String)} from rsi into rcx
		0x18032D506: [!] Calls managed method System.Char System.String::get_Chars(System.Int32) on instance {'str' (function parameter, type System.String)} with arguments [{'local4' (type System.Int32)}] and stores the result in {'chars' (type System.Char)}

		0x18032D50B: [!] Writes the constant 0x81 into operand {'local13' (type System.UInt32)} (type UInt64) in register rcx
		0x18032D510: [!] Compares {'chars' (type System.Char)} and {'local13' (type System.UInt32)}
		0x18032D515: [!] Compares {'chars' (type System.Char)} and {'local7' (type System.UInt32)}
		0x18032D519: Jumps to 0x18032D53A if chars equals local7 ;  - Increasing indentation - is if-else, unimportant is False

		0x18032D51F: [!] Compares {'local13' (type System.UInt32)} and 62
		0x18032D523: Jumps to 0x18032D53A if {'local13' (type System.UInt32)} is less than or equal to 62 ;  - Increasing indentation - is if-else, unimportant is False

		0x18032D527: [!] Compares {'chars' (type System.Char)} and {'local8' (type System.UInt32)}
		0x18032D52D: [!] Writes the constant 0xF8F4 into operand {'local15' (type System.UInt32)} (type UInt64) in register rdx
		0x18032D532: [!] Compares {'chars' (type System.Char)} and {'local15' (type System.UInt32)}
		0x18032D538: Jumps to 0x18032D53F (which is an function-local jump destination)

		0x18032D53A: [!] Writes the constant 0x1 into operand {'local16' (type System.UInt32)} (type UInt64) in register rcx

		End Of If-Else Block (at 0x18032D53F) where the else started at 0x18032D53A
		0x18032D53F: [!] Adds 1 to the value {'local4' (type System.Int32)}, stored in rdi
		0x18032D541: Copies {'fontSize' (function parameter, type System.Int32)} from r14 into rax
		0x18032D545: Copies {'local4' (type System.Int32)} from rdi into rbx
		0x18032D547: [!] Subtracts {'local4' (type System.Int32)} from {'fontSize' (function parameter, type System.Int32)} and stores the result in {'fontSize' (function parameter, type System.Int32)}
		0x18032D54B: [!] Compares {'local16' (type System.UInt32)} and 0
		0x18032D54D: [!] Copies {'fontSize' (function parameter, type System.Int32)} from r14 into rax based on previous comparison
		0x18032D551: [!] Adds {'local3' (type System.Int32)} and {'fontSize' (function parameter, type System.Int32)} and stores the result in {'local3' (type System.Int32)}
		0x18032D553: Jumps to 0x18032D4F0 - which is still in this function, but further up. Probably indicative that this is a loop.
		0x18032D555: Reads unknown value in stack, offset 96 (0x60) and stores the pointer in register r15 as new constant constant4
		0x18032D55A: Copies {'local3' (type System.Int32)} from rbp into rax
		0x18032D55C: Reads unknown value in stack, offset 88 (0x58) and stores the pointer in register r13 as new constant constant5
		0x18032D561: Reads unknown value in stack, offset 80 (0x50) and stores the pointer in register r12 as new constant constant6
		0x18032D570: [!] Returns {'local3' (type System.Int32)} from the function

		0x18032D573: [!] Constructs and throws an exception of kind System.NullReferenceException




	Generated Pseudocode:

	Declaring Type: TagRuby
	System.Int32 CalcTextWidth(System.String str, System.Int32 fontSize)
		ulong local3 = 0
		ulong local4 = 0
		ulong local5 = 0
		System.Int64 local7 = 0xF8F0
		System.UInt32 local8 = local7 + 1

		System.Int32 length = str.Length

		if (local5 < length)

		    System.Char chars = str.Chars
		    System.Int64 local13 = 129

		    if (chars != local7)

		        if (local13 > 62)
		            System.Int64 local15 = 0xF8F4
		        else
		            System.Int64 local16 = 1
		        endif
                
		        local4 += 1
		        fontSize -= local4
		        local3 += fontSize
		    endif
            
		    return local3
		    throw new System.NullReferenceException()


Generated IL:
	Action of type Cpp2IL.Core.Analysis.Actions.x86.Important.SubtractRegFromRegAction at (0x18032D547) is corrupt (SubRFromR: First operand, {'fontSize' (function parameter, type System.Int32)}, has been stripped or has no variable) and cannot be created as IL. Aborting here.


Method: System.Boolean TagRuby::IsChar2Byte(System.Char):	Method Body (x86 ASM):
		0x18032D910 mov eax,81h		; DEBUG: {Register}/EAX {Immediate32}/None ||| None | 0 | None ||| N/A | 129
		0x18032D915 cmp cx,ax		; DEBUG: {Register}/CX {Register}/AX ||| None | 0 | None ||| N/A | N/A
		0x18032D918 jb short 000000018032D94Dh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D91A mov eax,0F8F0h		; DEBUG: {Register}/EAX {Immediate32}/None ||| None | 0 | None ||| N/A | 63728
		0x18032D91F cmp cx,ax		; DEBUG: {Register}/CX {Register}/AX ||| None | 0 | None ||| N/A | N/A
		0x18032D922 je short 000000018032D94Dh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D924 mov eax,9Fh		; DEBUG: {Register}/EAX {Immediate32}/None ||| None | 0 | None ||| N/A | 159
		0x18032D929 add eax,ecx		; DEBUG: {Register}/EAX {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x18032D92B cmp ax,3Eh		; DEBUG: {Register}/AX {Immediate8to16}/None ||| None | 0 | None ||| N/A | 62
		0x18032D92F jbe short 000000018032D94Dh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D931 mov eax,0F8F1h		; DEBUG: {Register}/EAX {Immediate32}/None ||| None | 0 | None ||| N/A | 63729
		0x18032D936 cmp cx,ax		; DEBUG: {Register}/CX {Register}/AX ||| None | 0 | None ||| N/A | N/A
		0x18032D939 jae short 000000018032D941h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D93B mov eax,1		; DEBUG: {Register}/EAX {Immediate32}/None ||| None | 0 | None ||| N/A | 1
		0x18032D940 ret		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18032D941 mov edx,0F8F4h		; DEBUG: {Register}/EDX {Immediate32}/None ||| None | 0 | None ||| N/A | 63732
		0x18032D946 cmp cx,dx		; DEBUG: {Register}/CX {Register}/DX ||| None | 0 | None ||| N/A | N/A
		0x18032D949 setae al		; DEBUG: {Register}/AL {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18032D94C ret		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18032D94D xor eax,eax		; DEBUG: {Register}/EAX {Register}/EAX ||| None | 0 | None ||| N/A | N/A
		0x18032D94F ret		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Static Method System.Boolean TagRuby::IsChar2Byte(System.Char):
		End of function at 0x18032D950
		Absolute End is at 0x18032D950
		Identified Jump Destination addresses:

		0x18032D910: [!] Writes the constant 0x81 into operand {'local1' (type System.UInt32)} (type UInt64) in register rax
		0x18032D915: [!] Compares {'c' (function parameter, type System.Char)} and {'local1' (type System.UInt32)}
		0x18032D91A: [!] Writes the constant 0xF8F0 into operand {'local2' (type System.UInt32)} (type UInt64) in register rax
		0x18032D91F: [!] Compares {'c' (function parameter, type System.Char)} and {'local2' (type System.UInt32)}
		0x18032D922: Jumps to 0x18032D94D (which is an if statement's body) if c equals local2 ;  - Increasing indentation - is standard if, unimportant is False

		0x18032D924: [!] Writes the constant 0x9F into operand {'local3' (type System.UInt32)} (type UInt64) in register rax
		0x18032D929: [!] Adds {'local3' (type System.UInt32)} and {'c' (function parameter, type System.Char)} and stores the result in {'local3' (type System.UInt32)}
		0x18032D92B: [!] Compares {'local3' (type System.UInt32)} and 62
		0x18032D92F: Jumps to 0x18032D94D (which is an if statement's body) if {'local3' (type System.UInt32)} is less than or equal to 62 ;  - Increasing indentation - is standard if, unimportant is False

		0x18032D931: [!] Writes the constant 0xF8F1 into operand {'local4' (type System.UInt32)} (type UInt64) in register rax
		0x18032D936: [!] Compares {'c' (function parameter, type System.Char)} and {'local4' (type System.UInt32)}
		0x18032D939: Jumps to 0x18032D941 (which is an if statement's body) if {'c' (function parameter, type System.Char)} is greater than or equal to {'local4' (type System.UInt32)} ;  - Increasing indentation - is standard if, unimportant is False

		0x18032D93B: [!] Writes the constant 0x1 into operand {'local5' (type System.UInt32)} (type UInt64) in register rax
		0x18032D940: [!] Returns {'local5' (type System.UInt32)} from the function

		0x18032D941: [!] Writes the constant 0xF8F4 into operand {'local6' (type System.UInt32)} (type UInt64) in register rdx
		0x18032D946: [!] Compares {'c' (function parameter, type System.Char)} and {'local6' (type System.UInt32)}
		0x18032D94C: [!] Returns {'local4' (type System.UInt32)} from the function

		0x18032D94D: Clears register rax, yielding zero-local {'local7' (type System.Int32)}
		0x18032D94F: [!] Returns {'local7' (type System.Int32)} from the function




	Generated Pseudocode:

	Declaring Type: TagRuby
	static System.Boolean IsChar2Byte(System.Char c)
		System.Int64 local1 = 129
		System.Int64 local2 = 0xF8F0

		if (c != local2)
		    System.Int64 local3 = 159
		    local3 += c

		    if (local3 > 62)
		        System.Int64 local4 = 0xF8F1

		        if (c < local4)
		            System.Int64 local5 = 1
		            return local5
		        endif
                
		        System.Int64 local6 = 0xF8F4
		        return local4
		    endif
            
		    ulong local7 = 0
		    return local7


Generated IL:
	Action of type Cpp2IL.Core.Analysis.Actions.x86.Important.ReturnFromFunctionAction at (0x18032D940) is corrupt (Return value has a type of System.UInt32, expecting an object of type System.Boolean) and cannot be created as IL. Aborting here.


Method: System.Void TagRuby::OnDestroy():	Method Body (x86 ASM):
		0x18032D950 mov [rsp+8],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RSP | 8 | None ||| N/A | N/A
		0x18032D955 push rdi		; DEBUG: {Register}/RDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18032D956 sub rsp,20h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 32
		0x18032D95A cmp byte ptr [18183DA49h],0		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6467869257 | None ||| N/A | 0
		0x18032D961 mov rbx,rcx		; DEBUG: {Register}/RBX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x18032D964 jne short 000000018032D978h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D966 mov ecx,[1814C5F9Ch]		; DEBUG: {Register}/ECX {Memory}/None ||| RIP | 6464233372 | None ||| N/A | N/A
		0x18032D96C call 00000001800FEB90h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D971 mov byte ptr [18183DA49h],1		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6467869257 | None ||| N/A | 1
		0x18032D978 mov rcx,[18188D758h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468196184 | None ||| N/A | N/A
		0x18032D97F mov rdi,[rbx+48h]		; DEBUG: {Register}/RDI {Memory}/None ||| RBX | 72 | None ||| N/A | N/A
		0x18032D983 test byte ptr [rcx+127h],2		; DEBUG: {Memory}/None {Immediate8}/None ||| RCX | 295 | None ||| N/A | 2
		0x18032D98A je short 000000018032D99Ah		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D98C cmp dword ptr [rcx+0D8h],0		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RCX | 216 | None ||| N/A | 0
		0x18032D993 jne short 000000018032D99Ah		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D995 call 000000018010EAF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D99A xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18032D99D mov rdx,rdi		; DEBUG: {Register}/RDX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x18032D9A0 xor ecx,ecx		; DEBUG: {Register}/ECX {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x18032D9A2 call 0000000180EA6750h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D9A7 test al,al		; DEBUG: {Register}/AL {Register}/AL ||| None | 0 | None ||| N/A | N/A
		0x18032D9A9 je short 000000018032DA0Dh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D9AB xor ecx,ecx		; DEBUG: {Register}/ECX {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x18032D9AD call 0000000180B20910h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D9B2 mov rbx,[rbx+48h]		; DEBUG: {Register}/RBX {Memory}/None ||| RBX | 72 | None ||| N/A | N/A
		0x18032D9B6 mov rcx,[18188D758h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468196184 | None ||| N/A | N/A
		0x18032D9BD test al,al		; DEBUG: {Register}/AL {Register}/AL ||| None | 0 | None ||| N/A | N/A
		0x18032D9BF jne short 000000018032D9ECh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D9C1 test byte ptr [rcx+127h],2		; DEBUG: {Memory}/None {Immediate8}/None ||| RCX | 295 | None ||| N/A | 2
		0x18032D9C8 je short 000000018032D9D8h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D9CA cmp dword ptr [rcx+0D8h],0		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RCX | 216 | None ||| N/A | 0
		0x18032D9D1 jne short 000000018032D9D8h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D9D3 call 000000018010EAF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D9D8 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18032D9DA mov rcx,rbx		; DEBUG: {Register}/RCX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x18032D9DD mov rbx,[rsp+30h]		; DEBUG: {Register}/RBX {Memory}/None ||| RSP | 48 | None ||| N/A | N/A
		0x18032D9E2 add rsp,20h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 32
		0x18032D9E6 pop rdi		; DEBUG: {Register}/RDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18032D9E7 jmp near ptr 0000000180EA4EE0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D9EC test byte ptr [rcx+127h],2		; DEBUG: {Memory}/None {Immediate8}/None ||| RCX | 295 | None ||| N/A | 2
		0x18032D9F3 je short 000000018032DA03h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D9F5 cmp dword ptr [rcx+0D8h],0		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RCX | 216 | None ||| N/A | 0
		0x18032D9FC jne short 000000018032DA03h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032D9FE call 000000018010EAF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032DA03 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18032DA05 mov rcx,rbx		; DEBUG: {Register}/RCX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x18032DA08 call 0000000180EA50E0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032DA0D mov rbx,[rsp+30h]		; DEBUG: {Register}/RBX {Memory}/None ||| RSP | 48 | None ||| N/A | N/A
		0x18032DA12 add rsp,20h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 32
		0x18032DA16 pop rdi		; DEBUG: {Register}/RDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18032DA17 ret		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18032DA18 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.Void TagRuby::OnDestroy():
		End of function at 0x18032DA19
		Absolute End is at 0x18032DA19
		Identified Jump Destination addresses:

		0x18032D955: Saves the content of rdi to the stack
		0x18032D95A: Compares {Unknown Global at 0x18183DA49, first ten bytes are [54 1 0 152 54 1 0 216 60 103], or as chars "6 6 Ø<g"} and 0
		0x18032D961: Copies {'this' (function parameter, type TagRuby)} from rcx into rbx
		0x18032D964: Jumps to 0x18032D978 if {Unknown Global at 0x18183DA49, first ten bytes are [54 1 0 152 54 1 0 216 60 103], or as chars "6 6 Ø<g"} != 0

		0x18032D966: Reads {Unknown Global at 0x1814C5F9C, first ten bytes are [152 106 0 0 152 42 0 0 152 10], or as chars "j  *  
"} into register rcx as a constant constant3
		0x18032D96C: Attempts to load the il2cpp metadata for this method (method id 27288) and init it cpp-side.

		0x18032D978: Loads the type definition for managed type UnityEngine.Object as a constant "Object" in rcx
		0x18032D97F: [!] Reads field m_obj from {'this' (function parameter, type TagRuby)} and stores in a new local {'m_obj' (type UnityEngine.GameObject)}

		0x18032D983: Compares "{il2cpp field on {'Object' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" and 2
		0x18032D98A: Jumps to 0x18032D99A if "{il2cpp field on {'Object' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" equals 2

		0x18032D98C: Compares "{il2cpp field on {'Object' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" and 0
		0x18032D993: Jumps to 0x18032D99A if "{il2cpp field on {'Object' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" != 0

		0x18032D995: Calls the il2cpp cctor for the type UnityEngine.Object
		0x18032D99D: Copies {'m_obj' (type UnityEngine.GameObject)} from rdi into rdx
		0x18032D9A0: Clears register rcx, yielding zero-local {'local3' (type System.Int32)}
		0x18032D9A2: [!] Calls static managed method System.Boolean UnityEngine.Object::op_Inequality(UnityEngine.Object,UnityEngine.Object) with arguments [{'local3' (type System.Int32)}, {'m_obj' (type UnityEngine.GameObject)}] and stores the result in {'boolean' (type System.Boolean)}

		0x18032D9A7: [!] Compares {'boolean' (type System.Boolean)} and False
		0x18032D9A9: Jumps to 0x18032DA0D (which is an if statement's body) if boolean equals False ;  - Increasing indentation - is standard if, unimportant is False

		0x18032D9AB: Clears register rcx, yielding zero-local {'local5' (type System.Int32)}
		0x18032D9AD: [!] Calls static managed method System.Boolean UnityEngine.Application::get_isPlaying() and stores the result in {'isPlaying' (type System.Boolean)}

		0x18032D9B2: [!] Reads field m_obj from {'this' (function parameter, type TagRuby)} and stores in a new local {'m_obj2' (type UnityEngine.GameObject)}

		0x18032D9B6: Loads the type definition for managed type UnityEngine.Object as a constant "Object" in rcx
		0x18032D9BD: [!] Compares {'isPlaying' (type System.Boolean)} and False
		0x18032D9BF: Jumps to 0x18032D9EC (which is an if statement's body) if {'isPlaying' (type System.Boolean)} != False ;  - Increasing indentation - is standard if, unimportant is False

		0x18032D9C1: Compares "{il2cpp field on {'Object' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" and 2
		0x18032D9C8: Jumps to 0x18032D9D8 if "{il2cpp field on {'Object' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" equals 2

		0x18032D9CA: Compares "{il2cpp field on {'Object' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" and 0
		0x18032D9D1: Jumps to 0x18032D9D8 if "{il2cpp field on {'Object' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" != 0

		0x18032D9D3: Calls the il2cpp cctor for the type UnityEngine.Object
		0x18032D9DA: Copies {'m_obj2' (type UnityEngine.GameObject)} from rbx into rcx
		0x18032D9DD: Reads unknown value in stack, offset 48 (0x30) and stores the pointer in register rbx as new constant constant16
		0x18032D9E7: [!] Calls static managed method System.Void UnityEngine.Object::DestroyImmediate(UnityEngine.Object) with arguments [{'m_obj2' (type UnityEngine.GameObject)}]

		0x18032D9E7: [!] Returns from the function

		0x18032D9EC: Compares "{il2cpp field on {'Object' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" and 2
		0x18032D9F3: Jumps to 0x18032DA03 if "{il2cpp field on {'Object' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" equals 2 ;  - This is probably a goto, jumping to 0x18032DA03 which is after end of current block @ 0x18032D9EC (started at 0x18032D9C1)

		0x18032D9F5: Compares "{il2cpp field on {'Object' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" and 0
		0x18032D9FC: Jumps to 0x18032DA03 if "{il2cpp field on {'Object' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" != 0 ;  - This is probably a goto, jumping to 0x18032DA03 which is after end of current block @ 0x18032D9EC (started at 0x18032D9C1)

		0x18032D9FE: Calls the il2cpp cctor for the type UnityEngine.Object
		0x18032DA05: Copies {'m_obj2' (type UnityEngine.GameObject)} from rbx into rcx
		0x18032DA08: [!] Calls static managed method System.Void UnityEngine.Object::Destroy(UnityEngine.Object) with arguments [{'m_obj2' (type UnityEngine.GameObject)}]

		0x18032DA0D: Reads unknown value in stack, offset 48 (0x30) and stores the pointer in register rbx as new constant constant21
		0x18032DA17: [!] Returns from the function




	Generated Pseudocode:

	Declaring Type: TagRuby
	System.Void OnDestroy()
		UnityEngine.GameObject m_obj = this.m_obj
		ulong local3 = 0

		System.Boolean boolean = UnityEngine.Object.op_Inequality(local3, m_obj) //(Object x, Object y)

		if (boolean != False)
		    ulong local5 = 0

		    System.Boolean isPlaying = UnityEngine.Application.isPlaying
		    UnityEngine.GameObject m_obj2 = this.m_obj

		    if (isPlaying == False)

		        UnityEngine.Object.DestroyImmediate(m_obj2) //(Object obj)
		        return
		    endif
            

		    UnityEngine.Object.Destroy(m_obj2) //(Object obj)
		endif
        
		return


Generated IL:
	IL_0000: ldarg.0
	IL_0001: ldfld UnityEngine.GameObject TagRuby::m_obj
	IL_0006: stloc.0
	IL_0007: ldc.i4.0
	IL_0008: ldloc.0
	IL_0009: call System.Boolean UnityEngine.Object::op_Inequality(UnityEngine.Object,UnityEngine.Object)
	IL_000e: ldc.i4.0
	IL_000f: beq.s IL_0031
	IL_0011: ldc.i4.0
	IL_0012: stloc.1
	IL_0013: call System.Boolean UnityEngine.Application::get_isPlaying()
	IL_0018: stloc.2
	IL_0019: ldarg.0
	IL_001a: ldfld UnityEngine.GameObject TagRuby::m_obj
	IL_001f: stloc.3
	IL_0020: ldloc.2
	IL_0021: ldc.i4.0
	IL_0022: bne.un.s IL_002b
	IL_0024: ldloc.3
	IL_0025: call System.Void UnityEngine.Object::DestroyImmediate(UnityEngine.Object)
	IL_002a: ret
	IL_002b: ldloc.3
	IL_002c: call System.Void UnityEngine.Object::Destroy(UnityEngine.Object)
	IL_0031: ret
	

