Type: C016_SideQuest_Define

Method: System.Void C016_SideQuest_Define::.ctor():	Method Body (x86 ASM):
		0x1802068B0 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1802068B2 jmp near ptr 0000000180207540h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802068B7 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.Void C016_SideQuest_Define::.ctor():
		End of function at 0x1802068B8
		Absolute End is at 0x1802068B8
		Identified Jump Destination addresses:

		0x1802068B2: [!] Calls managed method System.Void System.Object::.ctor() on instance {'this' (function parameter, type C016_SideQuest_Define)}

		0x1802068B2: [!] Returns from the function




	Generated Pseudocode:

	Declaring Type: C016_SideQuest_Define
	System.Void .ctor()

		base..ctor()
		return


Generated IL:
	IL_0000: ldarg.0
	IL_0001: call System.Void System.Object::.ctor()
	IL_0006: ret
	

Method: System.Void C016_SideQuest_Define::.cctor():	Method Body (x86 ASM):
		0x18054E0C0 mov [rsp+8],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RSP | 8 | None ||| N/A | N/A
		0x18054E0C5 push rdi		; DEBUG: {Register}/RDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18054E0C6 sub rsp,20h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 32
		0x18054E0CA cmp byte ptr [18183EAFAh],0		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6467873530 | None ||| N/A | 0
		0x18054E0D1 jne short 000000018054E0E5h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E0D3 mov ecx,[181515F74h]		; DEBUG: {Register}/ECX {Memory}/None ||| RIP | 6464561012 | None ||| N/A | N/A
		0x18054E0D9 call 00000001800FEB90h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E0DE mov byte ptr [18183EAFAh],1		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6467873530 | None ||| N/A | 1
		0x18054E0E5 mov rcx,[181884F78h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468161400 | None ||| N/A | N/A
		0x18054E0EC mov edx,2Ah		; DEBUG: {Register}/EDX {Immediate32}/None ||| None | 0 | None ||| N/A | 42
		0x18054E0F1 call 0000000180141320h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E0F6 mov rcx,[181884228h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468157992 | None ||| N/A | N/A
		0x18054E0FD mov rdi,rax		; DEBUG: {Register}/RDI {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E100 mov rbx,[18186F450h]		; DEBUG: {Register}/RBX {Memory}/None ||| RIP | 6468072528 | None ||| N/A | N/A
		0x18054E107 test byte ptr [rcx+127h],2		; DEBUG: {Memory}/None {Immediate8}/None ||| RCX | 295 | None ||| N/A | 2
		0x18054E10E je short 000000018054E11Eh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E110 cmp dword ptr [rcx+0D8h],0		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RCX | 216 | None ||| N/A | 0
		0x18054E117 jne short 000000018054E11Eh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E119 call 000000018010EAF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E11E xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18054E120 mov rcx,rbx		; DEBUG: {Register}/RCX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x18054E123 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E128 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E12B test rdi,rdi		; DEBUG: {Register}/RDI {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x18054E12E je near ptr 000000018054EAF6h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E134 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E137 je short 000000018054E151h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E139 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18054E13C mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E13F mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18054E143 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E148 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E14B je near ptr 000000018054EAFEh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E151 cmp dword ptr [rdi+18h],1		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 1
		0x18054E155 jbe near ptr 000000018054EB11h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E15B mov [rdi+28h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 40 | None ||| N/A | N/A
		0x18054E15F xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18054E161 mov rcx,[18186F490h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468072592 | None ||| N/A | N/A
		0x18054E168 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E16D mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E170 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E173 je short 000000018054E18Dh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E175 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18054E178 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E17B mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18054E17F call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E184 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E187 je near ptr 000000018054EB24h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E18D cmp dword ptr [rdi+18h],2		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 2
		0x18054E191 jbe near ptr 000000018054EB37h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E197 mov [rdi+30h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 48 | None ||| N/A | N/A
		0x18054E19B xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18054E19D mov rcx,[18186F4A8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468072616 | None ||| N/A | N/A
		0x18054E1A4 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E1A9 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E1AC test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E1AF je short 000000018054E1C9h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E1B1 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18054E1B4 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E1B7 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18054E1BB call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E1C0 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E1C3 je near ptr 000000018054EB4Ah		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E1C9 cmp dword ptr [rdi+18h],3		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 3
		0x18054E1CD jbe near ptr 000000018054EB5Dh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E1D3 mov [rdi+38h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 56 | None ||| N/A | N/A
		0x18054E1D7 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18054E1D9 mov rcx,[18186F4E0h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468072672 | None ||| N/A | N/A
		0x18054E1E0 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E1E5 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E1E8 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E1EB je short 000000018054E205h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E1ED mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18054E1F0 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E1F3 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18054E1F7 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E1FC test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E1FF je near ptr 000000018054EB70h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E205 cmp dword ptr [rdi+18h],4		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 4
		0x18054E209 jbe near ptr 000000018054EB83h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E20F mov [rdi+40h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 64 | None ||| N/A | N/A
		0x18054E213 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18054E215 mov rcx,[18186F500h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468072704 | None ||| N/A | N/A
		0x18054E21C call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E221 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E224 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E227 je short 000000018054E241h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E229 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18054E22C mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E22F mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18054E233 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E238 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E23B je near ptr 000000018054EB96h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E241 cmp dword ptr [rdi+18h],5		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 5
		0x18054E245 jbe near ptr 000000018054EBA9h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E24B mov [rdi+48h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 72 | None ||| N/A | N/A
		0x18054E24F xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18054E251 mov rcx,[18186F510h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468072720 | None ||| N/A | N/A
		0x18054E258 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E25D mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E260 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E263 je short 000000018054E27Dh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E265 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18054E268 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E26B mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18054E26F call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E274 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E277 je near ptr 000000018054EBBCh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E27D cmp dword ptr [rdi+18h],6		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 6
		0x18054E281 jbe near ptr 000000018054EBCFh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E287 mov [rdi+50h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 80 | None ||| N/A | N/A
		0x18054E28B xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18054E28D mov rcx,[18186F538h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468072760 | None ||| N/A | N/A
		0x18054E294 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E299 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E29C test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E29F je short 000000018054E2B9h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E2A1 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18054E2A4 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E2A7 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18054E2AB call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E2B0 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E2B3 je near ptr 000000018054EBE2h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E2B9 cmp dword ptr [rdi+18h],7		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 7
		0x18054E2BD jbe near ptr 000000018054EBF5h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E2C3 mov [rdi+58h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 88 | None ||| N/A | N/A
		0x18054E2C7 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18054E2C9 mov rcx,[18186F580h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468072832 | None ||| N/A | N/A
		0x18054E2D0 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E2D5 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E2D8 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E2DB je short 000000018054E2F5h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E2DD mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18054E2E0 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E2E3 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18054E2E7 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E2EC test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E2EF je near ptr 000000018054EC08h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E2F5 cmp dword ptr [rdi+18h],8		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 8
		0x18054E2F9 jbe near ptr 000000018054EC1Bh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E2FF mov [rdi+60h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 96 | None ||| N/A | N/A
		0x18054E303 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18054E305 mov rcx,[18186F588h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468072840 | None ||| N/A | N/A
		0x18054E30C call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E311 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E314 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E317 je short 000000018054E331h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E319 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18054E31C mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E31F mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18054E323 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E328 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E32B je near ptr 000000018054EC2Eh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E331 cmp dword ptr [rdi+18h],9		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 9
		0x18054E335 jbe near ptr 000000018054EC41h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E33B mov [rdi+68h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 104 | None ||| N/A | N/A
		0x18054E33F xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18054E341 mov rcx,[18186F5B8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468072888 | None ||| N/A | N/A
		0x18054E348 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E34D mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E350 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E353 je short 000000018054E36Dh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E355 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18054E358 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E35B mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18054E35F call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E364 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E367 je near ptr 000000018054EC54h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E36D cmp dword ptr [rdi+18h],0Ah		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 10
		0x18054E371 jbe near ptr 000000018054EC67h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E377 mov [rdi+70h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 112 | None ||| N/A | N/A
		0x18054E37B xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18054E37D mov rcx,[18186F5F0h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468072944 | None ||| N/A | N/A
		0x18054E384 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E389 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E38C test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E38F je short 000000018054E3A9h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E391 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18054E394 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E397 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18054E39B call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E3A0 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E3A3 je near ptr 000000018054EC7Ah		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E3A9 cmp dword ptr [rdi+18h],0Bh		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 11
		0x18054E3AD jbe near ptr 000000018054EC8Dh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E3B3 mov [rdi+78h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 120 | None ||| N/A | N/A
		0x18054E3B7 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18054E3B9 mov rcx,[18186F620h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468072992 | None ||| N/A | N/A
		0x18054E3C0 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E3C5 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E3C8 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E3CB je short 000000018054E3E5h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E3CD mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18054E3D0 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E3D3 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18054E3D7 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E3DC test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E3DF je near ptr 000000018054ECA0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E3E5 cmp dword ptr [rdi+18h],0Ch		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 12
		0x18054E3E9 jbe near ptr 000000018054ECB3h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E3EF mov [rdi+80h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 128 | None ||| N/A | N/A
		0x18054E3F6 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18054E3F8 mov rcx,[18186F648h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468073032 | None ||| N/A | N/A
		0x18054E3FF call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E404 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E407 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E40A je short 000000018054E424h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E40C mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18054E40F mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E412 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18054E416 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E41B test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E41E je near ptr 000000018054ECC6h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E424 cmp dword ptr [rdi+18h],0Dh		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 13
		0x18054E428 jbe near ptr 000000018054ECD9h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E42E mov [rdi+88h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 136 | None ||| N/A | N/A
		0x18054E435 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18054E437 mov rcx,[18186F668h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468073064 | None ||| N/A | N/A
		0x18054E43E call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E443 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E446 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E449 je short 000000018054E463h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E44B mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18054E44E mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E451 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18054E455 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E45A test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E45D je near ptr 000000018054ECECh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E463 cmp dword ptr [rdi+18h],0Eh		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 14
		0x18054E467 jbe near ptr 000000018054ECFFh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E46D mov [rdi+90h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 144 | None ||| N/A | N/A
		0x18054E474 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18054E476 mov rcx,[18186F698h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468073112 | None ||| N/A | N/A
		0x18054E47D call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E482 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E485 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E488 je short 000000018054E4A2h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E48A mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18054E48D mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E490 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18054E494 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E499 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E49C je near ptr 000000018054ED12h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E4A2 cmp dword ptr [rdi+18h],0Fh		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 15
		0x18054E4A6 jbe near ptr 000000018054ED25h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E4AC mov [rdi+98h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 152 | None ||| N/A | N/A
		0x18054E4B3 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18054E4B5 mov rcx,[18186F6B8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468073144 | None ||| N/A | N/A
		0x18054E4BC call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E4C1 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E4C4 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E4C7 je short 000000018054E4E1h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E4C9 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18054E4CC mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E4CF mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18054E4D3 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E4D8 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E4DB je near ptr 000000018054ED38h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E4E1 cmp dword ptr [rdi+18h],10h		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 16
		0x18054E4E5 jbe near ptr 000000018054ED4Bh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E4EB mov [rdi+0A0h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 160 | None ||| N/A | N/A
		0x18054E4F2 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18054E4F4 mov rcx,[18186F6D8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468073176 | None ||| N/A | N/A
		0x18054E4FB call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E500 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E503 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E506 je short 000000018054E520h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E508 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18054E50B mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E50E mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18054E512 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E517 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E51A je near ptr 000000018054ED5Eh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E520 cmp dword ptr [rdi+18h],11h		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 17
		0x18054E524 jbe near ptr 000000018054ED71h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E52A mov [rdi+0A8h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 168 | None ||| N/A | N/A
		0x18054E531 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18054E533 mov rcx,[18186F710h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468073232 | None ||| N/A | N/A
		0x18054E53A call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E53F mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E542 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E545 je short 000000018054E55Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E547 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18054E54A mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E54D mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18054E551 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E556 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E559 je near ptr 000000018054ED84h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E55F cmp dword ptr [rdi+18h],12h		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 18
		0x18054E563 jbe near ptr 000000018054ED97h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E569 mov [rdi+0B0h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 176 | None ||| N/A | N/A
		0x18054E570 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18054E572 mov rcx,[18186F718h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468073240 | None ||| N/A | N/A
		0x18054E579 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E57E mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E581 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E584 je short 000000018054E59Eh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E586 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18054E589 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E58C mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18054E590 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E595 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E598 je near ptr 000000018054EDAAh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E59E cmp dword ptr [rdi+18h],13h		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 19
		0x18054E5A2 jbe near ptr 000000018054EDBDh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E5A8 mov [rdi+0B8h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 184 | None ||| N/A | N/A
		0x18054E5AF xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18054E5B1 mov rcx,[18186F740h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468073280 | None ||| N/A | N/A
		0x18054E5B8 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E5BD mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E5C0 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E5C3 je short 000000018054E5DDh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E5C5 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18054E5C8 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E5CB mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18054E5CF call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E5D4 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E5D7 je near ptr 000000018054EDD0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E5DD cmp dword ptr [rdi+18h],14h		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 20
		0x18054E5E1 jbe near ptr 000000018054EDE3h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E5E7 mov [rdi+0C0h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 192 | None ||| N/A | N/A
		0x18054E5EE xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18054E5F0 mov rcx,[18186F770h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468073328 | None ||| N/A | N/A
		0x18054E5F7 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E5FC mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E5FF test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E602 je short 000000018054E61Ch		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E604 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18054E607 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E60A mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18054E60E call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E613 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E616 je near ptr 000000018054EDF6h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E61C cmp dword ptr [rdi+18h],15h		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 21
		0x18054E620 jbe near ptr 000000018054EE09h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E626 mov [rdi+0C8h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 200 | None ||| N/A | N/A
		0x18054E62D xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18054E62F mov rcx,[18186F7A8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468073384 | None ||| N/A | N/A
		0x18054E636 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E63B mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E63E test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E641 je short 000000018054E65Bh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E643 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18054E646 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E649 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18054E64D call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E652 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E655 je near ptr 000000018054EE1Ch		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E65B cmp dword ptr [rdi+18h],16h		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 22
		0x18054E65F jbe near ptr 000000018054EE2Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E665 mov [rdi+0D0h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 208 | None ||| N/A | N/A
		0x18054E66C xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18054E66E mov rcx,[18186F7D0h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468073424 | None ||| N/A | N/A
		0x18054E675 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E67A mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E67D test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E680 je short 000000018054E69Ah		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E682 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18054E685 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E688 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18054E68C call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E691 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E694 je near ptr 000000018054EE42h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E69A cmp dword ptr [rdi+18h],17h		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 23
		0x18054E69E jbe near ptr 000000018054EE55h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E6A4 mov [rdi+0D8h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 216 | None ||| N/A | N/A
		0x18054E6AB xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18054E6AD mov rcx,[18186F7E8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468073448 | None ||| N/A | N/A
		0x18054E6B4 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E6B9 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E6BC test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E6BF je short 000000018054E6D9h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E6C1 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18054E6C4 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E6C7 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18054E6CB call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E6D0 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E6D3 je near ptr 000000018054EE68h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E6D9 cmp dword ptr [rdi+18h],18h		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 24
		0x18054E6DD jbe near ptr 000000018054EE7Bh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E6E3 mov [rdi+0E0h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 224 | None ||| N/A | N/A
		0x18054E6EA xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18054E6EC mov rcx,[18186F820h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468073504 | None ||| N/A | N/A
		0x18054E6F3 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E6F8 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E6FB test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E6FE je short 000000018054E718h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E700 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18054E703 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E706 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18054E70A call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E70F test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E712 je near ptr 000000018054EE8Eh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E718 cmp dword ptr [rdi+18h],19h		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 25
		0x18054E71C jbe near ptr 000000018054EEA1h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E722 mov [rdi+0E8h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 232 | None ||| N/A | N/A
		0x18054E729 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18054E72B mov rcx,[18186F838h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468073528 | None ||| N/A | N/A
		0x18054E732 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E737 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E73A test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E73D je short 000000018054E757h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E73F mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18054E742 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E745 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18054E749 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E74E test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E751 je near ptr 000000018054EEB4h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E757 cmp dword ptr [rdi+18h],1Ah		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 26
		0x18054E75B jbe near ptr 000000018054EEC7h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E761 mov [rdi+0F0h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 240 | None ||| N/A | N/A
		0x18054E768 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18054E76A mov rcx,[18186F858h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468073560 | None ||| N/A | N/A
		0x18054E771 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E776 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E779 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E77C je short 000000018054E796h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E77E mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18054E781 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E784 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18054E788 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E78D test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E790 je near ptr 000000018054EEDAh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E796 cmp dword ptr [rdi+18h],1Bh		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 27
		0x18054E79A jbe near ptr 000000018054EEEDh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E7A0 mov [rdi+0F8h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 248 | None ||| N/A | N/A
		0x18054E7A7 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18054E7A9 mov rcx,[18186F8A0h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468073632 | None ||| N/A | N/A
		0x18054E7B0 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E7B5 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E7B8 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E7BB je short 000000018054E7D5h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E7BD mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18054E7C0 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E7C3 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18054E7C7 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E7CC test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E7CF je near ptr 000000018054EF00h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E7D5 cmp dword ptr [rdi+18h],1Ch		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 28
		0x18054E7D9 jbe near ptr 000000018054EF13h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E7DF mov [rdi+100h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 256 | None ||| N/A | N/A
		0x18054E7E6 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18054E7E8 mov rcx,[18186F8B0h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468073648 | None ||| N/A | N/A
		0x18054E7EF call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E7F4 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E7F7 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E7FA je short 000000018054E814h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E7FC mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18054E7FF mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E802 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18054E806 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E80B test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E80E je near ptr 000000018054EF26h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E814 cmp dword ptr [rdi+18h],1Dh		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 29
		0x18054E818 jbe near ptr 000000018054EF39h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E81E mov [rdi+108h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 264 | None ||| N/A | N/A
		0x18054E825 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18054E827 mov rcx,[18186F8E8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468073704 | None ||| N/A | N/A
		0x18054E82E call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E833 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E836 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E839 je short 000000018054E853h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E83B mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18054E83E mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E841 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18054E845 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E84A test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E84D je near ptr 000000018054EF4Ch		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E853 cmp dword ptr [rdi+18h],1Eh		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 30
		0x18054E857 jbe near ptr 000000018054EF5Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E85D mov [rdi+110h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 272 | None ||| N/A | N/A
		0x18054E864 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18054E866 mov rcx,[18186F8F8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468073720 | None ||| N/A | N/A
		0x18054E86D call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E872 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E875 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E878 je short 000000018054E892h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E87A mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18054E87D mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E880 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18054E884 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E889 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E88C je near ptr 000000018054EF72h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E892 cmp dword ptr [rdi+18h],1Fh		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 31
		0x18054E896 jbe near ptr 000000018054EF85h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E89C mov [rdi+118h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 280 | None ||| N/A | N/A
		0x18054E8A3 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18054E8A5 mov rcx,[18186F938h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468073784 | None ||| N/A | N/A
		0x18054E8AC call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E8B1 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E8B4 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E8B7 je short 000000018054E8D1h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E8B9 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18054E8BC mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E8BF mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18054E8C3 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E8C8 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E8CB je near ptr 000000018054EF98h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E8D1 cmp dword ptr [rdi+18h],20h		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 32
		0x18054E8D5 jbe near ptr 000000018054EFABh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E8DB mov [rdi+120h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 288 | None ||| N/A | N/A
		0x18054E8E2 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18054E8E4 mov rcx,[18186F950h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468073808 | None ||| N/A | N/A
		0x18054E8EB call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E8F0 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E8F3 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E8F6 je short 000000018054E910h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E8F8 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18054E8FB mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E8FE mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18054E902 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E907 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E90A je near ptr 000000018054EFBEh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E910 cmp dword ptr [rdi+18h],21h		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 33
		0x18054E914 jbe near ptr 000000018054EFD1h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E91A mov [rdi+128h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 296 | None ||| N/A | N/A
		0x18054E921 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18054E923 mov rcx,[18186F990h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468073872 | None ||| N/A | N/A
		0x18054E92A call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E92F mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E932 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E935 je short 000000018054E94Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E937 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18054E93A mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E93D mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18054E941 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E946 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E949 je near ptr 000000018054EFE4h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E94F cmp dword ptr [rdi+18h],22h		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 34
		0x18054E953 jbe near ptr 000000018054EFF7h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E959 mov [rdi+130h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 304 | None ||| N/A | N/A
		0x18054E960 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18054E962 mov rcx,[18186F9B0h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468073904 | None ||| N/A | N/A
		0x18054E969 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E96E mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E971 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E974 je short 000000018054E98Eh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E976 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18054E979 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E97C mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18054E980 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E985 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E988 je near ptr 000000018054F00Ah		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E98E cmp dword ptr [rdi+18h],23h		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 35
		0x18054E992 jbe near ptr 000000018054F01Dh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E998 mov [rdi+138h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 312 | None ||| N/A | N/A
		0x18054E99F xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18054E9A1 mov rcx,[18186F9D0h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468073936 | None ||| N/A | N/A
		0x18054E9A8 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E9AD mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E9B0 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E9B3 je short 000000018054E9CDh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E9B5 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18054E9B8 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E9BB mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18054E9BF call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E9C4 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E9C7 je near ptr 000000018054F030h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E9CD cmp dword ptr [rdi+18h],24h		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 36
		0x18054E9D1 jbe near ptr 000000018054F043h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E9D7 mov [rdi+140h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 320 | None ||| N/A | N/A
		0x18054E9DE xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18054E9E0 mov rcx,[18186F9F8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468073976 | None ||| N/A | N/A
		0x18054E9E7 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E9EC mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E9EF test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E9F2 je short 000000018054EA0Ch		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054E9F4 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18054E9F7 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054E9FA mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18054E9FE call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054EA03 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054EA06 je near ptr 000000018054F056h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054EA0C cmp dword ptr [rdi+18h],25h		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 37
		0x18054EA10 jbe near ptr 000000018054F069h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054EA16 mov [rdi+148h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 328 | None ||| N/A | N/A
		0x18054EA1D xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18054EA1F mov rcx,[18186FA20h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468074016 | None ||| N/A | N/A
		0x18054EA26 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054EA2B mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054EA2E test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054EA31 je short 000000018054EA4Bh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054EA33 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18054EA36 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054EA39 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18054EA3D call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054EA42 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054EA45 je near ptr 000000018054F07Ch		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054EA4B cmp dword ptr [rdi+18h],26h		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 38
		0x18054EA4F jbe near ptr 000000018054F08Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054EA55 mov [rdi+150h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 336 | None ||| N/A | N/A
		0x18054EA5C xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18054EA5E mov rcx,[18186FA58h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468074072 | None ||| N/A | N/A
		0x18054EA65 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054EA6A mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054EA6D test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054EA70 je short 000000018054EA8Ah		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054EA72 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18054EA75 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054EA78 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18054EA7C call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054EA81 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054EA84 je near ptr 000000018054F0A2h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054EA8A cmp dword ptr [rdi+18h],27h		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 39
		0x18054EA8E jbe near ptr 000000018054F0B5h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054EA94 mov [rdi+158h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 344 | None ||| N/A | N/A
		0x18054EA9B xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18054EA9D mov rcx,[18186FA78h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468074104 | None ||| N/A | N/A
		0x18054EAA4 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054EAA9 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054EAAC test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054EAAF je short 000000018054EAC9h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054EAB1 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18054EAB4 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054EAB7 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18054EABB call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054EAC0 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054EAC3 je near ptr 000000018054F0C8h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054EAC9 cmp dword ptr [rdi+18h],28h		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 40
		0x18054EACD jbe near ptr 000000018054F0DBh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054EAD3 mov [rdi+160h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 352 | None ||| N/A | N/A
		0x18054EADA mov rax,[18189B8D8h]		; DEBUG: {Register}/RAX {Memory}/None ||| RIP | 6468253912 | None ||| N/A | N/A
		0x18054EAE1 mov rbx,[rsp+30h]		; DEBUG: {Register}/RBX {Memory}/None ||| RSP | 48 | None ||| N/A | N/A
		0x18054EAE6 mov rcx,[rax+0B8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RAX | 184 | None ||| N/A | N/A
		0x18054EAED mov [rcx],rdi		; DEBUG: {Memory}/None {Register}/RDI ||| RCX | 0 | None ||| N/A | N/A
		0x18054EAF0 add rsp,20h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 32
		0x18054EAF4 pop rdi		; DEBUG: {Register}/RDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18054EAF5 ret		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18054EAF6 xor ecx,ecx		; DEBUG: {Register}/ECX {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x18054EAF8 call 000000018012BDA0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054EAFD int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18054EAFE call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054EB03 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054EB06 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18054EB09 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18054EB0B call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054EB10 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18054EB24 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054EB29 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054EB2C xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18054EB2F xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18054EB31 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054EB36 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18054EB4A call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054EB4F mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054EB52 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18054EB55 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18054EB57 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054EB5C int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18054EB70 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054EB75 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054EB78 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18054EB7B xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18054EB7D call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054EB82 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18054EB96 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054EB9B mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054EB9E xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18054EBA1 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18054EBA3 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054EBA8 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18054EBBC call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054EBC1 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054EBC4 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18054EBC7 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18054EBC9 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054EBCE int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18054EBE2 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054EBE7 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054EBEA xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18054EBED xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18054EBEF call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054EBF4 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18054EC08 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054EC0D mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054EC10 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18054EC13 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18054EC15 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054EC1A int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18054EC2E call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054EC33 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054EC36 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18054EC39 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18054EC3B call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054EC40 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18054EC54 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054EC59 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054EC5C xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18054EC5F xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18054EC61 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054EC66 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18054EC7A call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054EC7F mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054EC82 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18054EC85 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18054EC87 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054EC8C int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18054ECA0 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054ECA5 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054ECA8 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18054ECAB xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18054ECAD call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054ECB2 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18054ECC6 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054ECCB mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054ECCE xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18054ECD1 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18054ECD3 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054ECD8 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18054ECEC call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054ECF1 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054ECF4 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18054ECF7 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18054ECF9 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054ECFE int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18054ED12 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054ED17 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054ED1A xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18054ED1D xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18054ED1F call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054ED24 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18054ED38 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054ED3D mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054ED40 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18054ED43 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18054ED45 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054ED4A int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18054ED5E call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054ED63 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054ED66 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18054ED69 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18054ED6B call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054ED70 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18054ED84 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054ED89 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054ED8C xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18054ED8F xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18054ED91 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054ED96 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18054EDAA call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054EDAF mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054EDB2 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18054EDB5 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18054EDB7 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054EDBC int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18054EDD0 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054EDD5 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054EDD8 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18054EDDB xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18054EDDD call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054EDE2 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18054EDF6 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054EDFB mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054EDFE xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18054EE01 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18054EE03 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054EE08 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18054EE1C call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054EE21 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054EE24 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18054EE27 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18054EE29 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054EE2E int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18054EE42 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054EE47 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054EE4A xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18054EE4D xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18054EE4F call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054EE54 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18054EE68 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054EE6D mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054EE70 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18054EE73 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18054EE75 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054EE7A int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18054EE8E call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054EE93 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054EE96 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18054EE99 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18054EE9B call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054EEA0 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18054EEB4 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054EEB9 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054EEBC xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18054EEBF xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18054EEC1 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054EEC6 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18054EEDA call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054EEDF mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054EEE2 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18054EEE5 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18054EEE7 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054EEEC int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18054EF00 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054EF05 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054EF08 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18054EF0B xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18054EF0D call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054EF12 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18054EF26 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054EF2B mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054EF2E xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18054EF31 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18054EF33 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054EF38 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18054EF4C call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054EF51 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054EF54 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18054EF57 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18054EF59 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054EF5E int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18054EF72 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054EF77 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054EF7A xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18054EF7D xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18054EF7F call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054EF84 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18054EF98 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054EF9D mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054EFA0 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18054EFA3 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18054EFA5 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054EFAA int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18054EFBE call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054EFC3 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054EFC6 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18054EFC9 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18054EFCB call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054EFD0 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18054EFE4 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054EFE9 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054EFEC xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18054EFEF xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18054EFF1 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054EFF6 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18054F00A call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054F00F mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054F012 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18054F015 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18054F017 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054F01C int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18054F030 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054F035 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054F038 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18054F03B xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18054F03D call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054F042 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18054F056 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054F05B mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054F05E xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18054F061 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18054F063 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054F068 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18054F07C call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054F081 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054F084 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18054F087 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18054F089 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054F08E int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18054F0A2 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054F0A7 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054F0AA xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18054F0AD xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18054F0AF call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054F0B4 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18054F0C8 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054F0CD mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054F0D0 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18054F0D3 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18054F0D5 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054F0DA int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Static Method System.Void C016_SideQuest_Define::.cctor():
		End of function at 0x18054F0DB
		Absolute End is at 0x18054F0DB
		Identified Jump Destination addresses:

		0x18054E0C5: Saves the content of rdi to the stack
		0x18054E0CA: Compares {Unknown Global at 0x18183EAFA, first ten bytes are [1 0 80 202 1 0 224 60 103 1], or as chars " PÊ à<g"} and 0
		0x18054E0D1: Jumps to 0x18054E0E5 if {Unknown Global at 0x18183EAFA, first ten bytes are [1 0 80 202 1 0 224 60 103 1], or as chars " PÊ à<g"} != 0

		0x18054E0D3: Loads string "à" into register rcx as constant {'constant3' (constant value of type Cpp2IL.Core.Analysis.ResultModels.Il2CppString)}
		0x18054E0D9: Attempts to load the il2cpp metadata for this method (method id 0) and init it cpp-side.

		0x18054E0E5: Loads the type definition for managed type System.Type[] as a constant "Type[]" in rcx
		0x18054E0EC: [!] Writes the constant 0x2A into operand 42 (type UInt64) in register rdx
		0x18054E0F1: [!] Allocates an array of type System.Type[] of size 42 and stores the result as local0 in register rax

		0x18054E0F6: Loads the type definition for managed type System.Type as a constant "Type" in rcx
		0x18054E0FD: Copies {'local0' (type System.Type[])} from rax into rdi
		0x18054E100: Loads the type definition for managed type ESerifSideQ_Pol_C016_1000 as a constant "ESerifSideQ_Pol_C016_1000" in rbx
		0x18054E107: Compares "{il2cpp field on {'Type' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" and 2
		0x18054E10E: Jumps to 0x18054E11E if "{il2cpp field on {'Type' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" equals 2

		0x18054E110: Compares "{il2cpp field on {'Type' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" and 0
		0x18054E117: Jumps to 0x18054E11E if "{il2cpp field on {'Type' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" != 0

		0x18054E119: Calls the il2cpp cctor for the type System.Type
		0x18054E120: Copies {'ESerifSideQ_Pol_C016_1000' (constant value of type Mono.Cecil.TypeReference)} from rbx into rcx
		0x18054E123: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C016_1000' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle' (type System.Type)}

		0x18054E128: Copies {'typeFromHandle' (type System.Type)} from rax into rbx
		0x18054E12B: [!] Compares {'local0' (type System.Type[])} and 0
		0x18054E12E: Jumps to 0x18054EAF6 (which throws a NRE) if local0 equals 0. Implicitly present in managed code, so ignored here.
		0x18054E134: [!] Compares {'typeFromHandle' (type System.Type)} and 0
		0x18054E137: Jumps to 0x18054E151 (which is an if statement's body) if typeFromHandle equals 0 ;  - Increasing indentation - is standard if, unimportant is False

		0x18054E139: Loads the class pointer from local0 into a constant constant14 in register rdx
		0x18054E13C: Copies {'typeFromHandle' (type System.Type)} from rax into rcx
		0x18054E13F: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18054E148: [!] Compares {'typeFromHandle' (type System.Type)} and 0
		0x18054E14B: Jumps to 0x18054EAFE if typeFromHandle equals 0 ;  - This is probably a goto, jumping to 0x18054EAFE which is after end of current block @ 0x18054E151 (started at 0x18054E139)

		0x18054E151: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 1
		0x18054E155: Jumps to 0x18054EB11 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 1. Implicitly present in managed code, so ignored here.
		0x18054E15B: Sets the value at offset 1 in array local0 to {'typeFromHandle' (type System.Type)}
		0x18054E161: Loads the type definition for managed type ESerifSideQ_Pol_C016_1001 as a constant "ESerifSideQ_Pol_C016_1001" in rcx
		0x18054E168: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C016_1001' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle2' (type System.Type)}

		0x18054E16D: Copies {'typeFromHandle2' (type System.Type)} from rax into rbx
		0x18054E170: [!] Compares {'typeFromHandle2' (type System.Type)} and 0
		0x18054E173: Jumps to 0x18054E18D if typeFromHandle2 equals 0 ;  - This is probably a goto, jumping to 0x18054E18D which is after end of current block @ 0x18054E151 (started at 0x18054E139)

		0x18054E175: Loads the class pointer from local0 into a constant constant19 in register rdx
		0x18054E178: Copies {'typeFromHandle2' (type System.Type)} from rax into rcx
		0x18054E17B: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18054E184: [!] Compares {'typeFromHandle2' (type System.Type)} and 0
		0x18054E187: Jumps to 0x18054EB24 if typeFromHandle2 equals 0 ;  - This is probably a goto, jumping to 0x18054EB24 which is after end of current block @ 0x18054E151 (started at 0x18054E139)

		0x18054E18D: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 2
		0x18054E191: Jumps to 0x18054EB37 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 2. Implicitly present in managed code, so ignored here.
		0x18054E197: Sets the value at offset 2 in array local0 to {'typeFromHandle2' (type System.Type)}
		0x18054E19D: Loads the type definition for managed type ESerifSideQ_Pol_C016_1002 as a constant "ESerifSideQ_Pol_C016_1002" in rcx
		0x18054E1A4: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C016_1002' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle3' (type System.Type)}

		0x18054E1A9: Copies {'typeFromHandle3' (type System.Type)} from rax into rbx
		0x18054E1AC: [!] Compares {'typeFromHandle3' (type System.Type)} and 0
		0x18054E1AF: Jumps to 0x18054E1C9 if typeFromHandle3 equals 0 ;  - This is probably a goto, jumping to 0x18054E1C9 which is after end of current block @ 0x18054E151 (started at 0x18054E139)

		0x18054E1B1: Loads the class pointer from local0 into a constant constant24 in register rdx
		0x18054E1B4: Copies {'typeFromHandle3' (type System.Type)} from rax into rcx
		0x18054E1B7: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18054E1C0: [!] Compares {'typeFromHandle3' (type System.Type)} and 0
		0x18054E1C3: Jumps to 0x18054EB4A if typeFromHandle3 equals 0 ;  - This is probably a goto, jumping to 0x18054EB4A which is after end of current block @ 0x18054E151 (started at 0x18054E139)

		0x18054E1C9: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 3
		0x18054E1CD: Jumps to 0x18054EB5D (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 3. Implicitly present in managed code, so ignored here.
		0x18054E1D3: Sets the value at offset 3 in array local0 to {'typeFromHandle3' (type System.Type)}
		0x18054E1D9: Loads the type definition for managed type ESerifSideQ_Pol_C016_1003 as a constant "ESerifSideQ_Pol_C016_1003" in rcx
		0x18054E1E0: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C016_1003' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle4' (type System.Type)}

		0x18054E1E5: Copies {'typeFromHandle4' (type System.Type)} from rax into rbx
		0x18054E1E8: [!] Compares {'typeFromHandle4' (type System.Type)} and 0
		0x18054E1EB: Jumps to 0x18054E205 if typeFromHandle4 equals 0 ;  - This is probably a goto, jumping to 0x18054E205 which is after end of current block @ 0x18054E151 (started at 0x18054E139)

		0x18054E1ED: Loads the class pointer from local0 into a constant constant29 in register rdx
		0x18054E1F0: Copies {'typeFromHandle4' (type System.Type)} from rax into rcx
		0x18054E1F3: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18054E1FC: [!] Compares {'typeFromHandle4' (type System.Type)} and 0
		0x18054E1FF: Jumps to 0x18054EB70 if typeFromHandle4 equals 0 ;  - This is probably a goto, jumping to 0x18054EB70 which is after end of current block @ 0x18054E151 (started at 0x18054E139)

		0x18054E205: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 4
		0x18054E209: Jumps to 0x18054EB83 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 4. Implicitly present in managed code, so ignored here.
		0x18054E20F: Sets the value at offset 4 in array local0 to {'typeFromHandle4' (type System.Type)}
		0x18054E215: Loads the type definition for managed type ESerifSideQ_Pol_C016_1004 as a constant "ESerifSideQ_Pol_C016_1004" in rcx
		0x18054E21C: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C016_1004' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle5' (type System.Type)}

		0x18054E221: Copies {'typeFromHandle5' (type System.Type)} from rax into rbx
		0x18054E224: [!] Compares {'typeFromHandle5' (type System.Type)} and 0
		0x18054E227: Jumps to 0x18054E241 if typeFromHandle5 equals 0 ;  - This is probably a goto, jumping to 0x18054E241 which is after end of current block @ 0x18054E151 (started at 0x18054E139)

		0x18054E229: Loads the class pointer from local0 into a constant constant34 in register rdx
		0x18054E22C: Copies {'typeFromHandle5' (type System.Type)} from rax into rcx
		0x18054E22F: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18054E238: [!] Compares {'typeFromHandle5' (type System.Type)} and 0
		0x18054E23B: Jumps to 0x18054EB96 if typeFromHandle5 equals 0 ;  - This is probably a goto, jumping to 0x18054EB96 which is after end of current block @ 0x18054E151 (started at 0x18054E139)

		0x18054E241: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 5
		0x18054E245: Jumps to 0x18054EBA9 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 5. Implicitly present in managed code, so ignored here.
		0x18054E24B: Sets the value at offset 5 in array local0 to {'typeFromHandle5' (type System.Type)}
		0x18054E251: Loads the type definition for managed type ESerifSideQ_Pol_C016_1005 as a constant "ESerifSideQ_Pol_C016_1005" in rcx
		0x18054E258: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C016_1005' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle6' (type System.Type)}

		0x18054E25D: Copies {'typeFromHandle6' (type System.Type)} from rax into rbx
		0x18054E260: [!] Compares {'typeFromHandle6' (type System.Type)} and 0
		0x18054E263: Jumps to 0x18054E27D if typeFromHandle6 equals 0 ;  - This is probably a goto, jumping to 0x18054E27D which is after end of current block @ 0x18054E151 (started at 0x18054E139)

		0x18054E265: Loads the class pointer from local0 into a constant constant39 in register rdx
		0x18054E268: Copies {'typeFromHandle6' (type System.Type)} from rax into rcx
		0x18054E26B: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18054E274: [!] Compares {'typeFromHandle6' (type System.Type)} and 0
		0x18054E277: Jumps to 0x18054EBBC if typeFromHandle6 equals 0 ;  - This is probably a goto, jumping to 0x18054EBBC which is after end of current block @ 0x18054E151 (started at 0x18054E139)

		0x18054E27D: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 6
		0x18054E281: Jumps to 0x18054EBCF (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 6. Implicitly present in managed code, so ignored here.
		0x18054E287: Sets the value at offset 6 in array local0 to {'typeFromHandle6' (type System.Type)}
		0x18054E28D: Loads the type definition for managed type ESerifSideQ_Pol_C016_1006 as a constant "ESerifSideQ_Pol_C016_1006" in rcx
		0x18054E294: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C016_1006' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle7' (type System.Type)}

		0x18054E299: Copies {'typeFromHandle7' (type System.Type)} from rax into rbx
		0x18054E29C: [!] Compares {'typeFromHandle7' (type System.Type)} and 0
		0x18054E29F: Jumps to 0x18054E2B9 if typeFromHandle7 equals 0 ;  - This is probably a goto, jumping to 0x18054E2B9 which is after end of current block @ 0x18054E151 (started at 0x18054E139)

		0x18054E2A1: Loads the class pointer from local0 into a constant constant44 in register rdx
		0x18054E2A4: Copies {'typeFromHandle7' (type System.Type)} from rax into rcx
		0x18054E2A7: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18054E2B0: [!] Compares {'typeFromHandle7' (type System.Type)} and 0
		0x18054E2B3: Jumps to 0x18054EBE2 if typeFromHandle7 equals 0 ;  - This is probably a goto, jumping to 0x18054EBE2 which is after end of current block @ 0x18054E151 (started at 0x18054E139)

		0x18054E2B9: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 7
		0x18054E2BD: Jumps to 0x18054EBF5 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 7. Implicitly present in managed code, so ignored here.
		0x18054E2C3: Sets the value at offset 7 in array local0 to {'typeFromHandle7' (type System.Type)}
		0x18054E2C9: Loads the type definition for managed type ESerifSideQ_Pol_C016_1007 as a constant "ESerifSideQ_Pol_C016_1007" in rcx
		0x18054E2D0: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C016_1007' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle8' (type System.Type)}

		0x18054E2D5: Copies {'typeFromHandle8' (type System.Type)} from rax into rbx
		0x18054E2D8: [!] Compares {'typeFromHandle8' (type System.Type)} and 0
		0x18054E2DB: Jumps to 0x18054E2F5 if typeFromHandle8 equals 0 ;  - This is probably a goto, jumping to 0x18054E2F5 which is after end of current block @ 0x18054E151 (started at 0x18054E139)

		0x18054E2DD: Loads the class pointer from local0 into a constant constant49 in register rdx
		0x18054E2E0: Copies {'typeFromHandle8' (type System.Type)} from rax into rcx
		0x18054E2E3: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18054E2EC: [!] Compares {'typeFromHandle8' (type System.Type)} and 0
		0x18054E2EF: Jumps to 0x18054EC08 if typeFromHandle8 equals 0 ;  - This is probably a goto, jumping to 0x18054EC08 which is after end of current block @ 0x18054E151 (started at 0x18054E139)

		0x18054E2F5: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 8
		0x18054E2F9: Jumps to 0x18054EC1B (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 8. Implicitly present in managed code, so ignored here.
		0x18054E2FF: Sets the value at offset 8 in array local0 to {'typeFromHandle8' (type System.Type)}
		0x18054E305: Loads the type definition for managed type ESerifSideQ_Pol_C016_1008 as a constant "ESerifSideQ_Pol_C016_1008" in rcx
		0x18054E30C: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C016_1008' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle9' (type System.Type)}

		0x18054E311: Copies {'typeFromHandle9' (type System.Type)} from rax into rbx
		0x18054E314: [!] Compares {'typeFromHandle9' (type System.Type)} and 0
		0x18054E317: Jumps to 0x18054E331 if typeFromHandle9 equals 0 ;  - This is probably a goto, jumping to 0x18054E331 which is after end of current block @ 0x18054E151 (started at 0x18054E139)

		0x18054E319: Loads the class pointer from local0 into a constant constant54 in register rdx
		0x18054E31C: Copies {'typeFromHandle9' (type System.Type)} from rax into rcx
		0x18054E31F: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18054E328: [!] Compares {'typeFromHandle9' (type System.Type)} and 0
		0x18054E32B: Jumps to 0x18054EC2E if typeFromHandle9 equals 0 ;  - This is probably a goto, jumping to 0x18054EC2E which is after end of current block @ 0x18054E151 (started at 0x18054E139)

		0x18054E331: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 9
		0x18054E335: Jumps to 0x18054EC41 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 9. Implicitly present in managed code, so ignored here.
		0x18054E33B: Sets the value at offset 9 in array local0 to {'typeFromHandle9' (type System.Type)}
		0x18054E341: Loads the type definition for managed type ESerifSideQ_Pol_C016_1009 as a constant "ESerifSideQ_Pol_C016_1009" in rcx
		0x18054E348: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C016_1009' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle10' (type System.Type)}

		0x18054E34D: Copies {'typeFromHandle10' (type System.Type)} from rax into rbx
		0x18054E350: [!] Compares {'typeFromHandle10' (type System.Type)} and 0
		0x18054E353: Jumps to 0x18054E36D if typeFromHandle10 equals 0 ;  - This is probably a goto, jumping to 0x18054E36D which is after end of current block @ 0x18054E151 (started at 0x18054E139)

		0x18054E355: Loads the class pointer from local0 into a constant constant59 in register rdx
		0x18054E358: Copies {'typeFromHandle10' (type System.Type)} from rax into rcx
		0x18054E35B: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18054E364: [!] Compares {'typeFromHandle10' (type System.Type)} and 0
		0x18054E367: Jumps to 0x18054EC54 if typeFromHandle10 equals 0 ;  - This is probably a goto, jumping to 0x18054EC54 which is after end of current block @ 0x18054E151 (started at 0x18054E139)

		0x18054E36D: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 10
		0x18054E371: Jumps to 0x18054EC67 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 10. Implicitly present in managed code, so ignored here.
		0x18054E377: Sets the value at offset 10 in array local0 to {'typeFromHandle10' (type System.Type)}
		0x18054E37D: Loads the type definition for managed type ESerifSideQ_Pol_C016_1010 as a constant "ESerifSideQ_Pol_C016_1010" in rcx
		0x18054E384: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C016_1010' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle11' (type System.Type)}

		0x18054E389: Copies {'typeFromHandle11' (type System.Type)} from rax into rbx
		0x18054E38C: [!] Compares {'typeFromHandle11' (type System.Type)} and 0
		0x18054E38F: Jumps to 0x18054E3A9 if typeFromHandle11 equals 0 ;  - This is probably a goto, jumping to 0x18054E3A9 which is after end of current block @ 0x18054E151 (started at 0x18054E139)

		0x18054E391: Loads the class pointer from local0 into a constant constant64 in register rdx
		0x18054E394: Copies {'typeFromHandle11' (type System.Type)} from rax into rcx
		0x18054E397: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18054E3A0: [!] Compares {'typeFromHandle11' (type System.Type)} and 0
		0x18054E3A3: Jumps to 0x18054EC7A if typeFromHandle11 equals 0 ;  - This is probably a goto, jumping to 0x18054EC7A which is after end of current block @ 0x18054E151 (started at 0x18054E139)

		0x18054E3A9: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 11
		0x18054E3AD: Jumps to 0x18054EC8D (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 11. Implicitly present in managed code, so ignored here.
		0x18054E3B3: Sets the value at offset 11 in array local0 to {'typeFromHandle11' (type System.Type)}
		0x18054E3B9: Loads the type definition for managed type ESerifSideQ_Pol_C016_1011 as a constant "ESerifSideQ_Pol_C016_1011" in rcx
		0x18054E3C0: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C016_1011' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle12' (type System.Type)}

		0x18054E3C5: Copies {'typeFromHandle12' (type System.Type)} from rax into rbx
		0x18054E3C8: [!] Compares {'typeFromHandle12' (type System.Type)} and 0
		0x18054E3CB: Jumps to 0x18054E3E5 if typeFromHandle12 equals 0 ;  - This is probably a goto, jumping to 0x18054E3E5 which is after end of current block @ 0x18054E151 (started at 0x18054E139)

		0x18054E3CD: Loads the class pointer from local0 into a constant constant69 in register rdx
		0x18054E3D0: Copies {'typeFromHandle12' (type System.Type)} from rax into rcx
		0x18054E3D3: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18054E3DC: [!] Compares {'typeFromHandle12' (type System.Type)} and 0
		0x18054E3DF: Jumps to 0x18054ECA0 if typeFromHandle12 equals 0 ;  - This is probably a goto, jumping to 0x18054ECA0 which is after end of current block @ 0x18054E151 (started at 0x18054E139)

		0x18054E3E5: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 12
		0x18054E3E9: Jumps to 0x18054ECB3 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 12. Implicitly present in managed code, so ignored here.
		0x18054E3EF: Sets the value at offset 12 in array local0 to {'typeFromHandle12' (type System.Type)}
		0x18054E3F8: Loads the type definition for managed type ESerifSideQ_Pol_C016_1011_1 as a constant "ESerifSideQ_Pol_C016_1011_1" in rcx
		0x18054E3FF: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C016_1011_1' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle13' (type System.Type)}

		0x18054E404: Copies {'typeFromHandle13' (type System.Type)} from rax into rbx
		0x18054E407: [!] Compares {'typeFromHandle13' (type System.Type)} and 0
		0x18054E40A: Jumps to 0x18054E424 if typeFromHandle13 equals 0 ;  - This is probably a goto, jumping to 0x18054E424 which is after end of current block @ 0x18054E151 (started at 0x18054E139)

		0x18054E40C: Loads the class pointer from local0 into a constant constant74 in register rdx
		0x18054E40F: Copies {'typeFromHandle13' (type System.Type)} from rax into rcx
		0x18054E412: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18054E41B: [!] Compares {'typeFromHandle13' (type System.Type)} and 0
		0x18054E41E: Jumps to 0x18054ECC6 if typeFromHandle13 equals 0 ;  - This is probably a goto, jumping to 0x18054ECC6 which is after end of current block @ 0x18054E151 (started at 0x18054E139)

		0x18054E424: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 13
		0x18054E428: Jumps to 0x18054ECD9 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 13. Implicitly present in managed code, so ignored here.
		0x18054E42E: Sets the value at offset 13 in array local0 to {'typeFromHandle13' (type System.Type)}
		0x18054E437: Loads the type definition for managed type ESerifSideQ_Pol_C016_1012 as a constant "ESerifSideQ_Pol_C016_1012" in rcx
		0x18054E43E: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C016_1012' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle14' (type System.Type)}

		0x18054E443: Copies {'typeFromHandle14' (type System.Type)} from rax into rbx
		0x18054E446: [!] Compares {'typeFromHandle14' (type System.Type)} and 0
		0x18054E449: Jumps to 0x18054E463 if typeFromHandle14 equals 0 ;  - This is probably a goto, jumping to 0x18054E463 which is after end of current block @ 0x18054E151 (started at 0x18054E139)

		0x18054E44B: Loads the class pointer from local0 into a constant constant79 in register rdx
		0x18054E44E: Copies {'typeFromHandle14' (type System.Type)} from rax into rcx
		0x18054E451: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18054E45A: [!] Compares {'typeFromHandle14' (type System.Type)} and 0
		0x18054E45D: Jumps to 0x18054ECEC if typeFromHandle14 equals 0 ;  - This is probably a goto, jumping to 0x18054ECEC which is after end of current block @ 0x18054E151 (started at 0x18054E139)

		0x18054E463: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 14
		0x18054E467: Jumps to 0x18054ECFF (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 14. Implicitly present in managed code, so ignored here.
		0x18054E46D: Sets the value at offset 14 in array local0 to {'typeFromHandle14' (type System.Type)}
		0x18054E476: Loads the type definition for managed type ESerifSideQ_Pol_C016_1013 as a constant "ESerifSideQ_Pol_C016_1013" in rcx
		0x18054E47D: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C016_1013' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle15' (type System.Type)}

		0x18054E482: Copies {'typeFromHandle15' (type System.Type)} from rax into rbx
		0x18054E485: [!] Compares {'typeFromHandle15' (type System.Type)} and 0
		0x18054E488: Jumps to 0x18054E4A2 if typeFromHandle15 equals 0 ;  - This is probably a goto, jumping to 0x18054E4A2 which is after end of current block @ 0x18054E151 (started at 0x18054E139)

		0x18054E48A: Loads the class pointer from local0 into a constant constant84 in register rdx
		0x18054E48D: Copies {'typeFromHandle15' (type System.Type)} from rax into rcx
		0x18054E490: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18054E499: [!] Compares {'typeFromHandle15' (type System.Type)} and 0
		0x18054E49C: Jumps to 0x18054ED12 if typeFromHandle15 equals 0 ;  - This is probably a goto, jumping to 0x18054ED12 which is after end of current block @ 0x18054E151 (started at 0x18054E139)

		0x18054E4A2: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 15
		0x18054E4A6: Jumps to 0x18054ED25 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 15. Implicitly present in managed code, so ignored here.
		0x18054E4AC: Sets the value at offset 15 in array local0 to {'typeFromHandle15' (type System.Type)}
		0x18054E4B5: Loads the type definition for managed type ESerifSideQ_Pol_C016_1014 as a constant "ESerifSideQ_Pol_C016_1014" in rcx
		0x18054E4BC: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C016_1014' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle16' (type System.Type)}

		0x18054E4C1: Copies {'typeFromHandle16' (type System.Type)} from rax into rbx
		0x18054E4C4: [!] Compares {'typeFromHandle16' (type System.Type)} and 0
		0x18054E4C7: Jumps to 0x18054E4E1 if typeFromHandle16 equals 0 ;  - This is probably a goto, jumping to 0x18054E4E1 which is after end of current block @ 0x18054E151 (started at 0x18054E139)

		0x18054E4C9: Loads the class pointer from local0 into a constant constant89 in register rdx
		0x18054E4CC: Copies {'typeFromHandle16' (type System.Type)} from rax into rcx
		0x18054E4CF: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18054E4D8: [!] Compares {'typeFromHandle16' (type System.Type)} and 0
		0x18054E4DB: Jumps to 0x18054ED38 if typeFromHandle16 equals 0 ;  - This is probably a goto, jumping to 0x18054ED38 which is after end of current block @ 0x18054E151 (started at 0x18054E139)

		0x18054E4E1: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 16
		0x18054E4E5: Jumps to 0x18054ED4B (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 16. Implicitly present in managed code, so ignored here.
		0x18054E4EB: Sets the value at offset 16 in array local0 to {'typeFromHandle16' (type System.Type)}
		0x18054E4F4: Loads the type definition for managed type ESerifSideQ_Pol_C016_1015 as a constant "ESerifSideQ_Pol_C016_1015" in rcx
		0x18054E4FB: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C016_1015' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle17' (type System.Type)}

		0x18054E500: Copies {'typeFromHandle17' (type System.Type)} from rax into rbx
		0x18054E503: [!] Compares {'typeFromHandle17' (type System.Type)} and 0
		0x18054E506: Jumps to 0x18054E520 if typeFromHandle17 equals 0 ;  - This is probably a goto, jumping to 0x18054E520 which is after end of current block @ 0x18054E151 (started at 0x18054E139)

		0x18054E508: Loads the class pointer from local0 into a constant constant94 in register rdx
		0x18054E50B: Copies {'typeFromHandle17' (type System.Type)} from rax into rcx
		0x18054E50E: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18054E517: [!] Compares {'typeFromHandle17' (type System.Type)} and 0
		0x18054E51A: Jumps to 0x18054ED5E if typeFromHandle17 equals 0 ;  - This is probably a goto, jumping to 0x18054ED5E which is after end of current block @ 0x18054E151 (started at 0x18054E139)

		0x18054E520: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 17
		0x18054E524: Jumps to 0x18054ED71 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 17. Implicitly present in managed code, so ignored here.
		0x18054E52A: Sets the value at offset 17 in array local0 to {'typeFromHandle17' (type System.Type)}
		0x18054E533: Loads the type definition for managed type ESerifSideQ_Pol_C016_1016 as a constant "ESerifSideQ_Pol_C016_1016" in rcx
		0x18054E53A: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C016_1016' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle18' (type System.Type)}

		0x18054E53F: Copies {'typeFromHandle18' (type System.Type)} from rax into rbx
		0x18054E542: [!] Compares {'typeFromHandle18' (type System.Type)} and 0
		0x18054E545: Jumps to 0x18054E55F if typeFromHandle18 equals 0 ;  - This is probably a goto, jumping to 0x18054E55F which is after end of current block @ 0x18054E151 (started at 0x18054E139)

		0x18054E547: Loads the class pointer from local0 into a constant constant99 in register rdx
		0x18054E54A: Copies {'typeFromHandle18' (type System.Type)} from rax into rcx
		0x18054E54D: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18054E556: [!] Compares {'typeFromHandle18' (type System.Type)} and 0
		0x18054E559: Jumps to 0x18054ED84 if typeFromHandle18 equals 0 ;  - This is probably a goto, jumping to 0x18054ED84 which is after end of current block @ 0x18054E151 (started at 0x18054E139)

		0x18054E55F: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 18
		0x18054E563: Jumps to 0x18054ED97 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 18. Implicitly present in managed code, so ignored here.
		0x18054E569: Sets the value at offset 18 in array local0 to {'typeFromHandle18' (type System.Type)}
		0x18054E572: Loads the type definition for managed type ESerifSideQ_Pol_C016_1017 as a constant "ESerifSideQ_Pol_C016_1017" in rcx
		0x18054E579: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C016_1017' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle19' (type System.Type)}

		0x18054E57E: Copies {'typeFromHandle19' (type System.Type)} from rax into rbx
		0x18054E581: [!] Compares {'typeFromHandle19' (type System.Type)} and 0
		0x18054E584: Jumps to 0x18054E59E if typeFromHandle19 equals 0 ;  - This is probably a goto, jumping to 0x18054E59E which is after end of current block @ 0x18054E151 (started at 0x18054E139)

		0x18054E586: Loads the class pointer from local0 into a constant constant104 in register rdx
		0x18054E589: Copies {'typeFromHandle19' (type System.Type)} from rax into rcx
		0x18054E58C: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18054E595: [!] Compares {'typeFromHandle19' (type System.Type)} and 0
		0x18054E598: Jumps to 0x18054EDAA if typeFromHandle19 equals 0 ;  - This is probably a goto, jumping to 0x18054EDAA which is after end of current block @ 0x18054E151 (started at 0x18054E139)

		0x18054E59E: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 19
		0x18054E5A2: Jumps to 0x18054EDBD (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 19. Implicitly present in managed code, so ignored here.
		0x18054E5A8: Sets the value at offset 19 in array local0 to {'typeFromHandle19' (type System.Type)}
		0x18054E5B1: Loads the type definition for managed type ESerifSideQ_Pol_C016_1018 as a constant "ESerifSideQ_Pol_C016_1018" in rcx
		0x18054E5B8: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C016_1018' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle20' (type System.Type)}

		0x18054E5BD: Copies {'typeFromHandle20' (type System.Type)} from rax into rbx
		0x18054E5C0: [!] Compares {'typeFromHandle20' (type System.Type)} and 0
		0x18054E5C3: Jumps to 0x18054E5DD if typeFromHandle20 equals 0 ;  - This is probably a goto, jumping to 0x18054E5DD which is after end of current block @ 0x18054E151 (started at 0x18054E139)

		0x18054E5C5: Loads the class pointer from local0 into a constant constant109 in register rdx
		0x18054E5C8: Copies {'typeFromHandle20' (type System.Type)} from rax into rcx
		0x18054E5CB: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18054E5D4: [!] Compares {'typeFromHandle20' (type System.Type)} and 0
		0x18054E5D7: Jumps to 0x18054EDD0 if typeFromHandle20 equals 0 ;  - This is probably a goto, jumping to 0x18054EDD0 which is after end of current block @ 0x18054E151 (started at 0x18054E139)

		0x18054E5DD: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 20
		0x18054E5E1: Jumps to 0x18054EDE3 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 20. Implicitly present in managed code, so ignored here.
		0x18054E5E7: Sets the value at offset 20 in array local0 to {'typeFromHandle20' (type System.Type)}
		0x18054E5F0: Loads the type definition for managed type ESerifSideQ_Pol_C016_1019 as a constant "ESerifSideQ_Pol_C016_1019" in rcx
		0x18054E5F7: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C016_1019' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle21' (type System.Type)}

		0x18054E5FC: Copies {'typeFromHandle21' (type System.Type)} from rax into rbx
		0x18054E5FF: [!] Compares {'typeFromHandle21' (type System.Type)} and 0
		0x18054E602: Jumps to 0x18054E61C if typeFromHandle21 equals 0 ;  - This is probably a goto, jumping to 0x18054E61C which is after end of current block @ 0x18054E151 (started at 0x18054E139)

		0x18054E604: Loads the class pointer from local0 into a constant constant114 in register rdx
		0x18054E607: Copies {'typeFromHandle21' (type System.Type)} from rax into rcx
		0x18054E60A: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18054E613: [!] Compares {'typeFromHandle21' (type System.Type)} and 0
		0x18054E616: Jumps to 0x18054EDF6 if typeFromHandle21 equals 0 ;  - This is probably a goto, jumping to 0x18054EDF6 which is after end of current block @ 0x18054E151 (started at 0x18054E139)

		0x18054E61C: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 21
		0x18054E620: Jumps to 0x18054EE09 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 21. Implicitly present in managed code, so ignored here.
		0x18054E626: Sets the value at offset 21 in array local0 to {'typeFromHandle21' (type System.Type)}
		0x18054E62F: Loads the type definition for managed type ESerifSideQ_Pol_C016_2000 as a constant "ESerifSideQ_Pol_C016_2000" in rcx
		0x18054E636: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C016_2000' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle22' (type System.Type)}

		0x18054E63B: Copies {'typeFromHandle22' (type System.Type)} from rax into rbx
		0x18054E63E: [!] Compares {'typeFromHandle22' (type System.Type)} and 0
		0x18054E641: Jumps to 0x18054E65B if typeFromHandle22 equals 0 ;  - This is probably a goto, jumping to 0x18054E65B which is after end of current block @ 0x18054E151 (started at 0x18054E139)

		0x18054E643: Loads the class pointer from local0 into a constant constant119 in register rdx
		0x18054E646: Copies {'typeFromHandle22' (type System.Type)} from rax into rcx
		0x18054E649: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18054E652: [!] Compares {'typeFromHandle22' (type System.Type)} and 0
		0x18054E655: Jumps to 0x18054EE1C if typeFromHandle22 equals 0 ;  - This is probably a goto, jumping to 0x18054EE1C which is after end of current block @ 0x18054E151 (started at 0x18054E139)

		0x18054E65B: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 22
		0x18054E65F: Jumps to 0x18054EE2F (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 22. Implicitly present in managed code, so ignored here.
		0x18054E665: Sets the value at offset 22 in array local0 to {'typeFromHandle22' (type System.Type)}
		0x18054E66E: Loads the type definition for managed type ESerifSideQ_Pol_C016_2001 as a constant "ESerifSideQ_Pol_C016_2001" in rcx
		0x18054E675: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C016_2001' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle23' (type System.Type)}

		0x18054E67A: Copies {'typeFromHandle23' (type System.Type)} from rax into rbx
		0x18054E67D: [!] Compares {'typeFromHandle23' (type System.Type)} and 0
		0x18054E680: Jumps to 0x18054E69A if typeFromHandle23 equals 0 ;  - This is probably a goto, jumping to 0x18054E69A which is after end of current block @ 0x18054E151 (started at 0x18054E139)

		0x18054E682: Loads the class pointer from local0 into a constant constant124 in register rdx
		0x18054E685: Copies {'typeFromHandle23' (type System.Type)} from rax into rcx
		0x18054E688: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18054E691: [!] Compares {'typeFromHandle23' (type System.Type)} and 0
		0x18054E694: Jumps to 0x18054EE42 if typeFromHandle23 equals 0 ;  - This is probably a goto, jumping to 0x18054EE42 which is after end of current block @ 0x18054E151 (started at 0x18054E139)

		0x18054E69A: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 23
		0x18054E69E: Jumps to 0x18054EE55 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 23. Implicitly present in managed code, so ignored here.
		0x18054E6A4: Sets the value at offset 23 in array local0 to {'typeFromHandle23' (type System.Type)}
		0x18054E6AD: Loads the type definition for managed type ESerifSideQ_Pol_C016_2002 as a constant "ESerifSideQ_Pol_C016_2002" in rcx
		0x18054E6B4: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C016_2002' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle24' (type System.Type)}

		0x18054E6B9: Copies {'typeFromHandle24' (type System.Type)} from rax into rbx
		0x18054E6BC: [!] Compares {'typeFromHandle24' (type System.Type)} and 0
		0x18054E6BF: Jumps to 0x18054E6D9 if typeFromHandle24 equals 0 ;  - This is probably a goto, jumping to 0x18054E6D9 which is after end of current block @ 0x18054E151 (started at 0x18054E139)

		0x18054E6C1: Loads the class pointer from local0 into a constant constant129 in register rdx
		0x18054E6C4: Copies {'typeFromHandle24' (type System.Type)} from rax into rcx
		0x18054E6C7: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18054E6D0: [!] Compares {'typeFromHandle24' (type System.Type)} and 0
		0x18054E6D3: Jumps to 0x18054EE68 if typeFromHandle24 equals 0 ;  - This is probably a goto, jumping to 0x18054EE68 which is after end of current block @ 0x18054E151 (started at 0x18054E139)

		0x18054E6D9: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 24
		0x18054E6DD: Jumps to 0x18054EE7B (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 24. Implicitly present in managed code, so ignored here.
		0x18054E6E3: Sets the value at offset 24 in array local0 to {'typeFromHandle24' (type System.Type)}
		0x18054E6EC: Loads the type definition for managed type ESerifSideQ_Pol_C016_2003 as a constant "ESerifSideQ_Pol_C016_2003" in rcx
		0x18054E6F3: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C016_2003' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle25' (type System.Type)}

		0x18054E6F8: Copies {'typeFromHandle25' (type System.Type)} from rax into rbx
		0x18054E6FB: [!] Compares {'typeFromHandle25' (type System.Type)} and 0
		0x18054E6FE: Jumps to 0x18054E718 if typeFromHandle25 equals 0 ;  - This is probably a goto, jumping to 0x18054E718 which is after end of current block @ 0x18054E151 (started at 0x18054E139)

		0x18054E700: Loads the class pointer from local0 into a constant constant134 in register rdx
		0x18054E703: Copies {'typeFromHandle25' (type System.Type)} from rax into rcx
		0x18054E706: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18054E70F: [!] Compares {'typeFromHandle25' (type System.Type)} and 0
		0x18054E712: Jumps to 0x18054EE8E if typeFromHandle25 equals 0 ;  - This is probably a goto, jumping to 0x18054EE8E which is after end of current block @ 0x18054E151 (started at 0x18054E139)

		0x18054E718: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 25
		0x18054E71C: Jumps to 0x18054EEA1 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 25. Implicitly present in managed code, so ignored here.
		0x18054E722: Sets the value at offset 25 in array local0 to {'typeFromHandle25' (type System.Type)}
		0x18054E72B: Loads the type definition for managed type ESerifSideQ_Pol_C016_3000 as a constant "ESerifSideQ_Pol_C016_3000" in rcx
		0x18054E732: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C016_3000' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle26' (type System.Type)}

		0x18054E737: Copies {'typeFromHandle26' (type System.Type)} from rax into rbx
		0x18054E73A: [!] Compares {'typeFromHandle26' (type System.Type)} and 0
		0x18054E73D: Jumps to 0x18054E757 if typeFromHandle26 equals 0 ;  - This is probably a goto, jumping to 0x18054E757 which is after end of current block @ 0x18054E151 (started at 0x18054E139)

		0x18054E73F: Loads the class pointer from local0 into a constant constant139 in register rdx
		0x18054E742: Copies {'typeFromHandle26' (type System.Type)} from rax into rcx
		0x18054E745: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18054E74E: [!] Compares {'typeFromHandle26' (type System.Type)} and 0
		0x18054E751: Jumps to 0x18054EEB4 if typeFromHandle26 equals 0 ;  - This is probably a goto, jumping to 0x18054EEB4 which is after end of current block @ 0x18054E151 (started at 0x18054E139)

		0x18054E757: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 26
		0x18054E75B: Jumps to 0x18054EEC7 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 26. Implicitly present in managed code, so ignored here.
		0x18054E761: Sets the value at offset 26 in array local0 to {'typeFromHandle26' (type System.Type)}
		0x18054E76A: Loads the type definition for managed type ESerifSideQ_Pol_C016_3001 as a constant "ESerifSideQ_Pol_C016_3001" in rcx
		0x18054E771: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C016_3001' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle27' (type System.Type)}

		0x18054E776: Copies {'typeFromHandle27' (type System.Type)} from rax into rbx
		0x18054E779: [!] Compares {'typeFromHandle27' (type System.Type)} and 0
		0x18054E77C: Jumps to 0x18054E796 if typeFromHandle27 equals 0 ;  - This is probably a goto, jumping to 0x18054E796 which is after end of current block @ 0x18054E151 (started at 0x18054E139)

		0x18054E77E: Loads the class pointer from local0 into a constant constant144 in register rdx
		0x18054E781: Copies {'typeFromHandle27' (type System.Type)} from rax into rcx
		0x18054E784: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18054E78D: [!] Compares {'typeFromHandle27' (type System.Type)} and 0
		0x18054E790: Jumps to 0x18054EEDA if typeFromHandle27 equals 0 ;  - This is probably a goto, jumping to 0x18054EEDA which is after end of current block @ 0x18054E151 (started at 0x18054E139)

		0x18054E796: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 27
		0x18054E79A: Jumps to 0x18054EEED (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 27. Implicitly present in managed code, so ignored here.
		0x18054E7A0: Sets the value at offset 27 in array local0 to {'typeFromHandle27' (type System.Type)}
		0x18054E7A9: Loads the type definition for managed type ESerifSideQ_Pol_C016_3002 as a constant "ESerifSideQ_Pol_C016_3002" in rcx
		0x18054E7B0: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C016_3002' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle28' (type System.Type)}

		0x18054E7B5: Copies {'typeFromHandle28' (type System.Type)} from rax into rbx
		0x18054E7B8: [!] Compares {'typeFromHandle28' (type System.Type)} and 0
		0x18054E7BB: Jumps to 0x18054E7D5 if typeFromHandle28 equals 0 ;  - This is probably a goto, jumping to 0x18054E7D5 which is after end of current block @ 0x18054E151 (started at 0x18054E139)

		0x18054E7BD: Loads the class pointer from local0 into a constant constant149 in register rdx
		0x18054E7C0: Copies {'typeFromHandle28' (type System.Type)} from rax into rcx
		0x18054E7C3: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18054E7CC: [!] Compares {'typeFromHandle28' (type System.Type)} and 0
		0x18054E7CF: Jumps to 0x18054EF00 if typeFromHandle28 equals 0 ;  - This is probably a goto, jumping to 0x18054EF00 which is after end of current block @ 0x18054E151 (started at 0x18054E139)

		0x18054E7D5: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 28
		0x18054E7D9: Jumps to 0x18054EF13 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 28. Implicitly present in managed code, so ignored here.
		0x18054E7DF: Sets the value at offset 28 in array local0 to {'typeFromHandle28' (type System.Type)}
		0x18054E7E8: Loads the type definition for managed type ESerifSideQ_Pol_C016_3003 as a constant "ESerifSideQ_Pol_C016_3003" in rcx
		0x18054E7EF: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C016_3003' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle29' (type System.Type)}

		0x18054E7F4: Copies {'typeFromHandle29' (type System.Type)} from rax into rbx
		0x18054E7F7: [!] Compares {'typeFromHandle29' (type System.Type)} and 0
		0x18054E7FA: Jumps to 0x18054E814 if typeFromHandle29 equals 0 ;  - This is probably a goto, jumping to 0x18054E814 which is after end of current block @ 0x18054E151 (started at 0x18054E139)

		0x18054E7FC: Loads the class pointer from local0 into a constant constant154 in register rdx
		0x18054E7FF: Copies {'typeFromHandle29' (type System.Type)} from rax into rcx
		0x18054E802: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18054E80B: [!] Compares {'typeFromHandle29' (type System.Type)} and 0
		0x18054E80E: Jumps to 0x18054EF26 if typeFromHandle29 equals 0 ;  - This is probably a goto, jumping to 0x18054EF26 which is after end of current block @ 0x18054E151 (started at 0x18054E139)

		0x18054E814: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 29
		0x18054E818: Jumps to 0x18054EF39 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 29. Implicitly present in managed code, so ignored here.
		0x18054E81E: Sets the value at offset 29 in array local0 to {'typeFromHandle29' (type System.Type)}
		0x18054E827: Loads the type definition for managed type ESerifSideQ_Pol_C016_3004 as a constant "ESerifSideQ_Pol_C016_3004" in rcx
		0x18054E82E: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C016_3004' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle30' (type System.Type)}

		0x18054E833: Copies {'typeFromHandle30' (type System.Type)} from rax into rbx
		0x18054E836: [!] Compares {'typeFromHandle30' (type System.Type)} and 0
		0x18054E839: Jumps to 0x18054E853 if typeFromHandle30 equals 0 ;  - This is probably a goto, jumping to 0x18054E853 which is after end of current block @ 0x18054E151 (started at 0x18054E139)

		0x18054E83B: Loads the class pointer from local0 into a constant constant159 in register rdx
		0x18054E83E: Copies {'typeFromHandle30' (type System.Type)} from rax into rcx
		0x18054E841: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18054E84A: [!] Compares {'typeFromHandle30' (type System.Type)} and 0
		0x18054E84D: Jumps to 0x18054EF4C if typeFromHandle30 equals 0 ;  - This is probably a goto, jumping to 0x18054EF4C which is after end of current block @ 0x18054E151 (started at 0x18054E139)

		0x18054E853: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 30
		0x18054E857: Jumps to 0x18054EF5F (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 30. Implicitly present in managed code, so ignored here.
		0x18054E85D: Sets the value at offset 30 in array local0 to {'typeFromHandle30' (type System.Type)}
		0x18054E866: Loads the type definition for managed type ESerifSideQ_Pol_C016_3005 as a constant "ESerifSideQ_Pol_C016_3005" in rcx
		0x18054E86D: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C016_3005' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle31' (type System.Type)}

		0x18054E872: Copies {'typeFromHandle31' (type System.Type)} from rax into rbx
		0x18054E875: [!] Compares {'typeFromHandle31' (type System.Type)} and 0
		0x18054E878: Jumps to 0x18054E892 if typeFromHandle31 equals 0 ;  - This is probably a goto, jumping to 0x18054E892 which is after end of current block @ 0x18054E151 (started at 0x18054E139)

		0x18054E87A: Loads the class pointer from local0 into a constant constant164 in register rdx
		0x18054E87D: Copies {'typeFromHandle31' (type System.Type)} from rax into rcx
		0x18054E880: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18054E889: [!] Compares {'typeFromHandle31' (type System.Type)} and 0
		0x18054E88C: Jumps to 0x18054EF72 if typeFromHandle31 equals 0 ;  - This is probably a goto, jumping to 0x18054EF72 which is after end of current block @ 0x18054E151 (started at 0x18054E139)

		0x18054E892: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 31
		0x18054E896: Jumps to 0x18054EF85 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 31. Implicitly present in managed code, so ignored here.
		0x18054E89C: Sets the value at offset 31 in array local0 to {'typeFromHandle31' (type System.Type)}
		0x18054E8A5: Loads the type definition for managed type ESerifSideQ_Pol_C016_3006 as a constant "ESerifSideQ_Pol_C016_3006" in rcx
		0x18054E8AC: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C016_3006' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle32' (type System.Type)}

		0x18054E8B1: Copies {'typeFromHandle32' (type System.Type)} from rax into rbx
		0x18054E8B4: [!] Compares {'typeFromHandle32' (type System.Type)} and 0
		0x18054E8B7: Jumps to 0x18054E8D1 if typeFromHandle32 equals 0 ;  - This is probably a goto, jumping to 0x18054E8D1 which is after end of current block @ 0x18054E151 (started at 0x18054E139)

		0x18054E8B9: Loads the class pointer from local0 into a constant constant169 in register rdx
		0x18054E8BC: Copies {'typeFromHandle32' (type System.Type)} from rax into rcx
		0x18054E8BF: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18054E8C8: [!] Compares {'typeFromHandle32' (type System.Type)} and 0
		0x18054E8CB: Jumps to 0x18054EF98 if typeFromHandle32 equals 0 ;  - This is probably a goto, jumping to 0x18054EF98 which is after end of current block @ 0x18054E151 (started at 0x18054E139)

		0x18054E8D1: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 32
		0x18054E8D5: Jumps to 0x18054EFAB (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 32. Implicitly present in managed code, so ignored here.
		0x18054E8DB: Sets the value at offset 32 in array local0 to {'typeFromHandle32' (type System.Type)}
		0x18054E8E4: Loads the type definition for managed type ESerifSideQ_Pol_C016_3007 as a constant "ESerifSideQ_Pol_C016_3007" in rcx
		0x18054E8EB: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C016_3007' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle33' (type System.Type)}

		0x18054E8F0: Copies {'typeFromHandle33' (type System.Type)} from rax into rbx
		0x18054E8F3: [!] Compares {'typeFromHandle33' (type System.Type)} and 0
		0x18054E8F6: Jumps to 0x18054E910 if typeFromHandle33 equals 0 ;  - This is probably a goto, jumping to 0x18054E910 which is after end of current block @ 0x18054E151 (started at 0x18054E139)

		0x18054E8F8: Loads the class pointer from local0 into a constant constant174 in register rdx
		0x18054E8FB: Copies {'typeFromHandle33' (type System.Type)} from rax into rcx
		0x18054E8FE: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18054E907: [!] Compares {'typeFromHandle33' (type System.Type)} and 0
		0x18054E90A: Jumps to 0x18054EFBE if typeFromHandle33 equals 0 ;  - This is probably a goto, jumping to 0x18054EFBE which is after end of current block @ 0x18054E151 (started at 0x18054E139)

		0x18054E910: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 33
		0x18054E914: Jumps to 0x18054EFD1 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 33. Implicitly present in managed code, so ignored here.
		0x18054E91A: Sets the value at offset 33 in array local0 to {'typeFromHandle33' (type System.Type)}
		0x18054E923: Loads the type definition for managed type ESerifSideQ_Pol_C016_3008 as a constant "ESerifSideQ_Pol_C016_3008" in rcx
		0x18054E92A: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C016_3008' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle34' (type System.Type)}

		0x18054E92F: Copies {'typeFromHandle34' (type System.Type)} from rax into rbx
		0x18054E932: [!] Compares {'typeFromHandle34' (type System.Type)} and 0
		0x18054E935: Jumps to 0x18054E94F if typeFromHandle34 equals 0 ;  - This is probably a goto, jumping to 0x18054E94F which is after end of current block @ 0x18054E151 (started at 0x18054E139)

		0x18054E937: Loads the class pointer from local0 into a constant constant179 in register rdx
		0x18054E93A: Copies {'typeFromHandle34' (type System.Type)} from rax into rcx
		0x18054E93D: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18054E946: [!] Compares {'typeFromHandle34' (type System.Type)} and 0
		0x18054E949: Jumps to 0x18054EFE4 if typeFromHandle34 equals 0 ;  - This is probably a goto, jumping to 0x18054EFE4 which is after end of current block @ 0x18054E151 (started at 0x18054E139)

		0x18054E94F: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 34
		0x18054E953: Jumps to 0x18054EFF7 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 34. Implicitly present in managed code, so ignored here.
		0x18054E959: Sets the value at offset 34 in array local0 to {'typeFromHandle34' (type System.Type)}
		0x18054E962: Loads the type definition for managed type ESerifSideQ_Pol_C016_3009 as a constant "ESerifSideQ_Pol_C016_3009" in rcx
		0x18054E969: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C016_3009' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle35' (type System.Type)}

		0x18054E96E: Copies {'typeFromHandle35' (type System.Type)} from rax into rbx
		0x18054E971: [!] Compares {'typeFromHandle35' (type System.Type)} and 0
		0x18054E974: Jumps to 0x18054E98E if typeFromHandle35 equals 0 ;  - This is probably a goto, jumping to 0x18054E98E which is after end of current block @ 0x18054E151 (started at 0x18054E139)

		0x18054E976: Loads the class pointer from local0 into a constant constant184 in register rdx
		0x18054E979: Copies {'typeFromHandle35' (type System.Type)} from rax into rcx
		0x18054E97C: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18054E985: [!] Compares {'typeFromHandle35' (type System.Type)} and 0
		0x18054E988: Jumps to 0x18054F00A if typeFromHandle35 equals 0 ;  - This is probably a goto, jumping to 0x18054F00A which is after end of current block @ 0x18054E151 (started at 0x18054E139)

		0x18054E98E: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 35
		0x18054E992: Jumps to 0x18054F01D (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 35. Implicitly present in managed code, so ignored here.
		0x18054E998: Sets the value at offset 35 in array local0 to {'typeFromHandle35' (type System.Type)}
		0x18054E9A1: Loads the type definition for managed type ESerifSideQ_Pol_C016_3012 as a constant "ESerifSideQ_Pol_C016_3012" in rcx
		0x18054E9A8: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C016_3012' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle36' (type System.Type)}

		0x18054E9AD: Copies {'typeFromHandle36' (type System.Type)} from rax into rbx
		0x18054E9B0: [!] Compares {'typeFromHandle36' (type System.Type)} and 0
		0x18054E9B3: Jumps to 0x18054E9CD if typeFromHandle36 equals 0 ;  - This is probably a goto, jumping to 0x18054E9CD which is after end of current block @ 0x18054E151 (started at 0x18054E139)

		0x18054E9B5: Loads the class pointer from local0 into a constant constant189 in register rdx
		0x18054E9B8: Copies {'typeFromHandle36' (type System.Type)} from rax into rcx
		0x18054E9BB: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18054E9C4: [!] Compares {'typeFromHandle36' (type System.Type)} and 0
		0x18054E9C7: Jumps to 0x18054F030 if typeFromHandle36 equals 0 ;  - This is probably a goto, jumping to 0x18054F030 which is after end of current block @ 0x18054E151 (started at 0x18054E139)

		0x18054E9CD: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 36
		0x18054E9D1: Jumps to 0x18054F043 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 36. Implicitly present in managed code, so ignored here.
		0x18054E9D7: Sets the value at offset 36 in array local0 to {'typeFromHandle36' (type System.Type)}
		0x18054E9E0: Loads the type definition for managed type ESerifSideQ_Pol_C016_3010 as a constant "ESerifSideQ_Pol_C016_3010" in rcx
		0x18054E9E7: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C016_3010' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle37' (type System.Type)}

		0x18054E9EC: Copies {'typeFromHandle37' (type System.Type)} from rax into rbx
		0x18054E9EF: [!] Compares {'typeFromHandle37' (type System.Type)} and 0
		0x18054E9F2: Jumps to 0x18054EA0C if typeFromHandle37 equals 0 ;  - This is probably a goto, jumping to 0x18054EA0C which is after end of current block @ 0x18054E151 (started at 0x18054E139)

		0x18054E9F4: Loads the class pointer from local0 into a constant constant194 in register rdx
		0x18054E9F7: Copies {'typeFromHandle37' (type System.Type)} from rax into rcx
		0x18054E9FA: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18054EA03: [!] Compares {'typeFromHandle37' (type System.Type)} and 0
		0x18054EA06: Jumps to 0x18054F056 if typeFromHandle37 equals 0 ;  - This is probably a goto, jumping to 0x18054F056 which is after end of current block @ 0x18054E151 (started at 0x18054E139)

		0x18054EA0C: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 37
		0x18054EA10: Jumps to 0x18054F069 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 37. Implicitly present in managed code, so ignored here.
		0x18054EA16: Sets the value at offset 37 in array local0 to {'typeFromHandle37' (type System.Type)}
		0x18054EA1F: Loads the type definition for managed type ESerifSideQ_Pol_C016_3011 as a constant "ESerifSideQ_Pol_C016_3011" in rcx
		0x18054EA26: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C016_3011' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle38' (type System.Type)}

		0x18054EA2B: Copies {'typeFromHandle38' (type System.Type)} from rax into rbx
		0x18054EA2E: [!] Compares {'typeFromHandle38' (type System.Type)} and 0
		0x18054EA31: Jumps to 0x18054EA4B if typeFromHandle38 equals 0 ;  - This is probably a goto, jumping to 0x18054EA4B which is after end of current block @ 0x18054E151 (started at 0x18054E139)

		0x18054EA33: Loads the class pointer from local0 into a constant constant199 in register rdx
		0x18054EA36: Copies {'typeFromHandle38' (type System.Type)} from rax into rcx
		0x18054EA39: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18054EA42: [!] Compares {'typeFromHandle38' (type System.Type)} and 0
		0x18054EA45: Jumps to 0x18054F07C if typeFromHandle38 equals 0 ;  - This is probably a goto, jumping to 0x18054F07C which is after end of current block @ 0x18054E151 (started at 0x18054E139)

		0x18054EA4B: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 38
		0x18054EA4F: Jumps to 0x18054F08F (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 38. Implicitly present in managed code, so ignored here.
		0x18054EA55: Sets the value at offset 38 in array local0 to {'typeFromHandle38' (type System.Type)}
		0x18054EA5E: Loads the type definition for managed type ESerifSideQ_Pol_C016_4000 as a constant "ESerifSideQ_Pol_C016_4000" in rcx
		0x18054EA65: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C016_4000' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle39' (type System.Type)}

		0x18054EA6A: Copies {'typeFromHandle39' (type System.Type)} from rax into rbx
		0x18054EA6D: [!] Compares {'typeFromHandle39' (type System.Type)} and 0
		0x18054EA70: Jumps to 0x18054EA8A if typeFromHandle39 equals 0 ;  - This is probably a goto, jumping to 0x18054EA8A which is after end of current block @ 0x18054E151 (started at 0x18054E139)

		0x18054EA72: Loads the class pointer from local0 into a constant constant204 in register rdx
		0x18054EA75: Copies {'typeFromHandle39' (type System.Type)} from rax into rcx
		0x18054EA78: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18054EA81: [!] Compares {'typeFromHandle39' (type System.Type)} and 0
		0x18054EA84: Jumps to 0x18054F0A2 if typeFromHandle39 equals 0 ;  - This is probably a goto, jumping to 0x18054F0A2 which is after end of current block @ 0x18054E151 (started at 0x18054E139)

		0x18054EA8A: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 39
		0x18054EA8E: Jumps to 0x18054F0B5 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 39. Implicitly present in managed code, so ignored here.
		0x18054EA94: Sets the value at offset 39 in array local0 to {'typeFromHandle39' (type System.Type)}
		0x18054EA9D: Loads the type definition for managed type ESerifSideQ_Pol_C016_4001 as a constant "ESerifSideQ_Pol_C016_4001" in rcx
		0x18054EAA4: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C016_4001' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle40' (type System.Type)}

		0x18054EAA9: Copies {'typeFromHandle40' (type System.Type)} from rax into rbx
		0x18054EAAC: [!] Compares {'typeFromHandle40' (type System.Type)} and 0
		0x18054EAAF: Jumps to 0x18054EAC9 if typeFromHandle40 equals 0 ;  - This is probably a goto, jumping to 0x18054EAC9 which is after end of current block @ 0x18054E151 (started at 0x18054E139)

		0x18054EAB1: Loads the class pointer from local0 into a constant constant209 in register rdx
		0x18054EAB4: Copies {'typeFromHandle40' (type System.Type)} from rax into rcx
		0x18054EAB7: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18054EAC0: [!] Compares {'typeFromHandle40' (type System.Type)} and 0
		0x18054EAC3: Jumps to 0x18054F0C8 if typeFromHandle40 equals 0 ;  - This is probably a goto, jumping to 0x18054F0C8 which is after end of current block @ 0x18054E151 (started at 0x18054E139)

		0x18054EAC9: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 40
		0x18054EACD: Jumps to 0x18054F0DB (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 40. Implicitly present in managed code, so ignored here.
		0x18054EAD3: Sets the value at offset 40 in array local0 to {'typeFromHandle40' (type System.Type)}
		0x18054EADA: Loads the type definition for managed type C016_SideQuest_Define as a constant "C016_SideQuest_Define" in rax
		0x18054EAE1: Reads unknown value in stack, offset 48 (0x30) and stores the pointer in register rbx as new constant constant213
		0x18054EAE6: Loads the pointer to the static fields for C016_SideQuest_Define and stores it in constant214 in register rcx
		0x18054EAED: [!] Sets static field . to {'local0' (type System.Type[])}
		0x18054EAF5: [!] Returns from the function

		0x18054EAF8: [!] Constructs and throws an exception of kind System.NullReferenceException

		0x18054EB03: Copies {'local82' (type System.NullReferenceException)} from rax into rcx
		0x18054EB29: Copies {'local82' (type System.NullReferenceException)} from rax into rcx
		0x18054EB4F: Copies {'local82' (type System.NullReferenceException)} from rax into rcx
		0x18054EB75: Copies {'local82' (type System.NullReferenceException)} from rax into rcx
		0x18054EB9B: Copies {'local82' (type System.NullReferenceException)} from rax into rcx
		0x18054EBC1: Copies {'local82' (type System.NullReferenceException)} from rax into rcx
		0x18054EBE7: Copies {'local82' (type System.NullReferenceException)} from rax into rcx
		0x18054EC0D: Copies {'local82' (type System.NullReferenceException)} from rax into rcx
		0x18054EC33: Copies {'local82' (type System.NullReferenceException)} from rax into rcx
		0x18054EC59: Copies {'local82' (type System.NullReferenceException)} from rax into rcx
		0x18054EC7F: Copies {'local82' (type System.NullReferenceException)} from rax into rcx
		0x18054ECA5: Copies {'local82' (type System.NullReferenceException)} from rax into rcx
		0x18054ECCB: Copies {'local82' (type System.NullReferenceException)} from rax into rcx
		0x18054ECF1: Copies {'local82' (type System.NullReferenceException)} from rax into rcx
		0x18054ED17: Copies {'local82' (type System.NullReferenceException)} from rax into rcx
		0x18054ED3D: Copies {'local82' (type System.NullReferenceException)} from rax into rcx
		0x18054ED63: Copies {'local82' (type System.NullReferenceException)} from rax into rcx
		0x18054ED89: Copies {'local82' (type System.NullReferenceException)} from rax into rcx
		0x18054EDAF: Copies {'local82' (type System.NullReferenceException)} from rax into rcx
		0x18054EDD5: Copies {'local82' (type System.NullReferenceException)} from rax into rcx
		0x18054EDFB: Copies {'local82' (type System.NullReferenceException)} from rax into rcx
		0x18054EE21: Copies {'local82' (type System.NullReferenceException)} from rax into rcx
		0x18054EE47: Copies {'local82' (type System.NullReferenceException)} from rax into rcx
		0x18054EE6D: Copies {'local82' (type System.NullReferenceException)} from rax into rcx
		0x18054EE93: Copies {'local82' (type System.NullReferenceException)} from rax into rcx
		0x18054EEB9: Copies {'local82' (type System.NullReferenceException)} from rax into rcx
		0x18054EEDF: Copies {'local82' (type System.NullReferenceException)} from rax into rcx
		0x18054EF05: Copies {'local82' (type System.NullReferenceException)} from rax into rcx
		0x18054EF2B: Copies {'local82' (type System.NullReferenceException)} from rax into rcx
		0x18054EF51: Copies {'local82' (type System.NullReferenceException)} from rax into rcx
		0x18054EF77: Copies {'local82' (type System.NullReferenceException)} from rax into rcx
		0x18054EF9D: Copies {'local82' (type System.NullReferenceException)} from rax into rcx
		0x18054EFC3: Copies {'local82' (type System.NullReferenceException)} from rax into rcx
		0x18054EFE9: Copies {'local82' (type System.NullReferenceException)} from rax into rcx
		0x18054F00F: Copies {'local82' (type System.NullReferenceException)} from rax into rcx
		0x18054F035: Copies {'local82' (type System.NullReferenceException)} from rax into rcx
		0x18054F05B: Copies {'local82' (type System.NullReferenceException)} from rax into rcx
		0x18054F081: Copies {'local82' (type System.NullReferenceException)} from rax into rcx
		0x18054F0A7: Copies {'local82' (type System.NullReferenceException)} from rax into rcx
		0x18054F0CD: Copies {'local82' (type System.NullReferenceException)} from rax into rcx



	Generated Pseudocode:

	Declaring Type: C016_SideQuest_Define
	static System.Void .cctor()
		System.Type[] local0 = new System.Type[42]

		System.Type typeFromHandle = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C016_1000' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle != 0)

		    if (typeFromHandle == 0)
                goto INSN_18054EAFE
            endif
		endif
        
		local0[1] = typeFromHandle

		System.Type typeFromHandle2 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C016_1001' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle2 == 0)
            goto INSN_18054E18D
        endif

		if (typeFromHandle2 == 0)
            goto INSN_18054EB24
        endif

		INSN_18054E18D:
		local0[2] = typeFromHandle2

		System.Type typeFromHandle3 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C016_1002' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle3 == 0)
            goto INSN_18054E1C9
        endif

		if (typeFromHandle3 == 0)
            goto INSN_18054EB4A
        endif

		INSN_18054E1C9:
		local0[3] = typeFromHandle3

		System.Type typeFromHandle4 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C016_1003' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle4 == 0)
            goto INSN_18054E205
        endif

		if (typeFromHandle4 == 0)
            goto INSN_18054EB70
        endif

		INSN_18054E205:
		local0[4] = typeFromHandle4

		System.Type typeFromHandle5 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C016_1004' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle5 == 0)
            goto INSN_18054E241
        endif

		if (typeFromHandle5 == 0)
            goto INSN_18054EB96
        endif

		INSN_18054E241:
		local0[5] = typeFromHandle5

		System.Type typeFromHandle6 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C016_1005' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle6 == 0)
            goto INSN_18054E27D
        endif

		if (typeFromHandle6 == 0)
            goto INSN_18054EBBC
        endif

		INSN_18054E27D:
		local0[6] = typeFromHandle6

		System.Type typeFromHandle7 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C016_1006' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle7 == 0)
            goto INSN_18054E2B9
        endif

		if (typeFromHandle7 == 0)
            goto INSN_18054EBE2
        endif

		INSN_18054E2B9:
		local0[7] = typeFromHandle7

		System.Type typeFromHandle8 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C016_1007' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle8 == 0)
            goto INSN_18054E2F5
        endif

		if (typeFromHandle8 == 0)
            goto INSN_18054EC08
        endif

		INSN_18054E2F5:
		local0[8] = typeFromHandle8

		System.Type typeFromHandle9 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C016_1008' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle9 == 0)
            goto INSN_18054E331
        endif

		if (typeFromHandle9 == 0)
            goto INSN_18054EC2E
        endif

		INSN_18054E331:
		local0[9] = typeFromHandle9

		System.Type typeFromHandle10 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C016_1009' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle10 == 0)
            goto INSN_18054E36D
        endif

		if (typeFromHandle10 == 0)
            goto INSN_18054EC54
        endif

		INSN_18054E36D:
		local0[10] = typeFromHandle10

		System.Type typeFromHandle11 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C016_1010' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle11 == 0)
            goto INSN_18054E3A9
        endif

		if (typeFromHandle11 == 0)
            goto INSN_18054EC7A
        endif

		INSN_18054E3A9:
		local0[11] = typeFromHandle11

		System.Type typeFromHandle12 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C016_1011' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle12 == 0)
            goto INSN_18054E3E5
        endif

		if (typeFromHandle12 == 0)
            goto INSN_18054ECA0
        endif

		INSN_18054E3E5:
		local0[12] = typeFromHandle12

		System.Type typeFromHandle13 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C016_1011_1' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle13 == 0)
            goto INSN_18054E424
        endif

		if (typeFromHandle13 == 0)
            goto INSN_18054ECC6
        endif

		INSN_18054E424:
		local0[13] = typeFromHandle13

		System.Type typeFromHandle14 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C016_1012' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle14 == 0)
            goto INSN_18054E463
        endif

		if (typeFromHandle14 == 0)
            goto INSN_18054ECEC
        endif

		INSN_18054E463:
		local0[14] = typeFromHandle14

		System.Type typeFromHandle15 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C016_1013' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle15 == 0)
            goto INSN_18054E4A2
        endif

		if (typeFromHandle15 == 0)
            goto INSN_18054ED12
        endif

		INSN_18054E4A2:
		local0[15] = typeFromHandle15

		System.Type typeFromHandle16 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C016_1014' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle16 == 0)
            goto INSN_18054E4E1
        endif

		if (typeFromHandle16 == 0)
            goto INSN_18054ED38
        endif

		INSN_18054E4E1:
		local0[16] = typeFromHandle16

		System.Type typeFromHandle17 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C016_1015' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle17 == 0)
            goto INSN_18054E520
        endif

		if (typeFromHandle17 == 0)
            goto INSN_18054ED5E
        endif

		INSN_18054E520:
		local0[17] = typeFromHandle17

		System.Type typeFromHandle18 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C016_1016' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle18 == 0)
            goto INSN_18054E55F
        endif

		if (typeFromHandle18 == 0)
            goto INSN_18054ED84
        endif

		INSN_18054E55F:
		local0[18] = typeFromHandle18

		System.Type typeFromHandle19 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C016_1017' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle19 == 0)
            goto INSN_18054E59E
        endif

		if (typeFromHandle19 == 0)
            goto INSN_18054EDAA
        endif

		INSN_18054E59E:
		local0[19] = typeFromHandle19

		System.Type typeFromHandle20 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C016_1018' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle20 == 0)
            goto INSN_18054E5DD
        endif

		if (typeFromHandle20 == 0)
            goto INSN_18054EDD0
        endif

		INSN_18054E5DD:
		local0[20] = typeFromHandle20

		System.Type typeFromHandle21 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C016_1019' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle21 == 0)
            goto INSN_18054E61C
        endif

		if (typeFromHandle21 == 0)
            goto INSN_18054EDF6
        endif

		INSN_18054E61C:
		local0[21] = typeFromHandle21

		System.Type typeFromHandle22 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C016_2000' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle22 == 0)
            goto INSN_18054E65B
        endif

		if (typeFromHandle22 == 0)
            goto INSN_18054EE1C
        endif

		INSN_18054E65B:
		local0[22] = typeFromHandle22

		System.Type typeFromHandle23 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C016_2001' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle23 == 0)
            goto INSN_18054E69A
        endif

		if (typeFromHandle23 == 0)
            goto INSN_18054EE42
        endif

		INSN_18054E69A:
		local0[23] = typeFromHandle23

		System.Type typeFromHandle24 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C016_2002' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle24 == 0)
            goto INSN_18054E6D9
        endif

		if (typeFromHandle24 == 0)
            goto INSN_18054EE68
        endif

		INSN_18054E6D9:
		local0[24] = typeFromHandle24

		System.Type typeFromHandle25 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C016_2003' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle25 == 0)
            goto INSN_18054E718
        endif

		if (typeFromHandle25 == 0)
            goto INSN_18054EE8E
        endif

		INSN_18054E718:
		local0[25] = typeFromHandle25

		System.Type typeFromHandle26 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C016_3000' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle26 == 0)
            goto INSN_18054E757
        endif

		if (typeFromHandle26 == 0)
            goto INSN_18054EEB4
        endif

		INSN_18054E757:
		local0[26] = typeFromHandle26

		System.Type typeFromHandle27 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C016_3001' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle27 == 0)
            goto INSN_18054E796
        endif

		if (typeFromHandle27 == 0)
            goto INSN_18054EEDA
        endif

		INSN_18054E796:
		local0[27] = typeFromHandle27

		System.Type typeFromHandle28 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C016_3002' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle28 == 0)
            goto INSN_18054E7D5
        endif

		if (typeFromHandle28 == 0)
            goto INSN_18054EF00
        endif

		INSN_18054E7D5:
		local0[28] = typeFromHandle28

		System.Type typeFromHandle29 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C016_3003' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle29 == 0)
            goto INSN_18054E814
        endif

		if (typeFromHandle29 == 0)
            goto INSN_18054EF26
        endif

		INSN_18054E814:
		local0[29] = typeFromHandle29

		System.Type typeFromHandle30 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C016_3004' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle30 == 0)
            goto INSN_18054E853
        endif

		if (typeFromHandle30 == 0)
            goto INSN_18054EF4C
        endif

		INSN_18054E853:
		local0[30] = typeFromHandle30

		System.Type typeFromHandle31 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C016_3005' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle31 == 0)
            goto INSN_18054E892
        endif

		if (typeFromHandle31 == 0)
            goto INSN_18054EF72
        endif

		INSN_18054E892:
		local0[31] = typeFromHandle31

		System.Type typeFromHandle32 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C016_3006' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle32 == 0)
            goto INSN_18054E8D1
        endif

		if (typeFromHandle32 == 0)
            goto INSN_18054EF98
        endif

		INSN_18054E8D1:
		local0[32] = typeFromHandle32

		System.Type typeFromHandle33 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C016_3007' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle33 == 0)
            goto INSN_18054E910
        endif

		if (typeFromHandle33 == 0)
            goto INSN_18054EFBE
        endif

		INSN_18054E910:
		local0[33] = typeFromHandle33

		System.Type typeFromHandle34 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C016_3008' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle34 == 0)
            goto INSN_18054E94F
        endif

		if (typeFromHandle34 == 0)
            goto INSN_18054EFE4
        endif

		INSN_18054E94F:
		local0[34] = typeFromHandle34

		System.Type typeFromHandle35 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C016_3009' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle35 == 0)
            goto INSN_18054E98E
        endif

		if (typeFromHandle35 == 0)
            goto INSN_18054F00A
        endif

		INSN_18054E98E:
		local0[35] = typeFromHandle35

		System.Type typeFromHandle36 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C016_3012' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle36 == 0)
            goto INSN_18054E9CD
        endif

		if (typeFromHandle36 == 0)
            goto INSN_18054F030
        endif

		INSN_18054E9CD:
		local0[36] = typeFromHandle36

		System.Type typeFromHandle37 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C016_3010' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle37 == 0)
            goto INSN_18054EA0C
        endif

		if (typeFromHandle37 == 0)
            goto INSN_18054F056
        endif

		INSN_18054EA0C:
		local0[37] = typeFromHandle37

		System.Type typeFromHandle38 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C016_3011' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle38 == 0)
            goto INSN_18054EA4B
        endif

		if (typeFromHandle38 == 0)
            goto INSN_18054F07C
        endif

		INSN_18054EA4B:
		local0[38] = typeFromHandle38

		System.Type typeFromHandle39 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C016_4000' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle39 == 0)
            goto INSN_18054EA8A
        endif

		if (typeFromHandle39 == 0)
            goto INSN_18054F0A2
        endif

		INSN_18054EA8A:
		local0[39] = typeFromHandle39

		System.Type typeFromHandle40 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C016_4001' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle40 == 0)
            goto INSN_18054EAC9
        endif

		if (typeFromHandle40 == 0)
            goto INSN_18054F0C8
        endif

		INSN_18054EAC9:
		local0[40] = typeFromHandle40
		. = local0
		return
		throw new System.NullReferenceException()

		INSN_18054EAFE:

		INSN_18054EB24:

		INSN_18054EB4A:

		INSN_18054EB70:

		INSN_18054EB96:

		INSN_18054EBBC:

		INSN_18054EBE2:

		INSN_18054EC08:

		INSN_18054EC2E:

		INSN_18054EC54:

		INSN_18054EC7A:

		INSN_18054ECA0:

		INSN_18054ECC6:

		INSN_18054ECEC:

		INSN_18054ED12:

		INSN_18054ED38:

		INSN_18054ED5E:

		INSN_18054ED84:

		INSN_18054EDAA:

		INSN_18054EDD0:

		INSN_18054EDF6:

		INSN_18054EE1C:

		INSN_18054EE42:

		INSN_18054EE68:

		INSN_18054EE8E:

		INSN_18054EEB4:

		INSN_18054EEDA:

		INSN_18054EF00:

		INSN_18054EF26:

		INSN_18054EF4C:

		INSN_18054EF72:

		INSN_18054EF98:

		INSN_18054EFBE:

		INSN_18054EFE4:

		INSN_18054F00A:

		INSN_18054F030:

		INSN_18054F056:

		INSN_18054F07C:

		INSN_18054F0A2:

		INSN_18054F0C8:


Generated IL:
	Action of type Cpp2IL.Core.Analysis.Actions.x86.Important.RegToStaticFieldAction at (0x18054EAED) is corrupt (No further info) and cannot be created as IL. Aborting here.


