Type: C013_SideQuest_Define

Method: System.Void C013_SideQuest_Define::.ctor():	Method Body (x86 ASM):
		0x1802068B0 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1802068B2 jmp near ptr 0000000180207540h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802068B7 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.Void C013_SideQuest_Define::.ctor():
		End of function at 0x1802068B8
		Absolute End is at 0x1802068B8
		Identified Jump Destination addresses:

		0x1802068B2: [!] Calls managed method System.Void System.Object::.ctor() on instance {'this' (function parameter, type C013_SideQuest_Define)}

		0x1802068B2: [!] Returns from the function




	Generated Pseudocode:

	Declaring Type: C013_SideQuest_Define
	System.Void .ctor()

		base..ctor()
		return


Generated IL:
	IL_0000: ldarg.0
	IL_0001: call System.Void System.Object::.ctor()
	IL_0006: ret
	

Method: System.Void C013_SideQuest_Define::.cctor():	Method Body (x86 ASM):
		0x18054BFE0 mov [rsp+8],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RSP | 8 | None ||| N/A | N/A
		0x18054BFE5 push rdi		; DEBUG: {Register}/RDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18054BFE6 sub rsp,20h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 32
		0x18054BFEA cmp byte ptr [18183EAF8h],0		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6467873528 | None ||| N/A | 0
		0x18054BFF1 jne short 000000018054C005h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054BFF3 mov ecx,[181515F50h]		; DEBUG: {Register}/ECX {Memory}/None ||| RIP | 6464560976 | None ||| N/A | N/A
		0x18054BFF9 call 00000001800FEB90h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054BFFE mov byte ptr [18183EAF8h],1		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6467873528 | None ||| N/A | 1
		0x18054C005 mov rcx,[181884F78h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468161400 | None ||| N/A | N/A
		0x18054C00C mov edx,8		; DEBUG: {Register}/EDX {Immediate32}/None ||| None | 0 | None ||| N/A | 8
		0x18054C011 call 0000000180141320h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054C016 mov rcx,[181884228h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468157992 | None ||| N/A | N/A
		0x18054C01D mov rdi,rax		; DEBUG: {Register}/RDI {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054C020 mov rbx,[18186E7A8h]		; DEBUG: {Register}/RBX {Memory}/None ||| RIP | 6468069288 | None ||| N/A | N/A
		0x18054C027 test byte ptr [rcx+127h],2		; DEBUG: {Memory}/None {Immediate8}/None ||| RCX | 295 | None ||| N/A | 2
		0x18054C02E je short 000000018054C03Eh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054C030 cmp dword ptr [rcx+0D8h],0		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RCX | 216 | None ||| N/A | 0
		0x18054C037 jne short 000000018054C03Eh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054C039 call 000000018010EAF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054C03E xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18054C040 mov rcx,rbx		; DEBUG: {Register}/RCX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x18054C043 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054C048 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054C04B test rdi,rdi		; DEBUG: {Register}/RDI {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x18054C04E je near ptr 000000018054C1C7h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054C054 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054C057 je short 000000018054C071h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054C059 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18054C05C mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054C05F mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18054C063 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054C068 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054C06B je near ptr 000000018054C1CFh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054C071 cmp dword ptr [rdi+18h],1		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 1
		0x18054C075 jbe near ptr 000000018054C1E2h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054C07B mov [rdi+28h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 40 | None ||| N/A | N/A
		0x18054C07F xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18054C081 mov rcx,[18186E7C8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468069320 | None ||| N/A | N/A
		0x18054C088 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054C08D mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054C090 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054C093 je short 000000018054C0ADh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054C095 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18054C098 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054C09B mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18054C09F call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054C0A4 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054C0A7 je near ptr 000000018054C1F5h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054C0AD cmp dword ptr [rdi+18h],2		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 2
		0x18054C0B1 jbe near ptr 000000018054C208h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054C0B7 mov [rdi+30h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 48 | None ||| N/A | N/A
		0x18054C0BB xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18054C0BD mov rcx,[18186E800h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468069376 | None ||| N/A | N/A
		0x18054C0C4 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054C0C9 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054C0CC test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054C0CF je short 000000018054C0E9h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054C0D1 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18054C0D4 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054C0D7 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18054C0DB call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054C0E0 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054C0E3 je near ptr 000000018054C21Bh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054C0E9 cmp dword ptr [rdi+18h],3		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 3
		0x18054C0ED jbe near ptr 000000018054C22Eh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054C0F3 mov [rdi+38h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 56 | None ||| N/A | N/A
		0x18054C0F7 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18054C0F9 mov rcx,[18186E820h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468069408 | None ||| N/A | N/A
		0x18054C100 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054C105 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054C108 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054C10B je short 000000018054C125h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054C10D mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18054C110 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054C113 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18054C117 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054C11C test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054C11F je near ptr 000000018054C241h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054C125 cmp dword ptr [rdi+18h],4		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 4
		0x18054C129 jbe near ptr 000000018054C254h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054C12F mov [rdi+40h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 64 | None ||| N/A | N/A
		0x18054C133 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18054C135 mov rcx,[18186E858h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468069464 | None ||| N/A | N/A
		0x18054C13C call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054C141 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054C144 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054C147 je short 000000018054C161h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054C149 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18054C14C mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054C14F mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18054C153 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054C158 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054C15B je near ptr 000000018054C267h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054C161 cmp dword ptr [rdi+18h],5		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 5
		0x18054C165 jbe near ptr 000000018054C27Ah		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054C16B mov [rdi+48h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 72 | None ||| N/A | N/A
		0x18054C16F xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18054C171 mov rcx,[18186E880h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468069504 | None ||| N/A | N/A
		0x18054C178 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054C17D mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054C180 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054C183 je short 000000018054C19Dh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054C185 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18054C188 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054C18B mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18054C18F call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054C194 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054C197 je near ptr 000000018054C28Dh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054C19D cmp dword ptr [rdi+18h],6		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 6
		0x18054C1A1 jbe near ptr 000000018054C2A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054C1A7 mov [rdi+50h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 80 | None ||| N/A | N/A
		0x18054C1AB mov rax,[18189B888h]		; DEBUG: {Register}/RAX {Memory}/None ||| RIP | 6468253832 | None ||| N/A | N/A
		0x18054C1B2 mov rbx,[rsp+30h]		; DEBUG: {Register}/RBX {Memory}/None ||| RSP | 48 | None ||| N/A | N/A
		0x18054C1B7 mov rcx,[rax+0B8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RAX | 184 | None ||| N/A | N/A
		0x18054C1BE mov [rcx],rdi		; DEBUG: {Memory}/None {Register}/RDI ||| RCX | 0 | None ||| N/A | N/A
		0x18054C1C1 add rsp,20h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 32
		0x18054C1C5 pop rdi		; DEBUG: {Register}/RDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18054C1C6 ret		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18054C1C7 xor ecx,ecx		; DEBUG: {Register}/ECX {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x18054C1C9 call 000000018012BDA0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054C1CE int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18054C1CF call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054C1D4 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054C1D7 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18054C1DA xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18054C1DC call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054C1E1 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18054C1F5 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054C1FA mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054C1FD xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18054C200 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18054C202 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054C207 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18054C21B call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054C220 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054C223 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18054C226 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18054C228 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054C22D int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18054C241 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054C246 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054C249 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18054C24C xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18054C24E call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054C253 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18054C267 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054C26C mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054C26F xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18054C272 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18054C274 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054C279 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18054C28D call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054C292 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18054C295 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18054C298 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18054C29A call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18054C29F int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Static Method System.Void C013_SideQuest_Define::.cctor():
		End of function at 0x18054C2A0
		Absolute End is at 0x18054C2A0
		Identified Jump Destination addresses:

		0x18054BFE5: Saves the content of rdi to the stack
		0x18054BFEA: Compares {Unknown Global at 0x18183EAF8, first ten bytes are [16 202 1 0 80 202 1 0 224 60], or as chars "Ê PÊ à<"} and 0
		0x18054BFF1: Jumps to 0x18054C005 if {Unknown Global at 0x18183EAF8, first ten bytes are [16 202 1 0 80 202 1 0 224 60], or as chars "Ê PÊ à<"} != 0

		0x18054BFF3: Loads string "Þ" into register rcx as constant {'constant3' (constant value of type Cpp2IL.Core.Analysis.ResultModels.Il2CppString)}
		0x18054BFF9: Attempts to load the il2cpp metadata for this method (method id 0) and init it cpp-side.

		0x18054C005: Loads the type definition for managed type System.Type[] as a constant "Type[]" in rcx
		0x18054C00C: [!] Writes the constant 0x8 into operand 8 (type UInt64) in register rdx
		0x18054C011: [!] Allocates an array of type System.Type[] of size 8 and stores the result as local0 in register rax

		0x18054C016: Loads the type definition for managed type System.Type as a constant "Type" in rcx
		0x18054C01D: Copies {'local0' (type System.Type[])} from rax into rdi
		0x18054C020: Loads the type definition for managed type ESerifSideQ_Pol_C013_1000 as a constant "ESerifSideQ_Pol_C013_1000" in rbx
		0x18054C027: Compares "{il2cpp field on {'Type' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" and 2
		0x18054C02E: Jumps to 0x18054C03E if "{il2cpp field on {'Type' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" equals 2

		0x18054C030: Compares "{il2cpp field on {'Type' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" and 0
		0x18054C037: Jumps to 0x18054C03E if "{il2cpp field on {'Type' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" != 0

		0x18054C039: Calls the il2cpp cctor for the type System.Type
		0x18054C040: Copies {'ESerifSideQ_Pol_C013_1000' (constant value of type Mono.Cecil.TypeReference)} from rbx into rcx
		0x18054C043: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C013_1000' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle' (type System.Type)}

		0x18054C048: Copies {'typeFromHandle' (type System.Type)} from rax into rbx
		0x18054C04B: [!] Compares {'local0' (type System.Type[])} and 0
		0x18054C04E: Jumps to 0x18054C1C7 (which throws a NRE) if local0 equals 0. Implicitly present in managed code, so ignored here.
		0x18054C054: [!] Compares {'typeFromHandle' (type System.Type)} and 0
		0x18054C057: Jumps to 0x18054C071 (which is an if statement's body) if typeFromHandle equals 0 ;  - Increasing indentation - is standard if, unimportant is False

		0x18054C059: Loads the class pointer from local0 into a constant constant14 in register rdx
		0x18054C05C: Copies {'typeFromHandle' (type System.Type)} from rax into rcx
		0x18054C05F: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18054C068: [!] Compares {'typeFromHandle' (type System.Type)} and 0
		0x18054C06B: Jumps to 0x18054C1CF if typeFromHandle equals 0 ;  - This is probably a goto, jumping to 0x18054C1CF which is after end of current block @ 0x18054C071 (started at 0x18054C059)

		0x18054C071: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 1
		0x18054C075: Jumps to 0x18054C1E2 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 1. Implicitly present in managed code, so ignored here.
		0x18054C07B: Sets the value at offset 1 in array local0 to {'typeFromHandle' (type System.Type)}
		0x18054C081: Loads the type definition for managed type ESerifSideQ_Pol_C013_1001 as a constant "ESerifSideQ_Pol_C013_1001" in rcx
		0x18054C088: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C013_1001' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle2' (type System.Type)}

		0x18054C08D: Copies {'typeFromHandle2' (type System.Type)} from rax into rbx
		0x18054C090: [!] Compares {'typeFromHandle2' (type System.Type)} and 0
		0x18054C093: Jumps to 0x18054C0AD if typeFromHandle2 equals 0 ;  - This is probably a goto, jumping to 0x18054C0AD which is after end of current block @ 0x18054C071 (started at 0x18054C059)

		0x18054C095: Loads the class pointer from local0 into a constant constant19 in register rdx
		0x18054C098: Copies {'typeFromHandle2' (type System.Type)} from rax into rcx
		0x18054C09B: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18054C0A4: [!] Compares {'typeFromHandle2' (type System.Type)} and 0
		0x18054C0A7: Jumps to 0x18054C1F5 if typeFromHandle2 equals 0 ;  - This is probably a goto, jumping to 0x18054C1F5 which is after end of current block @ 0x18054C071 (started at 0x18054C059)

		0x18054C0AD: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 2
		0x18054C0B1: Jumps to 0x18054C208 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 2. Implicitly present in managed code, so ignored here.
		0x18054C0B7: Sets the value at offset 2 in array local0 to {'typeFromHandle2' (type System.Type)}
		0x18054C0BD: Loads the type definition for managed type ESerifSideQ_Pol_C013_1002 as a constant "ESerifSideQ_Pol_C013_1002" in rcx
		0x18054C0C4: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C013_1002' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle3' (type System.Type)}

		0x18054C0C9: Copies {'typeFromHandle3' (type System.Type)} from rax into rbx
		0x18054C0CC: [!] Compares {'typeFromHandle3' (type System.Type)} and 0
		0x18054C0CF: Jumps to 0x18054C0E9 if typeFromHandle3 equals 0 ;  - This is probably a goto, jumping to 0x18054C0E9 which is after end of current block @ 0x18054C071 (started at 0x18054C059)

		0x18054C0D1: Loads the class pointer from local0 into a constant constant24 in register rdx
		0x18054C0D4: Copies {'typeFromHandle3' (type System.Type)} from rax into rcx
		0x18054C0D7: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18054C0E0: [!] Compares {'typeFromHandle3' (type System.Type)} and 0
		0x18054C0E3: Jumps to 0x18054C21B if typeFromHandle3 equals 0 ;  - This is probably a goto, jumping to 0x18054C21B which is after end of current block @ 0x18054C071 (started at 0x18054C059)

		0x18054C0E9: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 3
		0x18054C0ED: Jumps to 0x18054C22E (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 3. Implicitly present in managed code, so ignored here.
		0x18054C0F3: Sets the value at offset 3 in array local0 to {'typeFromHandle3' (type System.Type)}
		0x18054C0F9: Loads the type definition for managed type ESerifSideQ_Pol_C013_1003 as a constant "ESerifSideQ_Pol_C013_1003" in rcx
		0x18054C100: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C013_1003' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle4' (type System.Type)}

		0x18054C105: Copies {'typeFromHandle4' (type System.Type)} from rax into rbx
		0x18054C108: [!] Compares {'typeFromHandle4' (type System.Type)} and 0
		0x18054C10B: Jumps to 0x18054C125 if typeFromHandle4 equals 0 ;  - This is probably a goto, jumping to 0x18054C125 which is after end of current block @ 0x18054C071 (started at 0x18054C059)

		0x18054C10D: Loads the class pointer from local0 into a constant constant29 in register rdx
		0x18054C110: Copies {'typeFromHandle4' (type System.Type)} from rax into rcx
		0x18054C113: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18054C11C: [!] Compares {'typeFromHandle4' (type System.Type)} and 0
		0x18054C11F: Jumps to 0x18054C241 if typeFromHandle4 equals 0 ;  - This is probably a goto, jumping to 0x18054C241 which is after end of current block @ 0x18054C071 (started at 0x18054C059)

		0x18054C125: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 4
		0x18054C129: Jumps to 0x18054C254 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 4. Implicitly present in managed code, so ignored here.
		0x18054C12F: Sets the value at offset 4 in array local0 to {'typeFromHandle4' (type System.Type)}
		0x18054C135: Loads the type definition for managed type ESerifSideQ_Pol_C013_1004 as a constant "ESerifSideQ_Pol_C013_1004" in rcx
		0x18054C13C: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C013_1004' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle5' (type System.Type)}

		0x18054C141: Copies {'typeFromHandle5' (type System.Type)} from rax into rbx
		0x18054C144: [!] Compares {'typeFromHandle5' (type System.Type)} and 0
		0x18054C147: Jumps to 0x18054C161 if typeFromHandle5 equals 0 ;  - This is probably a goto, jumping to 0x18054C161 which is after end of current block @ 0x18054C071 (started at 0x18054C059)

		0x18054C149: Loads the class pointer from local0 into a constant constant34 in register rdx
		0x18054C14C: Copies {'typeFromHandle5' (type System.Type)} from rax into rcx
		0x18054C14F: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18054C158: [!] Compares {'typeFromHandle5' (type System.Type)} and 0
		0x18054C15B: Jumps to 0x18054C267 if typeFromHandle5 equals 0 ;  - This is probably a goto, jumping to 0x18054C267 which is after end of current block @ 0x18054C071 (started at 0x18054C059)

		0x18054C161: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 5
		0x18054C165: Jumps to 0x18054C27A (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 5. Implicitly present in managed code, so ignored here.
		0x18054C16B: Sets the value at offset 5 in array local0 to {'typeFromHandle5' (type System.Type)}
		0x18054C171: Loads the type definition for managed type ESerifSideQ_Pol_C013_1005 as a constant "ESerifSideQ_Pol_C013_1005" in rcx
		0x18054C178: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C013_1005' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle6' (type System.Type)}

		0x18054C17D: Copies {'typeFromHandle6' (type System.Type)} from rax into rbx
		0x18054C180: [!] Compares {'typeFromHandle6' (type System.Type)} and 0
		0x18054C183: Jumps to 0x18054C19D if typeFromHandle6 equals 0 ;  - This is probably a goto, jumping to 0x18054C19D which is after end of current block @ 0x18054C071 (started at 0x18054C059)

		0x18054C185: Loads the class pointer from local0 into a constant constant39 in register rdx
		0x18054C188: Copies {'typeFromHandle6' (type System.Type)} from rax into rcx
		0x18054C18B: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18054C194: [!] Compares {'typeFromHandle6' (type System.Type)} and 0
		0x18054C197: Jumps to 0x18054C28D if typeFromHandle6 equals 0 ;  - This is probably a goto, jumping to 0x18054C28D which is after end of current block @ 0x18054C071 (started at 0x18054C059)

		0x18054C19D: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 6
		0x18054C1A1: Jumps to 0x18054C2A0 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 6. Implicitly present in managed code, so ignored here.
		0x18054C1A7: Sets the value at offset 6 in array local0 to {'typeFromHandle6' (type System.Type)}
		0x18054C1AB: Loads the type definition for managed type C013_SideQuest_Define as a constant "C013_SideQuest_Define" in rax
		0x18054C1B2: Reads unknown value in stack, offset 48 (0x30) and stores the pointer in register rbx as new constant constant43
		0x18054C1B7: Loads the pointer to the static fields for C013_SideQuest_Define and stores it in constant44 in register rcx
		0x18054C1BE: [!] Sets static field . to {'local0' (type System.Type[])}
		0x18054C1C6: [!] Returns from the function

		0x18054C1C9: [!] Constructs and throws an exception of kind System.NullReferenceException

		0x18054C1D4: Copies {'local14' (type System.NullReferenceException)} from rax into rcx
		0x18054C1FA: Copies {'local14' (type System.NullReferenceException)} from rax into rcx
		0x18054C220: Copies {'local14' (type System.NullReferenceException)} from rax into rcx
		0x18054C246: Copies {'local14' (type System.NullReferenceException)} from rax into rcx
		0x18054C26C: Copies {'local14' (type System.NullReferenceException)} from rax into rcx
		0x18054C292: Copies {'local14' (type System.NullReferenceException)} from rax into rcx



	Generated Pseudocode:

	Declaring Type: C013_SideQuest_Define
	static System.Void .cctor()
		System.Type[] local0 = new System.Type[8]

		System.Type typeFromHandle = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C013_1000' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle != 0)

		    if (typeFromHandle == 0)
                goto INSN_18054C1CF
            endif
		endif
        
		local0[1] = typeFromHandle

		System.Type typeFromHandle2 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C013_1001' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle2 == 0)
            goto INSN_18054C0AD
        endif

		if (typeFromHandle2 == 0)
            goto INSN_18054C1F5
        endif

		INSN_18054C0AD:
		local0[2] = typeFromHandle2

		System.Type typeFromHandle3 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C013_1002' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle3 == 0)
            goto INSN_18054C0E9
        endif

		if (typeFromHandle3 == 0)
            goto INSN_18054C21B
        endif

		INSN_18054C0E9:
		local0[3] = typeFromHandle3

		System.Type typeFromHandle4 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C013_1003' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle4 == 0)
            goto INSN_18054C125
        endif

		if (typeFromHandle4 == 0)
            goto INSN_18054C241
        endif

		INSN_18054C125:
		local0[4] = typeFromHandle4

		System.Type typeFromHandle5 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C013_1004' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle5 == 0)
            goto INSN_18054C161
        endif

		if (typeFromHandle5 == 0)
            goto INSN_18054C267
        endif

		INSN_18054C161:
		local0[5] = typeFromHandle5

		System.Type typeFromHandle6 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C013_1005' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle6 == 0)
            goto INSN_18054C19D
        endif

		if (typeFromHandle6 == 0)
            goto INSN_18054C28D
        endif

		INSN_18054C19D:
		local0[6] = typeFromHandle6
		. = local0
		return
		throw new System.NullReferenceException()

		INSN_18054C1CF:

		INSN_18054C1F5:

		INSN_18054C21B:

		INSN_18054C241:

		INSN_18054C267:

		INSN_18054C28D:


Generated IL:
	Action of type Cpp2IL.Core.Analysis.Actions.x86.Important.RegToStaticFieldAction at (0x18054C1BE) is corrupt (No further info) and cannot be created as IL. Aborting here.


