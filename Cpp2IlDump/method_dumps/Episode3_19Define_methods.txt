Type: Episode3_19Define

Method: System.Void Episode3_19Define::.ctor():	Method Body (x86 ASM):
		0x1802068B0 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1802068B2 jmp near ptr 0000000180207540h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802068B7 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.Void Episode3_19Define::.ctor():
		End of function at 0x1802068B8
		Absolute End is at 0x1802068B8
		Identified Jump Destination addresses:

		0x1802068B2: [!] Calls managed method System.Void System.Object::.ctor() on instance {'this' (function parameter, type Episode3_19Define)}

		0x1802068B2: [!] Returns from the function




	Generated Pseudocode:

	Declaring Type: Episode3_19Define
	System.Void .ctor()

		base..ctor()
		return


Generated IL:
	IL_0000: ldarg.0
	IL_0001: call System.Void System.Object::.ctor()
	IL_0006: ret
	

Method: System.Void Episode3_19Define::.cctor():	Method Body (x86 ASM):
		0x18042D2E0 mov [rsp+8],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RSP | 8 | None ||| N/A | N/A
		0x18042D2E5 push rdi		; DEBUG: {Register}/RDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18042D2E6 sub rsp,20h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 32
		0x18042D2EA cmp byte ptr [18183E271h],0		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6467871345 | None ||| N/A | 0
		0x18042D2F1 jne short 000000018042D305h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D2F3 mov ecx,[1814C734Ch]		; DEBUG: {Register}/ECX {Memory}/None ||| RIP | 6464238412 | None ||| N/A | N/A
		0x18042D2F9 call 00000001800FEB90h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D2FE mov byte ptr [18183E271h],1		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6467871345 | None ||| N/A | 1
		0x18042D305 mov rcx,[181884F78h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468161400 | None ||| N/A | N/A
		0x18042D30C mov edx,25h		; DEBUG: {Register}/EDX {Immediate32}/None ||| None | 0 | None ||| N/A | 37
		0x18042D311 call 0000000180141320h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D316 mov rcx,[181884228h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468157992 | None ||| N/A | N/A
		0x18042D31D mov rdi,rax		; DEBUG: {Register}/RDI {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D320 mov rbx,[18187FCA0h]		; DEBUG: {Register}/RBX {Memory}/None ||| RIP | 6468140192 | None ||| N/A | N/A
		0x18042D327 test byte ptr [rcx+127h],2		; DEBUG: {Memory}/None {Immediate8}/None ||| RCX | 295 | None ||| N/A | 2
		0x18042D32E je short 000000018042D33Eh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D330 cmp dword ptr [rcx+0D8h],0		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RCX | 216 | None ||| N/A | 0
		0x18042D337 jne short 000000018042D33Eh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D339 call 000000018010EAF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D33E xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18042D340 mov rcx,rbx		; DEBUG: {Register}/RCX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x18042D343 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D348 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D34B test rdi,rdi		; DEBUG: {Register}/RDI {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x18042D34E je near ptr 000000018042DBDBh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D354 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D357 je short 000000018042D371h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D359 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18042D35C mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D35F mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18042D363 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D368 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D36B je near ptr 000000018042DBE3h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D371 cmp dword ptr [rdi+18h],1		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 1
		0x18042D375 jbe near ptr 000000018042DBF6h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D37B mov [rdi+28h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 40 | None ||| N/A | N/A
		0x18042D37F xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18042D381 mov rcx,[18187FCA8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468140200 | None ||| N/A | N/A
		0x18042D388 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D38D mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D390 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D393 je short 000000018042D3ADh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D395 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18042D398 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D39B mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18042D39F call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D3A4 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D3A7 je near ptr 000000018042DC09h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D3AD cmp dword ptr [rdi+18h],2		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 2
		0x18042D3B1 jbe near ptr 000000018042DC1Ch		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D3B7 mov [rdi+30h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 48 | None ||| N/A | N/A
		0x18042D3BB xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18042D3BD mov rcx,[18187FCD0h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468140240 | None ||| N/A | N/A
		0x18042D3C4 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D3C9 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D3CC test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D3CF je short 000000018042D3E9h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D3D1 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18042D3D4 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D3D7 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18042D3DB call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D3E0 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D3E3 je near ptr 000000018042DC2Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D3E9 cmp dword ptr [rdi+18h],3		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 3
		0x18042D3ED jbe near ptr 000000018042DC42h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D3F3 mov [rdi+38h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 56 | None ||| N/A | N/A
		0x18042D3F7 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18042D3F9 mov rcx,[18187FD10h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468140304 | None ||| N/A | N/A
		0x18042D400 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D405 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D408 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D40B je short 000000018042D425h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D40D mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18042D410 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D413 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18042D417 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D41C test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D41F je near ptr 000000018042DC55h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D425 cmp dword ptr [rdi+18h],4		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 4
		0x18042D429 jbe near ptr 000000018042DC68h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D42F mov [rdi+40h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 64 | None ||| N/A | N/A
		0x18042D433 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18042D435 mov rcx,[18187FD40h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468140352 | None ||| N/A | N/A
		0x18042D43C call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D441 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D444 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D447 je short 000000018042D461h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D449 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18042D44C mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D44F mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18042D453 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D458 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D45B je near ptr 000000018042DC7Bh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D461 cmp dword ptr [rdi+18h],5		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 5
		0x18042D465 jbe near ptr 000000018042DC8Eh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D46B mov [rdi+48h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 72 | None ||| N/A | N/A
		0x18042D46F xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18042D471 mov rcx,[18187FD60h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468140384 | None ||| N/A | N/A
		0x18042D478 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D47D mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D480 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D483 je short 000000018042D49Dh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D485 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18042D488 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D48B mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18042D48F call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D494 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D497 je near ptr 000000018042DCA1h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D49D cmp dword ptr [rdi+18h],6		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 6
		0x18042D4A1 jbe near ptr 000000018042DCB4h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D4A7 mov [rdi+50h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 80 | None ||| N/A | N/A
		0x18042D4AB xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18042D4AD mov rcx,[18187FD70h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468140400 | None ||| N/A | N/A
		0x18042D4B4 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D4B9 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D4BC test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D4BF je short 000000018042D4D9h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D4C1 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18042D4C4 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D4C7 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18042D4CB call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D4D0 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D4D3 je near ptr 000000018042DCC7h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D4D9 cmp dword ptr [rdi+18h],7		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 7
		0x18042D4DD jbe near ptr 000000018042DCDAh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D4E3 mov [rdi+58h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 88 | None ||| N/A | N/A
		0x18042D4E7 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18042D4E9 mov rcx,[18187FD98h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468140440 | None ||| N/A | N/A
		0x18042D4F0 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D4F5 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D4F8 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D4FB je short 000000018042D515h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D4FD mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18042D500 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D503 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18042D507 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D50C test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D50F je near ptr 000000018042DCEDh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D515 cmp dword ptr [rdi+18h],8		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 8
		0x18042D519 jbe near ptr 000000018042DD00h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D51F mov [rdi+60h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 96 | None ||| N/A | N/A
		0x18042D523 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18042D525 mov rcx,[18187FDD8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468140504 | None ||| N/A | N/A
		0x18042D52C call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D531 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D534 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D537 je short 000000018042D551h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D539 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18042D53C mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D53F mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18042D543 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D548 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D54B je near ptr 000000018042DD13h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D551 cmp dword ptr [rdi+18h],9		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 9
		0x18042D555 jbe near ptr 000000018042DD26h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D55B mov [rdi+68h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 104 | None ||| N/A | N/A
		0x18042D55F xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18042D561 mov rcx,[18187FDE8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468140520 | None ||| N/A | N/A
		0x18042D568 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D56D mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D570 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D573 je short 000000018042D58Dh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D575 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18042D578 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D57B mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18042D57F call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D584 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D587 je near ptr 000000018042DD39h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D58D cmp dword ptr [rdi+18h],0Ah		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 10
		0x18042D591 jbe near ptr 000000018042DD4Ch		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D597 mov [rdi+70h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 112 | None ||| N/A | N/A
		0x18042D59B xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18042D59D mov rcx,[18187FE18h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468140568 | None ||| N/A | N/A
		0x18042D5A4 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D5A9 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D5AC test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D5AF je short 000000018042D5C9h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D5B1 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18042D5B4 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D5B7 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18042D5BB call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D5C0 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D5C3 je near ptr 000000018042DD5Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D5C9 cmp dword ptr [rdi+18h],0Bh		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 11
		0x18042D5CD jbe near ptr 000000018042DD72h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D5D3 mov [rdi+78h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 120 | None ||| N/A | N/A
		0x18042D5D7 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18042D5D9 mov rcx,[18187FE38h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468140600 | None ||| N/A | N/A
		0x18042D5E0 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D5E5 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D5E8 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D5EB je short 000000018042D605h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D5ED mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18042D5F0 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D5F3 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18042D5F7 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D5FC test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D5FF je near ptr 000000018042DD85h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D605 cmp dword ptr [rdi+18h],0Ch		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 12
		0x18042D609 jbe near ptr 000000018042DD98h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D60F mov [rdi+80h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 128 | None ||| N/A | N/A
		0x18042D616 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18042D618 mov rcx,[18187FE60h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468140640 | None ||| N/A | N/A
		0x18042D61F call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D624 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D627 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D62A je short 000000018042D644h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D62C mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18042D62F mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D632 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18042D636 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D63B test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D63E je near ptr 000000018042DDABh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D644 cmp dword ptr [rdi+18h],0Dh		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 13
		0x18042D648 jbe near ptr 000000018042DDBEh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D64E mov [rdi+88h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 136 | None ||| N/A | N/A
		0x18042D655 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18042D657 mov rcx,[18187FE90h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468140688 | None ||| N/A | N/A
		0x18042D65E call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D663 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D666 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D669 je short 000000018042D683h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D66B mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18042D66E mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D671 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18042D675 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D67A test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D67D je near ptr 000000018042DDD1h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D683 cmp dword ptr [rdi+18h],0Eh		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 14
		0x18042D687 jbe near ptr 000000018042DDE4h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D68D mov [rdi+90h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 144 | None ||| N/A | N/A
		0x18042D694 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18042D696 mov rcx,[18187FEC8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468140744 | None ||| N/A | N/A
		0x18042D69D call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D6A2 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D6A5 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D6A8 je short 000000018042D6C2h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D6AA mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18042D6AD mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D6B0 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18042D6B4 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D6B9 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D6BC je near ptr 000000018042DDF7h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D6C2 cmp dword ptr [rdi+18h],0Fh		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 15
		0x18042D6C6 jbe near ptr 000000018042DE0Ah		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D6CC mov [rdi+98h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 152 | None ||| N/A | N/A
		0x18042D6D3 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18042D6D5 mov rcx,[18187FEE8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468140776 | None ||| N/A | N/A
		0x18042D6DC call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D6E1 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D6E4 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D6E7 je short 000000018042D701h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D6E9 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18042D6EC mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D6EF mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18042D6F3 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D6F8 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D6FB je near ptr 000000018042DE1Dh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D701 cmp dword ptr [rdi+18h],10h		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 16
		0x18042D705 jbe near ptr 000000018042DE30h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D70B mov [rdi+0A0h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 160 | None ||| N/A | N/A
		0x18042D712 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18042D714 mov rcx,[18187FF20h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468140832 | None ||| N/A | N/A
		0x18042D71B call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D720 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D723 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D726 je short 000000018042D740h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D728 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18042D72B mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D72E mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18042D732 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D737 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D73A je near ptr 000000018042DE43h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D740 cmp dword ptr [rdi+18h],11h		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 17
		0x18042D744 jbe near ptr 000000018042DE56h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D74A mov [rdi+0A8h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 168 | None ||| N/A | N/A
		0x18042D751 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18042D753 mov rcx,[18187FF38h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468140856 | None ||| N/A | N/A
		0x18042D75A call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D75F mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D762 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D765 je short 000000018042D77Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D767 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18042D76A mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D76D mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18042D771 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D776 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D779 je near ptr 000000018042DE69h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D77F cmp dword ptr [rdi+18h],12h		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 18
		0x18042D783 jbe near ptr 000000018042DE7Ch		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D789 mov [rdi+0B0h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 176 | None ||| N/A | N/A
		0x18042D790 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18042D792 mov rcx,[18187FF58h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468140888 | None ||| N/A | N/A
		0x18042D799 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D79E mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D7A1 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D7A4 je short 000000018042D7BEh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D7A6 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18042D7A9 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D7AC mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18042D7B0 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D7B5 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D7B8 je near ptr 000000018042DE8Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D7BE cmp dword ptr [rdi+18h],13h		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 19
		0x18042D7C2 jbe near ptr 000000018042DEA2h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D7C8 mov [rdi+0B8h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 184 | None ||| N/A | N/A
		0x18042D7CF xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18042D7D1 mov rcx,[18187FF78h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468140920 | None ||| N/A | N/A
		0x18042D7D8 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D7DD mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D7E0 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D7E3 je short 000000018042D7FDh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D7E5 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18042D7E8 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D7EB mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18042D7EF call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D7F4 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D7F7 je near ptr 000000018042DEB5h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D7FD cmp dword ptr [rdi+18h],14h		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 20
		0x18042D801 jbe near ptr 000000018042DEC8h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D807 mov [rdi+0C0h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 192 | None ||| N/A | N/A
		0x18042D80E xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18042D810 mov rcx,[18187FFB8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468140984 | None ||| N/A | N/A
		0x18042D817 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D81C mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D81F test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D822 je short 000000018042D83Ch		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D824 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18042D827 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D82A mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18042D82E call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D833 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D836 je near ptr 000000018042DEDBh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D83C cmp dword ptr [rdi+18h],15h		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 21
		0x18042D840 jbe near ptr 000000018042DEEEh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D846 mov [rdi+0C8h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 200 | None ||| N/A | N/A
		0x18042D84D xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18042D84F mov rcx,[18187FFE0h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468141024 | None ||| N/A | N/A
		0x18042D856 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D85B mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D85E test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D861 je short 000000018042D87Bh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D863 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18042D866 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D869 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18042D86D call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D872 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D875 je near ptr 000000018042DF01h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D87B cmp dword ptr [rdi+18h],16h		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 22
		0x18042D87F jbe near ptr 000000018042DF14h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D885 mov [rdi+0D0h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 208 | None ||| N/A | N/A
		0x18042D88C xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18042D88E mov rcx,[18187FFF0h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468141040 | None ||| N/A | N/A
		0x18042D895 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D89A mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D89D test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D8A0 je short 000000018042D8BAh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D8A2 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18042D8A5 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D8A8 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18042D8AC call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D8B1 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D8B4 je near ptr 000000018042DF27h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D8BA cmp dword ptr [rdi+18h],17h		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 23
		0x18042D8BE jbe near ptr 000000018042DF3Ah		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D8C4 mov [rdi+0D8h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 216 | None ||| N/A | N/A
		0x18042D8CB xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18042D8CD mov rcx,[181880038h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468141112 | None ||| N/A | N/A
		0x18042D8D4 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D8D9 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D8DC test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D8DF je short 000000018042D8F9h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D8E1 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18042D8E4 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D8E7 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18042D8EB call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D8F0 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D8F3 je near ptr 000000018042DF4Dh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D8F9 cmp dword ptr [rdi+18h],18h		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 24
		0x18042D8FD jbe near ptr 000000018042DF60h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D903 mov [rdi+0E0h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 224 | None ||| N/A | N/A
		0x18042D90A xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18042D90C mov rcx,[181880040h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468141120 | None ||| N/A | N/A
		0x18042D913 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D918 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D91B test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D91E je short 000000018042D938h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D920 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18042D923 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D926 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18042D92A call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D92F test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D932 je near ptr 000000018042DF73h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D938 cmp dword ptr [rdi+18h],19h		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 25
		0x18042D93C jbe near ptr 000000018042DF86h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D942 mov [rdi+0E8h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 232 | None ||| N/A | N/A
		0x18042D949 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18042D94B mov rcx,[181880068h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468141160 | None ||| N/A | N/A
		0x18042D952 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D957 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D95A test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D95D je short 000000018042D977h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D95F mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18042D962 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D965 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18042D969 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D96E test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D971 je near ptr 000000018042DF99h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D977 cmp dword ptr [rdi+18h],1Ah		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 26
		0x18042D97B jbe near ptr 000000018042DFACh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D981 mov [rdi+0F0h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 240 | None ||| N/A | N/A
		0x18042D988 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18042D98A mov rcx,[1818800A8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468141224 | None ||| N/A | N/A
		0x18042D991 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D996 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D999 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D99C je short 000000018042D9B6h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D99E mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18042D9A1 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D9A4 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18042D9A8 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D9AD test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D9B0 je near ptr 000000018042DFBFh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D9B6 cmp dword ptr [rdi+18h],1Bh		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 27
		0x18042D9BA jbe near ptr 000000018042DFD2h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D9C0 mov [rdi+0F8h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 248 | None ||| N/A | N/A
		0x18042D9C7 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18042D9C9 mov rcx,[1818800B8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468141240 | None ||| N/A | N/A
		0x18042D9D0 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D9D5 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D9D8 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D9DB je short 000000018042D9F5h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D9DD mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18042D9E0 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D9E3 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18042D9E7 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D9EC test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042D9EF je near ptr 000000018042DFE5h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D9F5 cmp dword ptr [rdi+18h],1Ch		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 28
		0x18042D9F9 jbe near ptr 000000018042DFF8h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042D9FF mov [rdi+100h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 256 | None ||| N/A | N/A
		0x18042DA06 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18042DA08 mov rcx,[1818800E8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468141288 | None ||| N/A | N/A
		0x18042DA0F call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042DA14 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042DA17 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042DA1A je short 000000018042DA34h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042DA1C mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18042DA1F mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042DA22 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18042DA26 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042DA2B test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042DA2E je near ptr 000000018042E00Bh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042DA34 cmp dword ptr [rdi+18h],1Dh		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 29
		0x18042DA38 jbe near ptr 000000018042E01Eh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042DA3E mov [rdi+108h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 264 | None ||| N/A | N/A
		0x18042DA45 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18042DA47 mov rcx,[181880110h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468141328 | None ||| N/A | N/A
		0x18042DA4E call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042DA53 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042DA56 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042DA59 je short 000000018042DA73h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042DA5B mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18042DA5E mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042DA61 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18042DA65 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042DA6A test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042DA6D je near ptr 000000018042E031h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042DA73 cmp dword ptr [rdi+18h],1Eh		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 30
		0x18042DA77 jbe near ptr 000000018042E044h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042DA7D mov [rdi+110h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 272 | None ||| N/A | N/A
		0x18042DA84 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18042DA86 mov rcx,[181880148h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468141384 | None ||| N/A | N/A
		0x18042DA8D call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042DA92 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042DA95 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042DA98 je short 000000018042DAB2h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042DA9A mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18042DA9D mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042DAA0 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18042DAA4 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042DAA9 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042DAAC je near ptr 000000018042E057h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042DAB2 cmp dword ptr [rdi+18h],1Fh		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 31
		0x18042DAB6 jbe near ptr 000000018042E06Ah		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042DABC mov [rdi+118h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 280 | None ||| N/A | N/A
		0x18042DAC3 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18042DAC5 mov rcx,[181880170h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468141424 | None ||| N/A | N/A
		0x18042DACC call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042DAD1 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042DAD4 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042DAD7 je short 000000018042DAF1h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042DAD9 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18042DADC mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042DADF mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18042DAE3 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042DAE8 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042DAEB je near ptr 000000018042E07Dh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042DAF1 cmp dword ptr [rdi+18h],20h		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 32
		0x18042DAF5 jbe near ptr 000000018042E090h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042DAFB mov [rdi+120h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 288 | None ||| N/A | N/A
		0x18042DB02 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18042DB04 mov rcx,[181880188h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468141448 | None ||| N/A | N/A
		0x18042DB0B call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042DB10 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042DB13 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042DB16 je short 000000018042DB30h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042DB18 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18042DB1B mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042DB1E mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18042DB22 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042DB27 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042DB2A je near ptr 000000018042E0A3h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042DB30 cmp dword ptr [rdi+18h],21h		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 33
		0x18042DB34 jbe near ptr 000000018042E0B6h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042DB3A mov [rdi+128h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 296 | None ||| N/A | N/A
		0x18042DB41 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18042DB43 mov rcx,[1818801C8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468141512 | None ||| N/A | N/A
		0x18042DB4A call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042DB4F mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042DB52 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042DB55 je short 000000018042DB6Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042DB57 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18042DB5A mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042DB5D mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18042DB61 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042DB66 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042DB69 je near ptr 000000018042E0C9h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042DB6F cmp dword ptr [rdi+18h],22h		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 34
		0x18042DB73 jbe near ptr 000000018042E0DCh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042DB79 mov [rdi+130h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 304 | None ||| N/A | N/A
		0x18042DB80 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18042DB82 mov rcx,[1818801F0h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468141552 | None ||| N/A | N/A
		0x18042DB89 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042DB8E mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042DB91 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042DB94 je short 000000018042DBAEh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042DB96 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18042DB99 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042DB9C mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18042DBA0 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042DBA5 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042DBA8 je near ptr 000000018042E0EFh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042DBAE cmp dword ptr [rdi+18h],23h		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 35
		0x18042DBB2 jbe near ptr 000000018042E102h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042DBB8 mov [rdi+138h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 312 | None ||| N/A | N/A
		0x18042DBBF mov rax,[1818A1F70h]		; DEBUG: {Register}/RAX {Memory}/None ||| RIP | 6468280176 | None ||| N/A | N/A
		0x18042DBC6 mov rbx,[rsp+30h]		; DEBUG: {Register}/RBX {Memory}/None ||| RSP | 48 | None ||| N/A | N/A
		0x18042DBCB mov rcx,[rax+0B8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RAX | 184 | None ||| N/A | N/A
		0x18042DBD2 mov [rcx],rdi		; DEBUG: {Memory}/None {Register}/RDI ||| RCX | 0 | None ||| N/A | N/A
		0x18042DBD5 add rsp,20h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 32
		0x18042DBD9 pop rdi		; DEBUG: {Register}/RDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18042DBDA ret		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18042DBDB xor ecx,ecx		; DEBUG: {Register}/ECX {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x18042DBDD call 000000018012BDA0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042DBE2 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18042DBE3 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042DBE8 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042DBEB xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18042DBEE xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18042DBF0 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042DBF5 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18042DC09 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042DC0E mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042DC11 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18042DC14 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18042DC16 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042DC1B int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18042DC2F call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042DC34 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042DC37 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18042DC3A xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18042DC3C call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042DC41 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18042DC55 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042DC5A mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042DC5D xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18042DC60 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18042DC62 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042DC67 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18042DC7B call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042DC80 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042DC83 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18042DC86 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18042DC88 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042DC8D int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18042DCA1 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042DCA6 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042DCA9 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18042DCAC xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18042DCAE call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042DCB3 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18042DCC7 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042DCCC mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042DCCF xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18042DCD2 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18042DCD4 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042DCD9 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18042DCED call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042DCF2 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042DCF5 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18042DCF8 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18042DCFA call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042DCFF int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18042DD13 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042DD18 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042DD1B xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18042DD1E xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18042DD20 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042DD25 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18042DD39 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042DD3E mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042DD41 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18042DD44 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18042DD46 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042DD4B int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18042DD5F call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042DD64 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042DD67 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18042DD6A xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18042DD6C call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042DD71 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18042DD85 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042DD8A mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042DD8D xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18042DD90 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18042DD92 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042DD97 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18042DDAB call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042DDB0 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042DDB3 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18042DDB6 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18042DDB8 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042DDBD int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18042DDD1 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042DDD6 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042DDD9 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18042DDDC xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18042DDDE call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042DDE3 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18042DDF7 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042DDFC mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042DDFF xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18042DE02 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18042DE04 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042DE09 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18042DE1D call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042DE22 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042DE25 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18042DE28 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18042DE2A call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042DE2F int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18042DE43 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042DE48 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042DE4B xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18042DE4E xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18042DE50 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042DE55 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18042DE69 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042DE6E mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042DE71 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18042DE74 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18042DE76 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042DE7B int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18042DE8F call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042DE94 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042DE97 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18042DE9A xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18042DE9C call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042DEA1 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18042DEB5 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042DEBA mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042DEBD xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18042DEC0 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18042DEC2 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042DEC7 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18042DEDB call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042DEE0 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042DEE3 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18042DEE6 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18042DEE8 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042DEED int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18042DF01 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042DF06 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042DF09 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18042DF0C xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18042DF0E call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042DF13 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18042DF27 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042DF2C mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042DF2F xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18042DF32 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18042DF34 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042DF39 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18042DF4D call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042DF52 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042DF55 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18042DF58 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18042DF5A call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042DF5F int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18042DF73 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042DF78 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042DF7B xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18042DF7E xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18042DF80 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042DF85 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18042DF99 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042DF9E mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042DFA1 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18042DFA4 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18042DFA6 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042DFAB int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18042DFBF call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042DFC4 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042DFC7 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18042DFCA xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18042DFCC call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042DFD1 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18042DFE5 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042DFEA mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042DFED xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18042DFF0 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18042DFF2 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042DFF7 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18042E00B call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042E010 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042E013 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18042E016 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18042E018 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042E01D int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18042E031 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042E036 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042E039 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18042E03C xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18042E03E call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042E043 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18042E057 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042E05C mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042E05F xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18042E062 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18042E064 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042E069 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18042E07D call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042E082 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042E085 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18042E088 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18042E08A call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042E08F int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18042E0A3 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042E0A8 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042E0AB xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18042E0AE xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18042E0B0 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042E0B5 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18042E0C9 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042E0CE mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042E0D1 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18042E0D4 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18042E0D6 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042E0DB int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18042E0EF call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042E0F4 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18042E0F7 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18042E0FA xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18042E0FC call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18042E101 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Static Method System.Void Episode3_19Define::.cctor():
		End of function at 0x18042E102
		Absolute End is at 0x18042E102
		Identified Jump Destination addresses:

		0x18042D2E5: Saves the content of rdi to the stack
		0x18042D2EA: Compares {Unknown Global at 0x18183E271, first ten bytes are [124 1 0 195 124 1 0 52 61 103], or as chars "| Ã| 4=g"} and 0
		0x18042D2F1: Jumps to 0x18042D305 if {Unknown Global at 0x18183E271, first ten bytes are [124 1 0 195 124 1 0 52 61 103], or as chars "| Ã| 4=g"} != 0

		0x18042D2F3: Loads string "Ó+" into register rcx as constant {'constant3' (constant value of type Cpp2IL.Core.Analysis.ResultModels.Il2CppString)}
		0x18042D2F9: Attempts to load the il2cpp metadata for this method (method id 0) and init it cpp-side.

		0x18042D305: Loads the type definition for managed type System.Type[] as a constant "Type[]" in rcx
		0x18042D30C: [!] Writes the constant 0x25 into operand 37 (type UInt64) in register rdx
		0x18042D311: [!] Allocates an array of type System.Type[] of size 37 and stores the result as local0 in register rax

		0x18042D316: Loads the type definition for managed type System.Type as a constant "Type" in rcx
		0x18042D31D: Copies {'local0' (type System.Type[])} from rax into rdi
		0x18042D320: Loads the type definition for managed type ESerifEP03_19_other_0000 as a constant "ESerifEP03_19_other_0000" in rbx
		0x18042D327: Compares "{il2cpp field on {'Type' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" and 2
		0x18042D32E: Jumps to 0x18042D33E if "{il2cpp field on {'Type' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" equals 2

		0x18042D330: Compares "{il2cpp field on {'Type' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" and 0
		0x18042D337: Jumps to 0x18042D33E if "{il2cpp field on {'Type' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" != 0

		0x18042D339: Calls the il2cpp cctor for the type System.Type
		0x18042D340: Copies {'ESerifEP03_19_other_0000' (constant value of type Mono.Cecil.TypeReference)} from rbx into rcx
		0x18042D343: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEP03_19_other_0000' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle' (type System.Type)}

		0x18042D348: Copies {'typeFromHandle' (type System.Type)} from rax into rbx
		0x18042D34B: [!] Compares {'local0' (type System.Type[])} and 0
		0x18042D34E: Jumps to 0x18042DBDB (which throws a NRE) if local0 equals 0. Implicitly present in managed code, so ignored here.
		0x18042D354: [!] Compares {'typeFromHandle' (type System.Type)} and 0
		0x18042D357: Jumps to 0x18042D371 (which is an if statement's body) if typeFromHandle equals 0 ;  - Increasing indentation - is standard if, unimportant is False

		0x18042D359: Loads the class pointer from local0 into a constant constant14 in register rdx
		0x18042D35C: Copies {'typeFromHandle' (type System.Type)} from rax into rcx
		0x18042D35F: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18042D368: [!] Compares {'typeFromHandle' (type System.Type)} and 0
		0x18042D36B: Jumps to 0x18042DBE3 if typeFromHandle equals 0 ;  - This is probably a goto, jumping to 0x18042DBE3 which is after end of current block @ 0x18042D371 (started at 0x18042D359)

		0x18042D371: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 1
		0x18042D375: Jumps to 0x18042DBF6 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 1. Implicitly present in managed code, so ignored here.
		0x18042D37B: Sets the value at offset 1 in array local0 to {'typeFromHandle' (type System.Type)}
		0x18042D381: Loads the type definition for managed type ESerifEP03_19_Rend_0000 as a constant "ESerifEP03_19_Rend_0000" in rcx
		0x18042D388: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEP03_19_Rend_0000' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle2' (type System.Type)}

		0x18042D38D: Copies {'typeFromHandle2' (type System.Type)} from rax into rbx
		0x18042D390: [!] Compares {'typeFromHandle2' (type System.Type)} and 0
		0x18042D393: Jumps to 0x18042D3AD if typeFromHandle2 equals 0 ;  - This is probably a goto, jumping to 0x18042D3AD which is after end of current block @ 0x18042D371 (started at 0x18042D359)

		0x18042D395: Loads the class pointer from local0 into a constant constant19 in register rdx
		0x18042D398: Copies {'typeFromHandle2' (type System.Type)} from rax into rcx
		0x18042D39B: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18042D3A4: [!] Compares {'typeFromHandle2' (type System.Type)} and 0
		0x18042D3A7: Jumps to 0x18042DC09 if typeFromHandle2 equals 0 ;  - This is probably a goto, jumping to 0x18042DC09 which is after end of current block @ 0x18042D371 (started at 0x18042D359)

		0x18042D3AD: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 2
		0x18042D3B1: Jumps to 0x18042DC1C (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 2. Implicitly present in managed code, so ignored here.
		0x18042D3B7: Sets the value at offset 2 in array local0 to {'typeFromHandle2' (type System.Type)}
		0x18042D3BD: Loads the type definition for managed type ESerifEP03_19_Pol_0000 as a constant "ESerifEP03_19_Pol_0000" in rcx
		0x18042D3C4: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEP03_19_Pol_0000' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle3' (type System.Type)}

		0x18042D3C9: Copies {'typeFromHandle3' (type System.Type)} from rax into rbx
		0x18042D3CC: [!] Compares {'typeFromHandle3' (type System.Type)} and 0
		0x18042D3CF: Jumps to 0x18042D3E9 if typeFromHandle3 equals 0 ;  - This is probably a goto, jumping to 0x18042D3E9 which is after end of current block @ 0x18042D371 (started at 0x18042D359)

		0x18042D3D1: Loads the class pointer from local0 into a constant constant24 in register rdx
		0x18042D3D4: Copies {'typeFromHandle3' (type System.Type)} from rax into rcx
		0x18042D3D7: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18042D3E0: [!] Compares {'typeFromHandle3' (type System.Type)} and 0
		0x18042D3E3: Jumps to 0x18042DC2F if typeFromHandle3 equals 0 ;  - This is probably a goto, jumping to 0x18042DC2F which is after end of current block @ 0x18042D371 (started at 0x18042D359)

		0x18042D3E9: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 3
		0x18042D3ED: Jumps to 0x18042DC42 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 3. Implicitly present in managed code, so ignored here.
		0x18042D3F3: Sets the value at offset 3 in array local0 to {'typeFromHandle3' (type System.Type)}
		0x18042D3F9: Loads the type definition for managed type ESerifEP03_19_Sce_0000 as a constant "ESerifEP03_19_Sce_0000" in rcx
		0x18042D400: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEP03_19_Sce_0000' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle4' (type System.Type)}

		0x18042D405: Copies {'typeFromHandle4' (type System.Type)} from rax into rbx
		0x18042D408: [!] Compares {'typeFromHandle4' (type System.Type)} and 0
		0x18042D40B: Jumps to 0x18042D425 if typeFromHandle4 equals 0 ;  - This is probably a goto, jumping to 0x18042D425 which is after end of current block @ 0x18042D371 (started at 0x18042D359)

		0x18042D40D: Loads the class pointer from local0 into a constant constant29 in register rdx
		0x18042D410: Copies {'typeFromHandle4' (type System.Type)} from rax into rcx
		0x18042D413: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18042D41C: [!] Compares {'typeFromHandle4' (type System.Type)} and 0
		0x18042D41F: Jumps to 0x18042DC55 if typeFromHandle4 equals 0 ;  - This is probably a goto, jumping to 0x18042DC55 which is after end of current block @ 0x18042D371 (started at 0x18042D359)

		0x18042D425: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 4
		0x18042D429: Jumps to 0x18042DC68 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 4. Implicitly present in managed code, so ignored here.
		0x18042D42F: Sets the value at offset 4 in array local0 to {'typeFromHandle4' (type System.Type)}
		0x18042D435: Loads the type definition for managed type ESerifEP03_19_other_0001 as a constant "ESerifEP03_19_other_0001" in rcx
		0x18042D43C: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEP03_19_other_0001' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle5' (type System.Type)}

		0x18042D441: Copies {'typeFromHandle5' (type System.Type)} from rax into rbx
		0x18042D444: [!] Compares {'typeFromHandle5' (type System.Type)} and 0
		0x18042D447: Jumps to 0x18042D461 if typeFromHandle5 equals 0 ;  - This is probably a goto, jumping to 0x18042D461 which is after end of current block @ 0x18042D371 (started at 0x18042D359)

		0x18042D449: Loads the class pointer from local0 into a constant constant34 in register rdx
		0x18042D44C: Copies {'typeFromHandle5' (type System.Type)} from rax into rcx
		0x18042D44F: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18042D458: [!] Compares {'typeFromHandle5' (type System.Type)} and 0
		0x18042D45B: Jumps to 0x18042DC7B if typeFromHandle5 equals 0 ;  - This is probably a goto, jumping to 0x18042DC7B which is after end of current block @ 0x18042D371 (started at 0x18042D359)

		0x18042D461: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 5
		0x18042D465: Jumps to 0x18042DC8E (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 5. Implicitly present in managed code, so ignored here.
		0x18042D46B: Sets the value at offset 5 in array local0 to {'typeFromHandle5' (type System.Type)}
		0x18042D471: Loads the type definition for managed type ESerifEP03_19_Inter_O_0000 as a constant "ESerifEP03_19_Inter_O_0000" in rcx
		0x18042D478: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEP03_19_Inter_O_0000' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle6' (type System.Type)}

		0x18042D47D: Copies {'typeFromHandle6' (type System.Type)} from rax into rbx
		0x18042D480: [!] Compares {'typeFromHandle6' (type System.Type)} and 0
		0x18042D483: Jumps to 0x18042D49D if typeFromHandle6 equals 0 ;  - This is probably a goto, jumping to 0x18042D49D which is after end of current block @ 0x18042D371 (started at 0x18042D359)

		0x18042D485: Loads the class pointer from local0 into a constant constant39 in register rdx
		0x18042D488: Copies {'typeFromHandle6' (type System.Type)} from rax into rcx
		0x18042D48B: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18042D494: [!] Compares {'typeFromHandle6' (type System.Type)} and 0
		0x18042D497: Jumps to 0x18042DCA1 if typeFromHandle6 equals 0 ;  - This is probably a goto, jumping to 0x18042DCA1 which is after end of current block @ 0x18042D371 (started at 0x18042D359)

		0x18042D49D: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 6
		0x18042D4A1: Jumps to 0x18042DCB4 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 6. Implicitly present in managed code, so ignored here.
		0x18042D4A7: Sets the value at offset 6 in array local0 to {'typeFromHandle6' (type System.Type)}
		0x18042D4AD: Loads the type definition for managed type ESerifEP03_19_Inter_T_0000 as a constant "ESerifEP03_19_Inter_T_0000" in rcx
		0x18042D4B4: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEP03_19_Inter_T_0000' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle7' (type System.Type)}

		0x18042D4B9: Copies {'typeFromHandle7' (type System.Type)} from rax into rbx
		0x18042D4BC: [!] Compares {'typeFromHandle7' (type System.Type)} and 0
		0x18042D4BF: Jumps to 0x18042D4D9 if typeFromHandle7 equals 0 ;  - This is probably a goto, jumping to 0x18042D4D9 which is after end of current block @ 0x18042D371 (started at 0x18042D359)

		0x18042D4C1: Loads the class pointer from local0 into a constant constant44 in register rdx
		0x18042D4C4: Copies {'typeFromHandle7' (type System.Type)} from rax into rcx
		0x18042D4C7: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18042D4D0: [!] Compares {'typeFromHandle7' (type System.Type)} and 0
		0x18042D4D3: Jumps to 0x18042DCC7 if typeFromHandle7 equals 0 ;  - This is probably a goto, jumping to 0x18042DCC7 which is after end of current block @ 0x18042D371 (started at 0x18042D359)

		0x18042D4D9: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 7
		0x18042D4DD: Jumps to 0x18042DCDA (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 7. Implicitly present in managed code, so ignored here.
		0x18042D4E3: Sets the value at offset 7 in array local0 to {'typeFromHandle7' (type System.Type)}
		0x18042D4E9: Loads the type definition for managed type ESerifEP03_19_other_0002 as a constant "ESerifEP03_19_other_0002" in rcx
		0x18042D4F0: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEP03_19_other_0002' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle8' (type System.Type)}

		0x18042D4F5: Copies {'typeFromHandle8' (type System.Type)} from rax into rbx
		0x18042D4F8: [!] Compares {'typeFromHandle8' (type System.Type)} and 0
		0x18042D4FB: Jumps to 0x18042D515 if typeFromHandle8 equals 0 ;  - This is probably a goto, jumping to 0x18042D515 which is after end of current block @ 0x18042D371 (started at 0x18042D359)

		0x18042D4FD: Loads the class pointer from local0 into a constant constant49 in register rdx
		0x18042D500: Copies {'typeFromHandle8' (type System.Type)} from rax into rcx
		0x18042D503: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18042D50C: [!] Compares {'typeFromHandle8' (type System.Type)} and 0
		0x18042D50F: Jumps to 0x18042DCED if typeFromHandle8 equals 0 ;  - This is probably a goto, jumping to 0x18042DCED which is after end of current block @ 0x18042D371 (started at 0x18042D359)

		0x18042D515: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 8
		0x18042D519: Jumps to 0x18042DD00 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 8. Implicitly present in managed code, so ignored here.
		0x18042D51F: Sets the value at offset 8 in array local0 to {'typeFromHandle8' (type System.Type)}
		0x18042D525: Loads the type definition for managed type ESerifEP03_19_Inter_O_0001 as a constant "ESerifEP03_19_Inter_O_0001" in rcx
		0x18042D52C: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEP03_19_Inter_O_0001' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle9' (type System.Type)}

		0x18042D531: Copies {'typeFromHandle9' (type System.Type)} from rax into rbx
		0x18042D534: [!] Compares {'typeFromHandle9' (type System.Type)} and 0
		0x18042D537: Jumps to 0x18042D551 if typeFromHandle9 equals 0 ;  - This is probably a goto, jumping to 0x18042D551 which is after end of current block @ 0x18042D371 (started at 0x18042D359)

		0x18042D539: Loads the class pointer from local0 into a constant constant54 in register rdx
		0x18042D53C: Copies {'typeFromHandle9' (type System.Type)} from rax into rcx
		0x18042D53F: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18042D548: [!] Compares {'typeFromHandle9' (type System.Type)} and 0
		0x18042D54B: Jumps to 0x18042DD13 if typeFromHandle9 equals 0 ;  - This is probably a goto, jumping to 0x18042DD13 which is after end of current block @ 0x18042D371 (started at 0x18042D359)

		0x18042D551: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 9
		0x18042D555: Jumps to 0x18042DD26 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 9. Implicitly present in managed code, so ignored here.
		0x18042D55B: Sets the value at offset 9 in array local0 to {'typeFromHandle9' (type System.Type)}
		0x18042D561: Loads the type definition for managed type ESerifEP03_19_Inter_T_0001 as a constant "ESerifEP03_19_Inter_T_0001" in rcx
		0x18042D568: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEP03_19_Inter_T_0001' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle10' (type System.Type)}

		0x18042D56D: Copies {'typeFromHandle10' (type System.Type)} from rax into rbx
		0x18042D570: [!] Compares {'typeFromHandle10' (type System.Type)} and 0
		0x18042D573: Jumps to 0x18042D58D if typeFromHandle10 equals 0 ;  - This is probably a goto, jumping to 0x18042D58D which is after end of current block @ 0x18042D371 (started at 0x18042D359)

		0x18042D575: Loads the class pointer from local0 into a constant constant59 in register rdx
		0x18042D578: Copies {'typeFromHandle10' (type System.Type)} from rax into rcx
		0x18042D57B: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18042D584: [!] Compares {'typeFromHandle10' (type System.Type)} and 0
		0x18042D587: Jumps to 0x18042DD39 if typeFromHandle10 equals 0 ;  - This is probably a goto, jumping to 0x18042DD39 which is after end of current block @ 0x18042D371 (started at 0x18042D359)

		0x18042D58D: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 10
		0x18042D591: Jumps to 0x18042DD4C (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 10. Implicitly present in managed code, so ignored here.
		0x18042D597: Sets the value at offset 10 in array local0 to {'typeFromHandle10' (type System.Type)}
		0x18042D59D: Loads the type definition for managed type ESerifEP03_19_Inter_O_0002 as a constant "ESerifEP03_19_Inter_O_0002" in rcx
		0x18042D5A4: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEP03_19_Inter_O_0002' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle11' (type System.Type)}

		0x18042D5A9: Copies {'typeFromHandle11' (type System.Type)} from rax into rbx
		0x18042D5AC: [!] Compares {'typeFromHandle11' (type System.Type)} and 0
		0x18042D5AF: Jumps to 0x18042D5C9 if typeFromHandle11 equals 0 ;  - This is probably a goto, jumping to 0x18042D5C9 which is after end of current block @ 0x18042D371 (started at 0x18042D359)

		0x18042D5B1: Loads the class pointer from local0 into a constant constant64 in register rdx
		0x18042D5B4: Copies {'typeFromHandle11' (type System.Type)} from rax into rcx
		0x18042D5B7: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18042D5C0: [!] Compares {'typeFromHandle11' (type System.Type)} and 0
		0x18042D5C3: Jumps to 0x18042DD5F if typeFromHandle11 equals 0 ;  - This is probably a goto, jumping to 0x18042DD5F which is after end of current block @ 0x18042D371 (started at 0x18042D359)

		0x18042D5C9: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 11
		0x18042D5CD: Jumps to 0x18042DD72 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 11. Implicitly present in managed code, so ignored here.
		0x18042D5D3: Sets the value at offset 11 in array local0 to {'typeFromHandle11' (type System.Type)}
		0x18042D5D9: Loads the type definition for managed type ESerifEP03_19_Inter_T_0002 as a constant "ESerifEP03_19_Inter_T_0002" in rcx
		0x18042D5E0: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEP03_19_Inter_T_0002' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle12' (type System.Type)}

		0x18042D5E5: Copies {'typeFromHandle12' (type System.Type)} from rax into rbx
		0x18042D5E8: [!] Compares {'typeFromHandle12' (type System.Type)} and 0
		0x18042D5EB: Jumps to 0x18042D605 if typeFromHandle12 equals 0 ;  - This is probably a goto, jumping to 0x18042D605 which is after end of current block @ 0x18042D371 (started at 0x18042D359)

		0x18042D5ED: Loads the class pointer from local0 into a constant constant69 in register rdx
		0x18042D5F0: Copies {'typeFromHandle12' (type System.Type)} from rax into rcx
		0x18042D5F3: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18042D5FC: [!] Compares {'typeFromHandle12' (type System.Type)} and 0
		0x18042D5FF: Jumps to 0x18042DD85 if typeFromHandle12 equals 0 ;  - This is probably a goto, jumping to 0x18042DD85 which is after end of current block @ 0x18042D371 (started at 0x18042D359)

		0x18042D605: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 12
		0x18042D609: Jumps to 0x18042DD98 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 12. Implicitly present in managed code, so ignored here.
		0x18042D60F: Sets the value at offset 12 in array local0 to {'typeFromHandle12' (type System.Type)}
		0x18042D618: Loads the type definition for managed type ESerifEP03_19_other_0003 as a constant "ESerifEP03_19_other_0003" in rcx
		0x18042D61F: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEP03_19_other_0003' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle13' (type System.Type)}

		0x18042D624: Copies {'typeFromHandle13' (type System.Type)} from rax into rbx
		0x18042D627: [!] Compares {'typeFromHandle13' (type System.Type)} and 0
		0x18042D62A: Jumps to 0x18042D644 if typeFromHandle13 equals 0 ;  - This is probably a goto, jumping to 0x18042D644 which is after end of current block @ 0x18042D371 (started at 0x18042D359)

		0x18042D62C: Loads the class pointer from local0 into a constant constant74 in register rdx
		0x18042D62F: Copies {'typeFromHandle13' (type System.Type)} from rax into rcx
		0x18042D632: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18042D63B: [!] Compares {'typeFromHandle13' (type System.Type)} and 0
		0x18042D63E: Jumps to 0x18042DDAB if typeFromHandle13 equals 0 ;  - This is probably a goto, jumping to 0x18042DDAB which is after end of current block @ 0x18042D371 (started at 0x18042D359)

		0x18042D644: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 13
		0x18042D648: Jumps to 0x18042DDBE (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 13. Implicitly present in managed code, so ignored here.
		0x18042D64E: Sets the value at offset 13 in array local0 to {'typeFromHandle13' (type System.Type)}
		0x18042D657: Loads the type definition for managed type ESerifEP03_19_Inter_O_0003 as a constant "ESerifEP03_19_Inter_O_0003" in rcx
		0x18042D65E: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEP03_19_Inter_O_0003' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle14' (type System.Type)}

		0x18042D663: Copies {'typeFromHandle14' (type System.Type)} from rax into rbx
		0x18042D666: [!] Compares {'typeFromHandle14' (type System.Type)} and 0
		0x18042D669: Jumps to 0x18042D683 if typeFromHandle14 equals 0 ;  - This is probably a goto, jumping to 0x18042D683 which is after end of current block @ 0x18042D371 (started at 0x18042D359)

		0x18042D66B: Loads the class pointer from local0 into a constant constant79 in register rdx
		0x18042D66E: Copies {'typeFromHandle14' (type System.Type)} from rax into rcx
		0x18042D671: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18042D67A: [!] Compares {'typeFromHandle14' (type System.Type)} and 0
		0x18042D67D: Jumps to 0x18042DDD1 if typeFromHandle14 equals 0 ;  - This is probably a goto, jumping to 0x18042DDD1 which is after end of current block @ 0x18042D371 (started at 0x18042D359)

		0x18042D683: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 14
		0x18042D687: Jumps to 0x18042DDE4 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 14. Implicitly present in managed code, so ignored here.
		0x18042D68D: Sets the value at offset 14 in array local0 to {'typeFromHandle14' (type System.Type)}
		0x18042D696: Loads the type definition for managed type ESerifEP03_19_Inter_T_0003 as a constant "ESerifEP03_19_Inter_T_0003" in rcx
		0x18042D69D: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEP03_19_Inter_T_0003' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle15' (type System.Type)}

		0x18042D6A2: Copies {'typeFromHandle15' (type System.Type)} from rax into rbx
		0x18042D6A5: [!] Compares {'typeFromHandle15' (type System.Type)} and 0
		0x18042D6A8: Jumps to 0x18042D6C2 if typeFromHandle15 equals 0 ;  - This is probably a goto, jumping to 0x18042D6C2 which is after end of current block @ 0x18042D371 (started at 0x18042D359)

		0x18042D6AA: Loads the class pointer from local0 into a constant constant84 in register rdx
		0x18042D6AD: Copies {'typeFromHandle15' (type System.Type)} from rax into rcx
		0x18042D6B0: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18042D6B9: [!] Compares {'typeFromHandle15' (type System.Type)} and 0
		0x18042D6BC: Jumps to 0x18042DDF7 if typeFromHandle15 equals 0 ;  - This is probably a goto, jumping to 0x18042DDF7 which is after end of current block @ 0x18042D371 (started at 0x18042D359)

		0x18042D6C2: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 15
		0x18042D6C6: Jumps to 0x18042DE0A (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 15. Implicitly present in managed code, so ignored here.
		0x18042D6CC: Sets the value at offset 15 in array local0 to {'typeFromHandle15' (type System.Type)}
		0x18042D6D5: Loads the type definition for managed type ESerifEP03_19_Sce_0001 as a constant "ESerifEP03_19_Sce_0001" in rcx
		0x18042D6DC: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEP03_19_Sce_0001' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle16' (type System.Type)}

		0x18042D6E1: Copies {'typeFromHandle16' (type System.Type)} from rax into rbx
		0x18042D6E4: [!] Compares {'typeFromHandle16' (type System.Type)} and 0
		0x18042D6E7: Jumps to 0x18042D701 if typeFromHandle16 equals 0 ;  - This is probably a goto, jumping to 0x18042D701 which is after end of current block @ 0x18042D371 (started at 0x18042D359)

		0x18042D6E9: Loads the class pointer from local0 into a constant constant89 in register rdx
		0x18042D6EC: Copies {'typeFromHandle16' (type System.Type)} from rax into rcx
		0x18042D6EF: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18042D6F8: [!] Compares {'typeFromHandle16' (type System.Type)} and 0
		0x18042D6FB: Jumps to 0x18042DE1D if typeFromHandle16 equals 0 ;  - This is probably a goto, jumping to 0x18042DE1D which is after end of current block @ 0x18042D371 (started at 0x18042D359)

		0x18042D701: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 16
		0x18042D705: Jumps to 0x18042DE30 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 16. Implicitly present in managed code, so ignored here.
		0x18042D70B: Sets the value at offset 16 in array local0 to {'typeFromHandle16' (type System.Type)}
		0x18042D714: Loads the type definition for managed type ESerifEP03_19_other_0004 as a constant "ESerifEP03_19_other_0004" in rcx
		0x18042D71B: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEP03_19_other_0004' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle17' (type System.Type)}

		0x18042D720: Copies {'typeFromHandle17' (type System.Type)} from rax into rbx
		0x18042D723: [!] Compares {'typeFromHandle17' (type System.Type)} and 0
		0x18042D726: Jumps to 0x18042D740 if typeFromHandle17 equals 0 ;  - This is probably a goto, jumping to 0x18042D740 which is after end of current block @ 0x18042D371 (started at 0x18042D359)

		0x18042D728: Loads the class pointer from local0 into a constant constant94 in register rdx
		0x18042D72B: Copies {'typeFromHandle17' (type System.Type)} from rax into rcx
		0x18042D72E: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18042D737: [!] Compares {'typeFromHandle17' (type System.Type)} and 0
		0x18042D73A: Jumps to 0x18042DE43 if typeFromHandle17 equals 0 ;  - This is probably a goto, jumping to 0x18042DE43 which is after end of current block @ 0x18042D371 (started at 0x18042D359)

		0x18042D740: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 17
		0x18042D744: Jumps to 0x18042DE56 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 17. Implicitly present in managed code, so ignored here.
		0x18042D74A: Sets the value at offset 17 in array local0 to {'typeFromHandle17' (type System.Type)}
		0x18042D753: Loads the type definition for managed type ESerifEP03_19_other_0005 as a constant "ESerifEP03_19_other_0005" in rcx
		0x18042D75A: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEP03_19_other_0005' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle18' (type System.Type)}

		0x18042D75F: Copies {'typeFromHandle18' (type System.Type)} from rax into rbx
		0x18042D762: [!] Compares {'typeFromHandle18' (type System.Type)} and 0
		0x18042D765: Jumps to 0x18042D77F if typeFromHandle18 equals 0 ;  - This is probably a goto, jumping to 0x18042D77F which is after end of current block @ 0x18042D371 (started at 0x18042D359)

		0x18042D767: Loads the class pointer from local0 into a constant constant99 in register rdx
		0x18042D76A: Copies {'typeFromHandle18' (type System.Type)} from rax into rcx
		0x18042D76D: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18042D776: [!] Compares {'typeFromHandle18' (type System.Type)} and 0
		0x18042D779: Jumps to 0x18042DE69 if typeFromHandle18 equals 0 ;  - This is probably a goto, jumping to 0x18042DE69 which is after end of current block @ 0x18042D371 (started at 0x18042D359)

		0x18042D77F: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 18
		0x18042D783: Jumps to 0x18042DE7C (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 18. Implicitly present in managed code, so ignored here.
		0x18042D789: Sets the value at offset 18 in array local0 to {'typeFromHandle18' (type System.Type)}
		0x18042D792: Loads the type definition for managed type ESerifEP03_19_other_0006 as a constant "ESerifEP03_19_other_0006" in rcx
		0x18042D799: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEP03_19_other_0006' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle19' (type System.Type)}

		0x18042D79E: Copies {'typeFromHandle19' (type System.Type)} from rax into rbx
		0x18042D7A1: [!] Compares {'typeFromHandle19' (type System.Type)} and 0
		0x18042D7A4: Jumps to 0x18042D7BE if typeFromHandle19 equals 0 ;  - This is probably a goto, jumping to 0x18042D7BE which is after end of current block @ 0x18042D371 (started at 0x18042D359)

		0x18042D7A6: Loads the class pointer from local0 into a constant constant104 in register rdx
		0x18042D7A9: Copies {'typeFromHandle19' (type System.Type)} from rax into rcx
		0x18042D7AC: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18042D7B5: [!] Compares {'typeFromHandle19' (type System.Type)} and 0
		0x18042D7B8: Jumps to 0x18042DE8F if typeFromHandle19 equals 0 ;  - This is probably a goto, jumping to 0x18042DE8F which is after end of current block @ 0x18042D371 (started at 0x18042D359)

		0x18042D7BE: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 19
		0x18042D7C2: Jumps to 0x18042DEA2 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 19. Implicitly present in managed code, so ignored here.
		0x18042D7C8: Sets the value at offset 19 in array local0 to {'typeFromHandle19' (type System.Type)}
		0x18042D7D1: Loads the type definition for managed type ESerifEP03_19_Sce_0002 as a constant "ESerifEP03_19_Sce_0002" in rcx
		0x18042D7D8: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEP03_19_Sce_0002' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle20' (type System.Type)}

		0x18042D7DD: Copies {'typeFromHandle20' (type System.Type)} from rax into rbx
		0x18042D7E0: [!] Compares {'typeFromHandle20' (type System.Type)} and 0
		0x18042D7E3: Jumps to 0x18042D7FD if typeFromHandle20 equals 0 ;  - This is probably a goto, jumping to 0x18042D7FD which is after end of current block @ 0x18042D371 (started at 0x18042D359)

		0x18042D7E5: Loads the class pointer from local0 into a constant constant109 in register rdx
		0x18042D7E8: Copies {'typeFromHandle20' (type System.Type)} from rax into rcx
		0x18042D7EB: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18042D7F4: [!] Compares {'typeFromHandle20' (type System.Type)} and 0
		0x18042D7F7: Jumps to 0x18042DEB5 if typeFromHandle20 equals 0 ;  - This is probably a goto, jumping to 0x18042DEB5 which is after end of current block @ 0x18042D371 (started at 0x18042D359)

		0x18042D7FD: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 20
		0x18042D801: Jumps to 0x18042DEC8 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 20. Implicitly present in managed code, so ignored here.
		0x18042D807: Sets the value at offset 20 in array local0 to {'typeFromHandle20' (type System.Type)}
		0x18042D810: Loads the type definition for managed type ESerifEP03_19_other_0007 as a constant "ESerifEP03_19_other_0007" in rcx
		0x18042D817: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEP03_19_other_0007' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle21' (type System.Type)}

		0x18042D81C: Copies {'typeFromHandle21' (type System.Type)} from rax into rbx
		0x18042D81F: [!] Compares {'typeFromHandle21' (type System.Type)} and 0
		0x18042D822: Jumps to 0x18042D83C if typeFromHandle21 equals 0 ;  - This is probably a goto, jumping to 0x18042D83C which is after end of current block @ 0x18042D371 (started at 0x18042D359)

		0x18042D824: Loads the class pointer from local0 into a constant constant114 in register rdx
		0x18042D827: Copies {'typeFromHandle21' (type System.Type)} from rax into rcx
		0x18042D82A: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18042D833: [!] Compares {'typeFromHandle21' (type System.Type)} and 0
		0x18042D836: Jumps to 0x18042DEDB if typeFromHandle21 equals 0 ;  - This is probably a goto, jumping to 0x18042DEDB which is after end of current block @ 0x18042D371 (started at 0x18042D359)

		0x18042D83C: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 21
		0x18042D840: Jumps to 0x18042DEEE (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 21. Implicitly present in managed code, so ignored here.
		0x18042D846: Sets the value at offset 21 in array local0 to {'typeFromHandle21' (type System.Type)}
		0x18042D84F: Loads the type definition for managed type ESerifEP03_19_Inter_O_0004 as a constant "ESerifEP03_19_Inter_O_0004" in rcx
		0x18042D856: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEP03_19_Inter_O_0004' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle22' (type System.Type)}

		0x18042D85B: Copies {'typeFromHandle22' (type System.Type)} from rax into rbx
		0x18042D85E: [!] Compares {'typeFromHandle22' (type System.Type)} and 0
		0x18042D861: Jumps to 0x18042D87B if typeFromHandle22 equals 0 ;  - This is probably a goto, jumping to 0x18042D87B which is after end of current block @ 0x18042D371 (started at 0x18042D359)

		0x18042D863: Loads the class pointer from local0 into a constant constant119 in register rdx
		0x18042D866: Copies {'typeFromHandle22' (type System.Type)} from rax into rcx
		0x18042D869: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18042D872: [!] Compares {'typeFromHandle22' (type System.Type)} and 0
		0x18042D875: Jumps to 0x18042DF01 if typeFromHandle22 equals 0 ;  - This is probably a goto, jumping to 0x18042DF01 which is after end of current block @ 0x18042D371 (started at 0x18042D359)

		0x18042D87B: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 22
		0x18042D87F: Jumps to 0x18042DF14 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 22. Implicitly present in managed code, so ignored here.
		0x18042D885: Sets the value at offset 22 in array local0 to {'typeFromHandle22' (type System.Type)}
		0x18042D88E: Loads the type definition for managed type ESerifEP03_19_Inter_T_0004 as a constant "ESerifEP03_19_Inter_T_0004" in rcx
		0x18042D895: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEP03_19_Inter_T_0004' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle23' (type System.Type)}

		0x18042D89A: Copies {'typeFromHandle23' (type System.Type)} from rax into rbx
		0x18042D89D: [!] Compares {'typeFromHandle23' (type System.Type)} and 0
		0x18042D8A0: Jumps to 0x18042D8BA if typeFromHandle23 equals 0 ;  - This is probably a goto, jumping to 0x18042D8BA which is after end of current block @ 0x18042D371 (started at 0x18042D359)

		0x18042D8A2: Loads the class pointer from local0 into a constant constant124 in register rdx
		0x18042D8A5: Copies {'typeFromHandle23' (type System.Type)} from rax into rcx
		0x18042D8A8: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18042D8B1: [!] Compares {'typeFromHandle23' (type System.Type)} and 0
		0x18042D8B4: Jumps to 0x18042DF27 if typeFromHandle23 equals 0 ;  - This is probably a goto, jumping to 0x18042DF27 which is after end of current block @ 0x18042D371 (started at 0x18042D359)

		0x18042D8BA: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 23
		0x18042D8BE: Jumps to 0x18042DF3A (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 23. Implicitly present in managed code, so ignored here.
		0x18042D8C4: Sets the value at offset 23 in array local0 to {'typeFromHandle23' (type System.Type)}
		0x18042D8CD: Loads the type definition for managed type ESerifEP03_19_Inter_O_0005 as a constant "ESerifEP03_19_Inter_O_0005" in rcx
		0x18042D8D4: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEP03_19_Inter_O_0005' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle24' (type System.Type)}

		0x18042D8D9: Copies {'typeFromHandle24' (type System.Type)} from rax into rbx
		0x18042D8DC: [!] Compares {'typeFromHandle24' (type System.Type)} and 0
		0x18042D8DF: Jumps to 0x18042D8F9 if typeFromHandle24 equals 0 ;  - This is probably a goto, jumping to 0x18042D8F9 which is after end of current block @ 0x18042D371 (started at 0x18042D359)

		0x18042D8E1: Loads the class pointer from local0 into a constant constant129 in register rdx
		0x18042D8E4: Copies {'typeFromHandle24' (type System.Type)} from rax into rcx
		0x18042D8E7: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18042D8F0: [!] Compares {'typeFromHandle24' (type System.Type)} and 0
		0x18042D8F3: Jumps to 0x18042DF4D if typeFromHandle24 equals 0 ;  - This is probably a goto, jumping to 0x18042DF4D which is after end of current block @ 0x18042D371 (started at 0x18042D359)

		0x18042D8F9: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 24
		0x18042D8FD: Jumps to 0x18042DF60 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 24. Implicitly present in managed code, so ignored here.
		0x18042D903: Sets the value at offset 24 in array local0 to {'typeFromHandle24' (type System.Type)}
		0x18042D90C: Loads the type definition for managed type ESerifEP03_19_Inter_T_0005 as a constant "ESerifEP03_19_Inter_T_0005" in rcx
		0x18042D913: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEP03_19_Inter_T_0005' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle25' (type System.Type)}

		0x18042D918: Copies {'typeFromHandle25' (type System.Type)} from rax into rbx
		0x18042D91B: [!] Compares {'typeFromHandle25' (type System.Type)} and 0
		0x18042D91E: Jumps to 0x18042D938 if typeFromHandle25 equals 0 ;  - This is probably a goto, jumping to 0x18042D938 which is after end of current block @ 0x18042D371 (started at 0x18042D359)

		0x18042D920: Loads the class pointer from local0 into a constant constant134 in register rdx
		0x18042D923: Copies {'typeFromHandle25' (type System.Type)} from rax into rcx
		0x18042D926: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18042D92F: [!] Compares {'typeFromHandle25' (type System.Type)} and 0
		0x18042D932: Jumps to 0x18042DF73 if typeFromHandle25 equals 0 ;  - This is probably a goto, jumping to 0x18042DF73 which is after end of current block @ 0x18042D371 (started at 0x18042D359)

		0x18042D938: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 25
		0x18042D93C: Jumps to 0x18042DF86 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 25. Implicitly present in managed code, so ignored here.
		0x18042D942: Sets the value at offset 25 in array local0 to {'typeFromHandle25' (type System.Type)}
		0x18042D94B: Loads the type definition for managed type ESerifEP03_19_other_0008 as a constant "ESerifEP03_19_other_0008" in rcx
		0x18042D952: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEP03_19_other_0008' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle26' (type System.Type)}

		0x18042D957: Copies {'typeFromHandle26' (type System.Type)} from rax into rbx
		0x18042D95A: [!] Compares {'typeFromHandle26' (type System.Type)} and 0
		0x18042D95D: Jumps to 0x18042D977 if typeFromHandle26 equals 0 ;  - This is probably a goto, jumping to 0x18042D977 which is after end of current block @ 0x18042D371 (started at 0x18042D359)

		0x18042D95F: Loads the class pointer from local0 into a constant constant139 in register rdx
		0x18042D962: Copies {'typeFromHandle26' (type System.Type)} from rax into rcx
		0x18042D965: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18042D96E: [!] Compares {'typeFromHandle26' (type System.Type)} and 0
		0x18042D971: Jumps to 0x18042DF99 if typeFromHandle26 equals 0 ;  - This is probably a goto, jumping to 0x18042DF99 which is after end of current block @ 0x18042D371 (started at 0x18042D359)

		0x18042D977: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 26
		0x18042D97B: Jumps to 0x18042DFAC (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 26. Implicitly present in managed code, so ignored here.
		0x18042D981: Sets the value at offset 26 in array local0 to {'typeFromHandle26' (type System.Type)}
		0x18042D98A: Loads the type definition for managed type ESerifEP03_19_Inter_O_0006 as a constant "ESerifEP03_19_Inter_O_0006" in rcx
		0x18042D991: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEP03_19_Inter_O_0006' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle27' (type System.Type)}

		0x18042D996: Copies {'typeFromHandle27' (type System.Type)} from rax into rbx
		0x18042D999: [!] Compares {'typeFromHandle27' (type System.Type)} and 0
		0x18042D99C: Jumps to 0x18042D9B6 if typeFromHandle27 equals 0 ;  - This is probably a goto, jumping to 0x18042D9B6 which is after end of current block @ 0x18042D371 (started at 0x18042D359)

		0x18042D99E: Loads the class pointer from local0 into a constant constant144 in register rdx
		0x18042D9A1: Copies {'typeFromHandle27' (type System.Type)} from rax into rcx
		0x18042D9A4: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18042D9AD: [!] Compares {'typeFromHandle27' (type System.Type)} and 0
		0x18042D9B0: Jumps to 0x18042DFBF if typeFromHandle27 equals 0 ;  - This is probably a goto, jumping to 0x18042DFBF which is after end of current block @ 0x18042D371 (started at 0x18042D359)

		0x18042D9B6: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 27
		0x18042D9BA: Jumps to 0x18042DFD2 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 27. Implicitly present in managed code, so ignored here.
		0x18042D9C0: Sets the value at offset 27 in array local0 to {'typeFromHandle27' (type System.Type)}
		0x18042D9C9: Loads the type definition for managed type ESerifEP03_19_Inter_T_0006 as a constant "ESerifEP03_19_Inter_T_0006" in rcx
		0x18042D9D0: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEP03_19_Inter_T_0006' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle28' (type System.Type)}

		0x18042D9D5: Copies {'typeFromHandle28' (type System.Type)} from rax into rbx
		0x18042D9D8: [!] Compares {'typeFromHandle28' (type System.Type)} and 0
		0x18042D9DB: Jumps to 0x18042D9F5 if typeFromHandle28 equals 0 ;  - This is probably a goto, jumping to 0x18042D9F5 which is after end of current block @ 0x18042D371 (started at 0x18042D359)

		0x18042D9DD: Loads the class pointer from local0 into a constant constant149 in register rdx
		0x18042D9E0: Copies {'typeFromHandle28' (type System.Type)} from rax into rcx
		0x18042D9E3: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18042D9EC: [!] Compares {'typeFromHandle28' (type System.Type)} and 0
		0x18042D9EF: Jumps to 0x18042DFE5 if typeFromHandle28 equals 0 ;  - This is probably a goto, jumping to 0x18042DFE5 which is after end of current block @ 0x18042D371 (started at 0x18042D359)

		0x18042D9F5: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 28
		0x18042D9F9: Jumps to 0x18042DFF8 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 28. Implicitly present in managed code, so ignored here.
		0x18042D9FF: Sets the value at offset 28 in array local0 to {'typeFromHandle28' (type System.Type)}
		0x18042DA08: Loads the type definition for managed type ESerifEP03_19_Sce_0003 as a constant "ESerifEP03_19_Sce_0003" in rcx
		0x18042DA0F: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEP03_19_Sce_0003' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle29' (type System.Type)}

		0x18042DA14: Copies {'typeFromHandle29' (type System.Type)} from rax into rbx
		0x18042DA17: [!] Compares {'typeFromHandle29' (type System.Type)} and 0
		0x18042DA1A: Jumps to 0x18042DA34 if typeFromHandle29 equals 0 ;  - This is probably a goto, jumping to 0x18042DA34 which is after end of current block @ 0x18042D371 (started at 0x18042D359)

		0x18042DA1C: Loads the class pointer from local0 into a constant constant154 in register rdx
		0x18042DA1F: Copies {'typeFromHandle29' (type System.Type)} from rax into rcx
		0x18042DA22: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18042DA2B: [!] Compares {'typeFromHandle29' (type System.Type)} and 0
		0x18042DA2E: Jumps to 0x18042E00B if typeFromHandle29 equals 0 ;  - This is probably a goto, jumping to 0x18042E00B which is after end of current block @ 0x18042D371 (started at 0x18042D359)

		0x18042DA34: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 29
		0x18042DA38: Jumps to 0x18042E01E (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 29. Implicitly present in managed code, so ignored here.
		0x18042DA3E: Sets the value at offset 29 in array local0 to {'typeFromHandle29' (type System.Type)}
		0x18042DA47: Loads the type definition for managed type ESerifEP03_19_Sce_0004 as a constant "ESerifEP03_19_Sce_0004" in rcx
		0x18042DA4E: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEP03_19_Sce_0004' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle30' (type System.Type)}

		0x18042DA53: Copies {'typeFromHandle30' (type System.Type)} from rax into rbx
		0x18042DA56: [!] Compares {'typeFromHandle30' (type System.Type)} and 0
		0x18042DA59: Jumps to 0x18042DA73 if typeFromHandle30 equals 0 ;  - This is probably a goto, jumping to 0x18042DA73 which is after end of current block @ 0x18042D371 (started at 0x18042D359)

		0x18042DA5B: Loads the class pointer from local0 into a constant constant159 in register rdx
		0x18042DA5E: Copies {'typeFromHandle30' (type System.Type)} from rax into rcx
		0x18042DA61: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18042DA6A: [!] Compares {'typeFromHandle30' (type System.Type)} and 0
		0x18042DA6D: Jumps to 0x18042E031 if typeFromHandle30 equals 0 ;  - This is probably a goto, jumping to 0x18042E031 which is after end of current block @ 0x18042D371 (started at 0x18042D359)

		0x18042DA73: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 30
		0x18042DA77: Jumps to 0x18042E044 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 30. Implicitly present in managed code, so ignored here.
		0x18042DA7D: Sets the value at offset 30 in array local0 to {'typeFromHandle30' (type System.Type)}
		0x18042DA86: Loads the type definition for managed type ESerifEP03_19_Sce_0004_1 as a constant "ESerifEP03_19_Sce_0004_1" in rcx
		0x18042DA8D: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEP03_19_Sce_0004_1' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle31' (type System.Type)}

		0x18042DA92: Copies {'typeFromHandle31' (type System.Type)} from rax into rbx
		0x18042DA95: [!] Compares {'typeFromHandle31' (type System.Type)} and 0
		0x18042DA98: Jumps to 0x18042DAB2 if typeFromHandle31 equals 0 ;  - This is probably a goto, jumping to 0x18042DAB2 which is after end of current block @ 0x18042D371 (started at 0x18042D359)

		0x18042DA9A: Loads the class pointer from local0 into a constant constant164 in register rdx
		0x18042DA9D: Copies {'typeFromHandle31' (type System.Type)} from rax into rcx
		0x18042DAA0: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18042DAA9: [!] Compares {'typeFromHandle31' (type System.Type)} and 0
		0x18042DAAC: Jumps to 0x18042E057 if typeFromHandle31 equals 0 ;  - This is probably a goto, jumping to 0x18042E057 which is after end of current block @ 0x18042D371 (started at 0x18042D359)

		0x18042DAB2: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 31
		0x18042DAB6: Jumps to 0x18042E06A (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 31. Implicitly present in managed code, so ignored here.
		0x18042DABC: Sets the value at offset 31 in array local0 to {'typeFromHandle31' (type System.Type)}
		0x18042DAC5: Loads the type definition for managed type ESerifEP03_19_Sce_0004_2 as a constant "ESerifEP03_19_Sce_0004_2" in rcx
		0x18042DACC: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEP03_19_Sce_0004_2' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle32' (type System.Type)}

		0x18042DAD1: Copies {'typeFromHandle32' (type System.Type)} from rax into rbx
		0x18042DAD4: [!] Compares {'typeFromHandle32' (type System.Type)} and 0
		0x18042DAD7: Jumps to 0x18042DAF1 if typeFromHandle32 equals 0 ;  - This is probably a goto, jumping to 0x18042DAF1 which is after end of current block @ 0x18042D371 (started at 0x18042D359)

		0x18042DAD9: Loads the class pointer from local0 into a constant constant169 in register rdx
		0x18042DADC: Copies {'typeFromHandle32' (type System.Type)} from rax into rcx
		0x18042DADF: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18042DAE8: [!] Compares {'typeFromHandle32' (type System.Type)} and 0
		0x18042DAEB: Jumps to 0x18042E07D if typeFromHandle32 equals 0 ;  - This is probably a goto, jumping to 0x18042E07D which is after end of current block @ 0x18042D371 (started at 0x18042D359)

		0x18042DAF1: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 32
		0x18042DAF5: Jumps to 0x18042E090 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 32. Implicitly present in managed code, so ignored here.
		0x18042DAFB: Sets the value at offset 32 in array local0 to {'typeFromHandle32' (type System.Type)}
		0x18042DB04: Loads the type definition for managed type ESerifEP03_19_Sce_0004_3 as a constant "ESerifEP03_19_Sce_0004_3" in rcx
		0x18042DB0B: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEP03_19_Sce_0004_3' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle33' (type System.Type)}

		0x18042DB10: Copies {'typeFromHandle33' (type System.Type)} from rax into rbx
		0x18042DB13: [!] Compares {'typeFromHandle33' (type System.Type)} and 0
		0x18042DB16: Jumps to 0x18042DB30 if typeFromHandle33 equals 0 ;  - This is probably a goto, jumping to 0x18042DB30 which is after end of current block @ 0x18042D371 (started at 0x18042D359)

		0x18042DB18: Loads the class pointer from local0 into a constant constant174 in register rdx
		0x18042DB1B: Copies {'typeFromHandle33' (type System.Type)} from rax into rcx
		0x18042DB1E: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18042DB27: [!] Compares {'typeFromHandle33' (type System.Type)} and 0
		0x18042DB2A: Jumps to 0x18042E0A3 if typeFromHandle33 equals 0 ;  - This is probably a goto, jumping to 0x18042E0A3 which is after end of current block @ 0x18042D371 (started at 0x18042D359)

		0x18042DB30: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 33
		0x18042DB34: Jumps to 0x18042E0B6 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 33. Implicitly present in managed code, so ignored here.
		0x18042DB3A: Sets the value at offset 33 in array local0 to {'typeFromHandle33' (type System.Type)}
		0x18042DB43: Loads the type definition for managed type ESerifEP03_19_Inter_O_0007 as a constant "ESerifEP03_19_Inter_O_0007" in rcx
		0x18042DB4A: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEP03_19_Inter_O_0007' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle34' (type System.Type)}

		0x18042DB4F: Copies {'typeFromHandle34' (type System.Type)} from rax into rbx
		0x18042DB52: [!] Compares {'typeFromHandle34' (type System.Type)} and 0
		0x18042DB55: Jumps to 0x18042DB6F if typeFromHandle34 equals 0 ;  - This is probably a goto, jumping to 0x18042DB6F which is after end of current block @ 0x18042D371 (started at 0x18042D359)

		0x18042DB57: Loads the class pointer from local0 into a constant constant179 in register rdx
		0x18042DB5A: Copies {'typeFromHandle34' (type System.Type)} from rax into rcx
		0x18042DB5D: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18042DB66: [!] Compares {'typeFromHandle34' (type System.Type)} and 0
		0x18042DB69: Jumps to 0x18042E0C9 if typeFromHandle34 equals 0 ;  - This is probably a goto, jumping to 0x18042E0C9 which is after end of current block @ 0x18042D371 (started at 0x18042D359)

		0x18042DB6F: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 34
		0x18042DB73: Jumps to 0x18042E0DC (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 34. Implicitly present in managed code, so ignored here.
		0x18042DB79: Sets the value at offset 34 in array local0 to {'typeFromHandle34' (type System.Type)}
		0x18042DB82: Loads the type definition for managed type ESerifEP03_19_Inter_T_0007 as a constant "ESerifEP03_19_Inter_T_0007" in rcx
		0x18042DB89: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEP03_19_Inter_T_0007' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle35' (type System.Type)}

		0x18042DB8E: Copies {'typeFromHandle35' (type System.Type)} from rax into rbx
		0x18042DB91: [!] Compares {'typeFromHandle35' (type System.Type)} and 0
		0x18042DB94: Jumps to 0x18042DBAE if typeFromHandle35 equals 0 ;  - This is probably a goto, jumping to 0x18042DBAE which is after end of current block @ 0x18042D371 (started at 0x18042D359)

		0x18042DB96: Loads the class pointer from local0 into a constant constant184 in register rdx
		0x18042DB99: Copies {'typeFromHandle35' (type System.Type)} from rax into rcx
		0x18042DB9C: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18042DBA5: [!] Compares {'typeFromHandle35' (type System.Type)} and 0
		0x18042DBA8: Jumps to 0x18042E0EF if typeFromHandle35 equals 0 ;  - This is probably a goto, jumping to 0x18042E0EF which is after end of current block @ 0x18042D371 (started at 0x18042D359)

		0x18042DBAE: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 35
		0x18042DBB2: Jumps to 0x18042E102 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 35. Implicitly present in managed code, so ignored here.
		0x18042DBB8: Sets the value at offset 35 in array local0 to {'typeFromHandle35' (type System.Type)}
		0x18042DBBF: Loads the type definition for managed type Episode3_19Define as a constant "Episode3_19Define" in rax
		0x18042DBC6: Reads unknown value in stack, offset 48 (0x30) and stores the pointer in register rbx as new constant constant188
		0x18042DBCB: Loads the pointer to the static fields for Episode3_19Define and stores it in constant189 in register rcx
		0x18042DBD2: [!] Sets static field . to {'local0' (type System.Type[])}
		0x18042DBDA: [!] Returns from the function

		0x18042DBDD: [!] Constructs and throws an exception of kind System.NullReferenceException

		0x18042DBE8: Copies {'local72' (type System.NullReferenceException)} from rax into rcx
		0x18042DC0E: Copies {'local72' (type System.NullReferenceException)} from rax into rcx
		0x18042DC34: Copies {'local72' (type System.NullReferenceException)} from rax into rcx
		0x18042DC5A: Copies {'local72' (type System.NullReferenceException)} from rax into rcx
		0x18042DC80: Copies {'local72' (type System.NullReferenceException)} from rax into rcx
		0x18042DCA6: Copies {'local72' (type System.NullReferenceException)} from rax into rcx
		0x18042DCCC: Copies {'local72' (type System.NullReferenceException)} from rax into rcx
		0x18042DCF2: Copies {'local72' (type System.NullReferenceException)} from rax into rcx
		0x18042DD18: Copies {'local72' (type System.NullReferenceException)} from rax into rcx
		0x18042DD3E: Copies {'local72' (type System.NullReferenceException)} from rax into rcx
		0x18042DD64: Copies {'local72' (type System.NullReferenceException)} from rax into rcx
		0x18042DD8A: Copies {'local72' (type System.NullReferenceException)} from rax into rcx
		0x18042DDB0: Copies {'local72' (type System.NullReferenceException)} from rax into rcx
		0x18042DDD6: Copies {'local72' (type System.NullReferenceException)} from rax into rcx
		0x18042DDFC: Copies {'local72' (type System.NullReferenceException)} from rax into rcx
		0x18042DE22: Copies {'local72' (type System.NullReferenceException)} from rax into rcx
		0x18042DE48: Copies {'local72' (type System.NullReferenceException)} from rax into rcx
		0x18042DE6E: Copies {'local72' (type System.NullReferenceException)} from rax into rcx
		0x18042DE94: Copies {'local72' (type System.NullReferenceException)} from rax into rcx
		0x18042DEBA: Copies {'local72' (type System.NullReferenceException)} from rax into rcx
		0x18042DEE0: Copies {'local72' (type System.NullReferenceException)} from rax into rcx
		0x18042DF06: Copies {'local72' (type System.NullReferenceException)} from rax into rcx
		0x18042DF2C: Copies {'local72' (type System.NullReferenceException)} from rax into rcx
		0x18042DF52: Copies {'local72' (type System.NullReferenceException)} from rax into rcx
		0x18042DF78: Copies {'local72' (type System.NullReferenceException)} from rax into rcx
		0x18042DF9E: Copies {'local72' (type System.NullReferenceException)} from rax into rcx
		0x18042DFC4: Copies {'local72' (type System.NullReferenceException)} from rax into rcx
		0x18042DFEA: Copies {'local72' (type System.NullReferenceException)} from rax into rcx
		0x18042E010: Copies {'local72' (type System.NullReferenceException)} from rax into rcx
		0x18042E036: Copies {'local72' (type System.NullReferenceException)} from rax into rcx
		0x18042E05C: Copies {'local72' (type System.NullReferenceException)} from rax into rcx
		0x18042E082: Copies {'local72' (type System.NullReferenceException)} from rax into rcx
		0x18042E0A8: Copies {'local72' (type System.NullReferenceException)} from rax into rcx
		0x18042E0CE: Copies {'local72' (type System.NullReferenceException)} from rax into rcx
		0x18042E0F4: Copies {'local72' (type System.NullReferenceException)} from rax into rcx



	Generated Pseudocode:

	Declaring Type: Episode3_19Define
	static System.Void .cctor()
		System.Type[] local0 = new System.Type[37]

		System.Type typeFromHandle = System.Type.GetTypeFromHandle({'ESerifEP03_19_other_0000' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle != 0)

		    if (typeFromHandle == 0)
                goto INSN_18042DBE3
            endif
		endif
        
		local0[1] = typeFromHandle

		System.Type typeFromHandle2 = System.Type.GetTypeFromHandle({'ESerifEP03_19_Rend_0000' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle2 == 0)
            goto INSN_18042D3AD
        endif

		if (typeFromHandle2 == 0)
            goto INSN_18042DC09
        endif

		INSN_18042D3AD:
		local0[2] = typeFromHandle2

		System.Type typeFromHandle3 = System.Type.GetTypeFromHandle({'ESerifEP03_19_Pol_0000' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle3 == 0)
            goto INSN_18042D3E9
        endif

		if (typeFromHandle3 == 0)
            goto INSN_18042DC2F
        endif

		INSN_18042D3E9:
		local0[3] = typeFromHandle3

		System.Type typeFromHandle4 = System.Type.GetTypeFromHandle({'ESerifEP03_19_Sce_0000' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle4 == 0)
            goto INSN_18042D425
        endif

		if (typeFromHandle4 == 0)
            goto INSN_18042DC55
        endif

		INSN_18042D425:
		local0[4] = typeFromHandle4

		System.Type typeFromHandle5 = System.Type.GetTypeFromHandle({'ESerifEP03_19_other_0001' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle5 == 0)
            goto INSN_18042D461
        endif

		if (typeFromHandle5 == 0)
            goto INSN_18042DC7B
        endif

		INSN_18042D461:
		local0[5] = typeFromHandle5

		System.Type typeFromHandle6 = System.Type.GetTypeFromHandle({'ESerifEP03_19_Inter_O_0000' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle6 == 0)
            goto INSN_18042D49D
        endif

		if (typeFromHandle6 == 0)
            goto INSN_18042DCA1
        endif

		INSN_18042D49D:
		local0[6] = typeFromHandle6

		System.Type typeFromHandle7 = System.Type.GetTypeFromHandle({'ESerifEP03_19_Inter_T_0000' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle7 == 0)
            goto INSN_18042D4D9
        endif

		if (typeFromHandle7 == 0)
            goto INSN_18042DCC7
        endif

		INSN_18042D4D9:
		local0[7] = typeFromHandle7

		System.Type typeFromHandle8 = System.Type.GetTypeFromHandle({'ESerifEP03_19_other_0002' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle8 == 0)
            goto INSN_18042D515
        endif

		if (typeFromHandle8 == 0)
            goto INSN_18042DCED
        endif

		INSN_18042D515:
		local0[8] = typeFromHandle8

		System.Type typeFromHandle9 = System.Type.GetTypeFromHandle({'ESerifEP03_19_Inter_O_0001' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle9 == 0)
            goto INSN_18042D551
        endif

		if (typeFromHandle9 == 0)
            goto INSN_18042DD13
        endif

		INSN_18042D551:
		local0[9] = typeFromHandle9

		System.Type typeFromHandle10 = System.Type.GetTypeFromHandle({'ESerifEP03_19_Inter_T_0001' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle10 == 0)
            goto INSN_18042D58D
        endif

		if (typeFromHandle10 == 0)
            goto INSN_18042DD39
        endif

		INSN_18042D58D:
		local0[10] = typeFromHandle10

		System.Type typeFromHandle11 = System.Type.GetTypeFromHandle({'ESerifEP03_19_Inter_O_0002' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle11 == 0)
            goto INSN_18042D5C9
        endif

		if (typeFromHandle11 == 0)
            goto INSN_18042DD5F
        endif

		INSN_18042D5C9:
		local0[11] = typeFromHandle11

		System.Type typeFromHandle12 = System.Type.GetTypeFromHandle({'ESerifEP03_19_Inter_T_0002' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle12 == 0)
            goto INSN_18042D605
        endif

		if (typeFromHandle12 == 0)
            goto INSN_18042DD85
        endif

		INSN_18042D605:
		local0[12] = typeFromHandle12

		System.Type typeFromHandle13 = System.Type.GetTypeFromHandle({'ESerifEP03_19_other_0003' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle13 == 0)
            goto INSN_18042D644
        endif

		if (typeFromHandle13 == 0)
            goto INSN_18042DDAB
        endif

		INSN_18042D644:
		local0[13] = typeFromHandle13

		System.Type typeFromHandle14 = System.Type.GetTypeFromHandle({'ESerifEP03_19_Inter_O_0003' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle14 == 0)
            goto INSN_18042D683
        endif

		if (typeFromHandle14 == 0)
            goto INSN_18042DDD1
        endif

		INSN_18042D683:
		local0[14] = typeFromHandle14

		System.Type typeFromHandle15 = System.Type.GetTypeFromHandle({'ESerifEP03_19_Inter_T_0003' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle15 == 0)
            goto INSN_18042D6C2
        endif

		if (typeFromHandle15 == 0)
            goto INSN_18042DDF7
        endif

		INSN_18042D6C2:
		local0[15] = typeFromHandle15

		System.Type typeFromHandle16 = System.Type.GetTypeFromHandle({'ESerifEP03_19_Sce_0001' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle16 == 0)
            goto INSN_18042D701
        endif

		if (typeFromHandle16 == 0)
            goto INSN_18042DE1D
        endif

		INSN_18042D701:
		local0[16] = typeFromHandle16

		System.Type typeFromHandle17 = System.Type.GetTypeFromHandle({'ESerifEP03_19_other_0004' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle17 == 0)
            goto INSN_18042D740
        endif

		if (typeFromHandle17 == 0)
            goto INSN_18042DE43
        endif

		INSN_18042D740:
		local0[17] = typeFromHandle17

		System.Type typeFromHandle18 = System.Type.GetTypeFromHandle({'ESerifEP03_19_other_0005' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle18 == 0)
            goto INSN_18042D77F
        endif

		if (typeFromHandle18 == 0)
            goto INSN_18042DE69
        endif

		INSN_18042D77F:
		local0[18] = typeFromHandle18

		System.Type typeFromHandle19 = System.Type.GetTypeFromHandle({'ESerifEP03_19_other_0006' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle19 == 0)
            goto INSN_18042D7BE
        endif

		if (typeFromHandle19 == 0)
            goto INSN_18042DE8F
        endif

		INSN_18042D7BE:
		local0[19] = typeFromHandle19

		System.Type typeFromHandle20 = System.Type.GetTypeFromHandle({'ESerifEP03_19_Sce_0002' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle20 == 0)
            goto INSN_18042D7FD
        endif

		if (typeFromHandle20 == 0)
            goto INSN_18042DEB5
        endif

		INSN_18042D7FD:
		local0[20] = typeFromHandle20

		System.Type typeFromHandle21 = System.Type.GetTypeFromHandle({'ESerifEP03_19_other_0007' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle21 == 0)
            goto INSN_18042D83C
        endif

		if (typeFromHandle21 == 0)
            goto INSN_18042DEDB
        endif

		INSN_18042D83C:
		local0[21] = typeFromHandle21

		System.Type typeFromHandle22 = System.Type.GetTypeFromHandle({'ESerifEP03_19_Inter_O_0004' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle22 == 0)
            goto INSN_18042D87B
        endif

		if (typeFromHandle22 == 0)
            goto INSN_18042DF01
        endif

		INSN_18042D87B:
		local0[22] = typeFromHandle22

		System.Type typeFromHandle23 = System.Type.GetTypeFromHandle({'ESerifEP03_19_Inter_T_0004' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle23 == 0)
            goto INSN_18042D8BA
        endif

		if (typeFromHandle23 == 0)
            goto INSN_18042DF27
        endif

		INSN_18042D8BA:
		local0[23] = typeFromHandle23

		System.Type typeFromHandle24 = System.Type.GetTypeFromHandle({'ESerifEP03_19_Inter_O_0005' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle24 == 0)
            goto INSN_18042D8F9
        endif

		if (typeFromHandle24 == 0)
            goto INSN_18042DF4D
        endif

		INSN_18042D8F9:
		local0[24] = typeFromHandle24

		System.Type typeFromHandle25 = System.Type.GetTypeFromHandle({'ESerifEP03_19_Inter_T_0005' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle25 == 0)
            goto INSN_18042D938
        endif

		if (typeFromHandle25 == 0)
            goto INSN_18042DF73
        endif

		INSN_18042D938:
		local0[25] = typeFromHandle25

		System.Type typeFromHandle26 = System.Type.GetTypeFromHandle({'ESerifEP03_19_other_0008' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle26 == 0)
            goto INSN_18042D977
        endif

		if (typeFromHandle26 == 0)
            goto INSN_18042DF99
        endif

		INSN_18042D977:
		local0[26] = typeFromHandle26

		System.Type typeFromHandle27 = System.Type.GetTypeFromHandle({'ESerifEP03_19_Inter_O_0006' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle27 == 0)
            goto INSN_18042D9B6
        endif

		if (typeFromHandle27 == 0)
            goto INSN_18042DFBF
        endif

		INSN_18042D9B6:
		local0[27] = typeFromHandle27

		System.Type typeFromHandle28 = System.Type.GetTypeFromHandle({'ESerifEP03_19_Inter_T_0006' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle28 == 0)
            goto INSN_18042D9F5
        endif

		if (typeFromHandle28 == 0)
            goto INSN_18042DFE5
        endif

		INSN_18042D9F5:
		local0[28] = typeFromHandle28

		System.Type typeFromHandle29 = System.Type.GetTypeFromHandle({'ESerifEP03_19_Sce_0003' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle29 == 0)
            goto INSN_18042DA34
        endif

		if (typeFromHandle29 == 0)
            goto INSN_18042E00B
        endif

		INSN_18042DA34:
		local0[29] = typeFromHandle29

		System.Type typeFromHandle30 = System.Type.GetTypeFromHandle({'ESerifEP03_19_Sce_0004' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle30 == 0)
            goto INSN_18042DA73
        endif

		if (typeFromHandle30 == 0)
            goto INSN_18042E031
        endif

		INSN_18042DA73:
		local0[30] = typeFromHandle30

		System.Type typeFromHandle31 = System.Type.GetTypeFromHandle({'ESerifEP03_19_Sce_0004_1' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle31 == 0)
            goto INSN_18042DAB2
        endif

		if (typeFromHandle31 == 0)
            goto INSN_18042E057
        endif

		INSN_18042DAB2:
		local0[31] = typeFromHandle31

		System.Type typeFromHandle32 = System.Type.GetTypeFromHandle({'ESerifEP03_19_Sce_0004_2' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle32 == 0)
            goto INSN_18042DAF1
        endif

		if (typeFromHandle32 == 0)
            goto INSN_18042E07D
        endif

		INSN_18042DAF1:
		local0[32] = typeFromHandle32

		System.Type typeFromHandle33 = System.Type.GetTypeFromHandle({'ESerifEP03_19_Sce_0004_3' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle33 == 0)
            goto INSN_18042DB30
        endif

		if (typeFromHandle33 == 0)
            goto INSN_18042E0A3
        endif

		INSN_18042DB30:
		local0[33] = typeFromHandle33

		System.Type typeFromHandle34 = System.Type.GetTypeFromHandle({'ESerifEP03_19_Inter_O_0007' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle34 == 0)
            goto INSN_18042DB6F
        endif

		if (typeFromHandle34 == 0)
            goto INSN_18042E0C9
        endif

		INSN_18042DB6F:
		local0[34] = typeFromHandle34

		System.Type typeFromHandle35 = System.Type.GetTypeFromHandle({'ESerifEP03_19_Inter_T_0007' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle35 == 0)
            goto INSN_18042DBAE
        endif

		if (typeFromHandle35 == 0)
            goto INSN_18042E0EF
        endif

		INSN_18042DBAE:
		local0[35] = typeFromHandle35
		. = local0
		return
		throw new System.NullReferenceException()

		INSN_18042DBE3:

		INSN_18042DC09:

		INSN_18042DC2F:

		INSN_18042DC55:

		INSN_18042DC7B:

		INSN_18042DCA1:

		INSN_18042DCC7:

		INSN_18042DCED:

		INSN_18042DD13:

		INSN_18042DD39:

		INSN_18042DD5F:

		INSN_18042DD85:

		INSN_18042DDAB:

		INSN_18042DDD1:

		INSN_18042DDF7:

		INSN_18042DE1D:

		INSN_18042DE43:

		INSN_18042DE69:

		INSN_18042DE8F:

		INSN_18042DEB5:

		INSN_18042DEDB:

		INSN_18042DF01:

		INSN_18042DF27:

		INSN_18042DF4D:

		INSN_18042DF73:

		INSN_18042DF99:

		INSN_18042DFBF:

		INSN_18042DFE5:

		INSN_18042E00B:

		INSN_18042E031:

		INSN_18042E057:

		INSN_18042E07D:

		INSN_18042E0A3:

		INSN_18042E0C9:

		INSN_18042E0EF:


Generated IL:
	Action of type Cpp2IL.Core.Analysis.Actions.x86.Important.RegToStaticFieldAction at (0x18042DBD2) is corrupt (No further info) and cannot be created as IL. Aborting here.


