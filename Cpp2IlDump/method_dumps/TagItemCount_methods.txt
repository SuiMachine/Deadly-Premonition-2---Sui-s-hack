Type: TagItemCount

Method: System.Void TagItemCount::.ctor():	Method Body (x86 ASM):
		0x180203000 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180203002 jmp near ptr 0000000180CE1E90h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180203007 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.Void TagItemCount::.ctor():
		End of function at 0x180203008
		Absolute End is at 0x180203008
		Identified Jump Destination addresses:

		0x180203002: [!] Calls managed method System.Void UnityEngine.MonoBehaviour::.ctor() on instance {'this' (function parameter, type TagItemCount)}

		0x180203002: [!] Returns from the function




	Generated Pseudocode:

	Declaring Type: TagItemCount
	System.Void .ctor()

		base..ctor()
		return


Generated IL:
	IL_0000: ldarg.0
	IL_0001: call System.Void UnityEngine.MonoBehaviour::.ctor()
	IL_0006: ret
	

Method: System.Void TagItemCount::AfterParse():	Method Body (x86 ASM):
		0x18032B900 push rdi		; DEBUG: {Register}/RDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18032B902 sub rsp,20h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 32
		0x18032B906 cmp byte ptr [18183DA38h],0		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6467869240 | None ||| N/A | 0
		0x18032B90D mov rdi,rcx		; DEBUG: {Register}/RDI {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x18032B910 jne short 000000018032B924h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032B912 mov ecx,[1814C5E8Ch]		; DEBUG: {Register}/ECX {Memory}/None ||| RIP | 6464233100 | None ||| N/A | N/A
		0x18032B918 call 00000001800FEB90h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032B91D mov byte ptr [18183DA38h],1		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6467869240 | None ||| N/A | 1
		0x18032B924 mov rcx,[rdi+30h]		; DEBUG: {Register}/RCX {Memory}/None ||| RDI | 48 | None ||| N/A | N/A
		0x18032B928 mov [rsp+38h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RSP | 56 | None ||| N/A | N/A
		0x18032B92D mov [rsp+48h],rsi		; DEBUG: {Memory}/None {Register}/RSI ||| RSP | 72 | None ||| N/A | N/A
		0x18032B932 test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x18032B935 je near ptr 000000018032BA75h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032B93B cmp dword ptr [rcx+18h],1		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RCX | 24 | None ||| N/A | 1
		0x18032B93F jbe near ptr 000000018032BA7Dh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032B945 mov rcx,[rcx+28h]		; DEBUG: {Register}/RCX {Memory}/None ||| RCX | 40 | None ||| N/A | N/A
		0x18032B949 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18032B94B call 0000000180E85ED0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032B950 mov rcx,[rdi+18h]		; DEBUG: {Register}/RCX {Memory}/None ||| RDI | 24 | None ||| N/A | N/A
		0x18032B954 mov esi,eax		; DEBUG: {Register}/ESI {Register}/EAX ||| None | 0 | None ||| N/A | N/A
		0x18032B956 test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x18032B959 je near ptr 000000018032BA75h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032B95F xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18032B961 call 0000000180877A90h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032B966 mov rbx,[rdi+30h]		; DEBUG: {Register}/RBX {Memory}/None ||| RDI | 48 | None ||| N/A | N/A
		0x18032B96A test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18032B96D je near ptr 000000018032B9F4h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032B973 mov rcx,[rdi+18h]		; DEBUG: {Register}/RCX {Memory}/None ||| RDI | 24 | None ||| N/A | N/A
		0x18032B977 test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x18032B97A je near ptr 000000018032BA75h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032B980 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18032B982 call 0000000180877A90h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032B987 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18032B98A je near ptr 000000018032BA75h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032B990 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18032B993 mov edx,esi		; DEBUG: {Register}/EDX {Register}/ESI ||| None | 0 | None ||| N/A | N/A
		0x18032B995 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18032B998 call 000000018086DE40h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032B99D xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18032B99F mov [rsp+30h],eax		; DEBUG: {Memory}/None {Register}/EAX ||| RSP | 48 | None ||| N/A | N/A
		0x18032B9A3 lea rcx,[rsp+30h]		; DEBUG: {Register}/RCX {Memory}/None ||| RSP | 48 | None ||| N/A | N/A
		0x18032B9A8 call 0000000180E86110h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032B9AD mov rdi,rax		; DEBUG: {Register}/RDI {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18032B9B0 test rbx,rbx		; DEBUG: {Register}/RBX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x18032B9B3 je near ptr 000000018032BA75h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032B9B9 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18032B9BC je short 000000018032B9D6h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032B9BE mov rdx,[rbx]		; DEBUG: {Register}/RDX {Memory}/None ||| RBX | 0 | None ||| N/A | N/A
		0x18032B9C1 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18032B9C4 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18032B9C8 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032B9CD test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18032B9D0 je near ptr 000000018032BA90h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032B9D6 cmp dword ptr [rbx+18h],1		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RBX | 24 | None ||| N/A | 1
		0x18032B9DA jbe near ptr 000000018032BAA3h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032B9E0 mov [rbx+28h],rdi		; DEBUG: {Memory}/None {Register}/RDI ||| RBX | 40 | None ||| N/A | N/A
		0x18032B9E4 mov rsi,[rsp+48h]		; DEBUG: {Register}/RSI {Memory}/None ||| RSP | 72 | None ||| N/A | N/A
		0x18032B9E9 mov rbx,[rsp+38h]		; DEBUG: {Register}/RBX {Memory}/None ||| RSP | 56 | None ||| N/A | N/A
		0x18032B9EE add rsp,20h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 32
		0x18032B9F2 pop rdi		; DEBUG: {Register}/RDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18032B9F3 ret		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18032B9F4 mov rax,[181899D08h]		; DEBUG: {Register}/RAX {Memory}/None ||| RIP | 6468246792 | None ||| N/A | N/A
		0x18032B9FB test byte ptr [rax+127h],2		; DEBUG: {Memory}/None {Immediate8}/None ||| RAX | 295 | None ||| N/A | 2
		0x18032BA02 je short 000000018032BA1Ch		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032BA04 cmp dword ptr [rax+0D8h],0		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RAX | 216 | None ||| N/A | 0
		0x18032BA0B jne short 000000018032BA1Ch		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032BA0D mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18032BA10 call 000000018010EAF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032BA15 mov rax,[181899D08h]		; DEBUG: {Register}/RAX {Memory}/None ||| RIP | 6468246792 | None ||| N/A | N/A
		0x18032BA1C mov rax,[rax+0B8h]		; DEBUG: {Register}/RAX {Memory}/None ||| RAX | 184 | None ||| N/A | N/A
		0x18032BA23 mov rcx,[rax+88h]		; DEBUG: {Register}/RCX {Memory}/None ||| RAX | 136 | None ||| N/A | N/A
		0x18032BA2A test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x18032BA2D je short 000000018032BA75h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032BA2F xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18032BA32 mov edx,esi		; DEBUG: {Register}/EDX {Register}/ESI ||| None | 0 | None ||| N/A | N/A
		0x18032BA34 call 000000018039A320h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032BA39 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18032BA3B mov [rsp+40h],eax		; DEBUG: {Memory}/None {Register}/EAX ||| RSP | 64 | None ||| N/A | N/A
		0x18032BA3F lea rcx,[rsp+40h]		; DEBUG: {Register}/RCX {Memory}/None ||| RSP | 64 | None ||| N/A | N/A
		0x18032BA44 call 0000000180E86110h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032BA49 mov rdi,rax		; DEBUG: {Register}/RDI {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18032BA4C test rbx,rbx		; DEBUG: {Register}/RBX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x18032BA4F je short 000000018032BA75h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032BA51 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18032BA54 je short 000000018032BA6Ah		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032BA56 mov rdx,[rbx]		; DEBUG: {Register}/RDX {Memory}/None ||| RBX | 0 | None ||| N/A | N/A
		0x18032BA59 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18032BA5C mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18032BA60 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032BA65 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18032BA68 je short 000000018032BAB6h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032BA6A cmp dword ptr [rbx+18h],1		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RBX | 24 | None ||| N/A | 1
		0x18032BA6E jbe short 000000018032BAC9h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032BA70 jmp near ptr 000000018032B9E0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032BA75 xor ecx,ecx		; DEBUG: {Register}/ECX {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x18032BA77 call 000000018012BDA0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032BA7C int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18032BA90 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032BA95 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18032BA98 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18032BA9B xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18032BA9D call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032BAA2 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18032BAB6 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032BABB mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18032BABE xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18032BAC1 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18032BAC3 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032BAC8 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.Void TagItemCount::AfterParse():
		End of function at 0x18032BAC9
		Absolute End is at 0x18032BAC9
		Identified Jump Destination addresses:

		0x18032B900: Saves the content of rdi to the stack
		0x18032B906: Compares {Unknown Global at 0x18183DA38, first ten bytes are [224 60 103 1 16 54 1 0 52 54], or as chars "à<g6 46"} and 0
		0x18032B90D: Copies {'this' (function parameter, type TagItemCount)} from rcx into rdi
		0x18032B910: Jumps to 0x18032B924 if {Unknown Global at 0x18183DA38, first ten bytes are [224 60 103 1 16 54 1 0 52 54], or as chars "à<g6 46"} != 0

		0x18032B912: Reads {Unknown Global at 0x1814C5E8C, first ten bytes are [135 106 0 0 135 42 0 0 135 10], or as chars "j  *  
"} into register rcx as a constant constant3
		0x18032B918: Attempts to load the il2cpp metadata for this method (method id 27271) and init it cpp-side.

		0x18032B924: [!] Reads field m_subs from {'this' (function parameter, type TagItemCount)} and stores in a new local {'m_subs' (type System.String[])}

		0x18032B932: [!] Compares {'m_subs' (type System.String[])} and 0
		0x18032B935: Jumps to 0x18032BA75 (which throws a NRE) if m_subs equals 0. Implicitly present in managed code, so ignored here.
		0x18032B93B: [!] Compares {Property System.Int32 System.Array::Length() on {'m_subs' (type System.String[])}} and 1
		0x18032B93F: Jumps to 0x18032BA7D (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'m_subs' (type System.String[])}} is less than or equal to 1. Implicitly present in managed code, so ignored here.
		0x18032B945: [!] Reads a value from the array {'m_subs' (type System.String[])} at index 1, into a new local {'local2' (type System.String)}

		0x18032B94B: [!] Calls static managed method System.Int32 System.Int32::Parse(System.String) with arguments [{'local2' (type System.String)}] and stores the result in {'int32' (type System.Int32)}

		0x18032B950: [!] Reads field m_sceLabel from {'this' (function parameter, type TagItemCount)} and stores in a new local {'m_sceLabel' (type SceUILabel)}

		0x18032B954: Copies {'int32' (type System.Int32)} from rax into rsi
		0x18032B956: [!] Compares {'m_sceLabel' (type SceUILabel)} and 0
		0x18032B959: Jumps to 0x18032BA75 (which throws a NRE) if m_sceLabel equals 0. Implicitly present in managed code, so ignored here.
		0x18032B961: [!] Calls managed method SaveDataProgData SceUILabel::get_SaveDataProgData() on instance {'m_sceLabel' (type SceUILabel)} and stores the result in {'saveDataProgData' (type SaveDataProgData)}

		0x18032B966: [!] Reads field m_subs from {'this' (function parameter, type TagItemCount)} and stores in a new local {'m_subs2' (type System.String[])}

		0x18032B96A: [!] Compares {'saveDataProgData' (type SaveDataProgData)} and 0
		0x18032B96D: Jumps to 0x18032B9F4 (which is an if statement's body) if saveDataProgData equals 0 ;  - Increasing indentation - is standard if, unimportant is False

		0x18032B973: [!] Reads field m_sceLabel from {'this' (function parameter, type TagItemCount)} and stores in a new local {'m_sceLabel2' (type SceUILabel)}

		0x18032B977: [!] Compares {'m_sceLabel2' (type SceUILabel)} and 0
		0x18032B97A: Jumps to 0x18032BA75 (which throws a NRE) if m_sceLabel2 equals 0. Implicitly present in managed code, so ignored here.
		0x18032B982: [!] Calls managed method SaveDataProgData SceUILabel::get_SaveDataProgData() on instance {'m_sceLabel2' (type SceUILabel)} and stores the result in {'saveDataProgData2' (type SaveDataProgData)}

		0x18032B987: [!] Compares {'saveDataProgData2' (type SaveDataProgData)} and 0
		0x18032B98A: Jumps to 0x18032BA75 (which throws a NRE) if saveDataProgData2 equals 0. Implicitly present in managed code, so ignored here.
		0x18032B993: Copies {'int32' (type System.Int32)} from rsi into rdx
		0x18032B995: Copies {'saveDataProgData2' (type SaveDataProgData)} from rax into rcx
		0x18032B998: [!] Calls managed method System.Int32 SaveDataProgData::GetPossessionItemNum(System.Int32) on instance {'saveDataProgData2' (type SaveDataProgData)} with arguments [{'int32' (type System.Int32)}] and stores the result in {'possessionItemNum' (type System.Int32)}

		0x18032B99F: Moves possessionItemNum (type System.Int32) from register rax to the stack at offset 48 (0x30)
		0x18032B9A3: Loads a pointer to stack offset 0x30 into register rcx as new constant constant10
		0x18032B9AD: Copies {'possessionItemNum' (type System.Int32)} from rax into rdi
		0x18032B9B0: [!] Compares {'m_subs2' (type System.String[])} and 0
		0x18032B9B3: Jumps to 0x18032BA75 (which throws a NRE) if m_subs2 equals 0. Implicitly present in managed code, so ignored here.
		0x18032B9B9: [!] Compares {'possessionItemNum' (type System.Int32)} and 0
		0x18032B9BC: Jumps to 0x18032B9D6 (which is an if statement's body) if possessionItemNum equals 0 ;  - Increasing indentation - is standard if, unimportant is False

		0x18032B9BE: Loads the class pointer from m_subs2 into a constant constant13 in register rdx
		0x18032B9C1: Copies {'possessionItemNum' (type System.Int32)} from rax into rcx
		0x18032B9C4: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='String', parentType=System.Object] and stores in register rdx
		0x18032B9CD: [!] Compares {'possessionItemNum' (type System.Int32)} and 0
		0x18032B9D0: Jumps to 0x18032BA90 if possessionItemNum equals 0 ;  - This is probably a goto, jumping to 0x18032BA90 which is after end of current block @ 0x18032B9D6 (started at 0x18032B9BE)

		0x18032B9D6: [!] Compares {Property System.Int32 System.Array::Length() on {'m_subs2' (type System.String[])}} and 1
		0x18032B9DA: Jumps to 0x18032BAA3 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'m_subs2' (type System.String[])}} is less than or equal to 1. Implicitly present in managed code, so ignored here.

		Potential Loop Start (0x18032B9E0):
		0x18032B9E0: Sets the value at offset 1 in array m_subs2 to {'possessionItemNum' (type System.Int32)}
		0x18032B9E4: Reads unknown value in stack, offset 72 (0x48) and stores the pointer in register rsi as new constant constant16
		0x18032B9E9: Reads unknown value in stack, offset 56 (0x38) and stores the pointer in register rbx as new constant constant17
		0x18032B9F3: [!] Returns from the function

		0x18032B9F4: Loads the type definition for managed type PlayerInfo as a constant "PlayerInfo" in rax
		0x18032B9FB: Compares "{il2cpp field on {'PlayerInfo' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" and 2
		0x18032BA02: Jumps to 0x18032BA1C if "{il2cpp field on {'PlayerInfo' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" equals 2 ;  - This is probably a goto, jumping to 0x18032BA1C which is after end of current block @ 0x18032B9D6 (started at 0x18032B9BE)

		0x18032BA04: Compares "{il2cpp field on {'PlayerInfo' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" and 0
		0x18032BA0B: Jumps to 0x18032BA1C if "{il2cpp field on {'PlayerInfo' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" != 0 ;  - This is probably a goto, jumping to 0x18032BA1C which is after end of current block @ 0x18032B9D6 (started at 0x18032B9BE)

		0x18032BA0D: Copies {'PlayerInfo' (constant value of type Mono.Cecil.TypeReference)} from rax into rcx
		0x18032BA10: Calls the il2cpp cctor for the type PlayerInfo
		0x18032BA15: Loads the type definition for managed type PlayerInfo as a constant "PlayerInfo" in rax
		0x18032BA1C: Loads the pointer to the static fields for PlayerInfo and stores it in constant24 in register rax
		0x18032BA23: [!] Reads the static field ItemPossessionInfo PlayerInfo::m_itemPossessionInfo into new local m_itemPossessionInfo
		0x18032BA2A: [!] Compares {'m_itemPossessionInfo' (type ItemPossessionInfo)} and 0
		0x18032BA2D: Jumps to 0x18032BA75 (which throws a NRE) if m_itemPossessionInfo equals 0. Implicitly present in managed code, so ignored here.
		0x18032BA32: Copies {'int32' (type System.Int32)} from rsi into rdx
		0x18032BA34: [!] Calls managed method System.Int32 ItemPossessionInfo::GetItemNum(System.Int32) on instance {'m_itemPossessionInfo' (type ItemPossessionInfo)} with arguments [{'int32' (type System.Int32)}] and stores the result in {'itemNum' (type System.Int32)}

		0x18032BA3B: Moves itemNum (type System.Int32) from register rax to the stack at offset 64 (0x40)
		0x18032BA3F: Loads a pointer to stack offset 0x40 into register rcx as new constant constant26
		0x18032BA49: Copies {'itemNum' (type System.Int32)} from rax into rdi
		0x18032BA4C: [!] Compares {'m_subs2' (type System.String[])} and 0
		0x18032BA4F: Jumps to 0x18032BA75 (which throws a NRE) if m_subs2 equals 0. Implicitly present in managed code, so ignored here.
		0x18032BA51: [!] Compares {'itemNum' (type System.Int32)} and 0
		0x18032BA54: Jumps to 0x18032BA6A if itemNum equals 0 ;  - This is probably a goto, jumping to 0x18032BA6A which is after end of current block @ 0x18032B9D6 (started at 0x18032B9BE)

		0x18032BA56: Loads the class pointer from m_subs2 into a constant constant29 in register rdx
		0x18032BA59: Copies {'itemNum' (type System.Int32)} from rax into rcx
		0x18032BA5C: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='String', parentType=System.Object] and stores in register rdx
		0x18032BA65: [!] Compares {'itemNum' (type System.Int32)} and 0
		0x18032BA68: Jumps to 0x18032BAB6 if itemNum equals 0 ;  - This is probably a goto, jumping to 0x18032BAB6 which is after end of current block @ 0x18032B9D6 (started at 0x18032B9BE)

		0x18032BA6A: [!] Compares {Property System.Int32 System.Array::Length() on {'m_subs2' (type System.String[])}} and 1
		0x18032BA6E: Jumps to 0x18032BAC9 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'m_subs2' (type System.String[])}} is less than or equal to 1. Implicitly present in managed code, so ignored here.
		0x18032BA70: Jumps to 0x18032B9E0 - which is still in this function, but further up. Probably indicative that this is a loop.
		0x18032BA77: [!] Constructs and throws an exception of kind System.NullReferenceException

		0x18032BA95: Copies {'local20' (type System.NullReferenceException)} from rax into rcx
		0x18032BABB: Copies {'local20' (type System.NullReferenceException)} from rax into rcx



	Generated Pseudocode:

	Declaring Type: TagItemCount
	System.Void AfterParse()
		System.String[] m_subs = this.m_subs
		System.String local2 = m_subs[1]

		System.Int32 int32 = System.Int32.Parse(local2) //(String s)
		SceUILabel m_sceLabel = this.m_sceLabel

		SaveDataProgData saveDataProgData = m_sceLabel.SaveDataProgData
		System.String[] m_subs2 = this.m_subs

		if (saveDataProgData != 0)
		    SceUILabel m_sceLabel2 = this.m_sceLabel

		    SaveDataProgData saveDataProgData2 = m_sceLabel2.SaveDataProgData

		    System.Int32 possessionItemNum = saveDataProgData2.GetPossessionItemNum(int32) //(Int32 itemId)

		    if (possessionItemNum != 0)

		        if (possessionItemNum == 0)
                    goto INSN_18032BA90
                endif
		    endif
            
		    m_subs2[1] = possessionItemNum
		    return
		endif
        
		ItemPossessionInfo m_itemPossessionInfo = PlayerInfo.m_itemPossessionInfo

		System.Int32 itemNum = m_itemPossessionInfo.GetItemNum(int32) //(Int32 itemId)

		if (itemNum == 0)
            goto INSN_18032BA6A
        endif

		if (itemNum == 0)
            goto INSN_18032BAB6
        endif

		INSN_18032BA6A:
		throw new System.NullReferenceException()

		INSN_18032BA90:

		INSN_18032BAB6:


Generated IL:
	IL_0000: ldarg.0
	IL_0001: ldfld System.String[] TagBase::m_subs
	IL_0006: ldc.i4.1
	IL_0007: ldelem.any System.String
	IL_000c: call System.Int32 System.Int32::Parse(System.String)
	IL_0011: stloc.0
	IL_0012: ldarg.0
	IL_0013: ldfld SceUILabel TagBase::m_sceLabel
	IL_0018: call SaveDataProgData SceUILabel::get_SaveDataProgData()
	IL_001d: stloc.1
	IL_001e: ldarg.0
	IL_001f: ldfld System.String[] TagBase::m_subs
	IL_0024: stloc.2
	IL_0025: ldloc.1
	IL_0026: ldc.i4.0
	IL_0027: beq.s IL_004c
	IL_0029: ldarg.0
	IL_002a: ldfld SceUILabel TagBase::m_sceLabel
	IL_002f: call SaveDataProgData SceUILabel::get_SaveDataProgData()
	IL_0034: ldloc.0
	IL_0035: call System.Int32 SaveDataProgData::GetPossessionItemNum(System.Int32)
	IL_003a: stloc.3
	IL_003b: ldloc.3
	IL_003c: ldc.i4.0
	IL_003d: beq.s IL_0043
	IL_003f: ldloc.3
	IL_0040: ldc.i4.0
	IL_0041: beq.s IL_0000
	IL_0043: ldloc.2
	IL_0044: ldc.i4.1
	IL_0045: ldloc.3
	IL_0046: stelem.any System.String
	IL_004b: ret
	IL_004c: ldsfld ItemPossessionInfo PlayerInfo::m_itemPossessionInfo
	IL_0051: ldloc.0
	IL_0052: call System.Int32 ItemPossessionInfo::GetItemNum(System.Int32)
	IL_0057: stloc.s V_4
	IL_0059: ldloc.s V_4
	IL_005b: ldc.i4.0
	IL_005c: beq.s IL_0063
	IL_005e: ldloc.s V_4
	IL_0060: ldc.i4.0
	IL_0061: beq.s IL_0000
	IL_0063: newobj System.Void System.NullReferenceException::.ctor()
	IL_0068: throw
	

