Type: UIResult

Method: System.Void Bowling.UIResult::.ctor():	Method Body (x86 ASM):
		0x18025F090 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18025F092 jmp near ptr 0000000180203000h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18025F097 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.Void Bowling.UIResult::.ctor():
		End of function at 0x18025F098
		Absolute End is at 0x18025F098
		Identified Jump Destination addresses:

		0x18025F092: [!] Calls managed method System.Void UnityEngine.EventSystems.UIBehaviour::.ctor() on instance {'this' (function parameter, type Bowling.UIResult)}

		0x18025F092: [!] Returns from the function




	Generated Pseudocode:

	Declaring Type: Bowling.UIResult
	System.Void .ctor()

		base..ctor()
		return


Generated IL:
	IL_0000: ldarg.0
	IL_0001: call System.Void UnityEngine.EventSystems.UIBehaviour::.ctor()
	IL_0006: ret
	

Method: System.Void Bowling.UIResult::Setup(Bowling.UIScore/Score[]):	Method Body (x86 ASM):
		0x18055DE80 mov [rsp+8],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RSP | 8 | None ||| N/A | N/A
		0x18055DE85 mov [rsp+10h],rbp		; DEBUG: {Memory}/None {Register}/RBP ||| RSP | 16 | None ||| N/A | N/A
		0x18055DE8A mov [rsp+18h],rsi		; DEBUG: {Memory}/None {Register}/RSI ||| RSP | 24 | None ||| N/A | N/A
		0x18055DE8F mov [rsp+20h],rdi		; DEBUG: {Memory}/None {Register}/RDI ||| RSP | 32 | None ||| N/A | N/A
		0x18055DE94 push r13		; DEBUG: {Register}/R13 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18055DE96 push r14		; DEBUG: {Register}/R14 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18055DE98 push r15		; DEBUG: {Register}/R15 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18055DE9A sub rsp,20h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 32
		0x18055DE9E mov r8,[rcx+38h]		; DEBUG: {Register}/R8 {Memory}/None ||| RCX | 56 | None ||| N/A | N/A
		0x18055DEA2 xor edi,edi		; DEBUG: {Register}/EDI {Register}/EDI ||| None | 0 | None ||| N/A | N/A
		0x18055DEA4 xor r9d,r9d		; DEBUG: {Register}/R9D {Register}/R9D ||| None | 0 | None ||| N/A | N/A
		0x18055DEA7 mov rbp,rdx		; DEBUG: {Register}/RBP {Register}/RDX ||| None | 0 | None ||| N/A | N/A
		0x18055DEAA mov r13,rcx		; DEBUG: {Register}/R13 {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x18055DEAD test r8,r8		; DEBUG: {Register}/R8 {Register}/R8 ||| None | 0 | None ||| N/A | N/A
		0x18055DEB0 je near ptr 000000018055E1B7h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18055DEB6 mov rcx,r8		; DEBUG: {Register}/RCX {Register}/R8 ||| None | 0 | None ||| N/A | N/A
		0x18055DEB9 nop dword ptr [rax]		; DEBUG: {Memory}/None {Register}/None ||| RAX | 0 | None ||| N/A | N/A
		0x18055DEC0 mov rax,[r8+18h]		; DEBUG: {Register}/RAX {Memory}/None ||| R8 | 24 | None ||| N/A | N/A
		0x18055DEC4 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18055DEC7 je near ptr 000000018055E1B7h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18055DECD cmp r9d,[rax+18h]		; DEBUG: {Register}/R9D {Memory}/None ||| RAX | 24 | None ||| N/A | N/A
		0x18055DED1 jge near ptr 000000018055E0EDh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18055DED7 test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x18055DEDA je near ptr 000000018055E1B7h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18055DEE0 mov rcx,[rcx+18h]		; DEBUG: {Register}/RCX {Memory}/None ||| RCX | 24 | None ||| N/A | N/A
		0x18055DEE4 test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x18055DEE7 je near ptr 000000018055E1B7h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18055DEED cmp edi,[rcx+18h]		; DEBUG: {Register}/EDI {Memory}/None ||| RCX | 24 | None ||| N/A | N/A
		0x18055DEF0 jae near ptr 000000018055E1A4h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18055DEF6 movsxd rax,edi		; DEBUG: {Register}/RAX {Register}/EDI ||| None | 0 | None ||| N/A | N/A
		0x18055DEF9 lea r15,[rax*8+20h]		; DEBUG: {Register}/R15 {Memory}/None ||| None | 32 | RAX ||| N/A | N/A
		0x18055DF01 mov rax,[r15+rcx]		; DEBUG: {Register}/RAX {Memory}/None ||| R15 | 0 | RCX ||| N/A | N/A
		0x18055DF05 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18055DF08 je near ptr 000000018055E1B7h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18055DF0E mov rcx,[rax+18h]		; DEBUG: {Register}/RCX {Memory}/None ||| RAX | 24 | None ||| N/A | N/A
		0x18055DF12 test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x18055DF15 je near ptr 000000018055E1B7h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18055DF1B xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18055DF1D call 0000000180B29690h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18055DF22 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18055DF25 je near ptr 000000018055E1B7h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18055DF2B xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18055DF2E mov dl,1		; DEBUG: {Register}/DL {Immediate8}/None ||| None | 0 | None ||| N/A | 1
		0x18055DF30 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18055DF33 call 0000000180B2E5A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18055DF38 xor ebx,ebx		; DEBUG: {Register}/EBX {Register}/EBX ||| None | 0 | None ||| N/A | N/A
		0x18055DF3A nop word ptr [rax+rax]		; DEBUG: {Memory}/None {Register}/None ||| RAX | 0 | RAX ||| N/A | N/A
		0x18055DF40 mov r8,[r13+38h]		; DEBUG: {Register}/R8 {Memory}/None ||| R13 | 56 | None ||| N/A | N/A
		0x18055DF44 test r8,r8		; DEBUG: {Register}/R8 {Register}/R8 ||| None | 0 | None ||| N/A | N/A
		0x18055DF47 je near ptr 000000018055E1B7h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18055DF4D mov rax,[r8+18h]		; DEBUG: {Register}/RAX {Memory}/None ||| R8 | 24 | None ||| N/A | N/A
		0x18055DF51 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18055DF54 je near ptr 000000018055E1B7h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18055DF5A cmp edi,[rax+18h]		; DEBUG: {Register}/EDI {Memory}/None ||| RAX | 24 | None ||| N/A | N/A
		0x18055DF5D jae near ptr 000000018055E191h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18055DF63 mov rax,[r15+rax]		; DEBUG: {Register}/RAX {Memory}/None ||| R15 | 0 | RAX ||| N/A | N/A
		0x18055DF67 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18055DF6A je near ptr 000000018055E1B7h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18055DF70 mov rax,[rax+10h]		; DEBUG: {Register}/RAX {Memory}/None ||| RAX | 16 | None ||| N/A | N/A
		0x18055DF74 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18055DF77 je near ptr 000000018055E1B7h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18055DF7D cmp ebx,[rax+18h]		; DEBUG: {Register}/EBX {Memory}/None ||| RAX | 24 | None ||| N/A | N/A
		0x18055DF80 jge near ptr 000000018055E0E3h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18055DF86 movsxd rdx,ebx		; DEBUG: {Register}/RDX {Register}/EBX ||| None | 0 | None ||| N/A | N/A
		0x18055DF89 jae near ptr 000000018055E17Eh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18055DF8F lea r14,[rdx*8+20h]		; DEBUG: {Register}/R14 {Memory}/None ||| None | 32 | RDX ||| N/A | N/A
		0x18055DF97 mov rsi,[r14+rax]		; DEBUG: {Register}/RSI {Memory}/None ||| R14 | 0 | RAX ||| N/A | N/A
		0x18055DF9B test rbp,rbp		; DEBUG: {Register}/RBP {Register}/RBP ||| None | 0 | None ||| N/A | N/A
		0x18055DF9E je near ptr 000000018055E1B7h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18055DFA4 cmp edi,[rbp+18h]		; DEBUG: {Register}/EDI {Memory}/None ||| RBP | 24 | None ||| N/A | N/A
		0x18055DFA7 jae near ptr 000000018055E16Bh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18055DFAD mov rax,[r15+rbp]		; DEBUG: {Register}/RAX {Memory}/None ||| R15 | 0 | RBP ||| N/A | N/A
		0x18055DFB1 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18055DFB4 je near ptr 000000018055E1B7h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18055DFBA mov rax,[rax+10h]		; DEBUG: {Register}/RAX {Memory}/None ||| RAX | 16 | None ||| N/A | N/A
		0x18055DFBE test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18055DFC1 je near ptr 000000018055E1B7h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18055DFC7 cmp ebx,[rax+18h]		; DEBUG: {Register}/EBX {Memory}/None ||| RAX | 24 | None ||| N/A | N/A
		0x18055DFCA jae near ptr 000000018055E158h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18055DFD0 mov rcx,[r14+rax]		; DEBUG: {Register}/RCX {Memory}/None ||| R14 | 0 | RAX ||| N/A | N/A
		0x18055DFD4 test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x18055DFD7 je near ptr 000000018055E1B7h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18055DFDD xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18055DFDF call 000000018060CC90h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18055DFE4 test rsi,rsi		; DEBUG: {Register}/RSI {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x18055DFE7 je near ptr 000000018055E1B7h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18055DFED xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18055DFF0 mov rdx,rax		; DEBUG: {Register}/RDX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18055DFF3 mov rcx,rsi		; DEBUG: {Register}/RCX {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x18055DFF6 call 000000018060D730h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18055DFFB mov rax,[r13+38h]		; DEBUG: {Register}/RAX {Memory}/None ||| R13 | 56 | None ||| N/A | N/A
		0x18055DFFF test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18055E002 je near ptr 000000018055E1B7h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18055E008 mov rax,[rax+18h]		; DEBUG: {Register}/RAX {Memory}/None ||| RAX | 24 | None ||| N/A | N/A
		0x18055E00C test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18055E00F je near ptr 000000018055E1B7h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18055E015 cmp edi,[rax+18h]		; DEBUG: {Register}/EDI {Memory}/None ||| RAX | 24 | None ||| N/A | N/A
		0x18055E018 jae near ptr 000000018055E145h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18055E01E mov rcx,[r15+rax]		; DEBUG: {Register}/RCX {Memory}/None ||| R15 | 0 | RAX ||| N/A | N/A
		0x18055E022 test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x18055E025 je near ptr 000000018055E1B7h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18055E02B mov rsi,[rcx+18h]		; DEBUG: {Register}/RSI {Memory}/None ||| RCX | 24 | None ||| N/A | N/A
		0x18055E02F cmp edi,[rbp+18h]		; DEBUG: {Register}/EDI {Memory}/None ||| RBP | 24 | None ||| N/A | N/A
		0x18055E032 jae near ptr 000000018055E132h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18055E038 mov rax,[r15+rbp]		; DEBUG: {Register}/RAX {Memory}/None ||| R15 | 0 | RBP ||| N/A | N/A
		0x18055E03C test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18055E03F je near ptr 000000018055E1B7h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18055E045 mov rcx,[rax+18h]		; DEBUG: {Register}/RCX {Memory}/None ||| RAX | 24 | None ||| N/A | N/A
		0x18055E049 test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x18055E04C je near ptr 000000018055E1B7h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18055E052 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18055E054 call 000000018060CC90h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18055E059 test rsi,rsi		; DEBUG: {Register}/RSI {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x18055E05C je near ptr 000000018055E1B7h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18055E062 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18055E065 mov rdx,rax		; DEBUG: {Register}/RDX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18055E068 mov rcx,rsi		; DEBUG: {Register}/RCX {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x18055E06B call 000000018060D730h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18055E070 mov rax,[r13+38h]		; DEBUG: {Register}/RAX {Memory}/None ||| R13 | 56 | None ||| N/A | N/A
		0x18055E074 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18055E077 je near ptr 000000018055E1B7h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18055E07D mov rax,[rax+18h]		; DEBUG: {Register}/RAX {Memory}/None ||| RAX | 24 | None ||| N/A | N/A
		0x18055E081 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18055E084 je near ptr 000000018055E1B7h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18055E08A cmp edi,[rax+18h]		; DEBUG: {Register}/EDI {Memory}/None ||| RAX | 24 | None ||| N/A | N/A
		0x18055E08D jae near ptr 000000018055E11Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18055E093 mov rax,[r15+rax]		; DEBUG: {Register}/RAX {Memory}/None ||| R15 | 0 | RAX ||| N/A | N/A
		0x18055E097 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18055E09A je near ptr 000000018055E1B7h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18055E0A0 mov rax,[rax+10h]		; DEBUG: {Register}/RAX {Memory}/None ||| RAX | 16 | None ||| N/A | N/A
		0x18055E0A4 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18055E0A7 je near ptr 000000018055E1B7h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18055E0AD cmp ebx,[rax+18h]		; DEBUG: {Register}/EBX {Memory}/None ||| RAX | 24 | None ||| N/A | N/A
		0x18055E0B0 jae short 000000018055E10Ch		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18055E0B2 mov rcx,[r14+rax]		; DEBUG: {Register}/RCX {Memory}/None ||| R14 | 0 | RAX ||| N/A | N/A
		0x18055E0B6 test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x18055E0B9 je near ptr 000000018055E1B7h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18055E0BF xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18055E0C1 call 0000000180B29690h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18055E0C6 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18055E0C9 je near ptr 000000018055E1B7h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18055E0CF xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18055E0D2 mov dl,1		; DEBUG: {Register}/DL {Immediate8}/None ||| None | 0 | None ||| N/A | 1
		0x18055E0D4 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18055E0D7 call 0000000180B2E5A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18055E0DC inc ebx		; DEBUG: {Register}/EBX {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18055E0DE jmp near ptr 000000018055DF40h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18055E0E3 inc edi		; DEBUG: {Register}/EDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18055E0E5 mov r9d,edi		; DEBUG: {Register}/R9D {Register}/EDI ||| None | 0 | None ||| N/A | N/A
		0x18055E0E8 jmp near ptr 000000018055DEB6h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18055E0ED mov rbx,[rsp+40h]		; DEBUG: {Register}/RBX {Memory}/None ||| RSP | 64 | None ||| N/A | N/A
		0x18055E0F2 mov rbp,[rsp+48h]		; DEBUG: {Register}/RBP {Memory}/None ||| RSP | 72 | None ||| N/A | N/A
		0x18055E0F7 mov rsi,[rsp+50h]		; DEBUG: {Register}/RSI {Memory}/None ||| RSP | 80 | None ||| N/A | N/A
		0x18055E0FC mov rdi,[rsp+58h]		; DEBUG: {Register}/RDI {Memory}/None ||| RSP | 88 | None ||| N/A | N/A
		0x18055E101 add rsp,20h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 32
		0x18055E105 pop r15		; DEBUG: {Register}/R15 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18055E107 pop r14		; DEBUG: {Register}/R14 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18055E109 pop r13		; DEBUG: {Register}/R13 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18055E10B ret		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18055E10C call 000000018012A7F0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18055E111 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18055E114 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18055E117 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18055E119 call 000000018012BD50h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18055E11E int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.Void Bowling.UIResult::Setup(Bowling.UIScore/Score[]):
		End of function at 0x18055E11F
		Absolute End is at 0x18055E11F
		Identified Jump Destination addresses:

		0x18055DE94: Saves the content of r13 to the stack
		0x18055DE96: Saves the content of r14 to the stack
		0x18055DE98: Saves the content of r15 to the stack
		0x18055DE9E: [!] Reads field m_uiScore from {'this' (function parameter, type Bowling.UIResult)} and stores in a new local {'m_uiScore' (type Bowling.UIScore)}

		0x18055DEA2: Clears register rdi, yielding zero-local {'local3' (type System.Int32)}
		0x18055DEA4: Clears register r9, yielding zero-local {'local4' (type System.Int32)}
		0x18055DEA7: Copies {'scores' (function parameter, type Bowling.UIScore/Score[])} from rdx into rbp
		0x18055DEAA: Copies {'this' (function parameter, type Bowling.UIResult)} from rcx into r13
		0x18055DEAD: [!] Compares {'m_uiScore' (type Bowling.UIScore)} and 0
		0x18055DEB0: Jumps to 0x18055E1B7 (which throws a NRE) if m_uiScore equals 0. Implicitly present in managed code, so ignored here.

		Potential Loop Start (0x18055DEB6):
		0x18055DEB6: Copies {'m_uiScore' (type Bowling.UIScore)} from r8 into rcx
		0x18055DEC0: [!] Reads field m_scores from {'m_uiScore' (type Bowling.UIScore)} and stores in a new local {'m_scores' (type Bowling.UIScore/Score[])}

		0x18055DEC4: [!] Compares {'m_scores' (type Bowling.UIScore/Score[])} and 0
		0x18055DEC7: Jumps to 0x18055E1B7 (which throws a NRE) if m_scores equals 0. Implicitly present in managed code, so ignored here.
		0x18055DECD: [!] Compares {'local4' (type System.Int32)} and {Property System.Int32 System.Array::Length() on {'m_scores' (type Bowling.UIScore/Score[])}}
		0x18055DED1: Jumps to 0x18055E0ED (which is an if statement's body) if {'local4' (type System.Int32)} is greater than or equal to {Property System.Int32 System.Array::Length() on {'m_scores' (type Bowling.UIScore/Score[])}} ;  - Increasing indentation - is standard if, unimportant is False

		0x18055DED7: [!] Compares {'m_uiScore' (type Bowling.UIScore)} and 0
		0x18055DEDA: Jumps to 0x18055E1B7 (which throws a NRE) if m_uiScore equals 0. Implicitly present in managed code, so ignored here.
		0x18055DEE0: [!] Reads field m_scores from {'m_uiScore' (type Bowling.UIScore)} and stores in a new local {'m_scores2' (type Bowling.UIScore/Score[])}

		0x18055DEE4: [!] Compares {'m_scores2' (type Bowling.UIScore/Score[])} and 0
		0x18055DEE7: Jumps to 0x18055E1B7 (which throws a NRE) if m_scores2 equals 0. Implicitly present in managed code, so ignored here.
		0x18055DEED: [!] Compares {'local3' (type System.Int32)} and {Property System.Int32 System.Array::Length() on {'m_scores2' (type Bowling.UIScore/Score[])}}
		0x18055DEF0: Jumps to 0x18055E1A4 (which throws a NRE) if {'local3' (type System.Int32)} is greater than or equal to {Property System.Int32 System.Array::Length() on {'m_scores2' (type Bowling.UIScore/Score[])}}. Implicitly present in managed code, so ignored here.
		0x18055DEF6: Copies {'local3' (type System.Int32)} from rdi into rax
		0x18055DF01: [!] Reads a value from the array {'m_scores2' (type Bowling.UIScore/Score[])} at an index specified by the value in , into a new local {'local7' (type Bowling.UIScore/Score)}

		0x18055DF05: [!] Compares {'local7' (type Bowling.UIScore/Score)} and 0
		0x18055DF08: Jumps to 0x18055E1B7 (which throws a NRE) if local7 equals 0. Implicitly present in managed code, so ignored here.
		0x18055DF0E: [!] Reads field m_totalScore from {'local7' (type Bowling.UIScore/Score)} and stores in a new local {'m_totalScore' (type UILabel)}

		0x18055DF12: [!] Compares {'m_totalScore' (type UILabel)} and 0
		0x18055DF15: Jumps to 0x18055E1B7 (which throws a NRE) if m_totalScore equals 0. Implicitly present in managed code, so ignored here.
		0x18055DF1D: [!] Calls managed method UnityEngine.GameObject UnityEngine.Component::get_gameObject() on instance {'m_totalScore' (type UILabel)} and stores the result in {'gameObject' (type UnityEngine.GameObject)}

		0x18055DF22: [!] Compares {'gameObject' (type UnityEngine.GameObject)} and 0
		0x18055DF25: Jumps to 0x18055E1B7 (which throws a NRE) if gameObject equals 0. Implicitly present in managed code, so ignored here.
		0x18055DF2E: [!] Writes the constant 0x1 into operand True (type UInt64) in register rdx
		0x18055DF30: Copies {'gameObject' (type UnityEngine.GameObject)} from rax into rcx
		0x18055DF33: [!] Calls managed method System.Void UnityEngine.GameObject::SetActive(System.Boolean) on instance {'gameObject' (type UnityEngine.GameObject)} with arguments [True]

		0x18055DF38: Clears register rbx, yielding zero-local {'local12' (type System.Int32)}

		Potential Loop Start (0x18055DF40):
		0x18055DF40: [!] Reads field m_uiScore from {'this' (function parameter, type Bowling.UIResult)} and stores in a new local {'m_uiScore2' (type Bowling.UIScore)}

		0x18055DF44: [!] Compares {'m_uiScore2' (type Bowling.UIScore)} and 0
		0x18055DF47: Jumps to 0x18055E1B7 (which throws a NRE) if m_uiScore2 equals 0. Implicitly present in managed code, so ignored here.
		0x18055DF4D: [!] Reads field m_scores from {'m_uiScore2' (type Bowling.UIScore)} and stores in a new local {'m_scores3' (type Bowling.UIScore/Score[])}

		0x18055DF51: [!] Compares {'m_scores3' (type Bowling.UIScore/Score[])} and 0
		0x18055DF54: Jumps to 0x18055E1B7 (which throws a NRE) if m_scores3 equals 0. Implicitly present in managed code, so ignored here.
		0x18055DF5A: [!] Compares {'local3' (type System.Int32)} and {Property System.Int32 System.Array::Length() on {'m_scores3' (type Bowling.UIScore/Score[])}}
		0x18055DF5D: Jumps to 0x18055E191 (which throws a NRE) if {'local3' (type System.Int32)} is greater than or equal to {Property System.Int32 System.Array::Length() on {'m_scores3' (type Bowling.UIScore/Score[])}}. Implicitly present in managed code, so ignored here.
		0x18055DF63: [!] Reads a value from the array {'m_scores3' (type Bowling.UIScore/Score[])} at an index specified by the value in , into a new local {'local15' (type Bowling.UIScore/Score)}

		0x18055DF67: [!] Compares {'local15' (type Bowling.UIScore/Score)} and 0
		0x18055DF6A: Jumps to 0x18055E1B7 (which throws a NRE) if local15 equals 0. Implicitly present in managed code, so ignored here.
		0x18055DF70: [!] Reads field m_frameScore from {'local15' (type Bowling.UIScore/Score)} and stores in a new local {'m_frameScore' (type UILabel[])}

		0x18055DF74: [!] Compares {'m_frameScore' (type UILabel[])} and 0
		0x18055DF77: Jumps to 0x18055E1B7 (which throws a NRE) if m_frameScore equals 0. Implicitly present in managed code, so ignored here.
		0x18055DF7D: [!] Compares {'local12' (type System.Int32)} and {Property System.Int32 System.Array::Length() on {'m_frameScore' (type UILabel[])}}
		0x18055DF80: Jumps to 0x18055E0E3 (which is an if statement's body) if {'local12' (type System.Int32)} is greater than or equal to {Property System.Int32 System.Array::Length() on {'m_frameScore' (type UILabel[])}} ;  - Increasing indentation - is standard if, unimportant is False

		0x18055DF86: Copies {'local12' (type System.Int32)} from rbx into rdx
		0x18055DF89: Jumps to 0x18055E17E (which throws a NRE) if {'local12' (type System.Int32)} is greater than or equal to {Property System.Int32 System.Array::Length() on {'m_frameScore' (type UILabel[])}}. Implicitly present in managed code, so ignored here.
		0x18055DF97: [!] Reads a value from the array {'m_frameScore' (type UILabel[])} at an index specified by the value in , into a new local {'local17' (type UILabel)}

		0x18055DF9B: [!] Compares {'scores' (function parameter, type Bowling.UIScore/Score[])} and 0
		0x18055DF9E: Jumps to 0x18055E1B7 (which throws a NRE) if scores equals 0. Implicitly present in managed code, so ignored here.
		0x18055DFA4: [!] Compares {'local3' (type System.Int32)} and {Property System.Int32 System.Array::Length() on {'scores' (function parameter, type Bowling.UIScore/Score[])}}
		0x18055DFA7: Jumps to 0x18055E16B (which throws a NRE) if {'local3' (type System.Int32)} is greater than or equal to {Property System.Int32 System.Array::Length() on {'scores' (function parameter, type Bowling.UIScore/Score[])}}. Implicitly present in managed code, so ignored here.
		0x18055DFAD: [!] Reads a value from the array {'scores' (function parameter, type Bowling.UIScore/Score[])} at an index specified by the value in , into a new local {'local18' (type Bowling.UIScore/Score)}

		0x18055DFB1: [!] Compares {'local18' (type Bowling.UIScore/Score)} and 0
		0x18055DFB4: Jumps to 0x18055E1B7 (which throws a NRE) if local18 equals 0. Implicitly present in managed code, so ignored here.
		0x18055DFBA: [!] Reads field m_frameScore from {'local18' (type Bowling.UIScore/Score)} and stores in a new local {'m_frameScore2' (type UILabel[])}

		0x18055DFBE: [!] Compares {'m_frameScore2' (type UILabel[])} and 0
		0x18055DFC1: Jumps to 0x18055E1B7 (which throws a NRE) if m_frameScore2 equals 0. Implicitly present in managed code, so ignored here.
		0x18055DFC7: [!] Compares {'local12' (type System.Int32)} and {Property System.Int32 System.Array::Length() on {'m_frameScore2' (type UILabel[])}}
		0x18055DFCA: Jumps to 0x18055E158 (which throws a NRE) if {'local12' (type System.Int32)} is greater than or equal to {Property System.Int32 System.Array::Length() on {'m_frameScore2' (type UILabel[])}}. Implicitly present in managed code, so ignored here.
		0x18055DFD0: [!] Reads a value from the array {'m_frameScore2' (type UILabel[])} at an index specified by the value in , into a new local {'local20' (type UILabel)}

		0x18055DFD4: [!] Compares {'local20' (type UILabel)} and 0
		0x18055DFD7: Jumps to 0x18055E1B7 (which throws a NRE) if local20 equals 0. Implicitly present in managed code, so ignored here.
		0x18055DFDF: [!] Calls managed method System.String UILabel::get_text() on instance {'local20' (type UILabel)} and stores the result in {'text' (type System.String)}

		0x18055DFE4: [!] Compares {'local17' (type UILabel)} and 0
		0x18055DFE7: Jumps to 0x18055E1B7 (which throws a NRE) if local17 equals 0. Implicitly present in managed code, so ignored here.
		0x18055DFF0: Copies {'text' (type System.String)} from rax into rdx
		0x18055DFF3: Copies {'local17' (type UILabel)} from rsi into rcx
		0x18055DFF6: [!] Calls managed method System.Void UILabel::set_text(System.String) on instance {'local17' (type UILabel)} with arguments [{'text' (type System.String)}]

		0x18055DFFB: [!] Reads field m_uiScore from {'this' (function parameter, type Bowling.UIResult)} and stores in a new local {'m_uiScore3' (type Bowling.UIScore)}

		0x18055DFFF: [!] Compares {'m_uiScore3' (type Bowling.UIScore)} and 0
		0x18055E002: Jumps to 0x18055E1B7 (which throws a NRE) if m_uiScore3 equals 0. Implicitly present in managed code, so ignored here.
		0x18055E008: [!] Reads field m_scores from {'m_uiScore3' (type Bowling.UIScore)} and stores in a new local {'m_scores4' (type Bowling.UIScore/Score[])}

		0x18055E00C: [!] Compares {'m_scores4' (type Bowling.UIScore/Score[])} and 0
		0x18055E00F: Jumps to 0x18055E1B7 (which throws a NRE) if m_scores4 equals 0. Implicitly present in managed code, so ignored here.
		0x18055E015: [!] Compares {'local3' (type System.Int32)} and {Property System.Int32 System.Array::Length() on {'m_scores4' (type Bowling.UIScore/Score[])}}
		0x18055E018: Jumps to 0x18055E145 (which throws a NRE) if {'local3' (type System.Int32)} is greater than or equal to {Property System.Int32 System.Array::Length() on {'m_scores4' (type Bowling.UIScore/Score[])}}. Implicitly present in managed code, so ignored here.
		0x18055E01E: [!] Reads a value from the array {'m_scores4' (type Bowling.UIScore/Score[])} at an index specified by the value in , into a new local {'local26' (type Bowling.UIScore/Score)}

		0x18055E022: [!] Compares {'local26' (type Bowling.UIScore/Score)} and 0
		0x18055E025: Jumps to 0x18055E1B7 (which throws a NRE) if local26 equals 0. Implicitly present in managed code, so ignored here.
		0x18055E02B: [!] Reads field m_totalScore from {'local26' (type Bowling.UIScore/Score)} and stores in a new local {'m_totalScore2' (type UILabel)}

		0x18055E02F: [!] Compares {'local3' (type System.Int32)} and {Property System.Int32 System.Array::Length() on {'scores' (function parameter, type Bowling.UIScore/Score[])}}
		0x18055E032: Jumps to 0x18055E132 (which throws a NRE) if {'local3' (type System.Int32)} is greater than or equal to {Property System.Int32 System.Array::Length() on {'scores' (function parameter, type Bowling.UIScore/Score[])}}. Implicitly present in managed code, so ignored here.
		0x18055E038: [!] Reads a value from the array {'scores' (function parameter, type Bowling.UIScore/Score[])} at an index specified by the value in , into a new local {'local28' (type Bowling.UIScore/Score)}

		0x18055E03C: [!] Compares {'local28' (type Bowling.UIScore/Score)} and 0
		0x18055E03F: Jumps to 0x18055E1B7 (which throws a NRE) if local28 equals 0. Implicitly present in managed code, so ignored here.
		0x18055E045: [!] Reads field m_totalScore from {'local28' (type Bowling.UIScore/Score)} and stores in a new local {'m_totalScore3' (type UILabel)}

		0x18055E049: [!] Compares {'m_totalScore3' (type UILabel)} and 0
		0x18055E04C: Jumps to 0x18055E1B7 (which throws a NRE) if m_totalScore3 equals 0. Implicitly present in managed code, so ignored here.
		0x18055E054: [!] Calls managed method System.String UILabel::get_text() on instance {'m_totalScore3' (type UILabel)} and stores the result in {'text2' (type System.String)}

		0x18055E059: [!] Compares {'m_totalScore2' (type UILabel)} and 0
		0x18055E05C: Jumps to 0x18055E1B7 (which throws a NRE) if m_totalScore2 equals 0. Implicitly present in managed code, so ignored here.
		0x18055E065: Copies {'text2' (type System.String)} from rax into rdx
		0x18055E068: Copies {'m_totalScore2' (type UILabel)} from rsi into rcx
		0x18055E06B: [!] Calls managed method System.Void UILabel::set_text(System.String) on instance {'m_totalScore2' (type UILabel)} with arguments [{'text2' (type System.String)}]

		0x18055E070: [!] Reads field m_uiScore from {'this' (function parameter, type Bowling.UIResult)} and stores in a new local {'m_uiScore4' (type Bowling.UIScore)}

		0x18055E074: [!] Compares {'m_uiScore4' (type Bowling.UIScore)} and 0
		0x18055E077: Jumps to 0x18055E1B7 (which throws a NRE) if m_uiScore4 equals 0. Implicitly present in managed code, so ignored here.
		0x18055E07D: [!] Reads field m_scores from {'m_uiScore4' (type Bowling.UIScore)} and stores in a new local {'m_scores5' (type Bowling.UIScore/Score[])}

		0x18055E081: [!] Compares {'m_scores5' (type Bowling.UIScore/Score[])} and 0
		0x18055E084: Jumps to 0x18055E1B7 (which throws a NRE) if m_scores5 equals 0. Implicitly present in managed code, so ignored here.
		0x18055E08A: [!] Compares {'local3' (type System.Int32)} and {Property System.Int32 System.Array::Length() on {'m_scores5' (type Bowling.UIScore/Score[])}}
		0x18055E08D: Jumps to 0x18055E11F (which throws a NRE) if {'local3' (type System.Int32)} is greater than or equal to {Property System.Int32 System.Array::Length() on {'m_scores5' (type Bowling.UIScore/Score[])}}. Implicitly present in managed code, so ignored here.
		0x18055E093: [!] Reads a value from the array {'m_scores5' (type Bowling.UIScore/Score[])} at an index specified by the value in , into a new local {'local35' (type Bowling.UIScore/Score)}

		0x18055E097: [!] Compares {'local35' (type Bowling.UIScore/Score)} and 0
		0x18055E09A: Jumps to 0x18055E1B7 (which throws a NRE) if local35 equals 0. Implicitly present in managed code, so ignored here.
		0x18055E0A0: [!] Reads field m_frameScore from {'local35' (type Bowling.UIScore/Score)} and stores in a new local {'m_frameScore3' (type UILabel[])}

		0x18055E0A4: [!] Compares {'m_frameScore3' (type UILabel[])} and 0
		0x18055E0A7: Jumps to 0x18055E1B7 (which throws a NRE) if m_frameScore3 equals 0. Implicitly present in managed code, so ignored here.
		0x18055E0AD: [!] Compares {'local12' (type System.Int32)} and {Property System.Int32 System.Array::Length() on {'m_frameScore3' (type UILabel[])}}
		0x18055E0B0: Jumps to 0x18055E10C (which throws a NRE) if {'local12' (type System.Int32)} is greater than or equal to {Property System.Int32 System.Array::Length() on {'m_frameScore3' (type UILabel[])}}. Implicitly present in managed code, so ignored here.
		0x18055E0B2: [!] Reads a value from the array {'m_frameScore3' (type UILabel[])} at an index specified by the value in , into a new local {'local37' (type UILabel)}

		0x18055E0B6: [!] Compares {'local37' (type UILabel)} and 0
		0x18055E0B9: Jumps to 0x18055E1B7 (which throws a NRE) if local37 equals 0. Implicitly present in managed code, so ignored here.
		0x18055E0C1: [!] Calls managed method UnityEngine.GameObject UnityEngine.Component::get_gameObject() on instance {'local37' (type UILabel)} and stores the result in {'gameObject2' (type UnityEngine.GameObject)}

		0x18055E0C6: [!] Compares {'gameObject2' (type UnityEngine.GameObject)} and 0
		0x18055E0C9: Jumps to 0x18055E1B7 (which throws a NRE) if gameObject2 equals 0. Implicitly present in managed code, so ignored here.
		0x18055E0D2: [!] Writes the constant 0x1 into operand True (type UInt64) in register rdx
		0x18055E0D4: Copies {'gameObject2' (type UnityEngine.GameObject)} from rax into rcx
		0x18055E0D7: [!] Calls managed method System.Void UnityEngine.GameObject::SetActive(System.Boolean) on instance {'gameObject2' (type UnityEngine.GameObject)} with arguments [True]

		0x18055E0DC: [!] Adds 1 to the value {'local12' (type System.Int32)}, stored in rbx
		0x18055E0DE: Jumps to 0x18055DF40 - which is still in this function, but further up. Probably indicative that this is a loop.
		0x18055E0E3: [!] Adds 1 to the value {'local3' (type System.Int32)}, stored in rdi
		0x18055E0E5: Copies {'local3' (type System.Int32)} from rdi into r9
		0x18055E0E8: Jumps to 0x18055DEB6 - which is still in this function, but further up. Probably indicative that this is a loop.
		0x18055E0ED: Reads unknown value in stack, offset 64 (0x40) and stores the pointer in register rbx as new constant constant31
		0x18055E0F2: Reads unknown value in stack, offset 72 (0x48) and stores the pointer in register rbp as new constant constant32
		0x18055E0F7: Reads unknown value in stack, offset 80 (0x50) and stores the pointer in register rsi as new constant constant33
		0x18055E0FC: Reads unknown value in stack, offset 88 (0x58) and stores the pointer in register rdi as new constant constant34
		0x18055E10B: [!] Returns from the function

		0x18055E10C: [!] Constructs and throws an exception of kind System.IndexOutOfRangeException

		0x18055E111: Copies {'local41' (type System.IndexOutOfRangeException)} from rax into rcx
		0x18055E119: [!] Throws {'local41' (type System.IndexOutOfRangeException)}



	Generated Pseudocode:

	Declaring Type: Bowling.UIResult
	System.Void Setup(Bowling.UIScore/Score[] scores)
		Bowling.UIScore m_uiScore = this.m_uiScore
		ulong local3 = 0
		ulong local4 = 0
		Bowling.UIScore/Score[] m_scores = m_uiScore.m_scores

		if (local4 < m_scores.Length)
		    Bowling.UIScore/Score[] m_scores2 = m_uiScore.m_scores
		    Bowling.UIScore/Score local7 = m_scores2[]
		    UILabel m_totalScore = local7.m_totalScore

		    UnityEngine.GameObject gameObject = m_totalScore.gameObject

		    gameObject.SetActive(True) //(Boolean value)
		    ulong local12 = 0
		    Bowling.UIScore m_uiScore2 = this.m_uiScore
		    Bowling.UIScore/Score[] m_scores3 = m_uiScore2.m_scores
		    Bowling.UIScore/Score local15 = m_scores3[]
		    UILabel[] m_frameScore = local15.m_frameScore

		    if (local12 < m_frameScore.Length)
		        UILabel local17 = m_frameScore[]
		        Bowling.UIScore/Score local18 = scores[]
		        UILabel[] m_frameScore2 = local18.m_frameScore
		        UILabel local20 = m_frameScore2[]

		        System.String text = local20.text

		        local17.text = text
		        Bowling.UIScore m_uiScore3 = this.m_uiScore
		        Bowling.UIScore/Score[] m_scores4 = m_uiScore3.m_scores
		        Bowling.UIScore/Score local26 = m_scores4[]
		        UILabel m_totalScore2 = local26.m_totalScore
		        Bowling.UIScore/Score local28 = scores[]
		        UILabel m_totalScore3 = local28.m_totalScore

		        System.String text2 = m_totalScore3.text

		        m_totalScore2.text = text2
		        Bowling.UIScore m_uiScore4 = this.m_uiScore
		        Bowling.UIScore/Score[] m_scores5 = m_uiScore4.m_scores
		        Bowling.UIScore/Score local35 = m_scores5[]
		        UILabel[] m_frameScore3 = local35.m_frameScore
		        UILabel local37 = m_frameScore3[]

		        UnityEngine.GameObject gameObject2 = local37.gameObject

		        gameObject2.SetActive(True) //(Boolean value)
		        local12 += 1
		    endif
            
		    local3 += 1
		endif
        
		return
		throw new System.IndexOutOfRangeException()
		throw local41


Generated IL:
	Don't know how to write IL for Cpp2IL.Core.Analysis.Actions.x86.Important.RegOffsetArrayValueReadRegToRegAction. Aborting here.


Method: System.Void Bowling.UIResult::SetStage(System.Int32):	Method Body (x86 ASM):
		0x180207540 ret 0		; DEBUG: {Immediate16}/None {Register}/None ||| None | 0 | None ||| 0 | N/A
		0x180207543 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.Void Bowling.UIResult::SetStage(System.Int32):
		End of function at 0x180207544
		Absolute End is at 0x180207544
		Identified Jump Destination addresses:




	Generated Pseudocode:

	Declaring Type: Bowling.UIResult
	System.Void SetStage(System.Int32 stageId)


Generated IL:
	

