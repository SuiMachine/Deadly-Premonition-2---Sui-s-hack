Type: C023_SideQuest_Define

Method: System.Void C023_SideQuest_Define::.ctor():	Method Body (x86 ASM):
		0x1802068B0 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1802068B2 jmp near ptr 0000000180207540h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802068B7 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.Void C023_SideQuest_Define::.ctor():
		End of function at 0x1802068B8
		Absolute End is at 0x1802068B8
		Identified Jump Destination addresses:

		0x1802068B2: [!] Calls managed method System.Void System.Object::.ctor() on instance {'this' (function parameter, type C023_SideQuest_Define)}

		0x1802068B2: [!] Returns from the function




	Generated Pseudocode:

	Declaring Type: C023_SideQuest_Define
	System.Void .ctor()

		base..ctor()
		return


Generated IL:
	IL_0000: ldarg.0
	IL_0001: call System.Void System.Object::.ctor()
	IL_0006: ret
	

Method: System.Void C023_SideQuest_Define::.cctor():	Method Body (x86 ASM):
		0x18021C760 mov [rsp+8],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RSP | 8 | None ||| N/A | N/A
		0x18021C765 push rdi		; DEBUG: {Register}/RDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18021C766 sub rsp,20h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 32
		0x18021C76A cmp byte ptr [18183D2D2h],0		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6467867346 | None ||| N/A | 0
		0x18021C771 jne short 000000018021C785h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021C773 mov ecx,[18151604Ch]		; DEBUG: {Register}/ECX {Memory}/None ||| RIP | 6464561228 | None ||| N/A | N/A
		0x18021C779 call 00000001800FEB90h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021C77E mov byte ptr [18183D2D2h],1		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6467867346 | None ||| N/A | 1
		0x18021C785 mov rcx,[181884F78h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468161400 | None ||| N/A | N/A
		0x18021C78C mov edx,10h		; DEBUG: {Register}/EDX {Immediate32}/None ||| None | 0 | None ||| N/A | 16
		0x18021C791 call 0000000180141320h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021C796 mov rcx,[181884228h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468157992 | None ||| N/A | N/A
		0x18021C79D mov rdi,rax		; DEBUG: {Register}/RDI {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021C7A0 mov rbx,[181875520h]		; DEBUG: {Register}/RBX {Memory}/None ||| RIP | 6468097312 | None ||| N/A | N/A
		0x18021C7A7 test byte ptr [rcx+127h],2		; DEBUG: {Memory}/None {Immediate8}/None ||| RCX | 295 | None ||| N/A | 2
		0x18021C7AE je short 000000018021C7BEh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021C7B0 cmp dword ptr [rcx+0D8h],0		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RCX | 216 | None ||| N/A | 0
		0x18021C7B7 jne short 000000018021C7BEh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021C7B9 call 000000018010EAF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021C7BE xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021C7C0 mov rcx,rbx		; DEBUG: {Register}/RCX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x18021C7C3 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021C7C8 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021C7CB test rdi,rdi		; DEBUG: {Register}/RDI {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x18021C7CE je near ptr 000000018021CB30h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021C7D4 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021C7D7 je short 000000018021C7F1h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021C7D9 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18021C7DC mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021C7DF mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18021C7E3 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021C7E8 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021C7EB je near ptr 000000018021CB38h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021C7F1 cmp dword ptr [rdi+18h],1		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 1
		0x18021C7F5 jbe near ptr 000000018021CB4Bh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021C7FB mov [rdi+28h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 40 | None ||| N/A | N/A
		0x18021C7FF xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021C801 mov rcx,[181875530h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468097328 | None ||| N/A | N/A
		0x18021C808 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021C80D mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021C810 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021C813 je short 000000018021C82Dh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021C815 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18021C818 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021C81B mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18021C81F call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021C824 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021C827 je near ptr 000000018021CB5Eh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021C82D cmp dword ptr [rdi+18h],2		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 2
		0x18021C831 jbe near ptr 000000018021CB71h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021C837 mov [rdi+30h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 48 | None ||| N/A | N/A
		0x18021C83B xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021C83D mov rcx,[181875570h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468097392 | None ||| N/A | N/A
		0x18021C844 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021C849 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021C84C test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021C84F je short 000000018021C869h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021C851 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18021C854 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021C857 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18021C85B call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021C860 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021C863 je near ptr 000000018021CB84h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021C869 cmp dword ptr [rdi+18h],3		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 3
		0x18021C86D jbe near ptr 000000018021CB97h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021C873 mov [rdi+38h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 56 | None ||| N/A | N/A
		0x18021C877 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021C879 mov rcx,[181875590h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468097424 | None ||| N/A | N/A
		0x18021C880 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021C885 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021C888 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021C88B je short 000000018021C8A5h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021C88D mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18021C890 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021C893 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18021C897 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021C89C test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021C89F je near ptr 000000018021CBAAh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021C8A5 cmp dword ptr [rdi+18h],4		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 4
		0x18021C8A9 jbe near ptr 000000018021CBBDh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021C8AF mov [rdi+40h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 64 | None ||| N/A | N/A
		0x18021C8B3 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021C8B5 mov rcx,[1818755C0h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468097472 | None ||| N/A | N/A
		0x18021C8BC call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021C8C1 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021C8C4 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021C8C7 je short 000000018021C8E1h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021C8C9 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18021C8CC mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021C8CF mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18021C8D3 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021C8D8 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021C8DB je near ptr 000000018021CBD0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021C8E1 cmp dword ptr [rdi+18h],5		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 5
		0x18021C8E5 jbe near ptr 000000018021CBE3h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021C8EB mov [rdi+48h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 72 | None ||| N/A | N/A
		0x18021C8EF xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021C8F1 mov rcx,[1818755C8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468097480 | None ||| N/A | N/A
		0x18021C8F8 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021C8FD mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021C900 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021C903 je short 000000018021C91Dh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021C905 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18021C908 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021C90B mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18021C90F call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021C914 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021C917 je near ptr 000000018021CBF6h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021C91D cmp dword ptr [rdi+18h],6		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 6
		0x18021C921 jbe near ptr 000000018021CC09h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021C927 mov [rdi+50h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 80 | None ||| N/A | N/A
		0x18021C92B xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021C92D mov rcx,[181875610h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468097552 | None ||| N/A | N/A
		0x18021C934 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021C939 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021C93C test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021C93F je short 000000018021C959h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021C941 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18021C944 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021C947 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18021C94B call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021C950 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021C953 je near ptr 000000018021CC1Ch		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021C959 cmp dword ptr [rdi+18h],7		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 7
		0x18021C95D jbe near ptr 000000018021CC2Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021C963 mov [rdi+58h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 88 | None ||| N/A | N/A
		0x18021C967 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021C969 mov rcx,[181875638h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468097592 | None ||| N/A | N/A
		0x18021C970 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021C975 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021C978 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021C97B je short 000000018021C995h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021C97D mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18021C980 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021C983 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18021C987 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021C98C test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021C98F je near ptr 000000018021CC42h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021C995 cmp dword ptr [rdi+18h],8		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 8
		0x18021C999 jbe near ptr 000000018021CC55h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021C99F mov [rdi+60h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 96 | None ||| N/A | N/A
		0x18021C9A3 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021C9A5 mov rcx,[181875648h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468097608 | None ||| N/A | N/A
		0x18021C9AC call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021C9B1 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021C9B4 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021C9B7 je short 000000018021C9D1h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021C9B9 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18021C9BC mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021C9BF mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18021C9C3 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021C9C8 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021C9CB je near ptr 000000018021CC68h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021C9D1 cmp dword ptr [rdi+18h],9		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 9
		0x18021C9D5 jbe near ptr 000000018021CC7Bh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021C9DB mov [rdi+68h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 104 | None ||| N/A | N/A
		0x18021C9DF xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021C9E1 mov rcx,[181875688h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468097672 | None ||| N/A | N/A
		0x18021C9E8 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021C9ED mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021C9F0 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021C9F3 je short 000000018021CA0Dh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021C9F5 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18021C9F8 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021C9FB mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18021C9FF call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021CA04 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021CA07 je near ptr 000000018021CC8Eh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021CA0D cmp dword ptr [rdi+18h],0Ah		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 10
		0x18021CA11 jbe near ptr 000000018021CCA1h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021CA17 mov [rdi+70h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 112 | None ||| N/A | N/A
		0x18021CA1B xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021CA1D mov rcx,[181875690h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468097680 | None ||| N/A | N/A
		0x18021CA24 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021CA29 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021CA2C test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021CA2F je short 000000018021CA49h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021CA31 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18021CA34 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021CA37 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18021CA3B call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021CA40 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021CA43 je near ptr 000000018021CCB4h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021CA49 cmp dword ptr [rdi+18h],0Bh		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 11
		0x18021CA4D jbe near ptr 000000018021CCC7h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021CA53 mov [rdi+78h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 120 | None ||| N/A | N/A
		0x18021CA57 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021CA59 mov rcx,[1818756C8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468097736 | None ||| N/A | N/A
		0x18021CA60 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021CA65 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021CA68 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021CA6B je short 000000018021CA85h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021CA6D mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18021CA70 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021CA73 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18021CA77 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021CA7C test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021CA7F je near ptr 000000018021CCDAh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021CA85 cmp dword ptr [rdi+18h],0Ch		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 12
		0x18021CA89 jbe near ptr 000000018021CCEDh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021CA8F mov [rdi+80h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 128 | None ||| N/A | N/A
		0x18021CA96 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021CA98 mov rcx,[1818756F8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468097784 | None ||| N/A | N/A
		0x18021CA9F call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021CAA4 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021CAA7 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021CAAA je short 000000018021CAC4h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021CAAC mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18021CAAF mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021CAB2 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18021CAB6 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021CABB test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021CABE je near ptr 000000018021CD00h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021CAC4 cmp dword ptr [rdi+18h],0Dh		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 13
		0x18021CAC8 jbe near ptr 000000018021CD13h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021CACE mov [rdi+88h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 136 | None ||| N/A | N/A
		0x18021CAD5 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021CAD7 mov rcx,[181875708h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468097800 | None ||| N/A | N/A
		0x18021CADE call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021CAE3 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021CAE6 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021CAE9 je short 000000018021CB03h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021CAEB mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18021CAEE mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021CAF1 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18021CAF5 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021CAFA test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021CAFD je near ptr 000000018021CD26h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021CB03 cmp dword ptr [rdi+18h],0Eh		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 14
		0x18021CB07 jbe near ptr 000000018021CD39h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021CB0D mov [rdi+90h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 144 | None ||| N/A | N/A
		0x18021CB14 mov rax,[18189BAA0h]		; DEBUG: {Register}/RAX {Memory}/None ||| RIP | 6468254368 | None ||| N/A | N/A
		0x18021CB1B mov rbx,[rsp+30h]		; DEBUG: {Register}/RBX {Memory}/None ||| RSP | 48 | None ||| N/A | N/A
		0x18021CB20 mov rcx,[rax+0B8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RAX | 184 | None ||| N/A | N/A
		0x18021CB27 mov [rcx],rdi		; DEBUG: {Memory}/None {Register}/RDI ||| RCX | 0 | None ||| N/A | N/A
		0x18021CB2A add rsp,20h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 32
		0x18021CB2E pop rdi		; DEBUG: {Register}/RDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18021CB2F ret		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18021CB30 xor ecx,ecx		; DEBUG: {Register}/ECX {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x18021CB32 call 000000018012BDA0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021CB37 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18021CB38 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021CB3D mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021CB40 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18021CB43 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021CB45 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021CB4A int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18021CB5E call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021CB63 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021CB66 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18021CB69 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021CB6B call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021CB70 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18021CB84 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021CB89 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021CB8C xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18021CB8F xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021CB91 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021CB96 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18021CBAA call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021CBAF mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021CBB2 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18021CBB5 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021CBB7 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021CBBC int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18021CBD0 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021CBD5 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021CBD8 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18021CBDB xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021CBDD call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021CBE2 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18021CBF6 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021CBFB mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021CBFE xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18021CC01 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021CC03 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021CC08 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18021CC1C call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021CC21 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021CC24 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18021CC27 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021CC29 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021CC2E int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18021CC42 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021CC47 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021CC4A xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18021CC4D xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021CC4F call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021CC54 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18021CC68 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021CC6D mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021CC70 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18021CC73 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021CC75 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021CC7A int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18021CC8E call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021CC93 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021CC96 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18021CC99 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021CC9B call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021CCA0 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18021CCB4 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021CCB9 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021CCBC xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18021CCBF xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021CCC1 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021CCC6 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18021CCDA call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021CCDF mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021CCE2 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18021CCE5 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021CCE7 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021CCEC int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18021CD00 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021CD05 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021CD08 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18021CD0B xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021CD0D call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021CD12 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18021CD26 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021CD2B mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021CD2E xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18021CD31 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021CD33 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021CD38 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Static Method System.Void C023_SideQuest_Define::.cctor():
		End of function at 0x18021CD39
		Absolute End is at 0x18021CD39
		Identified Jump Destination addresses:

		0x18021C765: Saves the content of rdi to the stack
		0x18021C76A: Compares {Unknown Global at 0x18183D2D2, first ten bytes are [0 0 0 0 0 0 0 0 0 0], or as chars "          "} and 0
		0x18021C771: Jumps to 0x18021C785 if {Unknown Global at 0x18183D2D2, first ten bytes are [0 0 0 0 0 0 0 0 0 0], or as chars "          "} != 0

		0x18021C773: Loads string "î" into register rcx as constant {'constant3' (constant value of type Cpp2IL.Core.Analysis.ResultModels.Il2CppString)}
		0x18021C779: Attempts to load the il2cpp metadata for this method (method id 0) and init it cpp-side.

		0x18021C785: Loads the type definition for managed type System.Type[] as a constant "Type[]" in rcx
		0x18021C78C: [!] Writes the constant 0x10 into operand 16 (type UInt64) in register rdx
		0x18021C791: [!] Allocates an array of type System.Type[] of size 16 and stores the result as local0 in register rax

		0x18021C796: Loads the type definition for managed type System.Type as a constant "Type" in rcx
		0x18021C79D: Copies {'local0' (type System.Type[])} from rax into rdi
		0x18021C7A0: Loads the type definition for managed type ESerifSideQ_Pol_C023_1000 as a constant "ESerifSideQ_Pol_C023_1000" in rbx
		0x18021C7A7: Compares "{il2cpp field on {'Type' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" and 2
		0x18021C7AE: Jumps to 0x18021C7BE if "{il2cpp field on {'Type' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" equals 2

		0x18021C7B0: Compares "{il2cpp field on {'Type' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" and 0
		0x18021C7B7: Jumps to 0x18021C7BE if "{il2cpp field on {'Type' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" != 0

		0x18021C7B9: Calls the il2cpp cctor for the type System.Type
		0x18021C7C0: Copies {'ESerifSideQ_Pol_C023_1000' (constant value of type Mono.Cecil.TypeReference)} from rbx into rcx
		0x18021C7C3: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C023_1000' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle' (type System.Type)}

		0x18021C7C8: Copies {'typeFromHandle' (type System.Type)} from rax into rbx
		0x18021C7CB: [!] Compares {'local0' (type System.Type[])} and 0
		0x18021C7CE: Jumps to 0x18021CB30 (which throws a NRE) if local0 equals 0. Implicitly present in managed code, so ignored here.
		0x18021C7D4: [!] Compares {'typeFromHandle' (type System.Type)} and 0
		0x18021C7D7: Jumps to 0x18021C7F1 (which is an if statement's body) if typeFromHandle equals 0 ;  - Increasing indentation - is standard if, unimportant is False

		0x18021C7D9: Loads the class pointer from local0 into a constant constant14 in register rdx
		0x18021C7DC: Copies {'typeFromHandle' (type System.Type)} from rax into rcx
		0x18021C7DF: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18021C7E8: [!] Compares {'typeFromHandle' (type System.Type)} and 0
		0x18021C7EB: Jumps to 0x18021CB38 if typeFromHandle equals 0 ;  - This is probably a goto, jumping to 0x18021CB38 which is after end of current block @ 0x18021C7F1 (started at 0x18021C7D9)

		0x18021C7F1: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 1
		0x18021C7F5: Jumps to 0x18021CB4B (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 1. Implicitly present in managed code, so ignored here.
		0x18021C7FB: Sets the value at offset 1 in array local0 to {'typeFromHandle' (type System.Type)}
		0x18021C801: Loads the type definition for managed type ESerifSideQ_Pol_C023_1001 as a constant "ESerifSideQ_Pol_C023_1001" in rcx
		0x18021C808: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C023_1001' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle2' (type System.Type)}

		0x18021C80D: Copies {'typeFromHandle2' (type System.Type)} from rax into rbx
		0x18021C810: [!] Compares {'typeFromHandle2' (type System.Type)} and 0
		0x18021C813: Jumps to 0x18021C82D if typeFromHandle2 equals 0 ;  - This is probably a goto, jumping to 0x18021C82D which is after end of current block @ 0x18021C7F1 (started at 0x18021C7D9)

		0x18021C815: Loads the class pointer from local0 into a constant constant19 in register rdx
		0x18021C818: Copies {'typeFromHandle2' (type System.Type)} from rax into rcx
		0x18021C81B: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18021C824: [!] Compares {'typeFromHandle2' (type System.Type)} and 0
		0x18021C827: Jumps to 0x18021CB5E if typeFromHandle2 equals 0 ;  - This is probably a goto, jumping to 0x18021CB5E which is after end of current block @ 0x18021C7F1 (started at 0x18021C7D9)

		0x18021C82D: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 2
		0x18021C831: Jumps to 0x18021CB71 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 2. Implicitly present in managed code, so ignored here.
		0x18021C837: Sets the value at offset 2 in array local0 to {'typeFromHandle2' (type System.Type)}
		0x18021C83D: Loads the type definition for managed type ESerifSideQ_Pol_C023_1002 as a constant "ESerifSideQ_Pol_C023_1002" in rcx
		0x18021C844: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C023_1002' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle3' (type System.Type)}

		0x18021C849: Copies {'typeFromHandle3' (type System.Type)} from rax into rbx
		0x18021C84C: [!] Compares {'typeFromHandle3' (type System.Type)} and 0
		0x18021C84F: Jumps to 0x18021C869 if typeFromHandle3 equals 0 ;  - This is probably a goto, jumping to 0x18021C869 which is after end of current block @ 0x18021C7F1 (started at 0x18021C7D9)

		0x18021C851: Loads the class pointer from local0 into a constant constant24 in register rdx
		0x18021C854: Copies {'typeFromHandle3' (type System.Type)} from rax into rcx
		0x18021C857: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18021C860: [!] Compares {'typeFromHandle3' (type System.Type)} and 0
		0x18021C863: Jumps to 0x18021CB84 if typeFromHandle3 equals 0 ;  - This is probably a goto, jumping to 0x18021CB84 which is after end of current block @ 0x18021C7F1 (started at 0x18021C7D9)

		0x18021C869: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 3
		0x18021C86D: Jumps to 0x18021CB97 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 3. Implicitly present in managed code, so ignored here.
		0x18021C873: Sets the value at offset 3 in array local0 to {'typeFromHandle3' (type System.Type)}
		0x18021C879: Loads the type definition for managed type ESerifSideQ_Pol_C023_1003 as a constant "ESerifSideQ_Pol_C023_1003" in rcx
		0x18021C880: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C023_1003' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle4' (type System.Type)}

		0x18021C885: Copies {'typeFromHandle4' (type System.Type)} from rax into rbx
		0x18021C888: [!] Compares {'typeFromHandle4' (type System.Type)} and 0
		0x18021C88B: Jumps to 0x18021C8A5 if typeFromHandle4 equals 0 ;  - This is probably a goto, jumping to 0x18021C8A5 which is after end of current block @ 0x18021C7F1 (started at 0x18021C7D9)

		0x18021C88D: Loads the class pointer from local0 into a constant constant29 in register rdx
		0x18021C890: Copies {'typeFromHandle4' (type System.Type)} from rax into rcx
		0x18021C893: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18021C89C: [!] Compares {'typeFromHandle4' (type System.Type)} and 0
		0x18021C89F: Jumps to 0x18021CBAA if typeFromHandle4 equals 0 ;  - This is probably a goto, jumping to 0x18021CBAA which is after end of current block @ 0x18021C7F1 (started at 0x18021C7D9)

		0x18021C8A5: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 4
		0x18021C8A9: Jumps to 0x18021CBBD (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 4. Implicitly present in managed code, so ignored here.
		0x18021C8AF: Sets the value at offset 4 in array local0 to {'typeFromHandle4' (type System.Type)}
		0x18021C8B5: Loads the type definition for managed type ESerifSideQ_Pol_C023_1004 as a constant "ESerifSideQ_Pol_C023_1004" in rcx
		0x18021C8BC: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C023_1004' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle5' (type System.Type)}

		0x18021C8C1: Copies {'typeFromHandle5' (type System.Type)} from rax into rbx
		0x18021C8C4: [!] Compares {'typeFromHandle5' (type System.Type)} and 0
		0x18021C8C7: Jumps to 0x18021C8E1 if typeFromHandle5 equals 0 ;  - This is probably a goto, jumping to 0x18021C8E1 which is after end of current block @ 0x18021C7F1 (started at 0x18021C7D9)

		0x18021C8C9: Loads the class pointer from local0 into a constant constant34 in register rdx
		0x18021C8CC: Copies {'typeFromHandle5' (type System.Type)} from rax into rcx
		0x18021C8CF: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18021C8D8: [!] Compares {'typeFromHandle5' (type System.Type)} and 0
		0x18021C8DB: Jumps to 0x18021CBD0 if typeFromHandle5 equals 0 ;  - This is probably a goto, jumping to 0x18021CBD0 which is after end of current block @ 0x18021C7F1 (started at 0x18021C7D9)

		0x18021C8E1: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 5
		0x18021C8E5: Jumps to 0x18021CBE3 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 5. Implicitly present in managed code, so ignored here.
		0x18021C8EB: Sets the value at offset 5 in array local0 to {'typeFromHandle5' (type System.Type)}
		0x18021C8F1: Loads the type definition for managed type ESerifSideQ_Pol_C023_1005 as a constant "ESerifSideQ_Pol_C023_1005" in rcx
		0x18021C8F8: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C023_1005' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle6' (type System.Type)}

		0x18021C8FD: Copies {'typeFromHandle6' (type System.Type)} from rax into rbx
		0x18021C900: [!] Compares {'typeFromHandle6' (type System.Type)} and 0
		0x18021C903: Jumps to 0x18021C91D if typeFromHandle6 equals 0 ;  - This is probably a goto, jumping to 0x18021C91D which is after end of current block @ 0x18021C7F1 (started at 0x18021C7D9)

		0x18021C905: Loads the class pointer from local0 into a constant constant39 in register rdx
		0x18021C908: Copies {'typeFromHandle6' (type System.Type)} from rax into rcx
		0x18021C90B: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18021C914: [!] Compares {'typeFromHandle6' (type System.Type)} and 0
		0x18021C917: Jumps to 0x18021CBF6 if typeFromHandle6 equals 0 ;  - This is probably a goto, jumping to 0x18021CBF6 which is after end of current block @ 0x18021C7F1 (started at 0x18021C7D9)

		0x18021C91D: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 6
		0x18021C921: Jumps to 0x18021CC09 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 6. Implicitly present in managed code, so ignored here.
		0x18021C927: Sets the value at offset 6 in array local0 to {'typeFromHandle6' (type System.Type)}
		0x18021C92D: Loads the type definition for managed type ESerifSideQ_Pol_C023_1006 as a constant "ESerifSideQ_Pol_C023_1006" in rcx
		0x18021C934: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C023_1006' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle7' (type System.Type)}

		0x18021C939: Copies {'typeFromHandle7' (type System.Type)} from rax into rbx
		0x18021C93C: [!] Compares {'typeFromHandle7' (type System.Type)} and 0
		0x18021C93F: Jumps to 0x18021C959 if typeFromHandle7 equals 0 ;  - This is probably a goto, jumping to 0x18021C959 which is after end of current block @ 0x18021C7F1 (started at 0x18021C7D9)

		0x18021C941: Loads the class pointer from local0 into a constant constant44 in register rdx
		0x18021C944: Copies {'typeFromHandle7' (type System.Type)} from rax into rcx
		0x18021C947: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18021C950: [!] Compares {'typeFromHandle7' (type System.Type)} and 0
		0x18021C953: Jumps to 0x18021CC1C if typeFromHandle7 equals 0 ;  - This is probably a goto, jumping to 0x18021CC1C which is after end of current block @ 0x18021C7F1 (started at 0x18021C7D9)

		0x18021C959: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 7
		0x18021C95D: Jumps to 0x18021CC2F (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 7. Implicitly present in managed code, so ignored here.
		0x18021C963: Sets the value at offset 7 in array local0 to {'typeFromHandle7' (type System.Type)}
		0x18021C969: Loads the type definition for managed type ESerifSideQ_Pol_C023_1007 as a constant "ESerifSideQ_Pol_C023_1007" in rcx
		0x18021C970: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C023_1007' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle8' (type System.Type)}

		0x18021C975: Copies {'typeFromHandle8' (type System.Type)} from rax into rbx
		0x18021C978: [!] Compares {'typeFromHandle8' (type System.Type)} and 0
		0x18021C97B: Jumps to 0x18021C995 if typeFromHandle8 equals 0 ;  - This is probably a goto, jumping to 0x18021C995 which is after end of current block @ 0x18021C7F1 (started at 0x18021C7D9)

		0x18021C97D: Loads the class pointer from local0 into a constant constant49 in register rdx
		0x18021C980: Copies {'typeFromHandle8' (type System.Type)} from rax into rcx
		0x18021C983: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18021C98C: [!] Compares {'typeFromHandle8' (type System.Type)} and 0
		0x18021C98F: Jumps to 0x18021CC42 if typeFromHandle8 equals 0 ;  - This is probably a goto, jumping to 0x18021CC42 which is after end of current block @ 0x18021C7F1 (started at 0x18021C7D9)

		0x18021C995: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 8
		0x18021C999: Jumps to 0x18021CC55 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 8. Implicitly present in managed code, so ignored here.
		0x18021C99F: Sets the value at offset 8 in array local0 to {'typeFromHandle8' (type System.Type)}
		0x18021C9A5: Loads the type definition for managed type ESerifSideQ_Pol_C023_1008 as a constant "ESerifSideQ_Pol_C023_1008" in rcx
		0x18021C9AC: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C023_1008' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle9' (type System.Type)}

		0x18021C9B1: Copies {'typeFromHandle9' (type System.Type)} from rax into rbx
		0x18021C9B4: [!] Compares {'typeFromHandle9' (type System.Type)} and 0
		0x18021C9B7: Jumps to 0x18021C9D1 if typeFromHandle9 equals 0 ;  - This is probably a goto, jumping to 0x18021C9D1 which is after end of current block @ 0x18021C7F1 (started at 0x18021C7D9)

		0x18021C9B9: Loads the class pointer from local0 into a constant constant54 in register rdx
		0x18021C9BC: Copies {'typeFromHandle9' (type System.Type)} from rax into rcx
		0x18021C9BF: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18021C9C8: [!] Compares {'typeFromHandle9' (type System.Type)} and 0
		0x18021C9CB: Jumps to 0x18021CC68 if typeFromHandle9 equals 0 ;  - This is probably a goto, jumping to 0x18021CC68 which is after end of current block @ 0x18021C7F1 (started at 0x18021C7D9)

		0x18021C9D1: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 9
		0x18021C9D5: Jumps to 0x18021CC7B (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 9. Implicitly present in managed code, so ignored here.
		0x18021C9DB: Sets the value at offset 9 in array local0 to {'typeFromHandle9' (type System.Type)}
		0x18021C9E1: Loads the type definition for managed type ESerifSideQ_Pol_C023_1009 as a constant "ESerifSideQ_Pol_C023_1009" in rcx
		0x18021C9E8: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C023_1009' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle10' (type System.Type)}

		0x18021C9ED: Copies {'typeFromHandle10' (type System.Type)} from rax into rbx
		0x18021C9F0: [!] Compares {'typeFromHandle10' (type System.Type)} and 0
		0x18021C9F3: Jumps to 0x18021CA0D if typeFromHandle10 equals 0 ;  - This is probably a goto, jumping to 0x18021CA0D which is after end of current block @ 0x18021C7F1 (started at 0x18021C7D9)

		0x18021C9F5: Loads the class pointer from local0 into a constant constant59 in register rdx
		0x18021C9F8: Copies {'typeFromHandle10' (type System.Type)} from rax into rcx
		0x18021C9FB: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18021CA04: [!] Compares {'typeFromHandle10' (type System.Type)} and 0
		0x18021CA07: Jumps to 0x18021CC8E if typeFromHandle10 equals 0 ;  - This is probably a goto, jumping to 0x18021CC8E which is after end of current block @ 0x18021C7F1 (started at 0x18021C7D9)

		0x18021CA0D: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 10
		0x18021CA11: Jumps to 0x18021CCA1 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 10. Implicitly present in managed code, so ignored here.
		0x18021CA17: Sets the value at offset 10 in array local0 to {'typeFromHandle10' (type System.Type)}
		0x18021CA1D: Loads the type definition for managed type ESerifSideQ_Pol_C023_1010 as a constant "ESerifSideQ_Pol_C023_1010" in rcx
		0x18021CA24: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C023_1010' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle11' (type System.Type)}

		0x18021CA29: Copies {'typeFromHandle11' (type System.Type)} from rax into rbx
		0x18021CA2C: [!] Compares {'typeFromHandle11' (type System.Type)} and 0
		0x18021CA2F: Jumps to 0x18021CA49 if typeFromHandle11 equals 0 ;  - This is probably a goto, jumping to 0x18021CA49 which is after end of current block @ 0x18021C7F1 (started at 0x18021C7D9)

		0x18021CA31: Loads the class pointer from local0 into a constant constant64 in register rdx
		0x18021CA34: Copies {'typeFromHandle11' (type System.Type)} from rax into rcx
		0x18021CA37: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18021CA40: [!] Compares {'typeFromHandle11' (type System.Type)} and 0
		0x18021CA43: Jumps to 0x18021CCB4 if typeFromHandle11 equals 0 ;  - This is probably a goto, jumping to 0x18021CCB4 which is after end of current block @ 0x18021C7F1 (started at 0x18021C7D9)

		0x18021CA49: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 11
		0x18021CA4D: Jumps to 0x18021CCC7 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 11. Implicitly present in managed code, so ignored here.
		0x18021CA53: Sets the value at offset 11 in array local0 to {'typeFromHandle11' (type System.Type)}
		0x18021CA59: Loads the type definition for managed type ESerifSideQ_Pol_C023_1011 as a constant "ESerifSideQ_Pol_C023_1011" in rcx
		0x18021CA60: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C023_1011' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle12' (type System.Type)}

		0x18021CA65: Copies {'typeFromHandle12' (type System.Type)} from rax into rbx
		0x18021CA68: [!] Compares {'typeFromHandle12' (type System.Type)} and 0
		0x18021CA6B: Jumps to 0x18021CA85 if typeFromHandle12 equals 0 ;  - This is probably a goto, jumping to 0x18021CA85 which is after end of current block @ 0x18021C7F1 (started at 0x18021C7D9)

		0x18021CA6D: Loads the class pointer from local0 into a constant constant69 in register rdx
		0x18021CA70: Copies {'typeFromHandle12' (type System.Type)} from rax into rcx
		0x18021CA73: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18021CA7C: [!] Compares {'typeFromHandle12' (type System.Type)} and 0
		0x18021CA7F: Jumps to 0x18021CCDA if typeFromHandle12 equals 0 ;  - This is probably a goto, jumping to 0x18021CCDA which is after end of current block @ 0x18021C7F1 (started at 0x18021C7D9)

		0x18021CA85: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 12
		0x18021CA89: Jumps to 0x18021CCED (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 12. Implicitly present in managed code, so ignored here.
		0x18021CA8F: Sets the value at offset 12 in array local0 to {'typeFromHandle12' (type System.Type)}
		0x18021CA98: Loads the type definition for managed type ESerifSideQ_Pol_C023_1012 as a constant "ESerifSideQ_Pol_C023_1012" in rcx
		0x18021CA9F: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C023_1012' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle13' (type System.Type)}

		0x18021CAA4: Copies {'typeFromHandle13' (type System.Type)} from rax into rbx
		0x18021CAA7: [!] Compares {'typeFromHandle13' (type System.Type)} and 0
		0x18021CAAA: Jumps to 0x18021CAC4 if typeFromHandle13 equals 0 ;  - This is probably a goto, jumping to 0x18021CAC4 which is after end of current block @ 0x18021C7F1 (started at 0x18021C7D9)

		0x18021CAAC: Loads the class pointer from local0 into a constant constant74 in register rdx
		0x18021CAAF: Copies {'typeFromHandle13' (type System.Type)} from rax into rcx
		0x18021CAB2: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18021CABB: [!] Compares {'typeFromHandle13' (type System.Type)} and 0
		0x18021CABE: Jumps to 0x18021CD00 if typeFromHandle13 equals 0 ;  - This is probably a goto, jumping to 0x18021CD00 which is after end of current block @ 0x18021C7F1 (started at 0x18021C7D9)

		0x18021CAC4: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 13
		0x18021CAC8: Jumps to 0x18021CD13 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 13. Implicitly present in managed code, so ignored here.
		0x18021CACE: Sets the value at offset 13 in array local0 to {'typeFromHandle13' (type System.Type)}
		0x18021CAD7: Loads the type definition for managed type ESerifSideQ_Pol_C023_1013 as a constant "ESerifSideQ_Pol_C023_1013" in rcx
		0x18021CADE: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C023_1013' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle14' (type System.Type)}

		0x18021CAE3: Copies {'typeFromHandle14' (type System.Type)} from rax into rbx
		0x18021CAE6: [!] Compares {'typeFromHandle14' (type System.Type)} and 0
		0x18021CAE9: Jumps to 0x18021CB03 if typeFromHandle14 equals 0 ;  - This is probably a goto, jumping to 0x18021CB03 which is after end of current block @ 0x18021C7F1 (started at 0x18021C7D9)

		0x18021CAEB: Loads the class pointer from local0 into a constant constant79 in register rdx
		0x18021CAEE: Copies {'typeFromHandle14' (type System.Type)} from rax into rcx
		0x18021CAF1: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18021CAFA: [!] Compares {'typeFromHandle14' (type System.Type)} and 0
		0x18021CAFD: Jumps to 0x18021CD26 if typeFromHandle14 equals 0 ;  - This is probably a goto, jumping to 0x18021CD26 which is after end of current block @ 0x18021C7F1 (started at 0x18021C7D9)

		0x18021CB03: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 14
		0x18021CB07: Jumps to 0x18021CD39 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 14. Implicitly present in managed code, so ignored here.
		0x18021CB0D: Sets the value at offset 14 in array local0 to {'typeFromHandle14' (type System.Type)}
		0x18021CB14: Loads the type definition for managed type C023_SideQuest_Define as a constant "C023_SideQuest_Define" in rax
		0x18021CB1B: Reads unknown value in stack, offset 48 (0x30) and stores the pointer in register rbx as new constant constant83
		0x18021CB20: Loads the pointer to the static fields for C023_SideQuest_Define and stores it in constant84 in register rcx
		0x18021CB27: [!] Sets static field . to {'local0' (type System.Type[])}
		0x18021CB2F: [!] Returns from the function

		0x18021CB32: [!] Constructs and throws an exception of kind System.NullReferenceException

		0x18021CB3D: Copies {'local30' (type System.NullReferenceException)} from rax into rcx
		0x18021CB63: Copies {'local30' (type System.NullReferenceException)} from rax into rcx
		0x18021CB89: Copies {'local30' (type System.NullReferenceException)} from rax into rcx
		0x18021CBAF: Copies {'local30' (type System.NullReferenceException)} from rax into rcx
		0x18021CBD5: Copies {'local30' (type System.NullReferenceException)} from rax into rcx
		0x18021CBFB: Copies {'local30' (type System.NullReferenceException)} from rax into rcx
		0x18021CC21: Copies {'local30' (type System.NullReferenceException)} from rax into rcx
		0x18021CC47: Copies {'local30' (type System.NullReferenceException)} from rax into rcx
		0x18021CC6D: Copies {'local30' (type System.NullReferenceException)} from rax into rcx
		0x18021CC93: Copies {'local30' (type System.NullReferenceException)} from rax into rcx
		0x18021CCB9: Copies {'local30' (type System.NullReferenceException)} from rax into rcx
		0x18021CCDF: Copies {'local30' (type System.NullReferenceException)} from rax into rcx
		0x18021CD05: Copies {'local30' (type System.NullReferenceException)} from rax into rcx
		0x18021CD2B: Copies {'local30' (type System.NullReferenceException)} from rax into rcx



	Generated Pseudocode:

	Declaring Type: C023_SideQuest_Define
	static System.Void .cctor()
		System.Type[] local0 = new System.Type[16]

		System.Type typeFromHandle = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C023_1000' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle != 0)

		    if (typeFromHandle == 0)
                goto INSN_18021CB38
            endif
		endif
        
		local0[1] = typeFromHandle

		System.Type typeFromHandle2 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C023_1001' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle2 == 0)
            goto INSN_18021C82D
        endif

		if (typeFromHandle2 == 0)
            goto INSN_18021CB5E
        endif

		INSN_18021C82D:
		local0[2] = typeFromHandle2

		System.Type typeFromHandle3 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C023_1002' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle3 == 0)
            goto INSN_18021C869
        endif

		if (typeFromHandle3 == 0)
            goto INSN_18021CB84
        endif

		INSN_18021C869:
		local0[3] = typeFromHandle3

		System.Type typeFromHandle4 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C023_1003' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle4 == 0)
            goto INSN_18021C8A5
        endif

		if (typeFromHandle4 == 0)
            goto INSN_18021CBAA
        endif

		INSN_18021C8A5:
		local0[4] = typeFromHandle4

		System.Type typeFromHandle5 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C023_1004' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle5 == 0)
            goto INSN_18021C8E1
        endif

		if (typeFromHandle5 == 0)
            goto INSN_18021CBD0
        endif

		INSN_18021C8E1:
		local0[5] = typeFromHandle5

		System.Type typeFromHandle6 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C023_1005' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle6 == 0)
            goto INSN_18021C91D
        endif

		if (typeFromHandle6 == 0)
            goto INSN_18021CBF6
        endif

		INSN_18021C91D:
		local0[6] = typeFromHandle6

		System.Type typeFromHandle7 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C023_1006' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle7 == 0)
            goto INSN_18021C959
        endif

		if (typeFromHandle7 == 0)
            goto INSN_18021CC1C
        endif

		INSN_18021C959:
		local0[7] = typeFromHandle7

		System.Type typeFromHandle8 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C023_1007' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle8 == 0)
            goto INSN_18021C995
        endif

		if (typeFromHandle8 == 0)
            goto INSN_18021CC42
        endif

		INSN_18021C995:
		local0[8] = typeFromHandle8

		System.Type typeFromHandle9 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C023_1008' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle9 == 0)
            goto INSN_18021C9D1
        endif

		if (typeFromHandle9 == 0)
            goto INSN_18021CC68
        endif

		INSN_18021C9D1:
		local0[9] = typeFromHandle9

		System.Type typeFromHandle10 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C023_1009' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle10 == 0)
            goto INSN_18021CA0D
        endif

		if (typeFromHandle10 == 0)
            goto INSN_18021CC8E
        endif

		INSN_18021CA0D:
		local0[10] = typeFromHandle10

		System.Type typeFromHandle11 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C023_1010' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle11 == 0)
            goto INSN_18021CA49
        endif

		if (typeFromHandle11 == 0)
            goto INSN_18021CCB4
        endif

		INSN_18021CA49:
		local0[11] = typeFromHandle11

		System.Type typeFromHandle12 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C023_1011' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle12 == 0)
            goto INSN_18021CA85
        endif

		if (typeFromHandle12 == 0)
            goto INSN_18021CCDA
        endif

		INSN_18021CA85:
		local0[12] = typeFromHandle12

		System.Type typeFromHandle13 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C023_1012' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle13 == 0)
            goto INSN_18021CAC4
        endif

		if (typeFromHandle13 == 0)
            goto INSN_18021CD00
        endif

		INSN_18021CAC4:
		local0[13] = typeFromHandle13

		System.Type typeFromHandle14 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C023_1013' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle14 == 0)
            goto INSN_18021CB03
        endif

		if (typeFromHandle14 == 0)
            goto INSN_18021CD26
        endif

		INSN_18021CB03:
		local0[14] = typeFromHandle14
		. = local0
		return
		throw new System.NullReferenceException()

		INSN_18021CB38:

		INSN_18021CB5E:

		INSN_18021CB84:

		INSN_18021CBAA:

		INSN_18021CBD0:

		INSN_18021CBF6:

		INSN_18021CC1C:

		INSN_18021CC42:

		INSN_18021CC68:

		INSN_18021CC8E:

		INSN_18021CCB4:

		INSN_18021CCDA:

		INSN_18021CD00:

		INSN_18021CD26:


Generated IL:
	Action of type Cpp2IL.Core.Analysis.Actions.x86.Important.RegToStaticFieldAction at (0x18021CB27) is corrupt (No further info) and cannot be created as IL. Aborting here.


