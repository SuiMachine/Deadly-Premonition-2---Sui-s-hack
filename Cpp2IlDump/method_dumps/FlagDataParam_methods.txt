Type: FlagDataParam

Method: System.Void FlagDataParam::.ctor():	Method Body (x86 ASM):
		0x1802EE550 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1802EE552 jmp near ptr 0000000180CD5B20h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802EE557 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.Void FlagDataParam::.ctor():
		End of function at 0x1802EE558
		Absolute End is at 0x1802EE558
		Identified Jump Destination addresses:

		0x1802EE552: [!] Calls managed method System.Void UnityEngine.ScriptableObject::.ctor() on instance {'this' (function parameter, type FlagDataParam)}

		0x1802EE552: [!] Returns from the function




	Generated Pseudocode:

	Declaring Type: FlagDataParam
	System.Void .ctor()

		base..ctor()
		return


Generated IL:
	IL_0000: ldarg.0
	IL_0001: call System.Void UnityEngine.ScriptableObject::.ctor()
	IL_0006: ret
	

Method: System.Boolean FlagDataParam::IsSatisfyCondition(ECondition):	Method Body (x86 ASM):
		0x180436CA0 sub rsp,28h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 40
		0x180436CA4 xor r9d,r9d		; DEBUG: {Register}/R9D {Register}/R9D ||| None | 0 | None ||| N/A | N/A
		0x180436CA7 mov qword ptr [rsp+48h],0		; DEBUG: {Memory}/None {Immediate32to64}/None ||| RSP | 72 | None ||| N/A | 0
		0x180436CB0 lea r8,[rsp+48h]		; DEBUG: {Register}/R8 {Memory}/None ||| RSP | 72 | None ||| N/A | N/A
		0x180436CB5 call 0000000180436830h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180436CBA add rsp,28h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 40
		0x180436CBE ret		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180436CBF int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.Boolean FlagDataParam::IsSatisfyCondition(ECondition):
		End of function at 0x180436CC0
		Absolute End is at 0x180436CC0
		Identified Jump Destination addresses:

		0x180436CA7: Moves 0 (immediate ulong value) to the stack at offset 72 as a new local local3
		0x180436CB0: Loads a pointer to stack offset 0x48 into register r8 as new constant constant1
		0x180436CB5: [!] Calls managed method System.Boolean FlagDataParam::IsSatisfyCondition(ECondition,System.Collections.Generic.List`1<EPartialCondition>&) on instance {'this' (function parameter, type FlagDataParam)} and stores the result in {'isSatisfyCondition' (type System.Boolean)} ;  - parameters do not match, but there is only one function at this address.

		0x180436CBE: [!] Returns {'isSatisfyCondition' (type System.Boolean)} from the function




	Generated Pseudocode:

	Declaring Type: FlagDataParam
	System.Boolean IsSatisfyCondition(ECondition conditionId)

		System.Boolean isSatisfyCondition = this.IsSatisfyCondition()
		return isSatisfyCondition


Generated IL:
	Action of type Cpp2IL.Core.Analysis.Actions.x86.Important.CallManagedFunctionAction at (0x180436CB5) is corrupt (Couldn't get arguments, or actual count (-1) is not equal to expected count (2)) and cannot be created as IL. Aborting here.


Method: System.Boolean FlagDataParam::IsSatisfyCondition(ECondition,System.Collections.Generic.List`1<EPartialCondition>&):	Method Body (x86 ASM):
		0x180436830 mov [rsp+18h],r8		; DEBUG: {Memory}/None {Register}/R8 ||| RSP | 24 | None ||| N/A | N/A
		0x180436835 push rbx		; DEBUG: {Register}/RBX {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180436836 push rsi		; DEBUG: {Register}/RSI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180436837 push rdi		; DEBUG: {Register}/RDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180436838 sub rsp,30h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 48
		0x18043683C cmp byte ptr [18183E2BEh],0		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6467871422 | None ||| N/A | 0
		0x180436843 mov rsi,r8		; DEBUG: {Register}/RSI {Register}/R8 ||| None | 0 | None ||| N/A | N/A
		0x180436846 mov ebx,edx		; DEBUG: {Register}/EBX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180436848 mov rdi,rcx		; DEBUG: {Register}/RDI {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x18043684B jne short 000000018043685Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18043684D mov ecx,[1814C98B4h]		; DEBUG: {Register}/ECX {Memory}/None ||| RIP | 6464247988 | None ||| N/A | N/A
		0x180436853 call 00000001800FEB90h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180436858 mov byte ptr [18183E2BEh],1		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6467871422 | None ||| N/A | 1
		0x18043685F cmp ebx,5EC5h		; DEBUG: {Register}/EBX {Immediate32}/None ||| None | 0 | None ||| N/A | 24261
		0x180436865 je near ptr 0000000180436B91h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18043686B cmp byte ptr [18183E2BFh],0		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6467871423 | None ||| N/A | 0
		0x180436872 jne short 0000000180436886h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180436874 mov ecx,[1814C98A4h]		; DEBUG: {Register}/ECX {Memory}/None ||| RIP | 6464247972 | None ||| N/A | N/A
		0x18043687A call 00000001800FEB90h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18043687F mov byte ptr [18183E2BFh],1		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6467871423 | None ||| N/A | 1
		0x180436886 mov rax,[1818A20D0h]		; DEBUG: {Register}/RAX {Memory}/None ||| RIP | 6468280528 | None ||| N/A | N/A
		0x18043688D test byte ptr [rax+127h],2		; DEBUG: {Memory}/None {Immediate8}/None ||| RAX | 295 | None ||| N/A | 2
		0x180436894 je short 00000001804368AEh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180436896 cmp dword ptr [rax+0D8h],0		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RAX | 216 | None ||| N/A | 0
		0x18043689D jne short 00000001804368AEh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18043689F mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1804368A2 call 000000018010EAF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804368A7 mov rax,[1818A20D0h]		; DEBUG: {Register}/RAX {Memory}/None ||| RIP | 6468280528 | None ||| N/A | N/A
		0x1804368AE mov rax,[rax+0B8h]		; DEBUG: {Register}/RAX {Memory}/None ||| RAX | 184 | None ||| N/A | N/A
		0x1804368B5 mov [rsp+50h],rbp		; DEBUG: {Memory}/None {Register}/RBP ||| RSP | 80 | None ||| N/A | N/A
		0x1804368BA mov [rsp+58h],r12		; DEBUG: {Memory}/None {Register}/R12 ||| RSP | 88 | None ||| N/A | N/A
		0x1804368BF mov [rsp+68h],r13		; DEBUG: {Memory}/None {Register}/R13 ||| RSP | 104 | None ||| N/A | N/A
		0x1804368C4 mov ecx,[rax]		; DEBUG: {Register}/ECX {Memory}/None ||| RAX | 0 | None ||| N/A | N/A
		0x1804368C6 mov eax,ebx		; DEBUG: {Register}/EAX {Register}/EBX ||| None | 0 | None ||| N/A | N/A
		0x1804368C8 cdq		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1804368C9 mov [rsp+28h],r14		; DEBUG: {Memory}/None {Register}/R14 ||| RSP | 40 | None ||| N/A | N/A
		0x1804368CE idiv ecx		; DEBUG: {Register}/ECX {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1804368D0 mov [rsp+20h],r15		; DEBUG: {Memory}/None {Register}/R15 ||| RSP | 32 | None ||| N/A | N/A
		0x1804368D5 imul ecx,eax		; DEBUG: {Register}/ECX {Register}/EAX ||| None | 0 | None ||| N/A | N/A
		0x1804368D8 sub ebx,ecx		; DEBUG: {Register}/EBX {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x1804368DA test eax,eax		; DEBUG: {Register}/EAX {Register}/EAX ||| None | 0 | None ||| N/A | N/A
		0x1804368DC js near ptr 0000000180436C42h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804368E2 mov rdi,[rdi+18h]		; DEBUG: {Register}/RDI {Memory}/None ||| RDI | 24 | None ||| N/A | N/A
		0x1804368E6 test rdi,rdi		; DEBUG: {Register}/RDI {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x1804368E9 je near ptr 0000000180436C8Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804368EF cmp [rdi+18h],eax		; DEBUG: {Memory}/None {Register}/EAX ||| RDI | 24 | None ||| N/A | N/A
		0x1804368F2 jle near ptr 0000000180436C42h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804368F8 jbe near ptr 0000000180436BBCh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804368FE test ebx,ebx		; DEBUG: {Register}/EBX {Register}/EBX ||| None | 0 | None ||| N/A | N/A
		0x180436900 js near ptr 0000000180436C1Bh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180436906 cdqe		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180436908 mov rdi,[rdi+rax*8+20h]		; DEBUG: {Register}/RDI {Memory}/None ||| RDI | 32 | RAX ||| N/A | N/A
		0x18043690D test rdi,rdi		; DEBUG: {Register}/RDI {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x180436910 je near ptr 0000000180436C8Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180436916 mov rcx,[rdi+18h]		; DEBUG: {Register}/RCX {Memory}/None ||| RDI | 24 | None ||| N/A | N/A
		0x18043691A test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x18043691D je near ptr 0000000180436C8Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180436923 mov rdx,[18189B448h]		; DEBUG: {Register}/RDX {Memory}/None ||| RIP | 6468252744 | None ||| N/A | N/A
		0x18043692A call 000000018029B0C0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18043692F cmp eax,ebx		; DEBUG: {Register}/EAX {Register}/EBX ||| None | 0 | None ||| N/A | N/A
		0x180436931 jle near ptr 0000000180436C1Bh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180436937 mov rcx,[rdi+18h]		; DEBUG: {Register}/RCX {Memory}/None ||| RDI | 24 | None ||| N/A | N/A
		0x18043693B test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x18043693E je near ptr 0000000180436C8Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180436944 mov r8,[181875000h]		; DEBUG: {Register}/R8 {Memory}/None ||| RIP | 6468096000 | None ||| N/A | N/A
		0x18043694B mov edx,ebx		; DEBUG: {Register}/EDX {Register}/EBX ||| None | 0 | None ||| N/A | N/A
		0x18043694D call 00000001810B67F0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180436952 mov rcx,[1818A20B8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468280504 | None ||| N/A | N/A
		0x180436959 mov r13,rax		; DEBUG: {Register}/R13 {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18043695C call 000000018013AC40h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180436961 mov rdx,[18188CD00h]		; DEBUG: {Register}/RDX {Memory}/None ||| RIP | 6468193536 | None ||| N/A | N/A
		0x180436968 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18043696B mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18043696E call 0000000180F40AB0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180436973 mov [rsi],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RSI | 0 | None ||| N/A | N/A
		0x180436976 test r13,r13		; DEBUG: {Register}/R13 {Register}/R13 ||| None | 0 | None ||| N/A | N/A
		0x180436979 je near ptr 0000000180436C8Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18043697F mov rcx,[r13+20h]		; DEBUG: {Register}/RCX {Memory}/None ||| R13 | 32 | None ||| N/A | N/A
		0x180436983 test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x180436986 je near ptr 0000000180436C8Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18043698C mov rdx,[18189A988h]		; DEBUG: {Register}/RDX {Memory}/None ||| RIP | 6468249992 | None ||| N/A | N/A
		0x180436993 call 000000018029B0C0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180436998 mov rcx,[1818855D0h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468163024 | None ||| N/A | N/A
		0x18043699F mov edx,eax		; DEBUG: {Register}/EDX {Register}/EAX ||| None | 0 | None ||| N/A | N/A
		0x1804369A1 call 0000000180141320h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804369A6 xor r12d,r12d		; DEBUG: {Register}/R12D {Register}/R12D ||| None | 0 | None ||| N/A | N/A
		0x1804369A9 mov r15,rax		; DEBUG: {Register}/R15 {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1804369AC mov ebp,r12d		; DEBUG: {Register}/EBP {Register}/R12D ||| None | 0 | None ||| N/A | N/A
		0x1804369AF mov eax,r12d		; DEBUG: {Register}/EAX {Register}/R12D ||| None | 0 | None ||| N/A | N/A
		0x1804369B2 test r15,r15		; DEBUG: {Register}/R15 {Register}/R15 ||| None | 0 | None ||| N/A | N/A
		0x1804369B5 je near ptr 0000000180436C8Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804369BB nop dword ptr [rax+rax]		; DEBUG: {Memory}/None {Register}/None ||| RAX | 0 | RAX ||| N/A | N/A
		0x1804369C0 mov ecx,[r15+18h]		; DEBUG: {Register}/ECX {Memory}/None ||| R15 | 24 | None ||| N/A | N/A
		0x1804369C4 cmp eax,ecx		; DEBUG: {Register}/EAX {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x1804369C6 jge near ptr 0000000180436ADFh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804369CC cmp ebp,ecx		; DEBUG: {Register}/EBP {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x1804369CE jae near ptr 0000000180436BE2h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804369D4 movsxd r14,ebp		; DEBUG: {Register}/R14 {Register}/EBP ||| None | 0 | None ||| N/A | N/A
		0x1804369D7 mov byte ptr [r14+r15+20h],1		; DEBUG: {Memory}/None {Immediate8}/None ||| R14 | 32 | R15 ||| N/A | 1
		0x1804369DD mov rcx,[r13+20h]		; DEBUG: {Register}/RCX {Memory}/None ||| R13 | 32 | None ||| N/A | N/A
		0x1804369E1 test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x1804369E4 je near ptr 0000000180436C8Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804369EA mov r8,[181874428h]		; DEBUG: {Register}/R8 {Memory}/None ||| RIP | 6468092968 | None ||| N/A | N/A
		0x1804369F1 mov edx,ebp		; DEBUG: {Register}/EDX {Register}/EBP ||| None | 0 | None ||| N/A | N/A
		0x1804369F3 call 00000001810B67F0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804369F8 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1804369FB je near ptr 0000000180436C8Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180436A01 mov rsi,[rax+18h]		; DEBUG: {Register}/RSI {Memory}/None ||| RAX | 24 | None ||| N/A | N/A
		0x180436A05 mov ebx,r12d		; DEBUG: {Register}/EBX {Register}/R12D ||| None | 0 | None ||| N/A | N/A
		0x180436A08 nop dword ptr [rax+rax]		; DEBUG: {Memory}/None {Register}/None ||| RAX | 0 | RAX ||| N/A | N/A
		0x180436A10 test rsi,rsi		; DEBUG: {Register}/RSI {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x180436A13 je near ptr 0000000180436C8Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180436A19 mov rdx,[18189B438h]		; DEBUG: {Register}/RDX {Memory}/None ||| RIP | 6468252728 | None ||| N/A | N/A
		0x180436A20 mov rcx,rsi		; DEBUG: {Register}/RCX {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x180436A23 call 000000018029B0C0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180436A28 cmp ebx,eax		; DEBUG: {Register}/EBX {Register}/EAX ||| None | 0 | None ||| N/A | N/A
		0x180436A2A jge near ptr 0000000180436AD6h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180436A30 mov r8,[181874FD8h]		; DEBUG: {Register}/R8 {Memory}/None ||| RIP | 6468095960 | None ||| N/A | N/A
		0x180436A37 mov edx,ebx		; DEBUG: {Register}/EDX {Register}/EBX ||| None | 0 | None ||| N/A | N/A
		0x180436A39 mov rcx,rsi		; DEBUG: {Register}/RCX {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x180436A3C call 00000001810B67F0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180436A41 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180436A44 je near ptr 0000000180436C8Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180436A4A mov edi,[rax+10h]		; DEBUG: {Register}/EDI {Memory}/None ||| RAX | 16 | None ||| N/A | N/A
		0x180436A4D mov rax,[181899F58h]		; DEBUG: {Register}/RAX {Memory}/None ||| RIP | 6468247384 | None ||| N/A | N/A
		0x180436A54 test byte ptr [rax+127h],2		; DEBUG: {Memory}/None {Immediate8}/None ||| RAX | 295 | None ||| N/A | 2
		0x180436A5B je short 0000000180436A75h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180436A5D cmp [rax+0D8h],r12d		; DEBUG: {Memory}/None {Register}/R12D ||| RAX | 216 | None ||| N/A | N/A
		0x180436A64 jne short 0000000180436A75h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180436A66 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180436A69 call 000000018010EAF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180436A6E mov rax,[181899F58h]		; DEBUG: {Register}/RAX {Memory}/None ||| RIP | 6468247384 | None ||| N/A | N/A
		0x180436A75 mov rcx,[rax+0B8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RAX | 184 | None ||| N/A | N/A
		0x180436A7C mov rcx,[rcx+0A8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RCX | 168 | None ||| N/A | N/A
		0x180436A83 test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x180436A86 je near ptr 0000000180436C8Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180436A8C xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x180436A8F mov edx,edi		; DEBUG: {Register}/EDX {Register}/EDI ||| None | 0 | None ||| N/A | N/A
		0x180436A91 call 0000000180E34C40h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180436A96 mov r8,[181874FD8h]		; DEBUG: {Register}/R8 {Memory}/None ||| RIP | 6468095960 | None ||| N/A | N/A
		0x180436A9D mov edx,ebx		; DEBUG: {Register}/EDX {Register}/EBX ||| None | 0 | None ||| N/A | N/A
		0x180436A9F mov rcx,rsi		; DEBUG: {Register}/RCX {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x180436AA2 movzx edi,al		; DEBUG: {Register}/EDI {Register}/AL ||| None | 0 | None ||| N/A | N/A
		0x180436AA5 call 00000001810B67F0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180436AAA test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180436AAD je near ptr 0000000180436C8Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180436AB3 cmp [rax+14h],r12b		; DEBUG: {Memory}/None {Register}/R12L ||| RAX | 20 | None ||| N/A | N/A
		0x180436AB7 je short 0000000180436AC0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180436AB9 test dil,dil		; DEBUG: {Register}/DIL {Register}/DIL ||| None | 0 | None ||| N/A | N/A
		0x180436ABC sete dil		; DEBUG: {Register}/DIL {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180436AC0 cmp ebp,[r15+18h]		; DEBUG: {Register}/EBP {Memory}/None ||| R15 | 24 | None ||| N/A | N/A
		0x180436AC4 jae near ptr 0000000180436BCFh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180436ACA and [r14+r15+20h],dil		; DEBUG: {Memory}/None {Register}/DIL ||| R14 | 32 | R15 ||| N/A | N/A
		0x180436ACF inc ebx		; DEBUG: {Register}/EBX {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180436AD1 jmp near ptr 0000000180436A10h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180436AD6 inc ebp		; DEBUG: {Register}/EBP {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180436AD8 mov eax,ebp		; DEBUG: {Register}/EAX {Register}/EBP ||| None | 0 | None ||| N/A | N/A
		0x180436ADA jmp near ptr 00000001804369C0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180436ADF mov rsi,[rsp+60h]		; DEBUG: {Register}/RSI {Memory}/None ||| RSP | 96 | None ||| N/A | N/A
		0x180436AE4 xor bl,bl		; DEBUG: {Register}/BL {Register}/BL ||| None | 0 | None ||| N/A | N/A
		0x180436AE6 mov eax,r12d		; DEBUG: {Register}/EAX {Register}/R12D ||| None | 0 | None ||| N/A | N/A
		0x180436AE9 nop dword ptr [rax]		; DEBUG: {Memory}/None {Register}/None ||| RAX | 0 | None ||| N/A | N/A
		0x180436AF0 cmp eax,ecx		; DEBUG: {Register}/EAX {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x180436AF2 jge short 0000000180436B6Dh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180436AF4 movsxd rdi,r12d		; DEBUG: {Register}/RDI {Register}/R12D ||| None | 0 | None ||| N/A | N/A
		0x180436AF7 cmp r12d,ecx		; DEBUG: {Register}/R12D {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x180436AFA jae near ptr 0000000180436C08h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180436B00 cmp byte ptr [rdi+r15+20h],0		; DEBUG: {Memory}/None {Immediate8}/None ||| RDI | 32 | R15 ||| N/A | 0
		0x180436B06 je short 0000000180436B50h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180436B08 mov rcx,[r13+20h]		; DEBUG: {Register}/RCX {Memory}/None ||| R13 | 32 | None ||| N/A | N/A
		0x180436B0C test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x180436B0F je near ptr 0000000180436C8Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180436B15 mov r8,[181874428h]		; DEBUG: {Register}/R8 {Memory}/None ||| RIP | 6468092968 | None ||| N/A | N/A
		0x180436B1C mov edx,r12d		; DEBUG: {Register}/EDX {Register}/R12D ||| None | 0 | None ||| N/A | N/A
		0x180436B1F call 00000001810B67F0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180436B24 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180436B27 je near ptr 0000000180436C8Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180436B2D mov edx,[rax+10h]		; DEBUG: {Register}/EDX {Memory}/None ||| RAX | 16 | None ||| N/A | N/A
		0x180436B30 cmp edx,5EDDh		; DEBUG: {Register}/EDX {Immediate32}/None ||| None | 0 | None ||| N/A | 24285
		0x180436B36 je short 0000000180436B50h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180436B38 mov rcx,[rsi]		; DEBUG: {Register}/RCX {Memory}/None ||| RSI | 0 | None ||| N/A | N/A
		0x180436B3B test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x180436B3E je near ptr 0000000180436C8Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180436B44 mov r8,[18188CD60h]		; DEBUG: {Register}/R8 {Memory}/None ||| RIP | 6468193632 | None ||| N/A | N/A
		0x180436B4B call 0000000180F34CC0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180436B50 mov ecx,[r15+18h]		; DEBUG: {Register}/ECX {Memory}/None ||| R15 | 24 | None ||| N/A | N/A
		0x180436B54 cmp r12d,ecx		; DEBUG: {Register}/R12D {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x180436B57 jae near ptr 0000000180436BF5h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180436B5D or bl,[rdi+r15+20h]		; DEBUG: {Register}/BL {Memory}/None ||| RDI | 32 | R15 ||| N/A | N/A
		0x180436B62 setne bl		; DEBUG: {Register}/BL {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180436B65 inc r12d		; DEBUG: {Register}/R12D {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180436B68 jmp near ptr 0000000180436AE6h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180436B6D mov r14,[rsp+28h]		; DEBUG: {Register}/R14 {Memory}/None ||| RSP | 40 | None ||| N/A | N/A
		0x180436B72 movzx eax,bl		; DEBUG: {Register}/EAX {Register}/BL ||| None | 0 | None ||| N/A | N/A
		0x180436B75 mov r13,[rsp+68h]		; DEBUG: {Register}/R13 {Memory}/None ||| RSP | 104 | None ||| N/A | N/A
		0x180436B7A mov r12,[rsp+58h]		; DEBUG: {Register}/R12 {Memory}/None ||| RSP | 88 | None ||| N/A | N/A
		0x180436B7F mov rbp,[rsp+50h]		; DEBUG: {Register}/RBP {Memory}/None ||| RSP | 80 | None ||| N/A | N/A
		0x180436B84 mov r15,[rsp+20h]		; DEBUG: {Register}/R15 {Memory}/None ||| RSP | 32 | None ||| N/A | N/A
		0x180436B89 add rsp,30h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 48
		0x180436B8D pop rdi		; DEBUG: {Register}/RDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180436B8E pop rsi		; DEBUG: {Register}/RSI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180436B8F pop rbx		; DEBUG: {Register}/RBX {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180436B90 ret		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180436B91 mov rcx,[1818A20B8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468280504 | None ||| N/A | N/A
		0x180436B98 call 000000018013AC40h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180436B9D mov rdx,[18188CD00h]		; DEBUG: {Register}/RDX {Memory}/None ||| RIP | 6468193536 | None ||| N/A | N/A
		0x180436BA4 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180436BA7 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180436BAA call 0000000180F40AB0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180436BAF mov al,1		; DEBUG: {Register}/AL {Immediate8}/None ||| None | 0 | None ||| N/A | 1
		0x180436BB1 mov [rsi],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RSI | 0 | None ||| N/A | N/A
		0x180436BB4 add rsp,30h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 48
		0x180436BB8 pop rdi		; DEBUG: {Register}/RDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180436BB9 pop rsi		; DEBUG: {Register}/RSI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180436BBA pop rbx		; DEBUG: {Register}/RBX {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180436BBB ret		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180436BBC call 000000018012A7F0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180436BC1 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180436BC4 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x180436BC7 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180436BC9 call 000000018012BD50h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180436BCE int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.Boolean FlagDataParam::IsSatisfyCondition(ECondition,System.Collections.Generic.List`1<EPartialCondition>&):
		End of function at 0x180436BCF
		Absolute End is at 0x180436BCF
		Identified Jump Destination addresses:

		0x180436830: Moves satisfyList (type System.Collections.Generic.List`1<EPartialCondition>&) from register r8 to the stack at offset 24 (0x18)
		0x180436835: Saves the content of rbx to the stack
		0x180436836: Saves the content of rsi to the stack
		0x180436837: Saves the content of rdi to the stack
		0x18043683C: Compares {Unknown Global at 0x18183E2BE, first ten bytes are [1 0 16 63 103 1 80 127 1 0], or as chars " ?gP "} and 0
		0x180436843: Copies {'satisfyList' (function parameter, type System.Collections.Generic.List`1<EPartialCondition>&)} from r8 into rsi
		0x180436846: Copies {'conditionId' (function parameter, type ECondition)} from rdx into rbx
		0x180436848: Copies {'this' (function parameter, type FlagDataParam)} from rcx into rdi
		0x18043684B: Jumps to 0x18043685F if {Unknown Global at 0x18183E2BE, first ten bytes are [1 0 16 63 103 1 80 127 1 0], or as chars " ?gP "} != 0

		0x18043684D: Loads string "*." into register rcx as constant {'constant3' (constant value of type Cpp2IL.Core.Analysis.ResultModels.Il2CppString)}
		0x180436853: Attempts to load the il2cpp metadata for this method (method id 0) and init it cpp-side.

		0x18043685F: [!] Compares {'conditionId' (function parameter, type ECondition)} and 0x5EC5
		0x180436865: Jumps to 0x180436B91 (which is an if statement's body) if conditionId equals 0x5EC5 ;  - Increasing indentation - is standard if, unimportant is False

		0x18043686B: Compares {Unknown Global at 0x18183E2BF, first ten bytes are [0 16 63 103 1 80 127 1 0 168], or as chars " ?gP ¨"} and 0
		0x180436872: Jumps to 0x180436886 if {Unknown Global at 0x18183E2BF, first ten bytes are [0 16 63 103 1 80 127 1 0 168], or as chars " ?gP ¨"} != 0

		0x180436874: Loads string ")." into register rcx as constant {'constant7' (constant value of type Cpp2IL.Core.Analysis.ResultModels.Il2CppString)}
		0x18043687A: Attempts to load the il2cpp metadata for this method (method id 0) and init it cpp-side.

		0x180436886: Loads the type definition for managed type FlagDataParam as a constant "FlagDataParam" in rax
		0x18043688D: Compares "{il2cpp field on {'FlagDataParam' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" and 2
		0x180436894: Jumps to 0x1804368AE if "{il2cpp field on {'FlagDataParam' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" equals 2

		0x180436896: Compares "{il2cpp field on {'FlagDataParam' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" and 0
		0x18043689D: Jumps to 0x1804368AE if "{il2cpp field on {'FlagDataParam' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" != 0

		0x18043689F: Copies {'FlagDataParam' (constant value of type Mono.Cecil.TypeReference)} from rax into rcx
		0x1804368A2: Calls the il2cpp cctor for the type FlagDataParam
		0x1804368A7: Loads the type definition for managed type FlagDataParam as a constant "FlagDataParam" in rax
		0x1804368AE: Loads the pointer to the static fields for FlagDataParam and stores it in constant14 in register rax
		0x1804368C4: [!] Reads the static field System.Int32 FlagDataParam::scADJUST_VALUE into new local scADJUST_VALUE
		0x1804368C6: Copies {'conditionId' (function parameter, type ECondition)} from rbx into rax
		0x1804368D5: Multiplies scADJUST_VALUE (rcx) by conditionId (rax) and stores the result in local4 (rcx)
		0x1804368D8: [!] Subtracts {'local4' (type System.Int32)} from {'conditionId' (function parameter, type ECondition)} and stores the result in {'conditionId' (function parameter, type ECondition)}
		0x1804368DA: [!] Compares {'conditionId' (function parameter, type ECondition)} and 0
		0x1804368E2: [!] Reads field m_sheets from {'this' (function parameter, type FlagDataParam)} and stores in a new local {'m_sheets' (type FlagParam[])}

		0x1804368E6: [!] Compares {'m_sheets' (type FlagParam[])} and 0
		0x1804368E9: Jumps to 0x180436C8F (which throws a NRE) if m_sheets equals 0. Implicitly present in managed code, so ignored here.
		0x1804368EF: [!] Compares {Property System.Int32 System.Array::Length() on {'m_sheets' (type FlagParam[])}} and {'conditionId' (function parameter, type ECondition)}
		0x1804368F2: Jumps to 0x180436C42 if {Property System.Int32 System.Array::Length() on {'m_sheets' (type FlagParam[])}} is less than or equal to {'conditionId' (function parameter, type ECondition)} ;  - This is probably a goto, jumping to 0x180436C42 which is after end of current block @ 0x180436B91 (started at 0x18043686B)

		0x1804368F8: Jumps to 0x180436BBC (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'m_sheets' (type FlagParam[])}} is less than or equal to {'conditionId' (function parameter, type ECondition)}. Implicitly present in managed code, so ignored here.
		0x1804368FE: [!] Compares {'conditionId' (function parameter, type ECondition)} and 0
		0x180436908: Copies the element in the array {'m_sheets' (type FlagParam[])} at the index specified by {'conditionId' (function parameter, type ECondition)} into new local {'flagParam' (type FlagParam)}
		0x18043690D: [!] Compares {'flagParam' (type FlagParam)} and 0
		0x180436910: Jumps to 0x180436C8F (which throws a NRE) if flagParam equals 0. Implicitly present in managed code, so ignored here.
		0x180436916: [!] Reads field m_flagConditionParamList from {'flagParam' (type FlagParam)} and stores in a new local {'m_flagConditionParamList' (type System.Collections.Generic.List`1<FlagConditionParam>)}

		0x18043691A: [!] Compares {'m_flagConditionParamList' (type System.Collections.Generic.List`1<FlagConditionParam>)} and 0
		0x18043691D: Jumps to 0x180436C8F (which throws a NRE) if m_flagConditionParamList equals 0. Implicitly present in managed code, so ignored here.
		0x180436923: Loads the global generic method reference for method System.Int32 System.Collections.Generic.List`1::get_Count() on type System.Collections.Generic.List`1<FlagConditionParam> and stores the result in constant {'get_Count' (constant value of type Cpp2IL.Core.Analysis.ResultModels.GenericMethodReference)} in rdx
		0x18043692A: [!] Calls managed method System.Int32 System.Collections.Generic.List`1::get_Count() on instance {'m_flagConditionParamList' (type System.Collections.Generic.List`1<FlagConditionParam>)} and stores the result in {'count' (type System.Int32)} ;  - Method resolved from concrete implementations at this address, with the help of a constant value to identify which concrete implementation.

		0x18043692F: [!] Compares {'count' (type System.Int32)} and {'conditionId' (function parameter, type ECondition)}
		0x180436931: Jumps to 0x180436C1B if {'count' (type System.Int32)} is less than or equal to {'conditionId' (function parameter, type ECondition)} ;  - This is probably a goto, jumping to 0x180436C1B which is after end of current block @ 0x180436B91 (started at 0x18043686B)

		0x180436937: [!] Reads field m_flagConditionParamList from {'flagParam' (type FlagParam)} and stores in a new local {'m_flagConditionParamList2' (type System.Collections.Generic.List`1<FlagConditionParam>)}

		0x18043693B: [!] Compares {'m_flagConditionParamList2' (type System.Collections.Generic.List`1<FlagConditionParam>)} and 0
		0x18043693E: Jumps to 0x180436C8F (which throws a NRE) if m_flagConditionParamList2 equals 0. Implicitly present in managed code, so ignored here.
		0x180436944: Loads the global generic method reference for method T System.Collections.Generic.List`1::get_Item(System.Int32) on type System.Collections.Generic.List`1<FlagConditionParam> and stores the result in constant {'get_Item' (constant value of type Cpp2IL.Core.Analysis.ResultModels.GenericMethodReference)} in r8
		0x18043694B: Copies {'conditionId' (function parameter, type ECondition)} from rbx into rdx
		0x18043694D: [!] Calls managed method T System.Collections.Generic.List`1::get_Item(System.Int32) on instance {'m_flagConditionParamList2' (type System.Collections.Generic.List`1<FlagConditionParam>)} and stores the result in {'item' (type FlagConditionParam)} ;  - Method resolved from concrete implementations at this address, with the help of a constant value to identify which concrete implementation. - parameters do not match, but concrete method was resolved from a constant in a register.

		0x180436952: Loads the type definition for managed type System.Collections.Generic.List`1<EPartialCondition> as a constant "List`1" in rcx
		0x180436959: Copies {'item' (type FlagConditionParam)} from rax into r13
		0x18043695C: [!] Allocates an instance of type System.Collections.Generic.List`1<EPartialCondition> and stores it as list in rax.

		0x180436961: Loads the global generic method reference for method System.Void System.Collections.Generic.List`1::.ctor() on type System.Collections.Generic.List`1<EPartialCondition> and stores the result in constant {'.ctor' (constant value of type Cpp2IL.Core.Analysis.ResultModels.GenericMethodReference)} in rdx
		0x180436968: Copies {'list' (type System.Collections.Generic.List`1<EPartialCondition>)} from rax into rcx
		0x18043696B: Copies {'list' (type System.Collections.Generic.List`1<EPartialCondition>)} from rax into rbx
		0x18043696E: [!] Calls managed method System.Void System.Collections.Generic.List`1::.ctor() on instance {'list' (type System.Collections.Generic.List`1<EPartialCondition>)} ;  - Method resolved from concrete implementations at this address, with the help of a constant value to identify which concrete implementation.

		0x180436973: [!] Sets the field _items (Type T[]) on local {'satisfyList' (function parameter, type System.Collections.Generic.List`1<EPartialCondition>&)} to the value stored in {'list' (type System.Collections.Generic.List`1<EPartialCondition>)}
		0x180436976: [!] Compares {'item' (type FlagConditionParam)} and 0
		0x180436979: Jumps to 0x180436C8F (which throws a NRE) if item equals 0. Implicitly present in managed code, so ignored here.
		0x18043697F: [!] Reads field m_groups from {'item' (type FlagConditionParam)} and stores in a new local {'m_groups' (type System.Collections.Generic.List`1<ConditionGroup>)}

		0x180436983: [!] Compares {'m_groups' (type System.Collections.Generic.List`1<ConditionGroup>)} and 0
		0x180436986: Jumps to 0x180436C8F (which throws a NRE) if m_groups equals 0. Implicitly present in managed code, so ignored here.
		0x18043698C: Loads the global generic method reference for method System.Int32 System.Collections.Generic.List`1::get_Count() on type System.Collections.Generic.List`1<ConditionGroup> and stores the result in constant {'get_Count' (constant value of type Cpp2IL.Core.Analysis.ResultModels.GenericMethodReference)} in rdx
		0x180436993: [!] Calls managed method System.Int32 System.Collections.Generic.List`1::get_Count() on instance {'m_groups' (type System.Collections.Generic.List`1<ConditionGroup>)} and stores the result in {'count2' (type System.Int32)} ;  - Method resolved from concrete implementations at this address, with the help of a constant value to identify which concrete implementation.

		0x180436998: Loads the type definition for managed type System.Boolean[] as a constant "Boolean[]" in rcx
		0x18043699F: Copies {'count2' (type System.Int32)} from rax into rdx
		0x1804369A1: [!] Allocates an array of type System.Boolean[] of size count2 and stores the result as local14 in register rax

		0x1804369A6: Clears register r12, yielding zero-local {'local15' (type System.Int32)}
		0x1804369A9: Copies {'local14' (type System.Boolean[])} from rax into r15
		0x1804369AC: Copies {'local15' (type System.Int32)} from r12 into rbp
		0x1804369AF: Copies {'local15' (type System.Int32)} from r12 into rax
		0x1804369B2: [!] Compares {'local14' (type System.Boolean[])} and 0
		0x1804369B5: Jumps to 0x180436C8F (which throws a NRE) if local14 equals 0. Implicitly present in managed code, so ignored here.

		Potential Loop Start (0x1804369C0):
		0x1804369C0: Reads the length of the array "{'local14' (type System.Boolean[])}" and stores it in new local {'length' (type System.Int32)} in register rcx
		0x1804369C4: [!] Compares {'local15' (type System.Int32)} and {'length' (type System.Int32)}
		0x1804369C6: Jumps to 0x180436ADF (which is an if statement's body) if {'local15' (type System.Int32)} is greater than or equal to {'length' (type System.Int32)} ;  - Increasing indentation - is standard if, unimportant is False

		0x1804369CC: [!] Compares {'local15' (type System.Int32)} and {'length' (type System.Int32)}
		0x1804369CE: Jumps to 0x180436BE2 (which throws a NRE) if {'local15' (type System.Int32)} is greater than or equal to {'length' (type System.Int32)}. Implicitly present in managed code, so ignored here.
		0x1804369D4: Copies {'local15' (type System.Int32)} from rbp into r14
		0x1804369D7: [!] Sets the field  (Type ) on local {'local15' (type System.Int32)} to the value stored in 1
		0x1804369DD: [!] Reads field m_groups from {'item' (type FlagConditionParam)} and stores in a new local {'m_groups2' (type System.Collections.Generic.List`1<ConditionGroup>)}

		0x1804369E1: [!] Compares {'m_groups2' (type System.Collections.Generic.List`1<ConditionGroup>)} and 0
		0x1804369E4: Jumps to 0x180436C8F (which throws a NRE) if m_groups2 equals 0. Implicitly present in managed code, so ignored here.
		0x1804369EA: Loads the global generic method reference for method T System.Collections.Generic.List`1::get_Item(System.Int32) on type System.Collections.Generic.List`1<ConditionGroup> and stores the result in constant {'get_Item' (constant value of type Cpp2IL.Core.Analysis.ResultModels.GenericMethodReference)} in r8
		0x1804369F1: Copies {'local15' (type System.Int32)} from rbp into rdx
		0x1804369F3: [!] Calls managed method T System.Collections.Generic.List`1::get_Item(System.Int32) on instance {'m_groups2' (type System.Collections.Generic.List`1<ConditionGroup>)} with arguments [{'local15' (type System.Int32)}] and stores the result in {'item2' (type ConditionGroup)} ;  - Method resolved from concrete implementations at this address, with the help of a constant value to identify which concrete implementation.

		0x1804369F8: [!] Compares {'item2' (type ConditionGroup)} and 0
		0x1804369FB: Jumps to 0x180436C8F (which throws a NRE) if item2 equals 0. Implicitly present in managed code, so ignored here.
		0x180436A01: [!] Reads field m_flagIdList from {'item2' (type ConditionGroup)} and stores in a new local {'m_flagIdList' (type System.Collections.Generic.List`1<FlagConditionInfo>)}

		0x180436A05: Copies {'local15' (type System.Int32)} from r12 into rbx

		Potential Loop Start (0x180436A10):
		0x180436A10: [!] Compares {'m_flagIdList' (type System.Collections.Generic.List`1<FlagConditionInfo>)} and 0
		0x180436A13: Jumps to 0x180436C8F (which throws a NRE) if m_flagIdList equals 0. Implicitly present in managed code, so ignored here.
		0x180436A19: Loads the global generic method reference for method System.Int32 System.Collections.Generic.List`1::get_Count() on type System.Collections.Generic.List`1<FlagConditionInfo> and stores the result in constant {'get_Count' (constant value of type Cpp2IL.Core.Analysis.ResultModels.GenericMethodReference)} in rdx
		0x180436A20: Copies {'m_flagIdList' (type System.Collections.Generic.List`1<FlagConditionInfo>)} from rsi into rcx
		0x180436A23: [!] Calls managed method System.Int32 System.Collections.Generic.List`1::get_Count() on instance {'m_flagIdList' (type System.Collections.Generic.List`1<FlagConditionInfo>)} and stores the result in {'count3' (type System.Int32)} ;  - Method resolved from concrete implementations at this address, with the help of a constant value to identify which concrete implementation.

		0x180436A28: [!] Compares {'local15' (type System.Int32)} and {'count3' (type System.Int32)}
		0x180436A2A: Jumps to 0x180436AD6 (which is an if statement's body) if {'local15' (type System.Int32)} is greater than or equal to {'count3' (type System.Int32)} ;  - Increasing indentation - is standard if, unimportant is False

		0x180436A30: Loads the global generic method reference for method T System.Collections.Generic.List`1::get_Item(System.Int32) on type System.Collections.Generic.List`1<FlagConditionInfo> and stores the result in constant {'get_Item' (constant value of type Cpp2IL.Core.Analysis.ResultModels.GenericMethodReference)} in r8
		0x180436A37: Copies {'local15' (type System.Int32)} from rbx into rdx
		0x180436A39: Copies {'m_flagIdList' (type System.Collections.Generic.List`1<FlagConditionInfo>)} from rsi into rcx
		0x180436A3C: [!] Calls managed method T System.Collections.Generic.List`1::get_Item(System.Int32) on instance {'m_flagIdList' (type System.Collections.Generic.List`1<FlagConditionInfo>)} with arguments [{'local15' (type System.Int32)}] and stores the result in {'item3' (type FlagConditionInfo)} ;  - Method resolved from concrete implementations at this address, with the help of a constant value to identify which concrete implementation.

		0x180436A41: [!] Compares {'item3' (type FlagConditionInfo)} and 0
		0x180436A44: Jumps to 0x180436C8F (which throws a NRE) if item3 equals 0. Implicitly present in managed code, so ignored here.
		0x180436A4D: Loads the type definition for managed type GameStateManager as a constant "GameStateManager" in rax
		0x180436A54: Compares "{il2cpp field on {'GameStateManager' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" and 2
		0x180436A5B: Jumps to 0x180436A75 if "{il2cpp field on {'GameStateManager' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" equals 2

		0x180436A5D: Compares "{il2cpp field on {'GameStateManager' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" and {'local15' (type System.Int32)}
		0x180436A64: Jumps to 0x180436A75 if "{il2cpp field on {'GameStateManager' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" != {'local15' (type System.Int32)}

		0x180436A66: Copies {'GameStateManager' (constant value of type Mono.Cecil.TypeReference)} from rax into rcx
		0x180436A69: Calls the il2cpp cctor for the type GameStateManager
		0x180436A6E: Loads the type definition for managed type GameStateManager as a constant "GameStateManager" in rax
		0x180436A75: Loads the pointer to the static fields for GameStateManager and stores it in constant42 in register rcx
		0x180436A7C: [!] Reads the static field System.Collections.BitArray GameStateManager::m_flags into new local m_flags
		0x180436A83: [!] Compares {'m_flags' (type System.Collections.BitArray)} and 0
		0x180436A86: Jumps to 0x180436C8F (which throws a NRE) if m_flags equals 0. Implicitly present in managed code, so ignored here.
		0x180436A8F: Copies {'local22' (type EFlag)} from rdi into rdx
		0x180436A91: [!] Calls managed method System.Boolean System.Collections.BitArray::Get(System.Int32) on instance {'m_flags' (type System.Collections.BitArray)} and stores the result in {'boolean' (type System.Boolean)}

		0x180436A96: Loads the global generic method reference for method T System.Collections.Generic.List`1::get_Item(System.Int32) on type System.Collections.Generic.List`1<FlagConditionInfo> and stores the result in constant {'get_Item' (constant value of type Cpp2IL.Core.Analysis.ResultModels.GenericMethodReference)} in r8
		0x180436A9D: Copies {'local15' (type System.Int32)} from rbx into rdx
		0x180436A9F: Copies {'m_flagIdList' (type System.Collections.Generic.List`1<FlagConditionInfo>)} from rsi into rcx
		0x180436AA2: Copies {'boolean' (type System.Boolean)} from rax into rdi
		0x180436AA5: [!] Calls managed method T System.Collections.Generic.List`1::get_Item(System.Int32) on instance {'m_flagIdList' (type System.Collections.Generic.List`1<FlagConditionInfo>)} with arguments [{'local15' (type System.Int32)}] and stores the result in {'item4' (type FlagConditionInfo)} ;  - Method resolved from concrete implementations at this address, with the help of a constant value to identify which concrete implementation.

		0x180436AAA: [!] Compares {'item4' (type FlagConditionInfo)} and 0
		0x180436AAD: Jumps to 0x180436C8F (which throws a NRE) if item4 equals 0. Implicitly present in managed code, so ignored here.
		0x180436AB3: [!] Compares {field m_isNOT, read from local {'item4' (type FlagConditionInfo)}} and {'local15' (type System.Int32)}
		0x180436AB7: Jumps to 0x180436AC0 (which is an if statement's body) if item4.m_isNOT equals local15 ;  - Increasing indentation - is standard if, unimportant is False

		0x180436AB9: [!] Compares {'boolean' (type System.Boolean)} and False
		0x180436ABC: [!] Sets the boolean {'local27' (type System.Boolean)} in rdi to true if boolean is equal to False, otherwise false.
		0x180436AC0: [!] Compares {'local15' (type System.Int32)} and {Property System.Int32 System.Array::Length() on {'local14' (type System.Boolean[])}}
		0x180436AC4: Jumps to 0x180436BCF (which throws a NRE) if {'local15' (type System.Int32)} is greater than or equal to {Property System.Int32 System.Array::Length() on {'local14' (type System.Boolean[])}}. Implicitly present in managed code, so ignored here.
		0x180436ACF: [!] Adds 1 to the value {'local15' (type System.Int32)}, stored in rbx
		0x180436AD1: Jumps to 0x180436A10 - which is still in this function, but further up. Probably indicative that this is a loop.
		0x180436AD6: [!] Adds 1 to the value {'local15' (type System.Int32)}, stored in rbp
		0x180436AD8: Copies {'local15' (type System.Int32)} from rbp into rax
		0x180436ADA: Jumps to 0x1804369C0 - which is still in this function, but further up. Probably indicative that this is a loop.
		0x180436ADF: Reads unknown value in stack, offset 96 (0x60) and stores the pointer in register rsi as new constant constant47

		Potential Loop Start (0x180436AE6):
		0x180436AE6: Copies {'local15' (type System.Int32)} from r12 into rax
		0x180436AF0: [!] Compares {'local15' (type System.Int32)} and {'length' (type System.Int32)}
		0x180436AF2: Jumps to 0x180436B6D if {'local15' (type System.Int32)} is greater than or equal to {'length' (type System.Int32)} ;  - This is probably a goto, jumping to 0x180436B6D which is after end of current block @ 0x180436AC0 (started at 0x180436AB9)

		0x180436AF4: Copies {'local15' (type System.Int32)} from r12 into rdi
		0x180436AF7: [!] Compares {'local15' (type System.Int32)} and {'length' (type System.Int32)}
		0x180436AFA: Jumps to 0x180436C08 (which throws a NRE) if {'local15' (type System.Int32)} is greater than or equal to {'length' (type System.Int32)}. Implicitly present in managed code, so ignored here.
		0x180436B00: [!] Compares  and 0
		0x180436B06: Jumps to 0x180436B50 if  equals 0 ;  - This is probably a goto, jumping to 0x180436B50 which is after end of current block @ 0x180436AC0 (started at 0x180436AB9)

		0x180436B08: [!] Reads field m_groups from {'item' (type FlagConditionParam)} and stores in a new local {'m_groups3' (type System.Collections.Generic.List`1<ConditionGroup>)}

		0x180436B0C: [!] Compares {'m_groups3' (type System.Collections.Generic.List`1<ConditionGroup>)} and 0
		0x180436B0F: Jumps to 0x180436C8F (which throws a NRE) if m_groups3 equals 0. Implicitly present in managed code, so ignored here.
		0x180436B15: Loads the global generic method reference for method T System.Collections.Generic.List`1::get_Item(System.Int32) on type System.Collections.Generic.List`1<ConditionGroup> and stores the result in constant {'get_Item' (constant value of type Cpp2IL.Core.Analysis.ResultModels.GenericMethodReference)} in r8
		0x180436B1C: Copies {'local15' (type System.Int32)} from r12 into rdx
		0x180436B1F: [!] Calls managed method T System.Collections.Generic.List`1::get_Item(System.Int32) on instance {'m_groups3' (type System.Collections.Generic.List`1<ConditionGroup>)} with arguments [{'local15' (type System.Int32)}] and stores the result in {'item5' (type ConditionGroup)} ;  - Method resolved from concrete implementations at this address, with the help of a constant value to identify which concrete implementation.

		0x180436B24: [!] Compares {'item5' (type ConditionGroup)} and 0
		0x180436B27: Jumps to 0x180436C8F (which throws a NRE) if item5 equals 0. Implicitly present in managed code, so ignored here.
		0x180436B2D: [!] Reads field m_partialConditionId from {'item5' (type ConditionGroup)} and stores in a new local {'m_partialConditionId' (type EPartialCondition)}

		0x180436B30: [!] Compares {'m_partialConditionId' (type EPartialCondition)} and 0x5EDD
		0x180436B36: Jumps to 0x180436B50 if m_partialConditionId equals 0x5EDD ;  - This is probably a goto, jumping to 0x180436B50 which is after end of current block @ 0x180436AC0 (started at 0x180436AB9)

		0x180436B3B: [!] Compares {'m_groups3' (type System.Collections.Generic.List`1<ConditionGroup>)} and 0
		0x180436B3E: Jumps to 0x180436C8F (which throws a NRE) if m_groups3 equals 0. Implicitly present in managed code, so ignored here.
		0x180436B44: Loads the global generic method reference for method System.Void System.Collections.Generic.List`1::Add(T) on type System.Collections.Generic.List`1<EPartialCondition> and stores the result in constant {'Add' (constant value of type Cpp2IL.Core.Analysis.ResultModels.GenericMethodReference)} in r8
		0x180436B4B: [!] Calls managed method System.Void System.Collections.Generic.List`1::Add(T) on instance {'m_groups3' (type System.Collections.Generic.List`1<ConditionGroup>)} ;  - Method resolved from concrete implementations at this address, with the help of a constant value to identify which concrete implementation. - parameters do not match, but concrete method was resolved from a constant in a register.

		0x180436B50: Reads the length of the array "{'local14' (type System.Boolean[])}" and stores it in new local {'length2' (type System.Int32)} in register rcx
		0x180436B54: [!] Compares {'local15' (type System.Int32)} and {'length2' (type System.Int32)}
		0x180436B57: Jumps to 0x180436BF5 (which throws a NRE) if {'local15' (type System.Int32)} is greater than or equal to {'length2' (type System.Int32)}. Implicitly present in managed code, so ignored here.
		0x180436B62: [!] Sets the boolean {'local33' (type System.Boolean)} in rbx to true if local15 isn't equal to length2, otherwise false.
		0x180436B65: [!] Adds 1 to the value {'local15' (type System.Int32)}, stored in r12
		0x180436B68: Jumps to 0x180436AE6 - which is still in this function, but further up. Probably indicative that this is a loop.
		0x180436B6D: Reads unknown value in stack, offset 40 (0x28) and stores the pointer in register r14 as new constant constant55
		0x180436B72: Copies {'local33' (type System.Boolean)} from rbx into rax
		0x180436B75: Reads unknown value in stack, offset 104 (0x68) and stores the pointer in register r13 as new constant constant56
		0x180436B7A: Reads unknown value in stack, offset 88 (0x58) and stores the pointer in register r12 as new constant constant57
		0x180436B7F: Reads unknown value in stack, offset 80 (0x50) and stores the pointer in register rbp as new constant constant58
		0x180436B84: Reads unknown value in stack, offset 32 (0x20) and stores the pointer in register r15 as new constant constant59
		0x180436B90: [!] Returns {'local33' (type System.Boolean)} from the function

		0x180436B91: Loads the type definition for managed type System.Collections.Generic.List`1<EPartialCondition> as a constant "List`1" in rcx
		0x180436B98: [!] Allocates an instance of type System.Collections.Generic.List`1<EPartialCondition> and stores it as list2 in rax.

		0x180436B9D: Loads the global generic method reference for method System.Void System.Collections.Generic.List`1::.ctor() on type System.Collections.Generic.List`1<EPartialCondition> and stores the result in constant {'.ctor' (constant value of type Cpp2IL.Core.Analysis.ResultModels.GenericMethodReference)} in rdx
		0x180436BA4: Copies {'list2' (type System.Collections.Generic.List`1<EPartialCondition>)} from rax into rcx
		0x180436BA7: Copies {'list2' (type System.Collections.Generic.List`1<EPartialCondition>)} from rax into rbx
		0x180436BAA: [!] Calls managed method System.Void System.Collections.Generic.List`1::.ctor() on instance {'list2' (type System.Collections.Generic.List`1<EPartialCondition>)} ;  - Method resolved from concrete implementations at this address, with the help of a constant value to identify which concrete implementation.

		0x180436BAF: [!] Writes the constant 0x1 into operand {'local35' (type System.UInt64)} (type UInt64) in register rax
		0x180436BB1: [!] Sets the field _items (Type T[]) on local {'satisfyList' (function parameter, type System.Collections.Generic.List`1<EPartialCondition>&)} to the value stored in {'list2' (type System.Collections.Generic.List`1<EPartialCondition>)}
		0x180436BBB: [!] Returns {'local35' (type System.UInt64)} from the function

		0x180436BBC: [!] Constructs and throws an exception of kind System.IndexOutOfRangeException

		0x180436BC1: Copies {'local36' (type System.IndexOutOfRangeException)} from rax into rcx
		0x180436BC9: [!] Throws {'local36' (type System.IndexOutOfRangeException)}



	Generated Pseudocode:

	Declaring Type: FlagDataParam
	System.Boolean IsSatisfyCondition(ECondition conditionId, System.Collections.Generic.List`1<EPartialCondition>& satisfyList)

		if (conditionId != 0x5EC5)
		    System.Int32 scADJUST_VALUE = FlagDataParam.scADJUST_VALUE
		    System.Int32 local4 = scADJUST_VALUE * conditionId
		    conditionId -= local4
		    FlagParam[] m_sheets = this.m_sheets

		    if (m_sheets.Length <= conditionId)
                goto INSN_180436C42
            endif
		    FlagParam flagParam = m_sheets[conditionId]
		    System.Collections.Generic.List`1<FlagConditionParam> m_flagConditionParamList = flagParam.m_flagConditionParamList

		    System.Int32 count = m_flagConditionParamList.Count

		    if (count <= conditionId)
                goto INSN_180436C1B
            endif
		    System.Collections.Generic.List`1<FlagConditionParam> m_flagConditionParamList2 = flagParam.m_flagConditionParamList

		    FlagConditionParam item = m_flagConditionParamList2.Item
		    System.Collections.Generic.List`1<EPartialCondition> list = new System.Collections.Generic.List`1<EPartialCondition>()

		    list..ctor()
		    satisfyList._items = list
		    System.Collections.Generic.List`1<ConditionGroup> m_groups = item.m_groups

		    System.Int32 count2 = m_groups.Count
		    System.Boolean[] local14 = new System.Boolean[count2]
		    ulong local15 = 0
		    System.Int32 length = local14.Length

		    if (local15 < length)
		        local15. = 1
		        System.Collections.Generic.List`1<ConditionGroup> m_groups2 = item.m_groups

		        ConditionGroup item2 = m_groups2.Item
		        System.Collections.Generic.List`1<FlagConditionInfo> m_flagIdList = item2.m_flagIdList

		        System.Int32 count3 = m_flagIdList.Count

		        if (local15 < count3)

		            FlagConditionInfo item3 = m_flagIdList.Item
		            System.Collections.BitArray m_flags = GameStateManager.m_flags

		            System.Boolean boolean = m_flags.Get()

		            FlagConditionInfo item4 = m_flagIdList.Item

		            if (item4.m_isNOT != local15)
		                System.Boolean local27 = boolean == False
		            endif
                    
		            local15 += 1
		        endwhile
                
		        goto INSN_180436C8F
                
		        local15 += 1
		    endif
            

		    if (local15 >= length)
                goto INSN_180436B6D
            endif

		    if ( == 0)
                goto INSN_180436B50
            endif
		    System.Collections.Generic.List`1<ConditionGroup> m_groups3 = item.m_groups

		    ConditionGroup item5 = m_groups3.Item
		    EPartialCondition m_partialConditionId = item5.m_partialConditionId

		    if (m_partialConditionId == 0x5EDD)
                goto INSN_180436B50
            endif

		    m_groups3.Add()

		    INSN_180436B50:
		    System.Int32 length2 = local14.Length
		    System.Boolean local33 = local15 != length2
		    local15 += 1

		    INSN_180436B6D:
		    return local33
		endif
        
		System.Collections.Generic.List`1<EPartialCondition> list2 = new System.Collections.Generic.List`1<EPartialCondition>()

		list2..ctor()
		System.Int64 local35 = 1
		satisfyList._items = list2
		return local35
		throw new System.IndexOutOfRangeException()
		throw local36


Generated IL:
	Action of type Cpp2IL.Core.Analysis.Actions.x86.Important.SubtractRegFromRegAction at (0x1804368D8) is corrupt (SubRFromR: First operand, {'conditionId' (function parameter, type ECondition)}, has been stripped or has no variable) and cannot be created as IL. Aborting here.


Method: FlagConditionParam FlagDataParam::GetConditionParam(ECondition):	Method Body (x86 ASM):
		0x1804366D0 mov [rsp+8],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RSP | 8 | None ||| N/A | N/A
		0x1804366D5 push rdi		; DEBUG: {Register}/RDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1804366D6 sub rsp,20h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 32
		0x1804366DA cmp byte ptr [18183E2BFh],0		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6467871423 | None ||| N/A | 0
		0x1804366E1 mov ebx,edx		; DEBUG: {Register}/EBX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1804366E3 mov rdi,rcx		; DEBUG: {Register}/RDI {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x1804366E6 jne short 00000001804366FAh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804366E8 mov ecx,[1814C98A4h]		; DEBUG: {Register}/ECX {Memory}/None ||| RIP | 6464247972 | None ||| N/A | N/A
		0x1804366EE call 00000001800FEB90h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804366F3 mov byte ptr [18183E2BFh],1		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6467871423 | None ||| N/A | 1
		0x1804366FA mov rax,[1818A20D0h]		; DEBUG: {Register}/RAX {Memory}/None ||| RIP | 6468280528 | None ||| N/A | N/A
		0x180436701 test byte ptr [rax+127h],2		; DEBUG: {Memory}/None {Immediate8}/None ||| RAX | 295 | None ||| N/A | 2
		0x180436708 je short 0000000180436722h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18043670A cmp dword ptr [rax+0D8h],0		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RAX | 216 | None ||| N/A | 0
		0x180436711 jne short 0000000180436722h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180436713 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180436716 call 000000018010EAF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18043671B mov rax,[1818A20D0h]		; DEBUG: {Register}/RAX {Memory}/None ||| RIP | 6468280528 | None ||| N/A | N/A
		0x180436722 mov rax,[rax+0B8h]		; DEBUG: {Register}/RAX {Memory}/None ||| RAX | 184 | None ||| N/A | N/A
		0x180436729 mov ecx,[rax]		; DEBUG: {Register}/ECX {Memory}/None ||| RAX | 0 | None ||| N/A | N/A
		0x18043672B mov eax,ebx		; DEBUG: {Register}/EAX {Register}/EBX ||| None | 0 | None ||| N/A | N/A
		0x18043672D cdq		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18043672E idiv ecx		; DEBUG: {Register}/ECX {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180436730 imul ecx,eax		; DEBUG: {Register}/ECX {Register}/EAX ||| None | 0 | None ||| N/A | N/A
		0x180436733 sub ebx,ecx		; DEBUG: {Register}/EBX {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x180436735 test eax,eax		; DEBUG: {Register}/EAX {Register}/EAX ||| None | 0 | None ||| N/A | N/A
		0x180436737 js near ptr 00000001804367D6h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18043673D mov rdi,[rdi+18h]		; DEBUG: {Register}/RDI {Memory}/None ||| RDI | 24 | None ||| N/A | N/A
		0x180436741 test rdi,rdi		; DEBUG: {Register}/RDI {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x180436744 je near ptr 0000000180436822h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18043674A cmp [rdi+18h],eax		; DEBUG: {Memory}/None {Register}/EAX ||| RDI | 24 | None ||| N/A | N/A
		0x18043674D jle near ptr 00000001804367D6h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180436753 jbe near ptr 000000018043680Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180436759 test ebx,ebx		; DEBUG: {Register}/EBX {Register}/EBX ||| None | 0 | None ||| N/A | N/A
		0x18043675B js short 00000001804367AFh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18043675D cdqe		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18043675F mov rdi,[rdi+rax*8+20h]		; DEBUG: {Register}/RDI {Memory}/None ||| RDI | 32 | RAX ||| N/A | N/A
		0x180436764 test rdi,rdi		; DEBUG: {Register}/RDI {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x180436767 je near ptr 0000000180436822h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18043676D mov rcx,[rdi+18h]		; DEBUG: {Register}/RCX {Memory}/None ||| RDI | 24 | None ||| N/A | N/A
		0x180436771 test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x180436774 je near ptr 0000000180436822h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18043677A mov rdx,[18189B448h]		; DEBUG: {Register}/RDX {Memory}/None ||| RIP | 6468252744 | None ||| N/A | N/A
		0x180436781 call 000000018029B0C0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180436786 cmp eax,ebx		; DEBUG: {Register}/EAX {Register}/EBX ||| None | 0 | None ||| N/A | N/A
		0x180436788 jle short 00000001804367AFh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18043678A mov rcx,[rdi+18h]		; DEBUG: {Register}/RCX {Memory}/None ||| RDI | 24 | None ||| N/A | N/A
		0x18043678E test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x180436791 je near ptr 0000000180436822h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180436797 mov r8,[181875000h]		; DEBUG: {Register}/R8 {Memory}/None ||| RIP | 6468096000 | None ||| N/A | N/A
		0x18043679E mov edx,ebx		; DEBUG: {Register}/EDX {Register}/EBX ||| None | 0 | None ||| N/A | N/A
		0x1804367A0 mov rbx,[rsp+30h]		; DEBUG: {Register}/RBX {Memory}/None ||| RSP | 48 | None ||| N/A | N/A
		0x1804367A5 add rsp,20h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 32
		0x1804367A9 pop rdi		; DEBUG: {Register}/RDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1804367AA jmp near ptr 00000001810B67F0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804367AF mov rcx,[18188D688h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468195976 | None ||| N/A | N/A
		0x1804367B6 test byte ptr [rcx+127h],2		; DEBUG: {Memory}/None {Immediate8}/None ||| RCX | 295 | None ||| N/A | 2
		0x1804367BD je short 00000001804367CDh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804367BF cmp dword ptr [rcx+0D8h],0		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RCX | 216 | None ||| N/A | 0
		0x1804367C6 jne short 00000001804367CDh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804367C8 call 000000018010EAF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804367CD mov rcx,[181876FB8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468104120 | None ||| N/A | N/A
		0x1804367D4 jmp short 00000001804367FBh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804367D6 mov rcx,[18188D688h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468195976 | None ||| N/A | N/A
		0x1804367DD test byte ptr [rcx+127h],2		; DEBUG: {Memory}/None {Immediate8}/None ||| RCX | 295 | None ||| N/A | 2
		0x1804367E4 je short 00000001804367F4h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804367E6 cmp dword ptr [rcx+0D8h],0		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RCX | 216 | None ||| N/A | 0
		0x1804367ED jne short 00000001804367F4h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804367EF call 000000018010EAF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1804367F4 mov rcx,[181876F98h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468104088 | None ||| N/A | N/A
		0x1804367FB xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1804367FD call 0000000180B2C440h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180436802 mov rbx,[rsp+30h]		; DEBUG: {Register}/RBX {Memory}/None ||| RSP | 48 | None ||| N/A | N/A
		0x180436807 xor eax,eax		; DEBUG: {Register}/EAX {Register}/EAX ||| None | 0 | None ||| N/A | N/A
		0x180436809 add rsp,20h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 32
		0x18043680D pop rdi		; DEBUG: {Register}/RDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18043680E ret		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18043680F call 000000018012A7F0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180436814 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180436817 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18043681A xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18043681C call 000000018012BD50h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180436821 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method FlagConditionParam FlagDataParam::GetConditionParam(ECondition):
		End of function at 0x180436822
		Absolute End is at 0x180436822
		Identified Jump Destination addresses:
			0x1804367FB
		0x1804366D5: Saves the content of rdi to the stack
		0x1804366DA: Compares {Unknown Global at 0x18183E2BF, first ten bytes are [0 16 63 103 1 80 127 1 0 168], or as chars " ?gP ¨"} and 0
		0x1804366E1: Copies {'conditionId' (function parameter, type ECondition)} from rdx into rbx
		0x1804366E3: Copies {'this' (function parameter, type FlagDataParam)} from rcx into rdi
		0x1804366E6: Jumps to 0x1804366FA if {Unknown Global at 0x18183E2BF, first ten bytes are [0 16 63 103 1 80 127 1 0 168], or as chars " ?gP ¨"} != 0

		0x1804366E8: Loads string ")." into register rcx as constant {'constant3' (constant value of type Cpp2IL.Core.Analysis.ResultModels.Il2CppString)}
		0x1804366EE: Attempts to load the il2cpp metadata for this method (method id 0) and init it cpp-side.

		0x1804366FA: Loads the type definition for managed type FlagDataParam as a constant "FlagDataParam" in rax
		0x180436701: Compares "{il2cpp field on {'FlagDataParam' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" and 2
		0x180436708: Jumps to 0x180436722 if "{il2cpp field on {'FlagDataParam' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" equals 2

		0x18043670A: Compares "{il2cpp field on {'FlagDataParam' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" and 0
		0x180436711: Jumps to 0x180436722 if "{il2cpp field on {'FlagDataParam' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" != 0

		0x180436713: Copies {'FlagDataParam' (constant value of type Mono.Cecil.TypeReference)} from rax into rcx
		0x180436716: Calls the il2cpp cctor for the type FlagDataParam
		0x18043671B: Loads the type definition for managed type FlagDataParam as a constant "FlagDataParam" in rax
		0x180436722: Loads the pointer to the static fields for FlagDataParam and stores it in constant10 in register rax
		0x180436729: [!] Reads the static field System.Int32 FlagDataParam::scADJUST_VALUE into new local scADJUST_VALUE
		0x18043672B: Copies {'conditionId' (function parameter, type ECondition)} from rbx into rax
		0x180436730: Multiplies scADJUST_VALUE (rcx) by conditionId (rax) and stores the result in local3 (rcx)
		0x180436733: [!] Subtracts {'local3' (type System.Int32)} from {'conditionId' (function parameter, type ECondition)} and stores the result in {'conditionId' (function parameter, type ECondition)}
		0x180436735: [!] Compares {'conditionId' (function parameter, type ECondition)} and 0
		0x18043673D: [!] Reads field m_sheets from {'this' (function parameter, type FlagDataParam)} and stores in a new local {'m_sheets' (type FlagParam[])}

		0x180436741: [!] Compares {'m_sheets' (type FlagParam[])} and 0
		0x180436744: Jumps to 0x180436822 (which throws a NRE) if m_sheets equals 0. Implicitly present in managed code, so ignored here.
		0x18043674A: [!] Compares {Property System.Int32 System.Array::Length() on {'m_sheets' (type FlagParam[])}} and {'conditionId' (function parameter, type ECondition)}
		0x18043674D: Jumps to 0x1804367D6 if {Property System.Int32 System.Array::Length() on {'m_sheets' (type FlagParam[])}} is less than or equal to {'conditionId' (function parameter, type ECondition)} ;  - Increasing indentation - is if-else, unimportant is False

		0x180436753: Jumps to 0x18043680F (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'m_sheets' (type FlagParam[])}} is less than or equal to {'conditionId' (function parameter, type ECondition)}. Implicitly present in managed code, so ignored here.
		0x180436759: [!] Compares {'conditionId' (function parameter, type ECondition)} and 0
		0x18043675F: Copies the element in the array {'m_sheets' (type FlagParam[])} at the index specified by {'conditionId' (function parameter, type ECondition)} into new local {'flagParam' (type FlagParam)}
		0x180436764: [!] Compares {'flagParam' (type FlagParam)} and 0
		0x180436767: Jumps to 0x180436822 (which throws a NRE) if flagParam equals 0. Implicitly present in managed code, so ignored here.
		0x18043676D: [!] Reads field m_flagConditionParamList from {'flagParam' (type FlagParam)} and stores in a new local {'m_flagConditionParamList' (type System.Collections.Generic.List`1<FlagConditionParam>)}

		0x180436771: [!] Compares {'m_flagConditionParamList' (type System.Collections.Generic.List`1<FlagConditionParam>)} and 0
		0x180436774: Jumps to 0x180436822 (which throws a NRE) if m_flagConditionParamList equals 0. Implicitly present in managed code, so ignored here.
		0x18043677A: Loads the global generic method reference for method System.Int32 System.Collections.Generic.List`1::get_Count() on type System.Collections.Generic.List`1<FlagConditionParam> and stores the result in constant {'get_Count' (constant value of type Cpp2IL.Core.Analysis.ResultModels.GenericMethodReference)} in rdx
		0x180436781: [!] Calls managed method System.Int32 System.Collections.Generic.List`1::get_Count() on instance {'m_flagConditionParamList' (type System.Collections.Generic.List`1<FlagConditionParam>)} and stores the result in {'count' (type System.Int32)} ;  - Method resolved from concrete implementations at this address, with the help of a constant value to identify which concrete implementation.

		0x180436786: [!] Compares {'count' (type System.Int32)} and {'conditionId' (function parameter, type ECondition)}
		0x180436788: Jumps to 0x1804367AF (which is an if statement's body) if {'count' (type System.Int32)} is less than or equal to {'conditionId' (function parameter, type ECondition)} ;  - Increasing indentation - is standard if, unimportant is False

		0x18043678A: [!] Reads field m_flagConditionParamList from {'flagParam' (type FlagParam)} and stores in a new local {'m_flagConditionParamList2' (type System.Collections.Generic.List`1<FlagConditionParam>)}

		0x18043678E: [!] Compares {'m_flagConditionParamList2' (type System.Collections.Generic.List`1<FlagConditionParam>)} and 0
		0x180436791: Jumps to 0x180436822 (which throws a NRE) if m_flagConditionParamList2 equals 0. Implicitly present in managed code, so ignored here.
		0x180436797: Loads the global generic method reference for method T System.Collections.Generic.List`1::get_Item(System.Int32) on type System.Collections.Generic.List`1<FlagConditionParam> and stores the result in constant {'get_Item' (constant value of type Cpp2IL.Core.Analysis.ResultModels.GenericMethodReference)} in r8
		0x18043679E: Copies {'conditionId' (function parameter, type ECondition)} from rbx into rdx
		0x1804367A0: Reads unknown value in stack, offset 48 (0x30) and stores the pointer in register rbx as new constant constant19
		0x1804367AA: [!] Calls managed method T System.Collections.Generic.List`1::get_Item(System.Int32) on instance {'m_flagConditionParamList2' (type System.Collections.Generic.List`1<FlagConditionParam>)} and stores the result in {'item' (type FlagConditionParam)} ;  - Method resolved from concrete implementations at this address, with the help of a constant value to identify which concrete implementation. - parameters do not match, but concrete method was resolved from a constant in a register.

		0x1804367AA: [!] Returns {'item' (type FlagConditionParam)} from the function

		0x1804367AF: Loads the type definition for managed type UnityEngine.Debug as a constant "Debug" in rcx
		0x1804367B6: Compares "{il2cpp field on {'Debug' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" and 2
		0x1804367BD: Jumps to 0x1804367CD if "{il2cpp field on {'Debug' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" equals 2 ;  - This is probably a goto, jumping to 0x1804367CD which is after end of current block @ 0x1804367AF (started at 0x18043678A)

		0x1804367BF: Compares "{il2cpp field on {'Debug' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" and 0
		0x1804367C6: Jumps to 0x1804367CD if "{il2cpp field on {'Debug' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" != 0 ;  - This is probably a goto, jumping to 0x1804367CD which is after end of current block @ 0x1804367AF (started at 0x18043678A)

		0x1804367C8: Calls the il2cpp cctor for the type UnityEngine.Debug
		0x1804367CD: Loads the string literal "条件リストの配列外参照" as a constant "constant25" in rcx
		0x1804367D4: Jumps to 0x1804367FB (which is an function-local jump destination)

		0x1804367D6: Loads the type definition for managed type UnityEngine.Debug as a constant "Debug" in rcx
		0x1804367DD: Compares "{il2cpp field on {'Debug' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" and 2
		0x1804367E4: Jumps to 0x1804367F4 if "{il2cpp field on {'Debug' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" equals 2

		0x1804367E6: Compares "{il2cpp field on {'Debug' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" and 0
		0x1804367ED: Jumps to 0x1804367F4 if "{il2cpp field on {'Debug' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" != 0

		0x1804367EF: Calls the il2cpp cctor for the type UnityEngine.Debug
		0x1804367F4: Loads the string literal "シートの配列外参照" as a constant "constant31" in rcx

		End Of If-Else Block (at 0x1804367FB) where the else started at 0x1804367D6
		0x1804367FD: [!] Calls static managed method System.Void UnityEngine.Debug::LogWarning(System.Object) with arguments ["シートの配列外参照"]

		0x180436802: Reads unknown value in stack, offset 48 (0x30) and stores the pointer in register rbx as new constant constant32
		0x180436807: Clears register rax, yielding zero-local {'local11' (type System.Int32)}
		0x18043680E: [!] Returns {'local11' (type System.Int32)} from the function

		0x18043680F: [!] Constructs and throws an exception of kind System.IndexOutOfRangeException

		0x180436814: Copies {'local12' (type System.IndexOutOfRangeException)} from rax into rcx
		0x18043681C: [!] Throws {'local12' (type System.IndexOutOfRangeException)}



	Generated Pseudocode:

	Declaring Type: FlagDataParam
	FlagConditionParam GetConditionParam(ECondition conditionId)
		System.Int32 scADJUST_VALUE = FlagDataParam.scADJUST_VALUE
		System.Int32 local3 = scADJUST_VALUE * conditionId
		conditionId -= local3
		FlagParam[] m_sheets = this.m_sheets

		if (m_sheets.Length > conditionId)
		    FlagParam flagParam = m_sheets[conditionId]
		    System.Collections.Generic.List`1<FlagConditionParam> m_flagConditionParamList = flagParam.m_flagConditionParamList

		    System.Int32 count = m_flagConditionParamList.Count

		    if (count > conditionId)
		        System.Collections.Generic.List`1<FlagConditionParam> m_flagConditionParamList2 = flagParam.m_flagConditionParamList

		        FlagConditionParam item = m_flagConditionParamList2.Item
		        return item
		    endif
            
		else
		endif
        

		UnityEngine.Debug.LogWarning("シートの配列外参照") //(Object message)
		ulong local11 = 0
		return local11
		throw new System.IndexOutOfRangeException()
		throw local12


Generated IL:
	Action of type Cpp2IL.Core.Analysis.Actions.x86.Important.SubtractRegFromRegAction at (0x180436733) is corrupt (SubRFromR: First operand, {'conditionId' (function parameter, type ECondition)}, has been stripped or has no variable) and cannot be created as IL. Aborting here.


Method: System.Void FlagDataParam::.cctor():	Method Body (x86 ASM):
		0x180436CC0 sub rsp,28h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 40
		0x180436CC4 cmp byte ptr [18183E2C0h],0		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6467871424 | None ||| N/A | 0
		0x180436CCB jne short 0000000180436CDFh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180436CCD mov ecx,[1814C98C4h]		; DEBUG: {Register}/ECX {Memory}/None ||| RIP | 6464248004 | None ||| N/A | N/A
		0x180436CD3 call 00000001800FEB90h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180436CD8 mov byte ptr [18183E2C0h],1		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6467871424 | None ||| N/A | 1
		0x180436CDF mov rax,[1818A20D0h]		; DEBUG: {Register}/RAX {Memory}/None ||| RIP | 6468280528 | None ||| N/A | N/A
		0x180436CE6 mov rcx,[rax+0B8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RAX | 184 | None ||| N/A | N/A
		0x180436CED mov dword ptr [rcx],7D0h		; DEBUG: {Memory}/None {Immediate32}/None ||| RCX | 0 | None ||| N/A | 2000
		0x180436CF3 add rsp,28h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 40
		0x180436CF7 ret		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180436CF8 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Static Method System.Void FlagDataParam::.cctor():
		End of function at 0x180436CF9
		Absolute End is at 0x180436CF9
		Identified Jump Destination addresses:

		0x180436CC4: Compares {Unknown Global at 0x18183E2C0, first ten bytes are [16 63 103 1 80 127 1 0 168 127], or as chars "?gP ¨"} and 0
		0x180436CCB: Jumps to 0x180436CDF if {Unknown Global at 0x18183E2C0, first ten bytes are [16 63 103 1 80 127 1 0 168 127], or as chars "?gP ¨"} != 0

		0x180436CCD: Loads string "+." into register rcx as constant {'constant3' (constant value of type Cpp2IL.Core.Analysis.ResultModels.Il2CppString)}
		0x180436CD3: Attempts to load the il2cpp metadata for this method (method id 0) and init it cpp-side.

		0x180436CDF: Loads the type definition for managed type FlagDataParam as a constant "FlagDataParam" in rax
		0x180436CE6: Loads the pointer to the static fields for FlagDataParam and stores it in constant5 in register rcx
		0x180436CF7: [!] Returns from the function




	Generated Pseudocode:

	Declaring Type: FlagDataParam
	static System.Void .cctor()
		return


Generated IL:
	IL_0000: ret
	

