Type: IntArrayComparer

Method: System.Void MultiTerrain.IntArrayComparer::.ctor():	Method Body (x86 ASM):
		0x1802068B0 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1802068B2 jmp near ptr 0000000180207540h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802068B7 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.Void MultiTerrain.IntArrayComparer::.ctor():
		End of function at 0x1802068B8
		Absolute End is at 0x1802068B8
		Identified Jump Destination addresses:

		0x1802068B2: [!] Calls managed method System.Void System.Object::.ctor() on instance {'this' (function parameter, type MultiTerrain.IntArrayComparer)}

		0x1802068B2: [!] Returns from the function




	Generated Pseudocode:

	Declaring Type: MultiTerrain.IntArrayComparer
	System.Void .ctor()

		base..ctor()
		return


Generated IL:
	IL_0000: ldarg.0
	IL_0001: call System.Void System.Object::.ctor()
	IL_0006: ret
	

Method: System.Boolean MultiTerrain.IntArrayComparer::Equals(System.Int32[],System.Int32[]):	Method Body (x86 ASM):
		0x180790470 sub rsp,28h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 40
		0x180790474 mov r11,rdx		; DEBUG: {Register}/R11 {Register}/RDX ||| None | 0 | None ||| N/A | N/A
		0x180790477 test rdx,rdx		; DEBUG: {Register}/RDX {Register}/RDX ||| None | 0 | None ||| N/A | N/A
		0x18079047A je short 00000001807904C2h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18079047C test r8,r8		; DEBUG: {Register}/R8 {Register}/R8 ||| None | 0 | None ||| N/A | N/A
		0x18079047F je short 00000001807904C2h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180790481 mov r9d,[rdx+18h]		; DEBUG: {Register}/R9D {Memory}/None ||| RDX | 24 | None ||| N/A | N/A
		0x180790485 mov r10d,[r8+18h]		; DEBUG: {Register}/R10D {Memory}/None ||| R8 | 24 | None ||| N/A | N/A
		0x180790489 cmp r9d,r10d		; DEBUG: {Register}/R9D {Register}/R10D ||| None | 0 | None ||| N/A | N/A
		0x18079048C jne short 00000001807904BBh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18079048E xor ecx,ecx		; DEBUG: {Register}/ECX {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x180790490 mov eax,ecx		; DEBUG: {Register}/EAX {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x180790492 cmp ecx,r9d		; DEBUG: {Register}/ECX {Register}/R9D ||| None | 0 | None ||| N/A | N/A
		0x180790495 jge short 00000001807904B4h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180790497 movsxd rdx,ecx		; DEBUG: {Register}/RDX {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x18079049A cmp ecx,r9d		; DEBUG: {Register}/ECX {Register}/R9D ||| None | 0 | None ||| N/A | N/A
		0x18079049D jae short 00000001807904DDh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18079049F cmp ecx,r10d		; DEBUG: {Register}/ECX {Register}/R10D ||| None | 0 | None ||| N/A | N/A
		0x1807904A2 jae short 00000001807904CAh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1807904A4 mov eax,[r8+rdx*4+20h]		; DEBUG: {Register}/EAX {Memory}/None ||| R8 | 32 | RDX ||| N/A | N/A
		0x1807904A9 cmp [r11+rdx*4+20h],eax		; DEBUG: {Memory}/None {Register}/EAX ||| R11 | 32 | RDX ||| N/A | N/A
		0x1807904AE jne short 00000001807904BBh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1807904B0 inc ecx		; DEBUG: {Register}/ECX {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1807904B2 jmp short 0000000180790490h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1807904B4 mov al,1		; DEBUG: {Register}/AL {Immediate8}/None ||| None | 0 | None ||| N/A | 1
		0x1807904B6 add rsp,28h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 40
		0x1807904BA ret		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1807904BB xor al,al		; DEBUG: {Register}/AL {Register}/AL ||| None | 0 | None ||| N/A | N/A
		0x1807904BD add rsp,28h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 40
		0x1807904C1 ret		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1807904C2 xor ecx,ecx		; DEBUG: {Register}/ECX {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x1807904C4 call 000000018012BDA0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1807904C9 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.Boolean MultiTerrain.IntArrayComparer::Equals(System.Int32[],System.Int32[]):
		End of function at 0x1807904CA
		Absolute End is at 0x1807904CA
		Identified Jump Destination addresses:

		0x180790474: Copies {'x' (function parameter, type System.Int32[])} from rdx into r11
		0x180790477: [!] Compares {'x' (function parameter, type System.Int32[])} and 0
		0x18079047A: Jumps to 0x1807904C2 (which throws a NRE) if x equals 0. Implicitly present in managed code, so ignored here.
		0x18079047C: [!] Compares {'y' (function parameter, type System.Int32[])} and 0
		0x18079047F: Jumps to 0x1807904C2 (which throws a NRE) if y equals 0. Implicitly present in managed code, so ignored here.
		0x180790481: Reads the length of the array "{'x' (function parameter, type System.Int32[])}" and stores it in new local {'length' (type System.Int32)} in register r9
		0x180790485: Reads the length of the array "{'y' (function parameter, type System.Int32[])}" and stores it in new local {'length2' (type System.Int32)} in register r10
		0x180790489: [!] Compares {'length' (type System.Int32)} and {'length2' (type System.Int32)}
		0x18079048C: Jumps to 0x1807904BB (which is an if statement's body) if {'length' (type System.Int32)} != {'length2' (type System.Int32)} ;  - Increasing indentation - is standard if, unimportant is False

		0x18079048E: Clears register rcx, yielding zero-local {'local5' (type System.Int32)}

		Potential Loop Start (0x180790490):
		0x180790490: Copies {'local5' (type System.Int32)} from rcx into rax
		0x180790492: [!] Compares {'local5' (type System.Int32)} and {'length' (type System.Int32)}
		0x180790495: Jumps to 0x1807904B4 (which is an if statement's body) if {'local5' (type System.Int32)} is greater than or equal to {'length' (type System.Int32)} ;  - Increasing indentation - is standard if, unimportant is False

		0x180790497: Copies {'local5' (type System.Int32)} from rcx into rdx
		0x18079049A: [!] Compares {'local5' (type System.Int32)} and {'length' (type System.Int32)}
		0x18079049D: Jumps to 0x1807904DD (which throws a NRE) if {'local5' (type System.Int32)} is greater than or equal to {'length' (type System.Int32)}. Implicitly present in managed code, so ignored here.
		0x18079049F: [!] Compares {'local5' (type System.Int32)} and {'length2' (type System.Int32)}
		0x1807904A2: Jumps to 0x1807904CA (which throws a NRE) if {'local5' (type System.Int32)} is greater than or equal to {'length2' (type System.Int32)}. Implicitly present in managed code, so ignored here.
		0x1807904A4: Copies the element in the array {'y' (function parameter, type System.Int32[])} at the index specified by {'local5' (type System.Int32)} into new local {'int32' (type System.Int32)}
		0x1807904A9: [!] Compares "{il2cpp array field x->}" and {'int32' (type System.Int32)}
		0x1807904AE: Jumps to 0x1807904BB if "{il2cpp array field x->}" != {'int32' (type System.Int32)} ;  - This is probably a goto, jumping to 0x1807904BB which is after end of current block @ 0x1807904B4 (started at 0x180790497)

		0x1807904B0: [!] Adds 1 to the value {'local5' (type System.Int32)}, stored in rcx
		0x1807904B2: Jumps to 0x180790490 - which is still in this function, but further up. Probably indicative that this is a loop.
		0x1807904B4: [!] Writes the constant 0x1 into operand True (type UInt64) in register rax
		0x1807904BA: [!] Returns True from the function

		0x1807904BB: Clears register rax, yielding zero-local {'local7' (type System.Int32)}
		0x1807904C1: [!] Returns {'local7' (type System.Int32)} from the function

		0x1807904C4: [!] Constructs and throws an exception of kind System.NullReferenceException




	Generated Pseudocode:

	Declaring Type: MultiTerrain.IntArrayComparer
	System.Boolean Equals(System.Int32[] x, System.Int32[] y)
		System.Int32 length = x.Length
		System.Int32 length2 = y.Length

		if (length == length2)
		    ulong local5 = 0

		    if (local5 < length)
		        System.Int32 int32 = y[local5]

		        if ("{il2cpp array field x->}" != int32)
                    goto INSN_1807904BB
                endif
		        local5 += 1
		    endif
            
		    return True
		endif
        
		ulong local7 = 0
		return local7
		throw new System.NullReferenceException()


Generated IL:
	Action of type Cpp2IL.Core.Analysis.Actions.x86.Important.ReturnFromFunctionAction at (0x1807904C1) is corrupt (Return value has a type of System.Int32, expecting an object of type System.Boolean) and cannot be created as IL. Aborting here.


Method: System.Int32 MultiTerrain.IntArrayComparer::GetHashCode(System.Int32[]):	Method Body (x86 ASM):
		0x1807904F0 sub rsp,28h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 40
		0x1807904F4 xor ecx,ecx		; DEBUG: {Register}/ECX {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x1807904F6 mov eax,ecx		; DEBUG: {Register}/EAX {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x1807904F8 lea r8d,[rcx+11h]		; DEBUG: {Register}/R8D {Memory}/None ||| RCX | 17 | None ||| N/A | N/A
		0x1807904FC test rdx,rdx		; DEBUG: {Register}/RDX {Register}/RDX ||| None | 0 | None ||| N/A | N/A
		0x1807904FF je short 0000000180790529h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180790501 mov r9d,[rdx+18h]		; DEBUG: {Register}/R9D {Memory}/None ||| RDX | 24 | None ||| N/A | N/A
		0x180790505 cmp eax,r9d		; DEBUG: {Register}/EAX {Register}/R9D ||| None | 0 | None ||| N/A | N/A
		0x180790508 jge short 0000000180790521h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18079050A cmp ecx,r9d		; DEBUG: {Register}/ECX {Register}/R9D ||| None | 0 | None ||| N/A | N/A
		0x18079050D jae short 000000018079052Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18079050F movsxd rax,ecx		; DEBUG: {Register}/RAX {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x180790512 imul r8d,17h		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x180790516 add r8d,[rdx+rax*4+20h]		; DEBUG: {Register}/R8D {Memory}/None ||| RDX | 32 | RAX ||| N/A | N/A
		0x18079051B inc ecx		; DEBUG: {Register}/ECX {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18079051D mov eax,ecx		; DEBUG: {Register}/EAX {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x18079051F jmp short 0000000180790505h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180790521 mov eax,r8d		; DEBUG: {Register}/EAX {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x180790524 add rsp,28h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 40
		0x180790528 ret		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180790529 call 000000018012BDA0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18079052E int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.Int32 MultiTerrain.IntArrayComparer::GetHashCode(System.Int32[]):
		End of function at 0x18079052F
		Absolute End is at 0x18079052F
		Identified Jump Destination addresses:

		0x1807904F4: Clears register rcx, yielding zero-local {'local2' (type System.Int32)}
		0x1807904F6: Copies {'local2' (type System.Int32)} from rcx into rax
		0x1807904F8: [!] Loads the constant value 17 into the register r8 as constant constant1 using an LEA instruction
		0x1807904FC: [!] Compares {'obj' (function parameter, type System.Int32[])} and 0
		0x1807904FF: Jumps to 0x180790529 (which throws a NRE) if obj equals 0. Implicitly present in managed code, so ignored here.
		0x180790501: Reads the length of the array "{'obj' (function parameter, type System.Int32[])}" and stores it in new local {'length' (type System.Int32)} in register r9

		Potential Loop Start (0x180790505):
		0x180790505: [!] Compares {'local2' (type System.Int32)} and {'length' (type System.Int32)}
		0x180790508: Jumps to 0x180790521 if {'local2' (type System.Int32)} is greater than or equal to {'length' (type System.Int32)} ;  - Increasing indentation - is while loop, unimportant is False

		0x18079050A: [!] Compares {'local2' (type System.Int32)} and {'length' (type System.Int32)}
		0x18079050D: Jumps to 0x18079052F (which throws a NRE) if {'local2' (type System.Int32)} is greater than or equal to {'length' (type System.Int32)}. Implicitly present in managed code, so ignored here.
		0x18079050F: Copies {'local2' (type System.Int32)} from rcx into rax
		0x180790512: [!] Multiplies 17 and 23, and stores the result in new local {'local4' (type System.Int64)} in register r8
		0x18079051B: [!] Adds 1 to the value {'local2' (type System.Int32)}, stored in rcx
		0x18079051D: Copies {'local2' (type System.Int32)} from rcx into rax
		0x18079051F: Jumps to 0x180790505 - which is still in this function, but further up. Probably indicative that this is a loop.
		0x180790521: Copies {'local4' (type System.Int64)} from r8 into rax
		0x180790528: [!] Returns {'local4' (type System.Int64)} from the function

		0x180790529: [!] Constructs and throws an exception of kind System.NullReferenceException




	Generated Pseudocode:

	Declaring Type: MultiTerrain.IntArrayComparer
	System.Int32 GetHashCode(System.Int32[] obj)
		ulong local2 = 0
		System.Int32 17 = 17
		System.Int32 length = obj.Length

		while (local2 < length)
		    System.Int64 local4 = 17 * 23
		    local2 += 1
		endwhile
        
		return local4
		throw new System.NullReferenceException()


Generated IL:
	Action of type Cpp2IL.Core.Analysis.Actions.x86.Important.ReturnFromFunctionAction at (0x180790528) is corrupt (Return value has a type of System.Int64, expecting an object of type System.Int32) and cannot be created as IL. Aborting here.


