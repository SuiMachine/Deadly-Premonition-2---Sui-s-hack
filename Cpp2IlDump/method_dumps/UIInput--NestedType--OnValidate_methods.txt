Type: OnValidate

Method: System.Void UIInput/OnValidate::.ctor(System.Object,System.IntPtr):	Method Body (x86 ASM):
		0x1802ED440 mov rax,[r8]		; DEBUG: {Register}/RAX {Memory}/None ||| R8 | 0 | None ||| N/A | N/A
		0x1802ED443 mov [rcx+10h],rax		; DEBUG: {Memory}/None {Register}/RAX ||| RCX | 16 | None ||| N/A | N/A
		0x1802ED447 mov [rcx+28h],r8		; DEBUG: {Memory}/None {Register}/R8 ||| RCX | 40 | None ||| N/A | N/A
		0x1802ED44B mov [rcx+20h],rdx		; DEBUG: {Memory}/None {Register}/RDX ||| RCX | 32 | None ||| N/A | N/A
		0x1802ED44F ret		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.Void UIInput/OnValidate::.ctor(System.Object,System.IntPtr):
		End of function at 0x1802ED450
		Absolute End is at 0x1802ED450
		Identified Jump Destination addresses:

		0x1802ED440: Loads the class pointer from method into a constant constant1 in register rax
		0x1802ED443: [!] Sets the field method_ptr (Type System.IntPtr) on local {'this' (function parameter, type UIInput/OnValidate)} to the value stored in {'constant1' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)}
		0x1802ED447: [!] Sets the field method (Type System.IntPtr) on local {'this' (function parameter, type UIInput/OnValidate)} to the value stored in {'method' (function parameter, type System.IntPtr)}
		0x1802ED44B: [!] Sets the field m_target (Type System.Object) on local {'this' (function parameter, type UIInput/OnValidate)} to the value stored in {'object' (function parameter, type System.Object)}
		0x1802ED44F: [!] Returns from the function




	Generated Pseudocode:

	Declaring Type: UIInput/OnValidate
	System.Void .ctor(System.Object object, System.IntPtr method)
		this.method_ptr = constant1
		this.method = method
		this.m_target = object
		return


Generated IL:
	Action of type Cpp2IL.Core.Analysis.Actions.x86.Important.RegToFieldAction at (0x1802ED443) is corrupt (ConstantDefinition: Don't know how to get IL to load a Cpp2IL.Core.Analysis.Il2CppClassIdentifier) and cannot be created as IL. Aborting here.


Method: System.Char UIInput/OnValidate::Invoke(System.String,System.Int32,System.Char):	Method Body (x86 ASM):
		0x18040FB50 mov [rsp+8],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RSP | 8 | None ||| N/A | N/A
		0x18040FB55 mov [rsp+10h],rbp		; DEBUG: {Memory}/None {Register}/RBP ||| RSP | 16 | None ||| N/A | N/A
		0x18040FB5A mov [rsp+18h],rsi		; DEBUG: {Memory}/None {Register}/RSI ||| RSP | 24 | None ||| N/A | N/A
		0x18040FB5F push rdi		; DEBUG: {Register}/RDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18040FB60 push r12		; DEBUG: {Register}/R12 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18040FB62 push r13		; DEBUG: {Register}/R13 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18040FB64 push r14		; DEBUG: {Register}/R14 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18040FB66 push r15		; DEBUG: {Register}/R15 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18040FB68 sub rsp,30h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 48
		0x18040FB6C mov rbp,rcx		; DEBUG: {Register}/RBP {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x18040FB6F xor ebx,ebx		; DEBUG: {Register}/EBX {Register}/EBX ||| None | 0 | None ||| N/A | N/A
		0x18040FB71 mov rcx,[rcx+58h]		; DEBUG: {Register}/RCX {Memory}/None ||| RCX | 88 | None ||| N/A | N/A
		0x18040FB75 movzx r12d,r9w		; DEBUG: {Register}/R12D {Register}/R9W ||| None | 0 | None ||| N/A | N/A
		0x18040FB79 mov r13d,r8d		; DEBUG: {Register}/R13D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18040FB7C mov r14,rdx		; DEBUG: {Register}/R14 {Register}/RDX ||| None | 0 | None ||| N/A | N/A
		0x18040FB7F test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x18040FB82 je short 000000018040FB96h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18040FB84 mov rax,[rsp+80h]		; DEBUG: {Register}/RAX {Memory}/None ||| RSP | 128 | None ||| N/A | N/A
		0x18040FB8C mov [rsp+20h],rax		; DEBUG: {Memory}/None {Register}/RAX ||| RSP | 32 | None ||| N/A | N/A
		0x18040FB91 call 000000018040FB50h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18040FB96 mov rdi,[rbp+28h]		; DEBUG: {Register}/RDI {Memory}/None ||| RBP | 40 | None ||| N/A | N/A
		0x18040FB9A mov eax,0FFFFh		; DEBUG: {Register}/EAX {Immediate32}/None ||| None | 0 | None ||| N/A | 65535
		0x18040FB9F mov r15,[rbp+10h]		; DEBUG: {Register}/R15 {Memory}/None ||| RBP | 16 | None ||| N/A | N/A
		0x18040FBA3 mov rsi,[rbp+20h]		; DEBUG: {Register}/RSI {Memory}/None ||| RBP | 32 | None ||| N/A | N/A
		0x18040FBA7 cmp [rdi+48h],ax		; DEBUG: {Memory}/None {Register}/AX ||| RDI | 72 | None ||| N/A | N/A
		0x18040FBAB jne short 000000018040FBB5h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18040FBAD mov rcx,rdi		; DEBUG: {Register}/RCX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x18040FBB0 call 00000001801102D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18040FBB5 mov rcx,rdi		; DEBUG: {Register}/RCX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x18040FBB8 call 0000000180141DF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18040FBBD movzx ecx,byte ptr [rdi+4Ah]		; DEBUG: {Register}/ECX {Memory}/None ||| RDI | 74 | None ||| N/A | N/A
		0x18040FBC1 test al,al		; DEBUG: {Register}/AL {Register}/AL ||| None | 0 | None ||| N/A | N/A
		0x18040FBC3 jne short 000000018040FBE3h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18040FBC5 cmp cl,3		; DEBUG: {Register}/CL {Immediate8}/None ||| None | 0 | None ||| N/A | 3
		0x18040FBC8 jne near ptr 000000018040FFA7h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18040FBCE mov r9,rdi		; DEBUG: {Register}/R9 {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x18040FBD1 movzx r8d,r12w		; DEBUG: {Register}/R8D {Register}/R12W ||| None | 0 | None ||| N/A | N/A
		0x18040FBD5 mov edx,r13d		; DEBUG: {Register}/EDX {Register}/R13D ||| None | 0 | None ||| N/A | N/A
		0x18040FBD8 mov rcx,r14		; DEBUG: {Register}/RCX {Register}/R14 ||| None | 0 | None ||| N/A | N/A
		0x18040FBDB call r15		; DEBUG: {Register}/R15 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18040FBDE jmp near ptr 000000018040FFBCh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18040FBE3 movzx eax,word ptr [rdi+48h]		; DEBUG: {Register}/EAX {Memory}/None ||| RDI | 72 | None ||| N/A | N/A
		0x18040FBE7 cmp cl,3		; DEBUG: {Register}/CL {Immediate8}/None ||| None | 0 | None ||| N/A | 3
		0x18040FBEA mov ecx,0FFFFh		; DEBUG: {Register}/ECX {Immediate32}/None ||| None | 0 | None ||| N/A | 65535
		0x18040FBEF je near ptr 000000018040FDAEh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18040FBF5 cmp ax,cx		; DEBUG: {Register}/AX {Register}/CX ||| None | 0 | None ||| N/A | N/A
		0x18040FBF8 je short 000000018040FBCEh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18040FBFA test rsi,rsi		; DEBUG: {Register}/RSI {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x18040FBFD je short 000000018040FC0Eh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18040FBFF mov rax,[rsi]		; DEBUG: {Register}/RAX {Memory}/None ||| RSI | 0 | None ||| N/A | N/A
		0x18040FC02 test dword ptr [rax+108h],100h		; DEBUG: {Memory}/None {Immediate32}/None ||| RAX | 264 | None ||| N/A | 256
		0x18040FC0C jne short 000000018040FBCEh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18040FC0E cmp [rbp+18h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RBP | 24 | None ||| N/A | N/A
		0x18040FC12 je short 000000018040FBCEh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18040FC14 test rsi,rsi		; DEBUG: {Register}/RSI {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x18040FC17 je short 000000018040FC2Ch		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18040FC19 mov rax,[rsi]		; DEBUG: {Register}/RAX {Memory}/None ||| RSI | 0 | None ||| N/A | N/A
		0x18040FC1C test dword ptr [rax+108h],100h		; DEBUG: {Memory}/None {Immediate32}/None ||| RAX | 264 | None ||| N/A | 256
		0x18040FC26 jne near ptr 000000018040FFBFh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18040FC2C mov rcx,rdi		; DEBUG: {Register}/RCX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x18040FC2F call 0000000180141DC0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18040FC34 mov rcx,rdi		; DEBUG: {Register}/RCX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x18040FC37 test al,al		; DEBUG: {Register}/AL {Register}/AL ||| None | 0 | None ||| N/A | N/A
		0x18040FC39 je near ptr 000000018040FCF3h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18040FC3F call 000000018005DA10h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18040FC44 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18040FC47 call 00000001800F6DD0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18040FC4C movzx ecx,word ptr [rdi+48h]		; DEBUG: {Register}/ECX {Memory}/None ||| RDI | 72 | None ||| N/A | N/A
		0x18040FC50 test al,al		; DEBUG: {Register}/AL {Register}/AL ||| None | 0 | None ||| N/A | N/A
		0x18040FC52 je near ptr 000000018040FCE3h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18040FC58 mov r10,[r14]		; DEBUG: {Register}/R10 {Memory}/None ||| R14 | 0 | None ||| N/A | N/A
		0x18040FC5B mov r11d,ecx		; DEBUG: {Register}/R11D {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x18040FC5E mov r9,[rdi+18h]		; DEBUG: {Register}/R9 {Memory}/None ||| RDI | 24 | None ||| N/A | N/A
		0x18040FC62 movzx edx,word ptr [r10+11Eh]		; DEBUG: {Register}/EDX {Memory}/None ||| R10 | 286 | None ||| N/A | N/A
		0x18040FC6A cmp bx,dx		; DEBUG: {Register}/BX {Register}/DX ||| None | 0 | None ||| N/A | N/A
		0x18040FC6D jae short 000000018040FC96h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18040FC6F mov r8,[r10+0B0h]		; DEBUG: {Register}/R8 {Memory}/None ||| R10 | 176 | None ||| N/A | N/A
		0x18040FC76 nop word ptr [rax+rax]		; DEBUG: {Memory}/None {Register}/None ||| RAX | 0 | RAX ||| N/A | N/A
		0x18040FC80 movzx ecx,bx		; DEBUG: {Register}/ECX {Register}/BX ||| None | 0 | None ||| N/A | N/A
		0x18040FC83 mov eax,ecx		; DEBUG: {Register}/EAX {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x18040FC85 add rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18040FC88 cmp [r8+rax*8],r9		; DEBUG: {Memory}/None {Register}/R9 ||| R8 | 0 | RAX ||| N/A | N/A
		0x18040FC8C je short 000000018040FCC8h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18040FC8E inc bx		; DEBUG: {Register}/BX {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18040FC91 cmp bx,dx		; DEBUG: {Register}/BX {Register}/DX ||| None | 0 | None ||| N/A | N/A
		0x18040FC94 jb short 000000018040FC80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18040FC96 mov r8d,r11d		; DEBUG: {Register}/R8D {Register}/R11D ||| None | 0 | None ||| N/A | N/A
		0x18040FC99 mov rdx,r9		; DEBUG: {Register}/RDX {Register}/R9 ||| None | 0 | None ||| N/A | N/A
		0x18040FC9C mov rcx,r14		; DEBUG: {Register}/RCX {Register}/R14 ||| None | 0 | None ||| N/A | N/A
		0x18040FC9F call 00000001800F5B10h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18040FCA4 mov rcx,[rax+8]		; DEBUG: {Register}/RCX {Memory}/None ||| RAX | 8 | None ||| N/A | N/A
		0x18040FCA8 mov rdx,rdi		; DEBUG: {Register}/RDX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x18040FCAB call 000000018010EE60h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18040FCB0 mov r9,rax		; DEBUG: {Register}/R9 {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18040FCB3 movzx r8d,r12w		; DEBUG: {Register}/R8D {Register}/R12W ||| None | 0 | None ||| N/A | N/A
		0x18040FCB7 mov edx,r13d		; DEBUG: {Register}/EDX {Register}/R13D ||| None | 0 | None ||| N/A | N/A
		0x18040FCBA mov rcx,r14		; DEBUG: {Register}/RCX {Register}/R14 ||| None | 0 | None ||| N/A | N/A
		0x18040FCBD mov r10,[rax]		; DEBUG: {Register}/R10 {Memory}/None ||| RAX | 0 | None ||| N/A | N/A
		0x18040FCC0 call r10		; DEBUG: {Register}/R10 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18040FCC3 jmp near ptr 000000018040FFBCh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18040FCC8 add rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x18040FCCB lea rax,[r10+128h]		; DEBUG: {Register}/RAX {Memory}/None ||| R10 | 296 | None ||| N/A | N/A
		0x18040FCD2 mov ecx,[r8+rcx*8+8]		; DEBUG: {Register}/ECX {Memory}/None ||| R8 | 8 | RCX ||| N/A | N/A
		0x18040FCD7 add ecx,r11d		; DEBUG: {Register}/ECX {Register}/R11D ||| None | 0 | None ||| N/A | N/A
		0x18040FCDA shl rcx,4		; DEBUG: {Register}/RCX {Immediate8}/None ||| None | 0 | None ||| N/A | 4
		0x18040FCDE add rax,rcx		; DEBUG: {Register}/RAX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x18040FCE1 jmp short 000000018040FCA4h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18040FCE3 mov rax,[r14]		; DEBUG: {Register}/RAX {Memory}/None ||| R14 | 0 | None ||| N/A | N/A
		0x18040FCE6 add rcx,13h		; DEBUG: {Register}/RCX {Immediate8to64}/None ||| None | 0 | None ||| N/A | 19
		0x18040FCEA add rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x18040FCED mov rcx,[rax+rcx*8]		; DEBUG: {Register}/RCX {Memory}/None ||| RAX | 0 | RCX ||| N/A | N/A
		0x18040FCF1 jmp short 000000018040FCA8h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18040FCF3 call 000000018005DA10h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18040FCF8 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18040FCFB call 00000001800F6DD0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18040FD00 test al,al		; DEBUG: {Register}/AL {Register}/AL ||| None | 0 | None ||| N/A | N/A
		0x18040FD02 je near ptr 000000018040FD84h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18040FD08 mov rcx,rdi		; DEBUG: {Register}/RCX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x18040FD0B call 000000018005DA10h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18040FD10 mov r10,[r14]		; DEBUG: {Register}/R10 {Memory}/None ||| R14 | 0 | None ||| N/A | N/A
		0x18040FD13 mov r9,rax		; DEBUG: {Register}/R9 {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18040FD16 movzx r11d,word ptr [rdi+48h]		; DEBUG: {Register}/R11D {Memory}/None ||| RDI | 72 | None ||| N/A | N/A
		0x18040FD1B movzx r8d,word ptr [r10+11Eh]		; DEBUG: {Register}/R8D {Memory}/None ||| R10 | 286 | None ||| N/A | N/A
		0x18040FD23 cmp bx,r8w		; DEBUG: {Register}/BX {Register}/R8W ||| None | 0 | None ||| N/A | N/A
		0x18040FD27 jae short 000000018040FD47h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18040FD29 mov rdx,[r10+0B0h]		; DEBUG: {Register}/RDX {Memory}/None ||| R10 | 176 | None ||| N/A | N/A
		0x18040FD30 movzx ecx,bx		; DEBUG: {Register}/ECX {Register}/BX ||| None | 0 | None ||| N/A | N/A
		0x18040FD33 mov eax,ecx		; DEBUG: {Register}/EAX {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x18040FD35 add rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18040FD38 cmp [rdx+rax*8],r9		; DEBUG: {Memory}/None {Register}/R9 ||| RDX | 0 | RAX ||| N/A | N/A
		0x18040FD3C je short 000000018040FD6Ah		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18040FD3E inc bx		; DEBUG: {Register}/BX {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18040FD41 cmp bx,r8w		; DEBUG: {Register}/BX {Register}/R8W ||| None | 0 | None ||| N/A | N/A
		0x18040FD45 jb short 000000018040FD30h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18040FD47 mov r8d,r11d		; DEBUG: {Register}/R8D {Register}/R11D ||| None | 0 | None ||| N/A | N/A
		0x18040FD4A mov rdx,r9		; DEBUG: {Register}/RDX {Register}/R9 ||| None | 0 | None ||| N/A | N/A
		0x18040FD4D mov rcx,r14		; DEBUG: {Register}/RCX {Register}/R14 ||| None | 0 | None ||| N/A | N/A
		0x18040FD50 call 00000001800F5B10h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18040FD55 mov r9,[rax+8]		; DEBUG: {Register}/R9 {Memory}/None ||| RAX | 8 | None ||| N/A | N/A
		0x18040FD59 movzx r8d,r12w		; DEBUG: {Register}/R8D {Register}/R12W ||| None | 0 | None ||| N/A | N/A
		0x18040FD5D mov edx,r13d		; DEBUG: {Register}/EDX {Register}/R13D ||| None | 0 | None ||| N/A | N/A
		0x18040FD60 mov rcx,r14		; DEBUG: {Register}/RCX {Register}/R14 ||| None | 0 | None ||| N/A | N/A
		0x18040FD63 call qword ptr [rax]		; DEBUG: {Memory}/None {Register}/None ||| RAX | 0 | None ||| N/A | N/A
		0x18040FD65 jmp near ptr 000000018040FFBCh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18040FD6A add rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x18040FD6D lea rax,[r10+128h]		; DEBUG: {Register}/RAX {Memory}/None ||| R10 | 296 | None ||| N/A | N/A
		0x18040FD74 mov ecx,[rdx+rcx*8+8]		; DEBUG: {Register}/ECX {Memory}/None ||| RDX | 8 | RCX ||| N/A | N/A
		0x18040FD78 add ecx,r11d		; DEBUG: {Register}/ECX {Register}/R11D ||| None | 0 | None ||| N/A | N/A
		0x18040FD7B shl rcx,4		; DEBUG: {Register}/RCX {Immediate8}/None ||| None | 0 | None ||| N/A | 4
		0x18040FD7F add rax,rcx		; DEBUG: {Register}/RAX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x18040FD82 jmp short 000000018040FD55h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18040FD84 movzx r10d,word ptr [rdi+48h]		; DEBUG: {Register}/R10D {Memory}/None ||| RDI | 72 | None ||| N/A | N/A
		0x18040FD89 movzx r8d,r12w		; DEBUG: {Register}/R8D {Register}/R12W ||| None | 0 | None ||| N/A | N/A
		0x18040FD8D mov rax,[r14]		; DEBUG: {Register}/RAX {Memory}/None ||| R14 | 0 | None ||| N/A | N/A
		0x18040FD90 add r10,r10		; DEBUG: {Register}/R10 {Register}/R10 ||| None | 0 | None ||| N/A | N/A
		0x18040FD93 mov edx,r13d		; DEBUG: {Register}/EDX {Register}/R13D ||| None | 0 | None ||| N/A | N/A
		0x18040FD96 mov rcx,r14		; DEBUG: {Register}/RCX {Register}/R14 ||| None | 0 | None ||| N/A | N/A
		0x18040FD99 mov r9,[rax+r10*8+130h]		; DEBUG: {Register}/R9 {Memory}/None ||| RAX | 304 | R10 ||| N/A | N/A
		0x18040FDA1 call qword ptr [rax+r10*8+128h]		; DEBUG: {Memory}/None {Register}/None ||| RAX | 296 | R10 ||| N/A | N/A
		0x18040FDA9 jmp near ptr 000000018040FFBCh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18040FDAE cmp ax,cx		; DEBUG: {Register}/AX {Register}/CX ||| None | 0 | None ||| N/A | N/A
		0x18040FDB1 je near ptr 000000018040FFA7h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18040FDB7 test rsi,rsi		; DEBUG: {Register}/RSI {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x18040FDBA je short 000000018040FDCFh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18040FDBC mov rax,[rsi]		; DEBUG: {Register}/RAX {Memory}/None ||| RSI | 0 | None ||| N/A | N/A
		0x18040FDBF test dword ptr [rax+108h],100h		; DEBUG: {Memory}/None {Immediate32}/None ||| RAX | 264 | None ||| N/A | 256
		0x18040FDC9 jne near ptr 000000018040FFA7h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18040FDCF cmp [rbp+18h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RBP | 24 | None ||| N/A | N/A
		0x18040FDD3 je near ptr 000000018040FFA7h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18040FDD9 test rsi,rsi		; DEBUG: {Register}/RSI {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x18040FDDC je near ptr 000000018040FBCEh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18040FDE2 mov rax,[rsi]		; DEBUG: {Register}/RAX {Memory}/None ||| RSI | 0 | None ||| N/A | N/A
		0x18040FDE5 test dword ptr [rax+108h],100h		; DEBUG: {Memory}/None {Immediate32}/None ||| RAX | 264 | None ||| N/A | 256
		0x18040FDEF jne near ptr 000000018040FFBFh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18040FDF5 mov rcx,rdi		; DEBUG: {Register}/RCX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x18040FDF8 call 0000000180141DC0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18040FDFD mov rcx,rdi		; DEBUG: {Register}/RCX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x18040FE00 test al,al		; DEBUG: {Register}/AL {Register}/AL ||| None | 0 | None ||| N/A | N/A
		0x18040FE02 je near ptr 000000018040FEDBh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18040FE08 call 000000018005DA10h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18040FE0D mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18040FE10 call 00000001800F6DD0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18040FE15 movzx ecx,word ptr [rdi+48h]		; DEBUG: {Register}/ECX {Memory}/None ||| RDI | 72 | None ||| N/A | N/A
		0x18040FE19 test al,al		; DEBUG: {Register}/AL {Register}/AL ||| None | 0 | None ||| N/A | N/A
		0x18040FE1B je near ptr 000000018040FEA8h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18040FE21 mov r10,[rsi]		; DEBUG: {Register}/R10 {Memory}/None ||| RSI | 0 | None ||| N/A | N/A
		0x18040FE24 mov r11d,ecx		; DEBUG: {Register}/R11D {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x18040FE27 mov r9,[rdi+18h]		; DEBUG: {Register}/R9 {Memory}/None ||| RDI | 24 | None ||| N/A | N/A
		0x18040FE2B movzx edx,word ptr [r10+11Eh]		; DEBUG: {Register}/EDX {Memory}/None ||| R10 | 286 | None ||| N/A | N/A
		0x18040FE33 cmp bx,dx		; DEBUG: {Register}/BX {Register}/DX ||| None | 0 | None ||| N/A | N/A
		0x18040FE36 jae short 000000018040FE56h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18040FE38 mov r8,[r10+0B0h]		; DEBUG: {Register}/R8 {Memory}/None ||| R10 | 176 | None ||| N/A | N/A
		0x18040FE3F nop		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18040FE40 movzx ecx,bx		; DEBUG: {Register}/ECX {Register}/BX ||| None | 0 | None ||| N/A | N/A
		0x18040FE43 mov eax,ecx		; DEBUG: {Register}/EAX {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x18040FE45 add rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18040FE48 cmp [r8+rax*8],r9		; DEBUG: {Memory}/None {Register}/R9 ||| R8 | 0 | RAX ||| N/A | N/A
		0x18040FE4C je short 000000018040FE8Dh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18040FE4E inc bx		; DEBUG: {Register}/BX {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18040FE51 cmp bx,dx		; DEBUG: {Register}/BX {Register}/DX ||| None | 0 | None ||| N/A | N/A
		0x18040FE54 jb short 000000018040FE40h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18040FE56 mov r8d,r11d		; DEBUG: {Register}/R8D {Register}/R11D ||| None | 0 | None ||| N/A | N/A
		0x18040FE59 mov rdx,r9		; DEBUG: {Register}/RDX {Register}/R9 ||| None | 0 | None ||| N/A | N/A
		0x18040FE5C mov rcx,rsi		; DEBUG: {Register}/RCX {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x18040FE5F call 00000001800F5B10h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18040FE64 mov rcx,[rax+8]		; DEBUG: {Register}/RCX {Memory}/None ||| RAX | 8 | None ||| N/A | N/A
		0x18040FE68 mov rdx,rdi		; DEBUG: {Register}/RDX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x18040FE6B call 000000018010EE60h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18040FE70 movzx r9d,r12w		; DEBUG: {Register}/R9D {Register}/R12W ||| None | 0 | None ||| N/A | N/A
		0x18040FE74 mov [rsp+20h],rax		; DEBUG: {Memory}/None {Register}/RAX ||| RSP | 32 | None ||| N/A | N/A
		0x18040FE79 mov r8d,r13d		; DEBUG: {Register}/R8D {Register}/R13D ||| None | 0 | None ||| N/A | N/A
		0x18040FE7C mov rdx,r14		; DEBUG: {Register}/RDX {Register}/R14 ||| None | 0 | None ||| N/A | N/A
		0x18040FE7F mov rcx,rsi		; DEBUG: {Register}/RCX {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x18040FE82 mov r10,[rax]		; DEBUG: {Register}/R10 {Memory}/None ||| RAX | 0 | None ||| N/A | N/A
		0x18040FE85 call r10		; DEBUG: {Register}/R10 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18040FE88 jmp near ptr 000000018040FFBCh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18040FE8D add rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x18040FE90 lea rax,[r10+128h]		; DEBUG: {Register}/RAX {Memory}/None ||| R10 | 296 | None ||| N/A | N/A
		0x18040FE97 mov ecx,[r8+rcx*8+8]		; DEBUG: {Register}/ECX {Memory}/None ||| R8 | 8 | RCX ||| N/A | N/A
		0x18040FE9C add ecx,r11d		; DEBUG: {Register}/ECX {Register}/R11D ||| None | 0 | None ||| N/A | N/A
		0x18040FE9F shl rcx,4		; DEBUG: {Register}/RCX {Immediate8}/None ||| None | 0 | None ||| N/A | 4
		0x18040FEA3 add rax,rcx		; DEBUG: {Register}/RAX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x18040FEA6 jmp short 000000018040FE64h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18040FEA8 mov rax,[rsi]		; DEBUG: {Register}/RAX {Memory}/None ||| RSI | 0 | None ||| N/A | N/A
		0x18040FEAB add rcx,13h		; DEBUG: {Register}/RCX {Immediate8to64}/None ||| None | 0 | None ||| N/A | 19
		0x18040FEAF add rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x18040FEB2 mov rdx,rdi		; DEBUG: {Register}/RDX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x18040FEB5 mov rcx,[rax+rcx*8]		; DEBUG: {Register}/RCX {Memory}/None ||| RAX | 0 | RCX ||| N/A | N/A
		0x18040FEB9 call 000000018010EE60h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18040FEBE movzx r9d,r12w		; DEBUG: {Register}/R9D {Register}/R12W ||| None | 0 | None ||| N/A | N/A
		0x18040FEC2 mov [rsp+20h],rax		; DEBUG: {Memory}/None {Register}/RAX ||| RSP | 32 | None ||| N/A | N/A
		0x18040FEC7 mov r8d,r13d		; DEBUG: {Register}/R8D {Register}/R13D ||| None | 0 | None ||| N/A | N/A
		0x18040FECA mov rdx,r14		; DEBUG: {Register}/RDX {Register}/R14 ||| None | 0 | None ||| N/A | N/A
		0x18040FECD mov rcx,rsi		; DEBUG: {Register}/RCX {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x18040FED0 mov r10,[rax]		; DEBUG: {Register}/R10 {Memory}/None ||| RAX | 0 | None ||| N/A | N/A
		0x18040FED3 call r10		; DEBUG: {Register}/R10 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18040FED6 jmp near ptr 000000018040FFBCh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18040FEDB call 000000018005DA10h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18040FEE0 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18040FEE3 call 00000001800F6DD0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18040FEE8 test al,al		; DEBUG: {Register}/AL {Register}/AL ||| None | 0 | None ||| N/A | N/A
		0x18040FEEA je near ptr 000000018040FF79h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18040FEF0 mov rcx,rdi		; DEBUG: {Register}/RCX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x18040FEF3 call 000000018005DA10h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18040FEF8 mov r10,[rsi]		; DEBUG: {Register}/R10 {Memory}/None ||| RSI | 0 | None ||| N/A | N/A
		0x18040FEFB mov r9,rax		; DEBUG: {Register}/R9 {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18040FEFE movzx r11d,word ptr [rdi+48h]		; DEBUG: {Register}/R11D {Memory}/None ||| RDI | 72 | None ||| N/A | N/A
		0x18040FF03 movzx r8d,word ptr [r10+11Eh]		; DEBUG: {Register}/R8D {Memory}/None ||| R10 | 286 | None ||| N/A | N/A
		0x18040FF0B cmp bx,r8w		; DEBUG: {Register}/BX {Register}/R8W ||| None | 0 | None ||| N/A | N/A
		0x18040FF0F jae short 000000018040FF37h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18040FF11 mov rdx,[r10+0B0h]		; DEBUG: {Register}/RDX {Memory}/None ||| R10 | 176 | None ||| N/A | N/A
		0x18040FF18 nop dword ptr [rax+rax]		; DEBUG: {Memory}/None {Register}/None ||| RAX | 0 | RAX ||| N/A | N/A
		0x18040FF20 movzx ecx,bx		; DEBUG: {Register}/ECX {Register}/BX ||| None | 0 | None ||| N/A | N/A
		0x18040FF23 mov eax,ecx		; DEBUG: {Register}/EAX {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x18040FF25 add rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18040FF28 cmp [rdx+rax*8],r9		; DEBUG: {Memory}/None {Register}/R9 ||| RDX | 0 | RAX ||| N/A | N/A
		0x18040FF2C je short 000000018040FF5Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18040FF2E inc bx		; DEBUG: {Register}/BX {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18040FF31 cmp bx,r8w		; DEBUG: {Register}/BX {Register}/R8W ||| None | 0 | None ||| N/A | N/A
		0x18040FF35 jb short 000000018040FF20h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18040FF37 mov r8d,r11d		; DEBUG: {Register}/R8D {Register}/R11D ||| None | 0 | None ||| N/A | N/A
		0x18040FF3A mov rdx,r9		; DEBUG: {Register}/RDX {Register}/R9 ||| None | 0 | None ||| N/A | N/A
		0x18040FF3D mov rcx,rsi		; DEBUG: {Register}/RCX {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x18040FF40 call 00000001800F5B10h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18040FF45 mov rcx,[rax+8]		; DEBUG: {Register}/RCX {Memory}/None ||| RAX | 8 | None ||| N/A | N/A
		0x18040FF49 movzx r9d,r12w		; DEBUG: {Register}/R9D {Register}/R12W ||| None | 0 | None ||| N/A | N/A
		0x18040FF4D mov [rsp+20h],rcx		; DEBUG: {Memory}/None {Register}/RCX ||| RSP | 32 | None ||| N/A | N/A
		0x18040FF52 mov r8d,r13d		; DEBUG: {Register}/R8D {Register}/R13D ||| None | 0 | None ||| N/A | N/A
		0x18040FF55 mov rcx,rsi		; DEBUG: {Register}/RCX {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x18040FF58 mov rdx,r14		; DEBUG: {Register}/RDX {Register}/R14 ||| None | 0 | None ||| N/A | N/A
		0x18040FF5B call qword ptr [rax]		; DEBUG: {Memory}/None {Register}/None ||| RAX | 0 | None ||| N/A | N/A
		0x18040FF5D jmp short 000000018040FFBCh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18040FF5F add rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x18040FF62 lea rax,[r10+128h]		; DEBUG: {Register}/RAX {Memory}/None ||| R10 | 296 | None ||| N/A | N/A
		0x18040FF69 mov ecx,[rdx+rcx*8+8]		; DEBUG: {Register}/ECX {Memory}/None ||| RDX | 8 | RCX ||| N/A | N/A
		0x18040FF6D add ecx,r11d		; DEBUG: {Register}/ECX {Register}/R11D ||| None | 0 | None ||| N/A | N/A
		0x18040FF70 shl rcx,4		; DEBUG: {Register}/RCX {Immediate8}/None ||| None | 0 | None ||| N/A | 4
		0x18040FF74 add rax,rcx		; DEBUG: {Register}/RAX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x18040FF77 jmp short 000000018040FF45h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18040FF79 movzx r10d,word ptr [rdi+48h]		; DEBUG: {Register}/R10D {Memory}/None ||| RDI | 72 | None ||| N/A | N/A
		0x18040FF7E movzx r9d,r12w		; DEBUG: {Register}/R9D {Register}/R12W ||| None | 0 | None ||| N/A | N/A
		0x18040FF82 shl r10,4		; DEBUG: {Register}/R10 {Immediate8}/None ||| None | 0 | None ||| N/A | 4
		0x18040FF86 mov r8d,r13d		; DEBUG: {Register}/R8D {Register}/R13D ||| None | 0 | None ||| N/A | N/A
		0x18040FF89 add r10,[rsi]		; DEBUG: {Register}/R10 {Memory}/None ||| RSI | 0 | None ||| N/A | N/A
		0x18040FF8C mov rdx,r14		; DEBUG: {Register}/RDX {Register}/R14 ||| None | 0 | None ||| N/A | N/A
		0x18040FF8F mov rcx,rsi		; DEBUG: {Register}/RCX {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x18040FF92 mov rax,[r10+130h]		; DEBUG: {Register}/RAX {Memory}/None ||| R10 | 304 | None ||| N/A | N/A
		0x18040FF99 mov [rsp+20h],rax		; DEBUG: {Memory}/None {Register}/RAX ||| RSP | 32 | None ||| N/A | N/A
		0x18040FF9E call qword ptr [r10+128h]		; DEBUG: {Memory}/None {Register}/None ||| R10 | 296 | None ||| N/A | N/A
		0x18040FFA5 jmp short 000000018040FFBCh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18040FFA7 movzx r9d,r12w		; DEBUG: {Register}/R9D {Register}/R12W ||| None | 0 | None ||| N/A | N/A
		0x18040FFAB mov [rsp+20h],rdi		; DEBUG: {Memory}/None {Register}/RDI ||| RSP | 32 | None ||| N/A | N/A
		0x18040FFB0 mov r8d,r13d		; DEBUG: {Register}/R8D {Register}/R13D ||| None | 0 | None ||| N/A | N/A
		0x18040FFB3 mov rdx,r14		; DEBUG: {Register}/RDX {Register}/R14 ||| None | 0 | None ||| N/A | N/A
		0x18040FFB6 mov rcx,rsi		; DEBUG: {Register}/RCX {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x18040FFB9 call r15		; DEBUG: {Register}/R15 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18040FFBC movzx ebx,ax		; DEBUG: {Register}/EBX {Register}/AX ||| None | 0 | None ||| N/A | N/A
		0x18040FFBF mov rbp,[rsp+68h]		; DEBUG: {Register}/RBP {Memory}/None ||| RSP | 104 | None ||| N/A | N/A
		0x18040FFC4 movzx eax,bx		; DEBUG: {Register}/EAX {Register}/BX ||| None | 0 | None ||| N/A | N/A
		0x18040FFC7 mov rbx,[rsp+60h]		; DEBUG: {Register}/RBX {Memory}/None ||| RSP | 96 | None ||| N/A | N/A
		0x18040FFCC mov rsi,[rsp+70h]		; DEBUG: {Register}/RSI {Memory}/None ||| RSP | 112 | None ||| N/A | N/A
		0x18040FFD1 add rsp,30h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 48
		0x18040FFD5 pop r15		; DEBUG: {Register}/R15 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18040FFD7 pop r14		; DEBUG: {Register}/R14 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18040FFD9 pop r13		; DEBUG: {Register}/R13 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18040FFDB pop r12		; DEBUG: {Register}/R12 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18040FFDD pop rdi		; DEBUG: {Register}/RDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18040FFDE ret		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18040FFDF int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.Char UIInput/OnValidate::Invoke(System.String,System.Int32,System.Char):
		End of function at 0x18040FFE0
		Absolute End is at 0x18040FFE0
		Identified Jump Destination addresses:
			0x18040FFBC
		0x18040FB5F: Saves the content of rdi to the stack
		0x18040FB60: Saves the content of r12 to the stack
		0x18040FB62: Saves the content of r13 to the stack
		0x18040FB64: Saves the content of r14 to the stack
		0x18040FB66: Saves the content of r15 to the stack
		0x18040FB6C: Copies {'this' (function parameter, type UIInput/OnValidate)} from rcx into rbp
		0x18040FB6F: Clears register rbx, yielding zero-local {'local4' (type System.Int32)}
		0x18040FB71: [!] Reads field prev from {'this' (function parameter, type UIInput/OnValidate)} and stores in a new local {'prev' (type System.MulticastDelegate)}

		0x18040FB75: Copies {'addedChar' (function parameter, type System.Char)} from r9 into r12
		0x18040FB79: Copies {'charIndex' (function parameter, type System.Int32)} from r8 into r13
		0x18040FB7C: Copies {'text' (function parameter, type System.String)} from rdx into r14
		0x18040FB7F: [!] Compares {'prev' (type System.MulticastDelegate)} and 0
		0x18040FB82: Jumps to 0x18040FB96 (which is an if statement's body) if prev equals 0 ;  - Increasing indentation - is standard if, unimportant is False

		0x18040FB84: Reads unknown value in stack, offset 128 (0x80) and stores the pointer in register rax as new constant constant2
		0x18040FB8C: Moves constant2 (type Cpp2IL.Core.Analysis.ResultModels.StackPointer) from register rax to the stack at offset 32 (0x20) as a new local local6
		0x18040FB91: [!] Calls managed method  on instance {'prev' (type System.MulticastDelegate)} ;  - Failed to resolve any matching method (there are 3 at this address)

		0x18040FB96: [!] Reads field method from {'this' (function parameter, type UIInput/OnValidate)} and stores in a new local {'method' (type System.IntPtr)}

		0x18040FB9A: [!] Writes the constant 0xFFFF into operand {'local8' (type System.UInt32)} (type UInt64) in register rax
		0x18040FBA3: [!] Reads field m_target from {'this' (function parameter, type UIInput/OnValidate)} and stores in a new local {'m_target' (type System.Object)}

		0x18040FBA7: [!] Compares  and {'local8' (type System.UInt32)}
		0x18040FBAB: Jumps to 0x18040FBB5 if  != {'local8' (type System.UInt32)} ;  - This is probably a goto, jumping to 0x18040FBB5 which is after end of current block @ 0x18040FB96 (started at 0x18040FB84)

		0x18040FBAD: Copies {'method' (type System.IntPtr)} from rdi into rcx
		0x18040FBB0: [!] Constructs and throws an exception of kind System.ExecutionEngineException

		0x18040FBB5: Copies {'method' (type System.IntPtr)} from rdi into rcx
		0x18040FBBD: [!] Reads field  from {'method' (type System.IntPtr)} and stores in a new local 

		0x18040FBC1: [!] Compares {'local11' (type System.ExecutionEngineException)} and 0
		0x18040FBC3: Jumps to 0x18040FBE3 if {'local11' (type System.ExecutionEngineException)} != 0 ;  - This is probably a goto, jumping to 0x18040FBE3 which is after end of current block @ 0x18040FB96 (started at 0x18040FB84)

		0x18040FBC5: [!] Compares {'method' (type System.IntPtr)} and 3
		0x18040FBC8: Jumps to 0x18040FFA7 if {'method' (type System.IntPtr)} != 3 ;  - This is probably a goto, jumping to 0x18040FFA7 which is after end of current block @ 0x18040FB96 (started at 0x18040FB84)

		0x18040FBCE: Copies {'method' (type System.IntPtr)} from rdi into r9
		0x18040FBD1: Copies {'addedChar' (function parameter, type System.Char)} from r12 into r8
		0x18040FBD5: Copies {'charIndex' (function parameter, type System.Int32)} from r13 into rdx
		0x18040FBD8: Copies {'text' (function parameter, type System.String)} from r14 into rcx
		0x18040FBDE: Jumps to 0x18040FFBC (which is an function-local jump destination)

		0x18040FBE3: [!] Reads field  from {'method' (type System.IntPtr)} and stores in a new local 

		0x18040FBE7: [!] Compares {'text' (function parameter, type System.String)} and 3
		0x18040FBEA: [!] Writes the constant 0xFFFF into operand {'local12' (type System.UInt32)} (type UInt64) in register rcx
		0x18040FBEF: Jumps to 0x18040FDAE if text equals 3 ;  - This is probably a goto, jumping to 0x18040FDAE which is after end of current block @ 0x18040FB96 (started at 0x18040FB84)

		0x18040FBF5: [!] Compares {'local11' (type System.ExecutionEngineException)} and {'local12' (type System.UInt32)}
		0x18040FBF8: Jumps to 0x18040FBCE if local11 equals local12 ;  - This is probably a goto, jumping to 0x18040FBCE which is after end of current block @ 0x18040FB96 (started at 0x18040FB84)

		0x18040FBFA: [!] Compares {'m_target' (type System.Object)} and 0
		0x18040FBFD: Jumps to 0x18040FC0E if m_target equals 0 ;  - This is probably a goto, jumping to 0x18040FC0E which is after end of current block @ 0x18040FB96 (started at 0x18040FB84)

		0x18040FBFF: Loads the class pointer from m_target into a constant constant7 in register rax
		0x18040FC02: Compares "{il2cpp field on {'constant7' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)}, offset 0x108}" and 256
		0x18040FC0C: Jumps to 0x18040FBCE if "{il2cpp field on {'constant7' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)}, offset 0x108}" != 256 ;  - This is probably a goto, jumping to 0x18040FBCE which is after end of current block @ 0x18040FB96 (started at 0x18040FB84)

		0x18040FC0E: [!] Compares  and {'local4' (type System.Int32)}
		0x18040FC12: Jumps to 0x18040FBCE if  equals local4 ;  - This is probably a goto, jumping to 0x18040FBCE which is after end of current block @ 0x18040FB96 (started at 0x18040FB84)

		0x18040FC14: [!] Compares {'m_target' (type System.Object)} and 0
		0x18040FC17: Jumps to 0x18040FC2C if m_target equals 0 ;  - This is probably a goto, jumping to 0x18040FC2C which is after end of current block @ 0x18040FB96 (started at 0x18040FB84)

		0x18040FC19: Loads the class pointer from m_target into a constant constant11 in register rax
		0x18040FC1C: Compares "{il2cpp field on {'constant11' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)}, offset 0x108}" and 256
		0x18040FC26: Jumps to 0x18040FFBF if "{il2cpp field on {'constant11' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)}, offset 0x108}" != 256 ;  - This is probably a goto, jumping to 0x18040FFBF which is after end of current block @ 0x18040FB96 (started at 0x18040FB84)

		0x18040FC2C: Copies {'method' (type System.IntPtr)} from rdi into rcx
		0x18040FC34: Copies {'method' (type System.IntPtr)} from rdi into rcx
		0x18040FC37: [!] Compares {'constant11' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} and 0
		0x18040FC39: Jumps to 0x18040FCF3 if constant11 equals 0 ;  - This is probably a goto, jumping to 0x18040FCF3 which is after end of current block @ 0x18040FB96 (started at 0x18040FB84)

		0x18040FC3F: [!] Calls managed method  on instance {'method' (type System.IntPtr)} ;  - Failed to resolve any matching method (there are 3 at this address)

		0x18040FC44: Copies {'constant11' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} from rax into rcx
		0x18040FC4C: [!] Reads field  from {'method' (type System.IntPtr)} and stores in a new local 

		0x18040FC50: [!] Compares {'constant11' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} and 0
		0x18040FC52: Jumps to 0x18040FCE3 if constant11 equals 0 ;  - This is probably a goto, jumping to 0x18040FCE3 which is after end of current block @ 0x18040FB96 (started at 0x18040FB84)

		0x18040FC58: Loads the class pointer from text into a constant constant16 in register r10
		0x18040FC5B: Copies {'constant11' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} from rcx into r11
		0x18040FC5E: [!] Reads field  from {'method' (type System.IntPtr)} and stores in a new local 

		0x18040FC62: [!!] Reads value at unknown offset 286 (0x11E) on a klass pointer
		0x18040FC6A: [!] Compares {'local4' (type System.Int32)} and {'charIndex' (function parameter, type System.Int32)}
		0x18040FC6D: Jumps to 0x18040FC96 if {'local4' (type System.Int32)} is greater than or equal to {'charIndex' (function parameter, type System.Int32)} ;  - This is probably a goto, jumping to 0x18040FC96 which is after end of current block @ 0x18040FB96 (started at 0x18040FB84)

		0x18040FC6F: Loads the interface offsets for the class pointer to System.String, which contains 7 offsets, and stores them as a constant constant17 in reg r8
		0x18040FC80: Copies {'local4' (type System.Int32)} from rbx into rcx
		0x18040FC83: Copies {'local4' (type System.Int32)} from rcx into rax
		0x18040FC85: [!] Adds {'local4' (type System.Int32)} and {'local4' (type System.Int32)} and stores the result in {'local4' (type System.Int32)}
		0x18040FC8C: Jumps to 0x18040FCC8 if local4 equals charIndex ;  - This is probably a goto, jumping to 0x18040FCC8 which is after end of current block @ 0x18040FB96 (started at 0x18040FB84)

		0x18040FC8E: [!] Adds 1 to the value {'local4' (type System.Int32)}, stored in rbx
		0x18040FC91: [!] Compares {'local4' (type System.Int32)} and {'charIndex' (function parameter, type System.Int32)}
		0x18040FC96: Copies {'constant11' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} from r11 into r8
		0x18040FC99: Copies {'method' (type System.IntPtr)} from r9 into rdx
		0x18040FC9C: Copies {'text' (function parameter, type System.String)} from r14 into rcx

		Potential Loop Start (0x18040FCA4):
		0x18040FCA4: [!] Reads field  from {'local4' (type System.Int32)} and stores in a new local 


		Potential Loop Start (0x18040FCA8):
		0x18040FCA8: Copies {'method' (type System.IntPtr)} from rdi into rdx
		0x18040FCB0: Copies {'local4' (type System.Int32)} from rax into r9
		0x18040FCB3: Copies {'addedChar' (function parameter, type System.Char)} from r12 into r8
		0x18040FCB7: Copies {'charIndex' (function parameter, type System.Int32)} from r13 into rdx
		0x18040FCBA: Copies {'text' (function parameter, type System.String)} from r14 into rcx
		0x18040FCBD: Loads the class pointer from local4 into a constant constant18 in register r10
		0x18040FCC3: Jumps to 0x18040FFBC (which is an function-local jump destination)

		0x18040FCC8: [!] Adds {'text' (function parameter, type System.String)} and {'text' (function parameter, type System.String)} and stores the result in {'text' (function parameter, type System.String)}
		0x18040FCD7: [!] Adds {'text' (function parameter, type System.String)} and {'constant11' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} and stores the result in {'text' (function parameter, type System.String)}
		0x18040FCDE: [!] Adds {'local4' (type System.Int32)} and {'text' (function parameter, type System.String)} and stores the result in {'local4' (type System.Int32)}
		0x18040FCE1: Jumps to 0x18040FCA4 - which is still in this function, but further up. Probably indicative that this is a loop.
		0x18040FCE3: Loads the class pointer from text into a constant constant19 in register rax
		0x18040FCE6: Loads the pointer to the field  on {'text' (function parameter, type System.String)} into register rcx
		0x18040FCEA: [!] Adds {'text' (function parameter, type System.String)} and {'text' (function parameter, type System.String)} and stores the result in {'text' (function parameter, type System.String)}
		0x18040FCED: [!!] Reads value at unknown offset 0 (0x0) on a klass pointer
		0x18040FCF1: Jumps to 0x18040FCA8 - which is still in this function, but further up. Probably indicative that this is a loop.
		0x18040FCF3: [!] Calls managed method  on instance {'text' (function parameter, type System.String)} ;  - Failed to resolve any matching method (there are 3 at this address)

		0x18040FCF8: Copies {'constant19' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} from rax into rcx
		0x18040FD00: [!] Compares {'constant19' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} and 0
		0x18040FD02: Jumps to 0x18040FD84 if constant19 equals 0 ;  - This is probably a goto, jumping to 0x18040FD84 which is after end of current block @ 0x18040FB96 (started at 0x18040FB84)

		0x18040FD08: Copies {'method' (type System.IntPtr)} from rdi into rcx
		0x18040FD0B: [!] Calls managed method  on instance {'method' (type System.IntPtr)} ;  - Failed to resolve any matching method (there are 3 at this address)

		0x18040FD10: Loads the class pointer from text into a constant constant21 in register r10
		0x18040FD13: Copies {'constant19' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} from rax into r9
		0x18040FD16: [!] Reads field  from {'method' (type System.IntPtr)} and stores in a new local 

		0x18040FD1B: [!!] Reads value at unknown offset 286 (0x11E) on a klass pointer
		0x18040FD23: [!] Compares {'local4' (type System.Int32)} and {'addedChar' (function parameter, type System.Char)}
		0x18040FD27: Jumps to 0x18040FD47 if {'local4' (type System.Int32)} is greater than or equal to {'addedChar' (function parameter, type System.Char)} ;  - This is probably a goto, jumping to 0x18040FD47 which is after end of current block @ 0x18040FB96 (started at 0x18040FB84)

		0x18040FD29: Loads the interface offsets for the class pointer to System.String, which contains 7 offsets, and stores them as a constant constant22 in reg rdx
		0x18040FD30: Copies {'local4' (type System.Int32)} from rbx into rcx
		0x18040FD33: Copies {'local4' (type System.Int32)} from rcx into rax
		0x18040FD35: [!] Adds {'local4' (type System.Int32)} and {'local4' (type System.Int32)} and stores the result in {'local4' (type System.Int32)}
		0x18040FD3C: Jumps to 0x18040FD6A if local4 equals addedChar ;  - This is probably a goto, jumping to 0x18040FD6A which is after end of current block @ 0x18040FB96 (started at 0x18040FB84)

		0x18040FD3E: [!] Adds 1 to the value {'local4' (type System.Int32)}, stored in rbx
		0x18040FD41: [!] Compares {'local4' (type System.Int32)} and {'addedChar' (function parameter, type System.Char)}
		0x18040FD47: Copies {'constant11' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} from r11 into r8
		0x18040FD4A: Copies {'constant19' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} from r9 into rdx
		0x18040FD4D: Copies {'text' (function parameter, type System.String)} from r14 into rcx

		Potential Loop Start (0x18040FD55):
		0x18040FD55: [!] Reads field  from {'local4' (type System.Int32)} and stores in a new local 

		0x18040FD59: Copies {'addedChar' (function parameter, type System.Char)} from r12 into r8
		0x18040FD5D: Copies {'charIndex' (function parameter, type System.Int32)} from r13 into rdx
		0x18040FD60: Copies {'text' (function parameter, type System.String)} from r14 into rcx
		0x18040FD65: Jumps to 0x18040FFBC (which is an function-local jump destination)

		0x18040FD6A: [!] Adds {'text' (function parameter, type System.String)} and {'text' (function parameter, type System.String)} and stores the result in {'text' (function parameter, type System.String)}
		0x18040FD78: [!] Adds {'text' (function parameter, type System.String)} and {'constant11' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} and stores the result in {'text' (function parameter, type System.String)}
		0x18040FD7F: [!] Adds {'local4' (type System.Int32)} and {'text' (function parameter, type System.String)} and stores the result in {'local4' (type System.Int32)}
		0x18040FD82: Jumps to 0x18040FD55 - which is still in this function, but further up. Probably indicative that this is a loop.
		0x18040FD84: [!] Reads field  from {'method' (type System.IntPtr)} and stores in a new local 

		0x18040FD89: Copies {'addedChar' (function parameter, type System.Char)} from r12 into r8
		0x18040FD8D: Loads the class pointer from text into a constant constant23 in register rax
		0x18040FD90: [!] Adds  and {'constant21' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} and stores the result in 
		0x18040FD93: Copies {'charIndex' (function parameter, type System.Int32)} from r13 into rdx
		0x18040FD96: Copies {'text' (function parameter, type System.String)} from r14 into rcx
		0x18040FD99: Loads the pointer to the implementation of virtual function  specific to System.String from the class pointer in rax, slot -1 (from memory offset 304) and stores in constant 
		0x18040FDA9: Jumps to 0x18040FFBC (which is an function-local jump destination)

		0x18040FDAE: [!] Compares {'constant23' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} and {'text' (function parameter, type System.String)}
		0x18040FDB1: Jumps to 0x18040FFA7 if constant23 equals text ;  - This is probably a goto, jumping to 0x18040FFA7 which is after end of current block @ 0x18040FB96 (started at 0x18040FB84)

		0x18040FDB7: [!] Compares {'m_target' (type System.Object)} and 0
		0x18040FDBA: Jumps to 0x18040FDCF if m_target equals 0 ;  - This is probably a goto, jumping to 0x18040FDCF which is after end of current block @ 0x18040FB96 (started at 0x18040FB84)

		0x18040FDBC: Loads the class pointer from m_target into a constant constant25 in register rax
		0x18040FDBF: Compares "{il2cpp field on {'constant25' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)}, offset 0x108}" and 256
		0x18040FDC9: Jumps to 0x18040FFA7 if "{il2cpp field on {'constant25' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)}, offset 0x108}" != 256 ;  - This is probably a goto, jumping to 0x18040FFA7 which is after end of current block @ 0x18040FB96 (started at 0x18040FB84)

		0x18040FDCF: [!] Compares  and {'local4' (type System.Int32)}
		0x18040FDD3: Jumps to 0x18040FFA7 if  equals local4 ;  - This is probably a goto, jumping to 0x18040FFA7 which is after end of current block @ 0x18040FB96 (started at 0x18040FB84)

		0x18040FDD9: [!] Compares {'m_target' (type System.Object)} and 0
		0x18040FDDC: Jumps to 0x18040FBCE if m_target equals 0 ;  - This is probably a goto, jumping to 0x18040FBCE which is after end of current block @ 0x18040FB96 (started at 0x18040FB84)

		0x18040FDE2: Loads the class pointer from m_target into a constant constant29 in register rax
		0x18040FDE5: Compares "{il2cpp field on {'constant29' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)}, offset 0x108}" and 256
		0x18040FDEF: Jumps to 0x18040FFBF if "{il2cpp field on {'constant29' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)}, offset 0x108}" != 256 ;  - This is probably a goto, jumping to 0x18040FFBF which is after end of current block @ 0x18040FB96 (started at 0x18040FB84)

		0x18040FDF5: Copies {'method' (type System.IntPtr)} from rdi into rcx
		0x18040FDFD: Copies {'method' (type System.IntPtr)} from rdi into rcx
		0x18040FE00: [!] Compares {'constant29' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} and 0
		0x18040FE02: Jumps to 0x18040FEDB if constant29 equals 0 ;  - This is probably a goto, jumping to 0x18040FEDB which is after end of current block @ 0x18040FB96 (started at 0x18040FB84)

		0x18040FE08: [!] Calls managed method  on instance {'method' (type System.IntPtr)} ;  - Failed to resolve any matching method (there are 3 at this address)

		0x18040FE0D: Copies {'constant29' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} from rax into rcx
		0x18040FE15: [!] Reads field  from {'method' (type System.IntPtr)} and stores in a new local 

		0x18040FE19: [!] Compares {'constant29' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} and 0
		0x18040FE1B: Jumps to 0x18040FEA8 if constant29 equals 0 ;  - This is probably a goto, jumping to 0x18040FEA8 which is after end of current block @ 0x18040FB96 (started at 0x18040FB84)

		0x18040FE21: Loads the class pointer from m_target into a constant constant34 in register r10
		0x18040FE24: Copies {'constant29' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} from rcx into r11
		0x18040FE27: [!] Reads field  from {'method' (type System.IntPtr)} and stores in a new local 

		0x18040FE2B: [!!] Reads value at unknown offset 286 (0x11E) on a klass pointer
		0x18040FE33: [!] Compares {'local4' (type System.Int32)} and {'charIndex' (function parameter, type System.Int32)}
		0x18040FE36: Jumps to 0x18040FE56 if {'local4' (type System.Int32)} is greater than or equal to {'charIndex' (function parameter, type System.Int32)} ;  - This is probably a goto, jumping to 0x18040FE56 which is after end of current block @ 0x18040FB96 (started at 0x18040FB84)

		0x18040FE38: Loads the interface offsets for the class pointer to System.Object, which contains 0 offsets, and stores them as a constant constant35 in reg r8
		0x18040FE40: Copies {'local4' (type System.Int32)} from rbx into rcx
		0x18040FE43: Copies {'local4' (type System.Int32)} from rcx into rax
		0x18040FE45: [!] Adds {'local4' (type System.Int32)} and {'local4' (type System.Int32)} and stores the result in {'local4' (type System.Int32)}
		0x18040FE4C: Jumps to 0x18040FE8D if local4 equals charIndex ;  - This is probably a goto, jumping to 0x18040FE8D which is after end of current block @ 0x18040FB96 (started at 0x18040FB84)

		0x18040FE4E: [!] Adds 1 to the value {'local4' (type System.Int32)}, stored in rbx
		0x18040FE51: [!] Compares {'local4' (type System.Int32)} and {'charIndex' (function parameter, type System.Int32)}
		0x18040FE56: Copies {'constant29' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} from r11 into r8
		0x18040FE59: Copies {'constant19' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} from r9 into rdx
		0x18040FE5C: Copies {'m_target' (type System.Object)} from rsi into rcx

		Potential Loop Start (0x18040FE64):
		0x18040FE64: [!] Reads field  from {'local4' (type System.Int32)} and stores in a new local 

		0x18040FE68: Copies {'method' (type System.IntPtr)} from rdi into rdx
		0x18040FE70: Copies {'addedChar' (function parameter, type System.Char)} from r12 into r9
		0x18040FE74: Moves local4 (type System.Int32) from register rax to the stack at offset 32 (0x20)
		0x18040FE79: Copies {'charIndex' (function parameter, type System.Int32)} from r13 into r8
		0x18040FE7C: Copies {'text' (function parameter, type System.String)} from r14 into rdx
		0x18040FE7F: Copies {'m_target' (type System.Object)} from rsi into rcx
		0x18040FE82: Loads the class pointer from local4 into a constant constant36 in register r10
		0x18040FE88: Jumps to 0x18040FFBC (which is an function-local jump destination)

		0x18040FE8D: [!] Adds {'m_target' (type System.Object)} and {'m_target' (type System.Object)} and stores the result in {'m_target' (type System.Object)}
		0x18040FE9C: [!] Adds {'m_target' (type System.Object)} and {'constant29' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} and stores the result in {'m_target' (type System.Object)}
		0x18040FEA3: [!] Adds {'local4' (type System.Int32)} and {'m_target' (type System.Object)} and stores the result in {'local4' (type System.Int32)}
		0x18040FEA6: Jumps to 0x18040FE64 - which is still in this function, but further up. Probably indicative that this is a loop.
		0x18040FEA8: Loads the class pointer from m_target into a constant constant37 in register rax
		0x18040FEAB: Loads the pointer to the field  on {'m_target' (type System.Object)} into register rcx
		0x18040FEAF: [!] Adds {'m_target' (type System.Object)} and {'m_target' (type System.Object)} and stores the result in {'m_target' (type System.Object)}
		0x18040FEB2: Copies {'method' (type System.IntPtr)} from rdi into rdx
		0x18040FEB5: [!!] Reads value at unknown offset 0 (0x0) on a klass pointer
		0x18040FEBE: Copies {'addedChar' (function parameter, type System.Char)} from r12 into r9
		0x18040FEC2: Moves constant37 (type Cpp2IL.Core.Analysis.Il2CppClassIdentifier) from register rax to the stack at offset 32 (0x20) as a new local local13
		0x18040FEC7: Copies {'charIndex' (function parameter, type System.Int32)} from r13 into r8
		0x18040FECA: Copies {'text' (function parameter, type System.String)} from r14 into rdx
		0x18040FECD: Copies {'m_target' (type System.Object)} from rsi into rcx
		0x18040FED0: [!!] Reads value at unknown offset 0 (0x0) on a klass pointer
		0x18040FED6: Jumps to 0x18040FFBC (which is an function-local jump destination)

		0x18040FEDB: [!] Calls managed method  on instance {'m_target' (type System.Object)} ;  - Failed to resolve any matching method (there are 3 at this address)

		0x18040FEE0: Copies {'constant37' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} from rax into rcx
		0x18040FEE8: [!] Compares {'constant37' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} and 0
		0x18040FEEA: Jumps to 0x18040FF79 if constant37 equals 0 ;  - This is probably a goto, jumping to 0x18040FF79 which is after end of current block @ 0x18040FB96 (started at 0x18040FB84)

		0x18040FEF0: Copies {'method' (type System.IntPtr)} from rdi into rcx
		0x18040FEF3: [!] Calls managed method  on instance {'method' (type System.IntPtr)} ;  - Failed to resolve any matching method (there are 3 at this address)

		0x18040FEF8: Loads the class pointer from m_target into a constant constant39 in register r10
		0x18040FEFB: Copies {'constant37' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} from rax into r9
		0x18040FEFE: [!] Reads field  from {'method' (type System.IntPtr)} and stores in a new local 

		0x18040FF03: [!!] Reads value at unknown offset 286 (0x11E) on a klass pointer
		0x18040FF0B: [!] Compares {'local4' (type System.Int32)} and {'charIndex' (function parameter, type System.Int32)}
		0x18040FF0F: Jumps to 0x18040FF37 if {'local4' (type System.Int32)} is greater than or equal to {'charIndex' (function parameter, type System.Int32)} ;  - This is probably a goto, jumping to 0x18040FF37 which is after end of current block @ 0x18040FB96 (started at 0x18040FB84)

		0x18040FF11: Loads the interface offsets for the class pointer to System.Object, which contains 0 offsets, and stores them as a constant constant40 in reg rdx
		0x18040FF20: Copies {'local4' (type System.Int32)} from rbx into rcx
		0x18040FF23: Copies {'local4' (type System.Int32)} from rcx into rax
		0x18040FF25: [!] Adds {'local4' (type System.Int32)} and {'local4' (type System.Int32)} and stores the result in {'local4' (type System.Int32)}
		0x18040FF2C: Jumps to 0x18040FF5F if local4 equals charIndex ;  - This is probably a goto, jumping to 0x18040FF5F which is after end of current block @ 0x18040FB96 (started at 0x18040FB84)

		0x18040FF2E: [!] Adds 1 to the value {'local4' (type System.Int32)}, stored in rbx
		0x18040FF31: [!] Compares {'local4' (type System.Int32)} and {'charIndex' (function parameter, type System.Int32)}
		0x18040FF37: Copies {'constant29' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} from r11 into r8
		0x18040FF3A: Copies {'constant37' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} from r9 into rdx
		0x18040FF3D: Copies {'m_target' (type System.Object)} from rsi into rcx

		Potential Loop Start (0x18040FF45):
		0x18040FF45: [!] Reads field  from {'local4' (type System.Int32)} and stores in a new local 

		0x18040FF49: Copies {'addedChar' (function parameter, type System.Char)} from r12 into r9
		0x18040FF4D: Moves m_target (type System.Object) from register rcx to the stack at offset 32 (0x20)
		0x18040FF52: Copies {'charIndex' (function parameter, type System.Int32)} from r13 into r8
		0x18040FF55: Copies {'m_target' (type System.Object)} from rsi into rcx
		0x18040FF58: Copies {'text' (function parameter, type System.String)} from r14 into rdx
		0x18040FF5D: Jumps to 0x18040FFBC (which is an function-local jump destination)

		0x18040FF5F: [!] Adds {'m_target' (type System.Object)} and {'m_target' (type System.Object)} and stores the result in {'m_target' (type System.Object)}
		0x18040FF6D: [!] Adds {'m_target' (type System.Object)} and {'constant29' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} and stores the result in {'m_target' (type System.Object)}
		0x18040FF74: [!] Adds {'local4' (type System.Int32)} and {'m_target' (type System.Object)} and stores the result in {'local4' (type System.Int32)}
		0x18040FF77: Jumps to 0x18040FF45 - which is still in this function, but further up. Probably indicative that this is a loop.
		0x18040FF79: [!] Reads field  from {'method' (type System.IntPtr)} and stores in a new local 

		0x18040FF7E: Copies {'addedChar' (function parameter, type System.Char)} from r12 into r9
		0x18040FF86: Copies {'charIndex' (function parameter, type System.Int32)} from r13 into r8
		0x18040FF8C: Copies {'text' (function parameter, type System.String)} from r14 into rdx
		0x18040FF8F: Copies {'m_target' (type System.Object)} from rsi into rcx
		0x18040FF92: Loads the pointer to the implementation of virtual function  specific to System.Object from the class pointer in r10, slot -1 (from memory offset 304) and stores in constant 
		0x18040FF99: Moves local4 (type System.Int32) from register rax to the stack at offset 32 (0x20)
		0x18040FFA5: Jumps to 0x18040FFBC (which is an function-local jump destination)

		0x18040FFA7: Copies {'addedChar' (function parameter, type System.Char)} from r12 into r9
		0x18040FFAB: Moves method (type System.IntPtr) from register rdi to the stack at offset 32 (0x20)
		0x18040FFB0: Copies {'charIndex' (function parameter, type System.Int32)} from r13 into r8
		0x18040FFB3: Copies {'text' (function parameter, type System.String)} from r14 into rdx
		0x18040FFB6: Copies {'m_target' (type System.Object)} from rsi into rcx

		Jump Destination (0x18040FFBC):
		0x18040FFBC: Copies {'local4' (type System.Int32)} from rax into rbx
		0x18040FFBF: Reads unknown value in stack, offset 104 (0x68) and stores the pointer in register rbp as new constant constant41
		0x18040FFC4: Copies {'local4' (type System.Int32)} from rbx into rax
		0x18040FFC7: Reads unknown value in stack, offset 96 (0x60) and stores the pointer in register rbx as new constant constant42
		0x18040FFCC: Reads unknown value in stack, offset 112 (0x70) and stores the pointer in register rsi as new constant constant43
		0x18040FFDE: [!] Returns {'local4' (type System.Int32)} from the function




	Generated Pseudocode:

	Declaring Type: UIInput/OnValidate
	System.Char Invoke(System.String text, System.Int32 charIndex, System.Char addedChar)
		ulong local4 = 0
		System.MulticastDelegate prev = this.prev

		if (prev != 0)

		    [instruction error - managed method being called is null]
		endif
        
		System.IntPtr method = this.method
		System.Int64 local8 = 0xFFFF
		System.Object m_target = this.m_target

		if ( != local8)
            goto INSN_18040FBB5
        endif
		throw new System.ExecutionEngineException()

		INSN_18040FBB5:
		  = method.

		if (local11 != 0)
            goto INSN_18040FBE3
        endif

		if (method != 3)
            goto INSN_18040FFA7
        endif

		INSN_18040FBE3:
		  = method.
		System.Int64 local12 = 0xFFFF

		if (text == 3)
            goto INSN_18040FDAE
        endif

		if (local11 == local12)
            goto INSN_18040FBCE
        endif

		if (m_target == 0)
            goto INSN_18040FC0E
        endif

		INSN_18040FC0E:

		if ( == local4)
            goto INSN_18040FBCE
        endif

		if (m_target == 0)
            goto INSN_18040FC2C
        endif

		INSN_18040FC2C:

		if (constant11 == 0)
            goto INSN_18040FCF3
        endif

		[instruction error - managed method being called is null]
		  = method.

		if (constant11 == 0)
            goto INSN_18040FCE3
        endif
		  = method.
		//UNKNOWN CLASS OFFSET READ HERE

		if (local4 >= charIndex)
            goto INSN_18040FC96
        endif
		local4 += local4

		if (local4 == charIndex)
            goto INSN_18040FCC8
        endif
		local4 += 1

		INSN_18040FC96:
		  = local4.

		INSN_18040FCC8:
		text += text
		text += constant11
		local4 += text

		INSN_18040FCE3:
		text += text
		//UNKNOWN CLASS OFFSET READ HERE

		INSN_18040FCF3:

		[instruction error - managed method being called is null]

		if (constant19 == 0)
            goto INSN_18040FD84
        endif

		[instruction error - managed method being called is null]
		  = method.
		//UNKNOWN CLASS OFFSET READ HERE

		if (local4 >= addedChar)
            goto INSN_18040FD47
        endif
		local4 += local4

		if (local4 == addedChar)
            goto INSN_18040FD6A
        endif
		local4 += 1

		INSN_18040FD47:
		  = local4.

		INSN_18040FD6A:
		text += text
		text += constant11
		local4 += text

		INSN_18040FD84:
		  = method.
		 += constant21

		INSN_18040FDAE:

		if (constant23 == text)
            goto INSN_18040FFA7
        endif

		if (m_target == 0)
            goto INSN_18040FDCF
        endif

		INSN_18040FDCF:

		if ( == local4)
            goto INSN_18040FFA7
        endif

		if (m_target == 0)
            goto INSN_18040FBCE
        endif

		if (constant29 == 0)
            goto INSN_18040FEDB
        endif

		[instruction error - managed method being called is null]
		  = method.

		if (constant29 == 0)
            goto INSN_18040FEA8
        endif
		  = method.
		//UNKNOWN CLASS OFFSET READ HERE

		if (local4 >= charIndex)
            goto INSN_18040FE56
        endif
		local4 += local4

		if (local4 == charIndex)
            goto INSN_18040FE8D
        endif
		local4 += 1

		INSN_18040FE56:
		  = local4.

		INSN_18040FE8D:
		m_target += m_target
		m_target += constant29
		local4 += m_target

		INSN_18040FEA8:
		m_target += m_target
		//UNKNOWN CLASS OFFSET READ HERE
		//UNKNOWN CLASS OFFSET READ HERE

		INSN_18040FEDB:

		[instruction error - managed method being called is null]

		if (constant37 == 0)
            goto INSN_18040FF79
        endif

		[instruction error - managed method being called is null]
		  = method.
		//UNKNOWN CLASS OFFSET READ HERE

		if (local4 >= charIndex)
            goto INSN_18040FF37
        endif
		local4 += local4

		if (local4 == charIndex)
            goto INSN_18040FF5F
        endif
		local4 += 1

		INSN_18040FF37:
		  = local4.

		INSN_18040FF5F:
		m_target += m_target
		m_target += constant29
		local4 += m_target

		INSN_18040FF79:
		  = method.

		INSN_18040FFA7:
		return local4


Generated IL:
	Action of type Cpp2IL.Core.Analysis.Actions.x86.Important.CallManagedFunctionAction at (0x18040FB91) is corrupt (Don't know what method is being called) and cannot be created as IL. Aborting here.


Method: System.IAsyncResult UIInput/OnValidate::BeginInvoke(System.String,System.Int32,System.Char,System.AsyncCallback,System.Object):	Method Body (x86 ASM):
		0x18040FA80 mov [rsp+8],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RSP | 8 | None ||| N/A | N/A
		0x18040FA85 mov [rsp+20h],r9w		; DEBUG: {Memory}/None {Register}/R9W ||| RSP | 32 | None ||| N/A | N/A
		0x18040FA8B mov [rsp+18h],r8d		; DEBUG: {Memory}/None {Register}/R8D ||| RSP | 24 | None ||| N/A | N/A
		0x18040FA90 push rdi		; DEBUG: {Register}/RDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18040FA91 sub rsp,40h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 64
		0x18040FA95 cmp byte ptr [18183E23Ch],0		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6467871292 | None ||| N/A | 0
		0x18040FA9C mov rbx,rdx		; DEBUG: {Register}/RBX {Register}/RDX ||| None | 0 | None ||| N/A | N/A
		0x18040FA9F mov rdi,rcx		; DEBUG: {Register}/RDI {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x18040FAA2 jne short 000000018040FAB6h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18040FAA4 mov ecx,[1814CAECCh]		; DEBUG: {Register}/ECX {Memory}/None ||| RIP | 6464253644 | None ||| N/A | N/A
		0x18040FAAA call 00000001800FEB90h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18040FAAF mov byte ptr [18183E23Ch],1		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6467871292 | None ||| N/A | 1
		0x18040FAB6 mov rcx,[1818841C8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468157896 | None ||| N/A | N/A
		0x18040FABD lea rdx,[rsp+60h]		; DEBUG: {Register}/RDX {Memory}/None ||| RSP | 96 | None ||| N/A | N/A
		0x18040FAC2 mov qword ptr [rsp+38h],0		; DEBUG: {Memory}/None {Immediate32to64}/None ||| RSP | 56 | None ||| N/A | 0
		0x18040FACB mov [rsp+20h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RSP | 32 | None ||| N/A | N/A
		0x18040FAD0 call 000000018013A7F0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18040FAD5 mov rcx,[1818842E8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468158184 | None ||| N/A | N/A
		0x18040FADC lea rdx,[rsp+68h]		; DEBUG: {Register}/RDX {Memory}/None ||| RSP | 104 | None ||| N/A | N/A
		0x18040FAE1 mov [rsp+28h],rax		; DEBUG: {Memory}/None {Register}/RAX ||| RSP | 40 | None ||| N/A | N/A
		0x18040FAE6 call 000000018013A7F0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18040FAEB mov r9,[rsp+78h]		; DEBUG: {Register}/R9 {Memory}/None ||| RSP | 120 | None ||| N/A | N/A
		0x18040FAF0 lea rdx,[rsp+20h]		; DEBUG: {Register}/RDX {Memory}/None ||| RSP | 32 | None ||| N/A | N/A
		0x18040FAF5 mov r8,[rsp+70h]		; DEBUG: {Register}/R8 {Memory}/None ||| RSP | 112 | None ||| N/A | N/A
		0x18040FAFA mov rcx,rdi		; DEBUG: {Register}/RCX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x18040FAFD mov [rsp+30h],rax		; DEBUG: {Memory}/None {Register}/RAX ||| RSP | 48 | None ||| N/A | N/A
		0x18040FB02 call 000000018010D170h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18040FB07 mov rbx,[rsp+50h]		; DEBUG: {Register}/RBX {Memory}/None ||| RSP | 80 | None ||| N/A | N/A
		0x18040FB0C add rsp,40h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 64
		0x18040FB10 pop rdi		; DEBUG: {Register}/RDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18040FB11 ret		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18040FB12 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.IAsyncResult UIInput/OnValidate::BeginInvoke(System.String,System.Int32,System.Char,System.AsyncCallback,System.Object):
		End of function at 0x18040FB13
		Absolute End is at 0x18040FB13
		Identified Jump Destination addresses:

		0x18040FA85: Moves addedChar (type System.Char) from register r9 to the stack at offset 32 (0x20)
		0x18040FA8B: Moves charIndex (type System.Int32) from register r8 to the stack at offset 24 (0x18)
		0x18040FA90: Saves the content of rdi to the stack
		0x18040FA95: Compares {Unknown Global at 0x18183E23C, first ten bytes are [224 60 103 1 32 123 1 0 105 123], or as chars "à<g { i{"} and 0
		0x18040FA9C: Copies {'text' (function parameter, type System.String)} from rdx into rbx
		0x18040FA9F: Copies {'this' (function parameter, type UIInput/OnValidate)} from rcx into rdi
		0x18040FAA2: Jumps to 0x18040FAB6 if {Unknown Global at 0x18183E23C, first ten bytes are [224 60 103 1 32 123 1 0 105 123], or as chars "à<g { i{"} != 0

		0x18040FAA4: Reads {Unknown Global at 0x1814CAECC, first ten bytes are [142 79 0 0 142 111 0 0 142 15], or as chars "O  o  "} into register rcx as a constant constant3
		0x18040FAAA: Attempts to load the il2cpp metadata for this method (method id 20366) and init it cpp-side.

		0x18040FAB6: Loads the type definition for managed type System.Int32 as a constant "Int32" in rcx
		0x18040FABD: Loads a pointer to stack offset 0x60 into register rdx as new constant constant5
		0x18040FAC2: Moves 0 (immediate ulong value) to the stack at offset 56 as a new local local6
		0x18040FACB: Moves text (type System.String) from register rbx to the stack at offset 32 (0x20)
		0x18040FAD0: Boxes a cpp primitive value  to managed type System.Int32 and stores the result in new local  in register rax.
		0x18040FAD5: Loads the type definition for managed type System.Char as a constant "Char" in rcx
		0x18040FADC: Loads a pointer to stack offset 0x68 into register rdx as new constant constant7
		0x18040FAE6: Boxes a cpp primitive value  to managed type System.Char and stores the result in new local  in register rax.
		0x18040FAEB: Reads unknown value in stack, offset 120 (0x78) and stores the pointer in register r9 as new constant constant8
		0x18040FAF0: Loads a pointer to stack offset 0x20 into register rdx as new constant constant9
		0x18040FAF5: Reads unknown value in stack, offset 112 (0x70) and stores the pointer in register r8 as new constant constant10
		0x18040FAFA: Copies {'this' (function parameter, type UIInput/OnValidate)} from rdi into rcx
		0x18040FB07: Reads unknown value in stack, offset 80 (0x50) and stores the pointer in register rbx as new constant constant11
		0x18040FB11: [!] Returns  from the function




	Generated Pseudocode:

	Declaring Type: UIInput/OnValidate
	System.IAsyncResult BeginInvoke(System.String text, System.Int32 charIndex, System.Char addedChar, System.AsyncCallback callback, System.Object object)
		return 


Generated IL:
	Action of type Cpp2IL.Core.Analysis.Actions.x86.Important.ReturnFromFunctionAction at (0x18040FB11) is corrupt (Return value is missing) and cannot be created as IL. Aborting here.


Method: System.Char UIInput/OnValidate::EndInvoke(System.IAsyncResult):	Method Body (x86 ASM):
		0x18040FB20 sub rsp,28h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 40
		0x18040FB24 mov rcx,rdx		; DEBUG: {Register}/RCX {Register}/RDX ||| None | 0 | None ||| N/A | N/A
		0x18040FB27 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18040FB29 call 000000018010DD90h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18040FB2E test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18040FB31 je short 000000018040FB43h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18040FB33 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18040FB36 call 000000018013ADF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18040FB3B movzx eax,word ptr [rax]		; DEBUG: {Register}/EAX {Memory}/None ||| RAX | 0 | None ||| N/A | N/A
		0x18040FB3E add rsp,28h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 40
		0x18040FB42 ret		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18040FB43 xor ecx,ecx		; DEBUG: {Register}/ECX {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x18040FB45 call 000000018012BDA0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18040FB4A int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.Char UIInput/OnValidate::EndInvoke(System.IAsyncResult):
		End of function at 0x18040FB4B
		Absolute End is at 0x18040FB4B
		Identified Jump Destination addresses:

		0x18040FB24: Copies {'result' (function parameter, type System.IAsyncResult)} from rdx into rcx
		0x18040FB2E: [!] Compares  and 0
		0x18040FB31: Jumps to 0x18040FB43 (which throws a NRE) if  equals 0. Implicitly present in managed code, so ignored here.
		0x18040FB3B: Dereference and moves local result to local3
		0x18040FB42: [!] Returns {'local3' (type System.IAsyncResult)} from the function

		0x18040FB45: [!] Constructs and throws an exception of kind System.NullReferenceException




	Generated Pseudocode:

	Declaring Type: UIInput/OnValidate
	System.Char EndInvoke(System.IAsyncResult result)
		local3 = result
		return local3
		throw new System.NullReferenceException()


Generated IL:
	Action of type Cpp2IL.Core.Analysis.Actions.x86.ReadLocalPointerToRegAction at (0x18040FB3B) is corrupt (Local being dereferenced was stripped) and cannot be created as IL. Aborting here.


