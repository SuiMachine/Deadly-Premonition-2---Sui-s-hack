Type: CompareFunc

Method: System.Void BetterList`1/CompareFunc::.ctor(System.Object,System.IntPtr):	Method Body (x86 ASM):
		0x1802ED440 mov rax,[r8]		; DEBUG: {Register}/RAX {Memory}/None ||| R8 | 0 | None ||| N/A | N/A
		0x1802ED443 mov [rcx+10h],rax		; DEBUG: {Memory}/None {Register}/RAX ||| RCX | 16 | None ||| N/A | N/A
		0x1802ED447 mov [rcx+28h],r8		; DEBUG: {Memory}/None {Register}/R8 ||| RCX | 40 | None ||| N/A | N/A
		0x1802ED44B mov [rcx+20h],rdx		; DEBUG: {Memory}/None {Register}/RDX ||| RCX | 32 | None ||| N/A | N/A
		0x1802ED44F ret		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.Void BetterList`1/CompareFunc::.ctor(System.Object,System.IntPtr):
		End of function at 0x1802ED450
		Absolute End is at 0x1802ED450
		Identified Jump Destination addresses:

		0x1802ED440: Loads the class pointer from method into a constant constant1 in register rax
		0x1802ED443: [!] Sets the field  (Type ) on local {'this' (function parameter, type BetterList`1/CompareFunc)} to the value stored in {'constant1' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)}
		0x1802ED447: [!] Sets the field  (Type ) on local {'this' (function parameter, type BetterList`1/CompareFunc)} to the value stored in {'method' (function parameter, type System.IntPtr)}
		0x1802ED44B: [!] Sets the field  (Type ) on local {'this' (function parameter, type BetterList`1/CompareFunc)} to the value stored in {'object' (function parameter, type System.Object)}
		0x1802ED44F: [!] Returns from the function




	Generated Pseudocode:

	Declaring Type: BetterList`1/CompareFunc
	System.Void .ctor(System.Object object, System.IntPtr method)
		this. = constant1
		this. = method
		this. = object
		return


Generated IL:
	Action of type Cpp2IL.Core.Analysis.Actions.x86.Important.RegToFieldAction at (0x1802ED443) is corrupt (Instance or field is null) and cannot be created as IL. Aborting here.


Method: System.Int32 BetterList`1/CompareFunc::Invoke(T,T):	Method Body (x86 ASM):
		0x180B12BF0 mov [rsp+8],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RSP | 8 | None ||| N/A | N/A
		0x180B12BF5 mov [rsp+10h],rbp		; DEBUG: {Memory}/None {Register}/RBP ||| RSP | 16 | None ||| N/A | N/A
		0x180B12BFA mov [rsp+18h],rsi		; DEBUG: {Memory}/None {Register}/RSI ||| RSP | 24 | None ||| N/A | N/A
		0x180B12BFF push rdi		; DEBUG: {Register}/RDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B12C00 push r12		; DEBUG: {Register}/R12 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B12C02 push r13		; DEBUG: {Register}/R13 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B12C04 push r14		; DEBUG: {Register}/R14 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B12C06 push r15		; DEBUG: {Register}/R15 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B12C08 sub rsp,30h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 48
		0x180B12C0C mov r15,rcx		; DEBUG: {Register}/R15 {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x180B12C0F xor ebx,ebx		; DEBUG: {Register}/EBX {Register}/EBX ||| None | 0 | None ||| N/A | N/A
		0x180B12C11 mov rcx,[rcx+58h]		; DEBUG: {Register}/RCX {Memory}/None ||| RCX | 88 | None ||| N/A | N/A
		0x180B12C15 mov rbp,r8		; DEBUG: {Register}/RBP {Register}/R8 ||| None | 0 | None ||| N/A | N/A
		0x180B12C18 mov r14,rdx		; DEBUG: {Register}/R14 {Register}/RDX ||| None | 0 | None ||| N/A | N/A
		0x180B12C1B test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x180B12C1E je short 0000000180B12C25h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B12C20 call 0000000180B12BF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B12C25 mov rdi,[r15+28h]		; DEBUG: {Register}/RDI {Memory}/None ||| R15 | 40 | None ||| N/A | N/A
		0x180B12C29 mov r13d,0FFFFh		; DEBUG: {Register}/R13D {Immediate32}/None ||| None | 0 | None ||| N/A | 65535
		0x180B12C2F mov r12,[r15+10h]		; DEBUG: {Register}/R12 {Memory}/None ||| R15 | 16 | None ||| N/A | N/A
		0x180B12C33 mov rsi,[r15+20h]		; DEBUG: {Register}/RSI {Memory}/None ||| R15 | 32 | None ||| N/A | N/A
		0x180B12C37 cmp [rdi+48h],r13w		; DEBUG: {Memory}/None {Register}/R13W ||| RDI | 72 | None ||| N/A | N/A
		0x180B12C3C jne short 0000000180B12C46h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B12C3E mov rcx,rdi		; DEBUG: {Register}/RCX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x180B12C41 call 00000001801102D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B12C46 mov rcx,rdi		; DEBUG: {Register}/RCX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x180B12C49 call 0000000180141DF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B12C4E movzx ecx,byte ptr [rdi+4Ah]		; DEBUG: {Register}/ECX {Memory}/None ||| RDI | 74 | None ||| N/A | N/A
		0x180B12C52 test al,al		; DEBUG: {Register}/AL {Register}/AL ||| None | 0 | None ||| N/A | N/A
		0x180B12C54 jne short 0000000180B12C70h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B12C56 cmp cl,2		; DEBUG: {Register}/CL {Immediate8}/None ||| None | 0 | None ||| N/A | 2
		0x180B12C59 jne near ptr 0000000180B12FD4h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B12C5F mov r8,rdi		; DEBUG: {Register}/R8 {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x180B12C62 mov rdx,rbp		; DEBUG: {Register}/RDX {Register}/RBP ||| None | 0 | None ||| N/A | N/A
		0x180B12C65 mov rcx,r14		; DEBUG: {Register}/RCX {Register}/R14 ||| None | 0 | None ||| N/A | N/A
		0x180B12C68 call r12		; DEBUG: {Register}/R12 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B12C6B jmp near ptr 0000000180B12FE3h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B12C70 movzx eax,word ptr [rdi+48h]		; DEBUG: {Register}/EAX {Memory}/None ||| RDI | 72 | None ||| N/A | N/A
		0x180B12C74 cmp cl,2		; DEBUG: {Register}/CL {Immediate8}/None ||| None | 0 | None ||| N/A | 2
		0x180B12C77 je near ptr 0000000180B12E55h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B12C7D cmp ax,r13w		; DEBUG: {Register}/AX {Register}/R13W ||| None | 0 | None ||| N/A | N/A
		0x180B12C81 je short 0000000180B12C5Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B12C83 test rsi,rsi		; DEBUG: {Register}/RSI {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x180B12C86 je short 0000000180B12C97h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B12C88 mov rax,[rsi]		; DEBUG: {Register}/RAX {Memory}/None ||| RSI | 0 | None ||| N/A | N/A
		0x180B12C8B test dword ptr [rax+108h],100h		; DEBUG: {Memory}/None {Immediate32}/None ||| RAX | 264 | None ||| N/A | 256
		0x180B12C95 jne short 0000000180B12C5Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B12C97 cmp [r15+18h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| R15 | 24 | None ||| N/A | N/A
		0x180B12C9B je short 0000000180B12C5Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B12C9D test rsi,rsi		; DEBUG: {Register}/RSI {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x180B12CA0 je short 0000000180B12CB5h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B12CA2 mov rax,[rsi]		; DEBUG: {Register}/RAX {Memory}/None ||| RSI | 0 | None ||| N/A | N/A
		0x180B12CA5 test dword ptr [rax+108h],100h		; DEBUG: {Memory}/None {Immediate32}/None ||| RAX | 264 | None ||| N/A | 256
		0x180B12CAF jne near ptr 0000000180B12FE5h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B12CB5 mov rcx,rdi		; DEBUG: {Register}/RCX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x180B12CB8 call 0000000180141DC0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B12CBD mov rcx,rdi		; DEBUG: {Register}/RCX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x180B12CC0 test al,al		; DEBUG: {Register}/AL {Register}/AL ||| None | 0 | None ||| N/A | N/A
		0x180B12CC2 je near ptr 0000000180B12D89h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B12CC8 call 000000018005DA10h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B12CCD mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180B12CD0 call 00000001800F6DD0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B12CD5 movzx ecx,word ptr [rdi+48h]		; DEBUG: {Register}/ECX {Memory}/None ||| RDI | 72 | None ||| N/A | N/A
		0x180B12CD9 test al,al		; DEBUG: {Register}/AL {Register}/AL ||| None | 0 | None ||| N/A | N/A
		0x180B12CDB je near ptr 0000000180B12D5Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B12CE1 mov r10,[r14]		; DEBUG: {Register}/R10 {Memory}/None ||| R14 | 0 | None ||| N/A | N/A
		0x180B12CE4 mov r11d,ecx		; DEBUG: {Register}/R11D {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x180B12CE7 mov r9,[rdi+18h]		; DEBUG: {Register}/R9 {Memory}/None ||| RDI | 24 | None ||| N/A | N/A
		0x180B12CEB movzx edx,word ptr [r10+11Eh]		; DEBUG: {Register}/EDX {Memory}/None ||| R10 | 286 | None ||| N/A | N/A
		0x180B12CF3 cmp bx,dx		; DEBUG: {Register}/BX {Register}/DX ||| None | 0 | None ||| N/A | N/A
		0x180B12CF6 jae short 0000000180B12D16h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B12CF8 mov r8,[r10+0B0h]		; DEBUG: {Register}/R8 {Memory}/None ||| R10 | 176 | None ||| N/A | N/A
		0x180B12CFF nop		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B12D00 movzx ecx,bx		; DEBUG: {Register}/ECX {Register}/BX ||| None | 0 | None ||| N/A | N/A
		0x180B12D03 mov eax,ecx		; DEBUG: {Register}/EAX {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x180B12D05 add rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180B12D08 cmp [r8+rax*8],r9		; DEBUG: {Memory}/None {Register}/R9 ||| R8 | 0 | RAX ||| N/A | N/A
		0x180B12D0C je short 0000000180B12D44h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B12D0E inc bx		; DEBUG: {Register}/BX {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B12D11 cmp bx,dx		; DEBUG: {Register}/BX {Register}/DX ||| None | 0 | None ||| N/A | N/A
		0x180B12D14 jb short 0000000180B12D00h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B12D16 mov r8d,r11d		; DEBUG: {Register}/R8D {Register}/R11D ||| None | 0 | None ||| N/A | N/A
		0x180B12D19 mov rdx,r9		; DEBUG: {Register}/RDX {Register}/R9 ||| None | 0 | None ||| N/A | N/A
		0x180B12D1C mov rcx,r14		; DEBUG: {Register}/RCX {Register}/R14 ||| None | 0 | None ||| N/A | N/A
		0x180B12D1F call 00000001800F5B10h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B12D24 mov rcx,[rax+8]		; DEBUG: {Register}/RCX {Memory}/None ||| RAX | 8 | None ||| N/A | N/A
		0x180B12D28 mov rdx,rdi		; DEBUG: {Register}/RDX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x180B12D2B call 000000018010EE60h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B12D30 mov r8,rax		; DEBUG: {Register}/R8 {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180B12D33 mov rdx,rbp		; DEBUG: {Register}/RDX {Register}/RBP ||| None | 0 | None ||| N/A | N/A
		0x180B12D36 mov rcx,r14		; DEBUG: {Register}/RCX {Register}/R14 ||| None | 0 | None ||| N/A | N/A
		0x180B12D39 mov r9,[rax]		; DEBUG: {Register}/R9 {Memory}/None ||| RAX | 0 | None ||| N/A | N/A
		0x180B12D3C call r9		; DEBUG: {Register}/R9 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B12D3F jmp near ptr 0000000180B12FE3h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B12D44 add rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x180B12D47 lea rax,[r10+128h]		; DEBUG: {Register}/RAX {Memory}/None ||| R10 | 296 | None ||| N/A | N/A
		0x180B12D4E mov ecx,[r8+rcx*8+8]		; DEBUG: {Register}/ECX {Memory}/None ||| R8 | 8 | RCX ||| N/A | N/A
		0x180B12D53 add ecx,r11d		; DEBUG: {Register}/ECX {Register}/R11D ||| None | 0 | None ||| N/A | N/A
		0x180B12D56 shl rcx,4		; DEBUG: {Register}/RCX {Immediate8}/None ||| None | 0 | None ||| N/A | 4
		0x180B12D5A add rax,rcx		; DEBUG: {Register}/RAX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x180B12D5D jmp short 0000000180B12D24h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B12D5F mov rax,[r14]		; DEBUG: {Register}/RAX {Memory}/None ||| R14 | 0 | None ||| N/A | N/A
		0x180B12D62 add rcx,13h		; DEBUG: {Register}/RCX {Immediate8to64}/None ||| None | 0 | None ||| N/A | 19
		0x180B12D66 add rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x180B12D69 mov rdx,rdi		; DEBUG: {Register}/RDX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x180B12D6C mov rcx,[rax+rcx*8]		; DEBUG: {Register}/RCX {Memory}/None ||| RAX | 0 | RCX ||| N/A | N/A
		0x180B12D70 call 000000018010EE60h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B12D75 mov r8,rax		; DEBUG: {Register}/R8 {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180B12D78 mov rdx,rbp		; DEBUG: {Register}/RDX {Register}/RBP ||| None | 0 | None ||| N/A | N/A
		0x180B12D7B mov rcx,r14		; DEBUG: {Register}/RCX {Register}/R14 ||| None | 0 | None ||| N/A | N/A
		0x180B12D7E mov r9,[rax]		; DEBUG: {Register}/R9 {Memory}/None ||| RAX | 0 | None ||| N/A | N/A
		0x180B12D81 call r9		; DEBUG: {Register}/R9 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B12D84 jmp near ptr 0000000180B12FE3h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B12D89 call 000000018005DA10h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B12D8E mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180B12D91 call 00000001800F6DD0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B12D96 test al,al		; DEBUG: {Register}/AL {Register}/AL ||| None | 0 | None ||| N/A | N/A
		0x180B12D98 je near ptr 0000000180B12E2Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B12D9E mov rcx,rdi		; DEBUG: {Register}/RCX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x180B12DA1 call 000000018005DA10h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B12DA6 mov r10,[r14]		; DEBUG: {Register}/R10 {Memory}/None ||| R14 | 0 | None ||| N/A | N/A
		0x180B12DA9 mov r9,rax		; DEBUG: {Register}/R9 {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180B12DAC movzx r11d,word ptr [rdi+48h]		; DEBUG: {Register}/R11D {Memory}/None ||| RDI | 72 | None ||| N/A | N/A
		0x180B12DB1 movzx r8d,word ptr [r10+11Eh]		; DEBUG: {Register}/R8D {Memory}/None ||| R10 | 286 | None ||| N/A | N/A
		0x180B12DB9 cmp bx,r8w		; DEBUG: {Register}/BX {Register}/R8W ||| None | 0 | None ||| N/A | N/A
		0x180B12DBD jae short 0000000180B12DE7h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B12DBF mov rdx,[r10+0B0h]		; DEBUG: {Register}/RDX {Memory}/None ||| R10 | 176 | None ||| N/A | N/A
		0x180B12DC6 nop word ptr [rax+rax]		; DEBUG: {Memory}/None {Register}/None ||| RAX | 0 | RAX ||| N/A | N/A
		0x180B12DD0 movzx ecx,bx		; DEBUG: {Register}/ECX {Register}/BX ||| None | 0 | None ||| N/A | N/A
		0x180B12DD3 mov eax,ecx		; DEBUG: {Register}/EAX {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x180B12DD5 add rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180B12DD8 cmp [rdx+rax*8],r9		; DEBUG: {Memory}/None {Register}/R9 ||| RDX | 0 | RAX ||| N/A | N/A
		0x180B12DDC je short 0000000180B12E06h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B12DDE inc bx		; DEBUG: {Register}/BX {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B12DE1 cmp bx,r8w		; DEBUG: {Register}/BX {Register}/R8W ||| None | 0 | None ||| N/A | N/A
		0x180B12DE5 jb short 0000000180B12DD0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B12DE7 mov r8d,r11d		; DEBUG: {Register}/R8D {Register}/R11D ||| None | 0 | None ||| N/A | N/A
		0x180B12DEA mov rdx,r9		; DEBUG: {Register}/RDX {Register}/R9 ||| None | 0 | None ||| N/A | N/A
		0x180B12DED mov rcx,r14		; DEBUG: {Register}/RCX {Register}/R14 ||| None | 0 | None ||| N/A | N/A
		0x180B12DF0 call 00000001800F5B10h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B12DF5 mov rdx,rbp		; DEBUG: {Register}/RDX {Register}/RBP ||| None | 0 | None ||| N/A | N/A
		0x180B12DF8 mov rcx,r14		; DEBUG: {Register}/RCX {Register}/R14 ||| None | 0 | None ||| N/A | N/A
		0x180B12DFB mov r8,[rax+8]		; DEBUG: {Register}/R8 {Memory}/None ||| RAX | 8 | None ||| N/A | N/A
		0x180B12DFF call qword ptr [rax]		; DEBUG: {Memory}/None {Register}/None ||| RAX | 0 | None ||| N/A | N/A
		0x180B12E01 jmp near ptr 0000000180B12FE3h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B12E06 add rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x180B12E09 lea rax,[r10+128h]		; DEBUG: {Register}/RAX {Memory}/None ||| R10 | 296 | None ||| N/A | N/A
		0x180B12E10 mov ecx,[rdx+rcx*8+8]		; DEBUG: {Register}/ECX {Memory}/None ||| RDX | 8 | RCX ||| N/A | N/A
		0x180B12E14 mov rdx,rbp		; DEBUG: {Register}/RDX {Register}/RBP ||| None | 0 | None ||| N/A | N/A
		0x180B12E17 add ecx,r11d		; DEBUG: {Register}/ECX {Register}/R11D ||| None | 0 | None ||| N/A | N/A
		0x180B12E1A shl rcx,4		; DEBUG: {Register}/RCX {Immediate8}/None ||| None | 0 | None ||| N/A | 4
		0x180B12E1E add rax,rcx		; DEBUG: {Register}/RAX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x180B12E21 mov rcx,r14		; DEBUG: {Register}/RCX {Register}/R14 ||| None | 0 | None ||| N/A | N/A
		0x180B12E24 mov r8,[rax+8]		; DEBUG: {Register}/R8 {Memory}/None ||| RAX | 8 | None ||| N/A | N/A
		0x180B12E28 call qword ptr [rax]		; DEBUG: {Memory}/None {Register}/None ||| RAX | 0 | None ||| N/A | N/A
		0x180B12E2A jmp near ptr 0000000180B12FE3h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B12E2F movzx r9d,word ptr [rdi+48h]		; DEBUG: {Register}/R9D {Memory}/None ||| RDI | 72 | None ||| N/A | N/A
		0x180B12E34 mov rdx,rbp		; DEBUG: {Register}/RDX {Register}/RBP ||| None | 0 | None ||| N/A | N/A
		0x180B12E37 mov rax,[r14]		; DEBUG: {Register}/RAX {Memory}/None ||| R14 | 0 | None ||| N/A | N/A
		0x180B12E3A add r9,r9		; DEBUG: {Register}/R9 {Register}/R9 ||| None | 0 | None ||| N/A | N/A
		0x180B12E3D mov rcx,r14		; DEBUG: {Register}/RCX {Register}/R14 ||| None | 0 | None ||| N/A | N/A
		0x180B12E40 mov r8,[rax+r9*8+130h]		; DEBUG: {Register}/R8 {Memory}/None ||| RAX | 304 | R9 ||| N/A | N/A
		0x180B12E48 call qword ptr [rax+r9*8+128h]		; DEBUG: {Memory}/None {Register}/None ||| RAX | 296 | R9 ||| N/A | N/A
		0x180B12E50 jmp near ptr 0000000180B12FE3h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B12E55 cmp ax,r13w		; DEBUG: {Register}/AX {Register}/R13W ||| None | 0 | None ||| N/A | N/A
		0x180B12E59 je near ptr 0000000180B12FD4h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B12E5F test rsi,rsi		; DEBUG: {Register}/RSI {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x180B12E62 je short 0000000180B12E77h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B12E64 mov rax,[rsi]		; DEBUG: {Register}/RAX {Memory}/None ||| RSI | 0 | None ||| N/A | N/A
		0x180B12E67 test dword ptr [rax+108h],100h		; DEBUG: {Memory}/None {Immediate32}/None ||| RAX | 264 | None ||| N/A | 256
		0x180B12E71 jne near ptr 0000000180B12FD4h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B12E77 cmp [r15+18h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| R15 | 24 | None ||| N/A | N/A
		0x180B12E7B je near ptr 0000000180B12FD4h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B12E81 test rsi,rsi		; DEBUG: {Register}/RSI {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x180B12E84 je near ptr 0000000180B12C5Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B12E8A mov rax,[rsi]		; DEBUG: {Register}/RAX {Memory}/None ||| RSI | 0 | None ||| N/A | N/A
		0x180B12E8D test dword ptr [rax+108h],100h		; DEBUG: {Memory}/None {Immediate32}/None ||| RAX | 264 | None ||| N/A | 256
		0x180B12E97 jne near ptr 0000000180B12FE5h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B12E9D mov rcx,rdi		; DEBUG: {Register}/RCX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x180B12EA0 call 0000000180141DC0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B12EA5 mov rcx,rdi		; DEBUG: {Register}/RCX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x180B12EA8 test al,al		; DEBUG: {Register}/AL {Register}/AL ||| None | 0 | None ||| N/A | N/A
		0x180B12EAA je near ptr 0000000180B12F7Ch		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B12EB0 call 000000018005DA10h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B12EB5 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180B12EB8 call 00000001800F6DD0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B12EBD movzx ecx,word ptr [rdi+48h]		; DEBUG: {Register}/ECX {Memory}/None ||| RDI | 72 | None ||| N/A | N/A
		0x180B12EC1 test al,al		; DEBUG: {Register}/AL {Register}/AL ||| None | 0 | None ||| N/A | N/A
		0x180B12EC3 je near ptr 0000000180B12F52h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B12EC9 mov r10,[rsi]		; DEBUG: {Register}/R10 {Memory}/None ||| RSI | 0 | None ||| N/A | N/A
		0x180B12ECC mov r11d,ecx		; DEBUG: {Register}/R11D {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x180B12ECF mov r9,[rdi+18h]		; DEBUG: {Register}/R9 {Memory}/None ||| RDI | 24 | None ||| N/A | N/A
		0x180B12ED3 movzx edx,word ptr [r10+11Eh]		; DEBUG: {Register}/EDX {Memory}/None ||| R10 | 286 | None ||| N/A | N/A
		0x180B12EDB cmp bx,dx		; DEBUG: {Register}/BX {Register}/DX ||| None | 0 | None ||| N/A | N/A
		0x180B12EDE jae short 0000000180B12F06h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B12EE0 mov r8,[r10+0B0h]		; DEBUG: {Register}/R8 {Memory}/None ||| R10 | 176 | None ||| N/A | N/A
		0x180B12EE7 nop word ptr [rax+rax]		; DEBUG: {Memory}/None {Register}/None ||| RAX | 0 | RAX ||| N/A | N/A
		0x180B12EF0 movzx ecx,bx		; DEBUG: {Register}/ECX {Register}/BX ||| None | 0 | None ||| N/A | N/A
		0x180B12EF3 mov eax,ecx		; DEBUG: {Register}/EAX {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x180B12EF5 add rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180B12EF8 cmp [r8+rax*8],r9		; DEBUG: {Memory}/None {Register}/R9 ||| R8 | 0 | RAX ||| N/A | N/A
		0x180B12EFC je short 0000000180B12F37h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B12EFE inc bx		; DEBUG: {Register}/BX {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B12F01 cmp bx,dx		; DEBUG: {Register}/BX {Register}/DX ||| None | 0 | None ||| N/A | N/A
		0x180B12F04 jb short 0000000180B12EF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B12F06 mov r8d,r11d		; DEBUG: {Register}/R8D {Register}/R11D ||| None | 0 | None ||| N/A | N/A
		0x180B12F09 mov rdx,r9		; DEBUG: {Register}/RDX {Register}/R9 ||| None | 0 | None ||| N/A | N/A
		0x180B12F0C mov rcx,rsi		; DEBUG: {Register}/RCX {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x180B12F0F call 00000001800F5B10h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B12F14 mov rcx,[rax+8]		; DEBUG: {Register}/RCX {Memory}/None ||| RAX | 8 | None ||| N/A | N/A
		0x180B12F18 mov rdx,rdi		; DEBUG: {Register}/RDX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x180B12F1B call 000000018010EE60h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B12F20 mov r9,rax		; DEBUG: {Register}/R9 {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180B12F23 mov r8,rbp		; DEBUG: {Register}/R8 {Register}/RBP ||| None | 0 | None ||| N/A | N/A
		0x180B12F26 mov rdx,r14		; DEBUG: {Register}/RDX {Register}/R14 ||| None | 0 | None ||| N/A | N/A
		0x180B12F29 mov rcx,rsi		; DEBUG: {Register}/RCX {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x180B12F2C mov r10,[rax]		; DEBUG: {Register}/R10 {Memory}/None ||| RAX | 0 | None ||| N/A | N/A
		0x180B12F2F call r10		; DEBUG: {Register}/R10 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B12F32 jmp near ptr 0000000180B12FE3h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B12F37 add rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x180B12F3A lea rax,[r10+128h]		; DEBUG: {Register}/RAX {Memory}/None ||| R10 | 296 | None ||| N/A | N/A
		0x180B12F41 mov ecx,[r8+rcx*8+8]		; DEBUG: {Register}/ECX {Memory}/None ||| R8 | 8 | RCX ||| N/A | N/A
		0x180B12F46 add ecx,r11d		; DEBUG: {Register}/ECX {Register}/R11D ||| None | 0 | None ||| N/A | N/A
		0x180B12F49 shl rcx,4		; DEBUG: {Register}/RCX {Immediate8}/None ||| None | 0 | None ||| N/A | 4
		0x180B12F4D add rax,rcx		; DEBUG: {Register}/RAX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x180B12F50 jmp short 0000000180B12F14h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B12F52 mov rax,[rsi]		; DEBUG: {Register}/RAX {Memory}/None ||| RSI | 0 | None ||| N/A | N/A
		0x180B12F55 add rcx,13h		; DEBUG: {Register}/RCX {Immediate8to64}/None ||| None | 0 | None ||| N/A | 19
		0x180B12F59 add rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x180B12F5C mov rdx,rdi		; DEBUG: {Register}/RDX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x180B12F5F mov rcx,[rax+rcx*8]		; DEBUG: {Register}/RCX {Memory}/None ||| RAX | 0 | RCX ||| N/A | N/A
		0x180B12F63 call 000000018010EE60h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B12F68 mov r9,rax		; DEBUG: {Register}/R9 {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180B12F6B mov r8,rbp		; DEBUG: {Register}/R8 {Register}/RBP ||| None | 0 | None ||| N/A | N/A
		0x180B12F6E mov rdx,r14		; DEBUG: {Register}/RDX {Register}/R14 ||| None | 0 | None ||| N/A | N/A
		0x180B12F71 mov rcx,rsi		; DEBUG: {Register}/RCX {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x180B12F74 mov r10,[rax]		; DEBUG: {Register}/R10 {Memory}/None ||| RAX | 0 | None ||| N/A | N/A
		0x180B12F77 call r10		; DEBUG: {Register}/R10 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B12F7A jmp short 0000000180B12FE3h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B12F7C call 000000018005DA10h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B12F81 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180B12F84 call 00000001800F6DD0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B12F89 test al,al		; DEBUG: {Register}/AL {Register}/AL ||| None | 0 | None ||| N/A | N/A
		0x180B12F8B je short 0000000180B12FAEh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B12F8D mov rcx,rdi		; DEBUG: {Register}/RCX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x180B12F90 call 000000018005DA10h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B12F95 movzx ecx,word ptr [rdi+48h]		; DEBUG: {Register}/ECX {Memory}/None ||| RDI | 72 | None ||| N/A | N/A
		0x180B12F99 mov r9,r14		; DEBUG: {Register}/R9 {Register}/R14 ||| None | 0 | None ||| N/A | N/A
		0x180B12F9C mov r8,rsi		; DEBUG: {Register}/R8 {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x180B12F9F mov [rsp+20h],rbp		; DEBUG: {Memory}/None {Register}/RBP ||| RSP | 32 | None ||| N/A | N/A
		0x180B12FA4 mov rdx,rax		; DEBUG: {Register}/RDX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180B12FA7 call 000000018005CAD0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B12FAC jmp short 0000000180B12FE3h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B12FAE movzx r10d,word ptr [rdi+48h]		; DEBUG: {Register}/R10D {Memory}/None ||| RDI | 72 | None ||| N/A | N/A
		0x180B12FB3 mov r8,rbp		; DEBUG: {Register}/R8 {Register}/RBP ||| None | 0 | None ||| N/A | N/A
		0x180B12FB6 mov rax,[rsi]		; DEBUG: {Register}/RAX {Memory}/None ||| RSI | 0 | None ||| N/A | N/A
		0x180B12FB9 add r10,r10		; DEBUG: {Register}/R10 {Register}/R10 ||| None | 0 | None ||| N/A | N/A
		0x180B12FBC mov rdx,r14		; DEBUG: {Register}/RDX {Register}/R14 ||| None | 0 | None ||| N/A | N/A
		0x180B12FBF mov rcx,rsi		; DEBUG: {Register}/RCX {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x180B12FC2 mov r9,[rax+r10*8+130h]		; DEBUG: {Register}/R9 {Memory}/None ||| RAX | 304 | R10 ||| N/A | N/A
		0x180B12FCA call qword ptr [rax+r10*8+128h]		; DEBUG: {Memory}/None {Register}/None ||| RAX | 296 | R10 ||| N/A | N/A
		0x180B12FD2 jmp short 0000000180B12FE3h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180B12FD4 mov r9,rdi		; DEBUG: {Register}/R9 {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x180B12FD7 mov r8,rbp		; DEBUG: {Register}/R8 {Register}/RBP ||| None | 0 | None ||| N/A | N/A
		0x180B12FDA mov rdx,r14		; DEBUG: {Register}/RDX {Register}/R14 ||| None | 0 | None ||| N/A | N/A
		0x180B12FDD mov rcx,rsi		; DEBUG: {Register}/RCX {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x180B12FE0 call r12		; DEBUG: {Register}/R12 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B12FE3 mov ebx,eax		; DEBUG: {Register}/EBX {Register}/EAX ||| None | 0 | None ||| N/A | N/A
		0x180B12FE5 mov rbp,[rsp+68h]		; DEBUG: {Register}/RBP {Memory}/None ||| RSP | 104 | None ||| N/A | N/A
		0x180B12FEA mov eax,ebx		; DEBUG: {Register}/EAX {Register}/EBX ||| None | 0 | None ||| N/A | N/A
		0x180B12FEC mov rbx,[rsp+60h]		; DEBUG: {Register}/RBX {Memory}/None ||| RSP | 96 | None ||| N/A | N/A
		0x180B12FF1 mov rsi,[rsp+70h]		; DEBUG: {Register}/RSI {Memory}/None ||| RSP | 112 | None ||| N/A | N/A
		0x180B12FF6 add rsp,30h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 48
		0x180B12FFA pop r15		; DEBUG: {Register}/R15 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B12FFC pop r14		; DEBUG: {Register}/R14 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B12FFE pop r13		; DEBUG: {Register}/R13 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B13000 pop r12		; DEBUG: {Register}/R12 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B13002 pop rdi		; DEBUG: {Register}/RDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B13003 ret		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180B13004 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.Int32 BetterList`1/CompareFunc::Invoke(T,T):
		End of function at 0x180B13005
		Absolute End is at 0x180B13005
		Identified Jump Destination addresses:
			0x180B12FE3
		0x180B12BFF: Saves the content of rdi to the stack
		0x180B12C00: Saves the content of r12 to the stack
		0x180B12C02: Saves the content of r13 to the stack
		0x180B12C04: Saves the content of r14 to the stack
		0x180B12C06: Saves the content of r15 to the stack
		0x180B12C0C: Copies {'this' (function parameter, type BetterList`1/CompareFunc)} from rcx into r15
		0x180B12C0F: Clears register rbx, yielding zero-local {'local3' (type System.Int32)}
		0x180B12C11: [!] Reads field  from {'this' (function parameter, type BetterList`1/CompareFunc)} and stores in a new local 

		0x180B12C15: Copies {'right' (function parameter, type T)} from r8 into rbp
		0x180B12C18: Copies {'left' (function parameter, type T)} from rdx into r14
		0x180B12C1B: [!] Compares {'this' (function parameter, type BetterList`1/CompareFunc)} and 0
		0x180B12C1E: Jumps to 0x180B12C25 (which is an if statement's body) if this equals 0 ;  - Increasing indentation - is standard if, unimportant is False

		0x180B12C20: [!] Calls managed method System.Int32 BetterList`1/CompareFunc::Invoke(T,T) on instance {'this' (function parameter, type BetterList`1/CompareFunc)} with arguments [{'left' (function parameter, type T)}, {'right' (function parameter, type T)}] and stores the result in {'int32' (type System.Int32)}

		0x180B12C25: [!] Reads field  from {'this' (function parameter, type BetterList`1/CompareFunc)} and stores in a new local 

		0x180B12C29: [!] Writes the constant 0xFFFF into operand {'local5' (type System.UInt32)} (type UInt64) in register r13
		0x180B12C2F: [!] Reads field  from {'this' (function parameter, type BetterList`1/CompareFunc)} and stores in a new local 

		0x180B12C33: [!] Reads field  from {'this' (function parameter, type BetterList`1/CompareFunc)} and stores in a new local 

		0x180B12C37: [!] Compares  and {'local5' (type System.UInt32)}
		0x180B12C3C: Jumps to 0x180B12C46 if  != {'local5' (type System.UInt32)} ;  - This is probably a goto, jumping to 0x180B12C46 which is after end of current block @ 0x180B12C25 (started at 0x180B12C20)

		0x180B12C41: [!] Constructs and throws an exception of kind System.ExecutionEngineException

		0x180B12C52: [!] Compares {'local6' (type System.ExecutionEngineException)} and 0
		0x180B12C54: Jumps to 0x180B12C70 if {'local6' (type System.ExecutionEngineException)} != 0 ;  - This is probably a goto, jumping to 0x180B12C70 which is after end of current block @ 0x180B12C25 (started at 0x180B12C20)

		0x180B12C56: [!] Compares {'this' (function parameter, type BetterList`1/CompareFunc)} and 2
		0x180B12C59: Jumps to 0x180B12FD4 if {'this' (function parameter, type BetterList`1/CompareFunc)} != 2 ;  - This is probably a goto, jumping to 0x180B12FD4 which is after end of current block @ 0x180B12C25 (started at 0x180B12C20)

		0x180B12C62: Copies {'right' (function parameter, type T)} from rbp into rdx
		0x180B12C65: Copies {'left' (function parameter, type T)} from r14 into rcx
		0x180B12C6B: Jumps to 0x180B12FE3 (which is an function-local jump destination)

		0x180B12C74: [!] Compares {'left' (function parameter, type T)} and 2
		0x180B12C77: Jumps to 0x180B12E55 if left equals 2 ;  - This is probably a goto, jumping to 0x180B12E55 which is after end of current block @ 0x180B12C25 (started at 0x180B12C20)

		0x180B12C7D: [!] Compares {'local6' (type System.ExecutionEngineException)} and {'local5' (type System.UInt32)}
		0x180B12C81: Jumps to 0x180B12C5F if local6 equals local5 ;  - This is probably a goto, jumping to 0x180B12C5F which is after end of current block @ 0x180B12C25 (started at 0x180B12C20)

		0x180B12C83: [!] Compares  and 0
		0x180B12C86: Jumps to 0x180B12C97 if  equals 0 ;  - This is probably a goto, jumping to 0x180B12C97 which is after end of current block @ 0x180B12C25 (started at 0x180B12C20)

		0x180B12C8B: [!] Compares  and 256
		0x180B12C95: Jumps to 0x180B12C5F if  != 256 ;  - This is probably a goto, jumping to 0x180B12C5F which is after end of current block @ 0x180B12C25 (started at 0x180B12C20)

		0x180B12C97: [!] Compares  and {'local3' (type System.Int32)}
		0x180B12C9B: Jumps to 0x180B12C5F if  equals local3 ;  - This is probably a goto, jumping to 0x180B12C5F which is after end of current block @ 0x180B12C25 (started at 0x180B12C20)

		0x180B12C9D: [!] Compares  and 0
		0x180B12CA0: Jumps to 0x180B12CB5 if  equals 0 ;  - This is probably a goto, jumping to 0x180B12CB5 which is after end of current block @ 0x180B12C25 (started at 0x180B12C20)

		0x180B12CA5: [!] Compares  and 256
		0x180B12CAF: Jumps to 0x180B12FE5 if  != 256 ;  - This is probably a goto, jumping to 0x180B12FE5 which is after end of current block @ 0x180B12C25 (started at 0x180B12C20)

		0x180B12CC0: [!] Compares {'local6' (type System.ExecutionEngineException)} and 0
		0x180B12CC2: Jumps to 0x180B12D89 if local6 equals 0 ;  - This is probably a goto, jumping to 0x180B12D89 which is after end of current block @ 0x180B12C25 (started at 0x180B12C20)

		0x180B12CC8: [!] Calls managed method  on instance {'left' (function parameter, type T)} ;  - Failed to resolve any matching method (there are 3 at this address)

		0x180B12CCD: Copies {'local6' (type System.ExecutionEngineException)} from rax into rcx
		0x180B12CD9: [!] Compares {'local6' (type System.ExecutionEngineException)} and 0
		0x180B12CDB: Jumps to 0x180B12D5F if local6 equals 0 ;  - This is probably a goto, jumping to 0x180B12D5F which is after end of current block @ 0x180B12C25 (started at 0x180B12C20)

		0x180B12CE1: Loads the class pointer from left into a constant constant11 in register r10
		0x180B12CE4: Copies {'local6' (type System.ExecutionEngineException)} from rcx into r11
		0x180B12CEB: [!!] Reads value at unknown offset 286 (0x11E) on a klass pointer
		0x180B12CF3: [!] Compares {'local3' (type System.Int32)} and {'right' (function parameter, type T)}
		0x180B12CF6: Jumps to 0x180B12D16 if {'local3' (type System.Int32)} is greater than or equal to {'right' (function parameter, type T)} ;  - This is probably a goto, jumping to 0x180B12D16 which is after end of current block @ 0x180B12C25 (started at 0x180B12C20)

		0x180B12CF8: Loads the interface offsets for the class pointer to System.Object, which contains 0 offsets, and stores them as a constant constant12 in reg r8
		0x180B12D00: Copies {'local3' (type System.Int32)} from rbx into rcx
		0x180B12D03: Copies {'local3' (type System.Int32)} from rcx into rax
		0x180B12D05: [!] Adds {'local3' (type System.Int32)} and {'local3' (type System.Int32)} and stores the result in {'local3' (type System.Int32)}
		0x180B12D0C: Jumps to 0x180B12D44 if local3 equals right ;  - This is probably a goto, jumping to 0x180B12D44 which is after end of current block @ 0x180B12C25 (started at 0x180B12C20)

		0x180B12D0E: [!] Adds 1 to the value {'local3' (type System.Int32)}, stored in rbx
		0x180B12D11: [!] Compares {'local3' (type System.Int32)} and {'right' (function parameter, type T)}
		0x180B12D16: Copies {'local6' (type System.ExecutionEngineException)} from r11 into r8
		0x180B12D19: Copies {'il2cppMethodInfo' (type )} from r9 into rdx
		0x180B12D1C: Copies {'left' (function parameter, type T)} from r14 into rcx

		Potential Loop Start (0x180B12D24):
		0x180B12D24: [!] Reads field  from {'local3' (type System.Int32)} and stores in a new local 

		0x180B12D30: Copies {'local3' (type System.Int32)} from rax into r8
		0x180B12D33: Copies {'right' (function parameter, type T)} from rbp into rdx
		0x180B12D36: Copies {'left' (function parameter, type T)} from r14 into rcx
		0x180B12D39: Loads the class pointer from local3 into a constant constant13 in register r9
		0x180B12D3F: Jumps to 0x180B12FE3 (which is an function-local jump destination)

		0x180B12D44: [!] Adds {'left' (function parameter, type T)} and {'left' (function parameter, type T)} and stores the result in {'left' (function parameter, type T)}
		0x180B12D53: [!] Adds {'left' (function parameter, type T)} and {'local6' (type System.ExecutionEngineException)} and stores the result in {'left' (function parameter, type T)}
		0x180B12D5A: [!] Adds {'local3' (type System.Int32)} and {'left' (function parameter, type T)} and stores the result in {'local3' (type System.Int32)}
		0x180B12D5D: Jumps to 0x180B12D24 - which is still in this function, but further up. Probably indicative that this is a loop.
		0x180B12D5F: Loads the class pointer from left into a constant constant14 in register rax
		0x180B12D62: Loads the pointer to the field  on {'left' (function parameter, type T)} into register rcx
		0x180B12D66: [!] Adds {'left' (function parameter, type T)} and {'left' (function parameter, type T)} and stores the result in {'left' (function parameter, type T)}
		0x180B12D6C: [!!] Reads value at unknown offset 0 (0x0) on a klass pointer
		0x180B12D75: Copies {'constant14' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} from rax into r8
		0x180B12D78: Copies {'right' (function parameter, type T)} from rbp into rdx
		0x180B12D7B: Copies {'left' (function parameter, type T)} from r14 into rcx
		0x180B12D7E: [!!] Reads value at unknown offset 0 (0x0) on a klass pointer
		0x180B12D84: Jumps to 0x180B12FE3 (which is an function-local jump destination)

		0x180B12D89: [!] Calls managed method  on instance {'left' (function parameter, type T)} ;  - Failed to resolve any matching method (there are 3 at this address)

		0x180B12D8E: Copies {'constant14' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} from rax into rcx
		0x180B12D96: [!] Compares {'constant14' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} and 0
		0x180B12D98: Jumps to 0x180B12E2F if constant14 equals 0 ;  - This is probably a goto, jumping to 0x180B12E2F which is after end of current block @ 0x180B12C25 (started at 0x180B12C20)

		0x180B12DA1: [!] Calls managed method  on instance  ;  - Failed to resolve any matching method (there are 3 at this address)

		0x180B12DA6: Loads the class pointer from left into a constant constant16 in register r10
		0x180B12DA9: Copies {'constant14' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} from rax into r9
		0x180B12DB1: [!!] Reads value at unknown offset 286 (0x11E) on a klass pointer
		0x180B12DB9: [!] Compares {'local3' (type System.Int32)} and {'constant14' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)}
		0x180B12DBD: Jumps to 0x180B12DE7 if {'local3' (type System.Int32)} is greater than or equal to {'constant14' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} ;  - This is probably a goto, jumping to 0x180B12DE7 which is after end of current block @ 0x180B12C25 (started at 0x180B12C20)

		0x180B12DBF: Loads the interface offsets for the class pointer to System.Object, which contains 0 offsets, and stores them as a constant constant17 in reg rdx
		0x180B12DD0: Copies {'local3' (type System.Int32)} from rbx into rcx
		0x180B12DD3: Copies {'local3' (type System.Int32)} from rcx into rax
		0x180B12DD5: [!] Adds {'local3' (type System.Int32)} and {'local3' (type System.Int32)} and stores the result in {'local3' (type System.Int32)}
		0x180B12DDC: Jumps to 0x180B12E06 if local3 equals constant14 ;  - This is probably a goto, jumping to 0x180B12E06 which is after end of current block @ 0x180B12C25 (started at 0x180B12C20)

		0x180B12DDE: [!] Adds 1 to the value {'local3' (type System.Int32)}, stored in rbx
		0x180B12DE1: [!] Compares {'local3' (type System.Int32)} and {'constant14' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)}
		0x180B12DE7: Copies {'local6' (type System.ExecutionEngineException)} from r11 into r8
		0x180B12DEA: Copies {'constant14' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} from r9 into rdx
		0x180B12DED: Copies {'left' (function parameter, type T)} from r14 into rcx
		0x180B12DF5: Copies {'right' (function parameter, type T)} from rbp into rdx
		0x180B12DF8: Copies {'left' (function parameter, type T)} from r14 into rcx
		0x180B12DFB: [!] Reads field  from {'local3' (type System.Int32)} and stores in a new local 

		0x180B12E01: Jumps to 0x180B12FE3 (which is an function-local jump destination)

		0x180B12E06: [!] Adds {'left' (function parameter, type T)} and {'left' (function parameter, type T)} and stores the result in {'left' (function parameter, type T)}
		0x180B12E14: Copies {'right' (function parameter, type T)} from rbp into rdx
		0x180B12E17: [!] Adds {'left' (function parameter, type T)} and {'local6' (type System.ExecutionEngineException)} and stores the result in {'left' (function parameter, type T)}
		0x180B12E1E: [!] Adds {'local3' (type System.Int32)} and {'left' (function parameter, type T)} and stores the result in {'local3' (type System.Int32)}
		0x180B12E21: Copies {'left' (function parameter, type T)} from r14 into rcx
		0x180B12E24: [!] Reads field  from {'local3' (type System.Int32)} and stores in a new local 

		0x180B12E2A: Jumps to 0x180B12FE3 (which is an function-local jump destination)

		0x180B12E34: Copies {'right' (function parameter, type T)} from rbp into rdx
		0x180B12E37: Loads the class pointer from left into a constant constant18 in register rax
		0x180B12E3A: [!] Adds  and {'constant14' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} and stores the result in 
		0x180B12E3D: Copies {'left' (function parameter, type T)} from r14 into rcx
		0x180B12E40: Loads the pointer to the implementation of virtual function  specific to System.Object from the class pointer in rax, slot -1 (from memory offset 304) and stores in constant 
		0x180B12E50: Jumps to 0x180B12FE3 (which is an function-local jump destination)

		0x180B12E55: [!] Compares {'constant18' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} and {'local5' (type System.UInt32)}
		0x180B12E59: Jumps to 0x180B12FD4 if constant18 equals local5 ;  - This is probably a goto, jumping to 0x180B12FD4 which is after end of current block @ 0x180B12C25 (started at 0x180B12C20)

		0x180B12E5F: [!] Compares  and 0
		0x180B12E62: Jumps to 0x180B12E77 if  equals 0 ;  - This is probably a goto, jumping to 0x180B12E77 which is after end of current block @ 0x180B12C25 (started at 0x180B12C20)

		0x180B12E67: Compares "{il2cpp field on {'constant18' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)}, offset 0x108}" and 256
		0x180B12E71: Jumps to 0x180B12FD4 if "{il2cpp field on {'constant18' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)}, offset 0x108}" != 256 ;  - This is probably a goto, jumping to 0x180B12FD4 which is after end of current block @ 0x180B12C25 (started at 0x180B12C20)

		0x180B12E77: [!] Compares  and {'local3' (type System.Int32)}
		0x180B12E7B: Jumps to 0x180B12FD4 if  equals local3 ;  - This is probably a goto, jumping to 0x180B12FD4 which is after end of current block @ 0x180B12C25 (started at 0x180B12C20)

		0x180B12E81: [!] Compares  and 0
		0x180B12E84: Jumps to 0x180B12C5F if  equals 0 ;  - This is probably a goto, jumping to 0x180B12C5F which is after end of current block @ 0x180B12C25 (started at 0x180B12C20)

		0x180B12E8D: Compares "{il2cpp field on {'constant18' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)}, offset 0x108}" and 256
		0x180B12E97: Jumps to 0x180B12FE5 if "{il2cpp field on {'constant18' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)}, offset 0x108}" != 256 ;  - This is probably a goto, jumping to 0x180B12FE5 which is after end of current block @ 0x180B12C25 (started at 0x180B12C20)

		0x180B12EA8: [!] Compares {'constant18' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} and 0
		0x180B12EAA: Jumps to 0x180B12F7C if constant18 equals 0 ;  - This is probably a goto, jumping to 0x180B12F7C which is after end of current block @ 0x180B12C25 (started at 0x180B12C20)

		0x180B12EB0: [!] Calls managed method  on instance {'left' (function parameter, type T)} ;  - Failed to resolve any matching method (there are 3 at this address)

		0x180B12EB5: Copies {'constant18' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} from rax into rcx
		0x180B12EC1: [!] Compares {'constant18' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} and 0
		0x180B12EC3: Jumps to 0x180B12F52 if constant18 equals 0 ;  - This is probably a goto, jumping to 0x180B12F52 which is after end of current block @ 0x180B12C25 (started at 0x180B12C20)

		0x180B12ECC: Copies {'constant18' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} from rcx into r11
		0x180B12ED3: [!!] Reads value at unknown offset 286 (0x11E) on a klass pointer
		0x180B12EDB: [!] Compares {'local3' (type System.Int32)} and {'right' (function parameter, type T)}
		0x180B12EDE: Jumps to 0x180B12F06 if {'local3' (type System.Int32)} is greater than or equal to {'right' (function parameter, type T)} ;  - This is probably a goto, jumping to 0x180B12F06 which is after end of current block @ 0x180B12C25 (started at 0x180B12C20)

		0x180B12EE0: Loads the interface offsets for the class pointer to System.Object, which contains 0 offsets, and stores them as a constant constant27 in reg r8
		0x180B12EF0: Copies {'local3' (type System.Int32)} from rbx into rcx
		0x180B12EF3: Copies {'local3' (type System.Int32)} from rcx into rax
		0x180B12EF5: [!] Adds {'local3' (type System.Int32)} and {'local3' (type System.Int32)} and stores the result in {'local3' (type System.Int32)}
		0x180B12EFC: Jumps to 0x180B12F37 if local3 equals right ;  - This is probably a goto, jumping to 0x180B12F37 which is after end of current block @ 0x180B12C25 (started at 0x180B12C20)

		0x180B12EFE: [!] Adds 1 to the value {'local3' (type System.Int32)}, stored in rbx
		0x180B12F01: [!] Compares {'local3' (type System.Int32)} and {'right' (function parameter, type T)}
		0x180B12F06: Copies {'constant18' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} from r11 into r8
		0x180B12F09: Copies {'constant14' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} from r9 into rdx

		Potential Loop Start (0x180B12F14):
		0x180B12F14: [!] Reads field  from {'local3' (type System.Int32)} and stores in a new local 

		0x180B12F20: Copies {'local3' (type System.Int32)} from rax into r9
		0x180B12F23: Copies {'right' (function parameter, type T)} from rbp into r8
		0x180B12F26: Copies {'left' (function parameter, type T)} from r14 into rdx
		0x180B12F2C: Loads the class pointer from local3 into a constant constant28 in register r10
		0x180B12F32: Jumps to 0x180B12FE3 (which is an function-local jump destination)

		0x180B12F37: [!] Adds {'local3' (type System.Int32)} and {'local3' (type System.Int32)} and stores the result in {'local3' (type System.Int32)}
		0x180B12F46: [!] Adds {'local3' (type System.Int32)} and {'constant18' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} and stores the result in {'local3' (type System.Int32)}
		0x180B12F4D: [!] Adds {'local3' (type System.Int32)} and {'local3' (type System.Int32)} and stores the result in {'local3' (type System.Int32)}
		0x180B12F50: Jumps to 0x180B12F14 - which is still in this function, but further up. Probably indicative that this is a loop.
		0x180B12F55: [!] Adds 19 to the value {'local3' (type System.Int32)}, stored in rcx
		0x180B12F59: [!] Adds {'local3' (type System.Int32)} and {'local3' (type System.Int32)} and stores the result in {'local3' (type System.Int32)}
		0x180B12F68: Copies {'local3' (type System.Int32)} from rax into r9
		0x180B12F6B: Copies {'right' (function parameter, type T)} from rbp into r8
		0x180B12F6E: Copies {'left' (function parameter, type T)} from r14 into rdx
		0x180B12F74: Loads the class pointer from local3 into a constant constant29 in register r10
		0x180B12F7A: Jumps to 0x180B12FE3 (which is an function-local jump destination)

		0x180B12F7C: [!] Calls managed method  on instance {'local3' (type System.Int32)} ;  - Failed to resolve any matching method (there are 3 at this address)

		0x180B12F81: Copies {'local3' (type System.Int32)} from rax into rcx
		0x180B12F89: [!] Compares {'local3' (type System.Int32)} and 0
		0x180B12F8B: Jumps to 0x180B12FAE if local3 equals 0 ;  - This is probably a goto, jumping to 0x180B12FAE which is after end of current block @ 0x180B12C25 (started at 0x180B12C20)

		0x180B12F90: [!] Calls managed method  on instance {'local3' (type System.Int32)} ;  - Failed to resolve any matching method (there are 3 at this address)

		0x180B12F99: Copies {'left' (function parameter, type T)} from r14 into r9
		0x180B12F9F: Moves right (type T) from register rbp to the stack at offset 32 (0x20)
		0x180B12FA4: Copies {'local3' (type System.Int32)} from rax into rdx
		0x180B12FAC: Jumps to 0x180B12FE3 (which is an function-local jump destination)

		0x180B12FB3: Copies {'right' (function parameter, type T)} from rbp into r8
		0x180B12FB9: [!] Adds  and {'constant29' (constant value of type Cpp2IL.Core.Analysis.Il2CppClassIdentifier)} and stores the result in 
		0x180B12FBC: Copies {'left' (function parameter, type T)} from r14 into rdx
		0x180B12FD2: Jumps to 0x180B12FE3 (which is an function-local jump destination)

		0x180B12FD7: Copies {'right' (function parameter, type T)} from rbp into r8
		0x180B12FDA: Copies {'left' (function parameter, type T)} from r14 into rdx

		Jump Destination (0x180B12FE3):
		0x180B12FE3: Copies {'local3' (type System.Int32)} from rax into rbx
		0x180B12FE5: Reads unknown value in stack, offset 104 (0x68) and stores the pointer in register rbp as new constant constant31
		0x180B12FEA: Copies {'local3' (type System.Int32)} from rbx into rax
		0x180B12FEC: Reads unknown value in stack, offset 96 (0x60) and stores the pointer in register rbx as new constant constant32
		0x180B12FF1: Reads unknown value in stack, offset 112 (0x70) and stores the pointer in register rsi as new constant constant33
		0x180B13003: [!] Returns {'local3' (type System.Int32)} from the function




	Generated Pseudocode:

	Declaring Type: BetterList`1/CompareFunc
	System.Int32 Invoke(T left, T right)
		ulong local3 = 0
		  = this.

		if (this != 0)

		    System.Int32 int32 = this.Invoke(left, right) //(T left, T right)
		endif
        
		  = this.
		System.Int64 local5 = 0xFFFF
		  = this.
		  = this.

		if ( != local5)
            goto INSN_180B12C46
        endif
		throw new System.ExecutionEngineException()

		INSN_180B12C46:

		if (local6 != 0)
            goto INSN_180B12C70
        endif

		if (this != 2)
            goto INSN_180B12FD4
        endif

		INSN_180B12C70:

		if (left == 2)
            goto INSN_180B12E55
        endif

		if (local6 == local5)
            goto INSN_180B12C5F
        endif

		if ( == 0)
            goto INSN_180B12C97
        endif

		if ( != 256)
            goto INSN_180B12C5F
        endif

		INSN_180B12C97:

		if ( == local3)
            goto INSN_180B12C5F
        endif

		if ( == 0)
            goto INSN_180B12CB5
        endif

		if ( != 256)
            goto INSN_180B12FE5
        endif

		INSN_180B12CB5:

		if (local6 == 0)
            goto INSN_180B12D89
        endif

		[instruction error - managed method being called is null]

		if (local6 == 0)
            goto INSN_180B12D5F
        endif
		//UNKNOWN CLASS OFFSET READ HERE

		if (local3 >= right)
            goto INSN_180B12D16
        endif
		local3 += local3

		if (local3 == right)
            goto INSN_180B12D44
        endif
		local3 += 1

		INSN_180B12D16:
		  = local3.

		INSN_180B12D44:
		left += left
		left += local6
		local3 += left

		INSN_180B12D5F:
		left += left
		//UNKNOWN CLASS OFFSET READ HERE
		//UNKNOWN CLASS OFFSET READ HERE

		INSN_180B12D89:

		[instruction error - managed method being called is null]

		if (constant14 == 0)
            goto INSN_180B12E2F
        endif

		[instruction error - managed method being called is null]
		//UNKNOWN CLASS OFFSET READ HERE

		if (local3 >= constant14)
            goto INSN_180B12DE7
        endif
		local3 += local3

		if (local3 == constant14)
            goto INSN_180B12E06
        endif
		local3 += 1

		INSN_180B12DE7:
		  = local3.

		INSN_180B12E06:
		left += left
		left += local6
		local3 += left
		  = local3.

		INSN_180B12E2F:
		 += constant14

		INSN_180B12E55:

		if (constant18 == local5)
            goto INSN_180B12FD4
        endif

		if ( == 0)
            goto INSN_180B12E77
        endif

		INSN_180B12E77:

		if ( == local3)
            goto INSN_180B12FD4
        endif

		if ( == 0)
            goto INSN_180B12C5F
        endif

		if (constant18 == 0)
            goto INSN_180B12F7C
        endif

		[instruction error - managed method being called is null]

		if (constant18 == 0)
            goto INSN_180B12F52
        endif
		//UNKNOWN CLASS OFFSET READ HERE

		if (local3 >= right)
            goto INSN_180B12F06
        endif
		local3 += local3

		if (local3 == right)
            goto INSN_180B12F37
        endif
		local3 += 1

		INSN_180B12F06:
		  = local3.

		INSN_180B12F37:
		local3 += local3
		local3 += constant18
		local3 += local3

		INSN_180B12F52:
		local3 += 19
		local3 += local3

		INSN_180B12F7C:

		[instruction error - managed method being called is null]

		if (local3 == 0)
            goto INSN_180B12FAE
        endif

		[instruction error - managed method being called is null]

		INSN_180B12FAE:
		 += constant29

		INSN_180B12FD4:

		INSN_180B12FE5:
		return local3


Generated IL:
	Action of type Cpp2IL.Core.Analysis.Actions.x86.Important.FieldToLocalAction at (0x180B12C11) is corrupt (No further info) and cannot be created as IL. Aborting here.


Method: System.IAsyncResult BetterList`1/CompareFunc::BeginInvoke(T,T,System.AsyncCallback,System.Object):	Method Body (x86 ASM):
		0x180335390 sub rsp,48h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 72
		0x180335394 mov rax,r9		; DEBUG: {Register}/RAX {Register}/R9 ||| None | 0 | None ||| N/A | N/A
		0x180335397 mov [rsp+20h],rdx		; DEBUG: {Memory}/None {Register}/RDX ||| RSP | 32 | None ||| N/A | N/A
		0x18033539C mov r9,[rsp+70h]		; DEBUG: {Register}/R9 {Memory}/None ||| RSP | 112 | None ||| N/A | N/A
		0x1803353A1 lea rdx,[rsp+20h]		; DEBUG: {Register}/RDX {Memory}/None ||| RSP | 32 | None ||| N/A | N/A
		0x1803353A6 mov [rsp+28h],r8		; DEBUG: {Memory}/None {Register}/R8 ||| RSP | 40 | None ||| N/A | N/A
		0x1803353AB mov r8,rax		; DEBUG: {Register}/R8 {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1803353AE mov qword ptr [rsp+30h],0		; DEBUG: {Memory}/None {Immediate32to64}/None ||| RSP | 48 | None ||| N/A | 0
		0x1803353B7 call 000000018010D170h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1803353BC add rsp,48h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 72
		0x1803353C0 ret		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1803353C1 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.IAsyncResult BetterList`1/CompareFunc::BeginInvoke(T,T,System.AsyncCallback,System.Object):
		End of function at 0x1803353C2
		Absolute End is at 0x1803353C2
		Identified Jump Destination addresses:

		0x180335394: Copies {'callback' (function parameter, type System.AsyncCallback)} from r9 into rax
		0x180335397: Moves left (type T) from register rdx to the stack at offset 32 (0x20)
		0x18033539C: Reads unknown value in stack, offset 112 (0x70) and stores the pointer in register r9 as new constant constant1
		0x1803353A1: Loads a pointer to stack offset 0x20 into register rdx as new constant constant2
		0x1803353A6: Moves right (type T) from register r8 to the stack at offset 40 (0x28)
		0x1803353AB: Copies {'callback' (function parameter, type System.AsyncCallback)} from rax into r8
		0x1803353AE: Moves 0 (immediate ulong value) to the stack at offset 48 as a new local local5
		0x1803353C0: [!] Returns {'callback' (function parameter, type System.AsyncCallback)} from the function




	Generated Pseudocode:

	Declaring Type: BetterList`1/CompareFunc
	System.IAsyncResult BeginInvoke(T left, T right, System.AsyncCallback callback, System.Object object)
		return callback


Generated IL:
	Action of type Cpp2IL.Core.Analysis.Actions.x86.Important.ReturnFromFunctionAction at (0x1803353C0) is corrupt (Return value has a type of System.AsyncCallback, expecting an object of type System.IAsyncResult) and cannot be created as IL. Aborting here.


Method: System.Int32 BetterList`1/CompareFunc::EndInvoke(System.IAsyncResult):	Method Body (x86 ASM):
		0x1807168E0 sub rsp,28h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 40
		0x1807168E4 mov rcx,rdx		; DEBUG: {Register}/RCX {Register}/RDX ||| None | 0 | None ||| N/A | N/A
		0x1807168E7 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1807168E9 call 000000018010DD90h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1807168EE test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1807168F1 je short 0000000180716902h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1807168F3 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1807168F6 call 000000018013ADF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1807168FB mov eax,[rax]		; DEBUG: {Register}/EAX {Memory}/None ||| RAX | 0 | None ||| N/A | N/A
		0x1807168FD add rsp,28h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 40
		0x180716901 ret		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180716902 xor ecx,ecx		; DEBUG: {Register}/ECX {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x180716904 call 000000018012BDA0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180716909 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.Int32 BetterList`1/CompareFunc::EndInvoke(System.IAsyncResult):
		End of function at 0x18071690A
		Absolute End is at 0x18071690A
		Identified Jump Destination addresses:

		0x1807168E4: Copies {'result' (function parameter, type System.IAsyncResult)} from rdx into rcx
		0x1807168EE: [!] Compares  and 0
		0x1807168F1: Jumps to 0x180716902 (which throws a NRE) if  equals 0. Implicitly present in managed code, so ignored here.
		0x1807168FB: Dereference and moves local result to local3
		0x180716901: [!] Returns {'local3' (type System.IAsyncResult)} from the function

		0x180716904: [!] Constructs and throws an exception of kind System.NullReferenceException




	Generated Pseudocode:

	Declaring Type: BetterList`1/CompareFunc
	System.Int32 EndInvoke(System.IAsyncResult result)
		local3 = result
		return local3
		throw new System.NullReferenceException()


Generated IL:
	Action of type Cpp2IL.Core.Analysis.Actions.x86.ReadLocalPointerToRegAction at (0x1807168FB) is corrupt (Local being dereferenced was stripped) and cannot be created as IL. Aborting here.


