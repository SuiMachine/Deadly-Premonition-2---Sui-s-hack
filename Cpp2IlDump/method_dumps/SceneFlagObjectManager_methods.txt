Type: SceneFlagObjectManager

Method: System.Void SceneFlagObjectManager::.ctor():	Method Body (x86 ASM):
		0x180203000 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180203002 jmp near ptr 0000000180CE1E90h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180203007 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.Void SceneFlagObjectManager::.ctor():
		End of function at 0x180203008
		Absolute End is at 0x180203008
		Identified Jump Destination addresses:

		0x180203002: [!] Calls managed method System.Void UnityEngine.MonoBehaviour::.ctor() on instance {'this' (function parameter, type SceneFlagObjectManager)}

		0x180203002: [!] Returns from the function




	Generated Pseudocode:

	Declaring Type: SceneFlagObjectManager
	System.Void .ctor()

		base..ctor()
		return


Generated IL:
	IL_0000: ldarg.0
	IL_0001: call System.Void UnityEngine.MonoBehaviour::.ctor()
	IL_0006: ret
	

Method: UnityEngine.GameObject SceneFlagObjectManager::GetStartPosition(System.Int32):	Method Body (x86 ASM):
		0x1805BA7B0 mov [rsp+10h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RSP | 16 | None ||| N/A | N/A
		0x1805BA7B5 mov [rsp+18h],rbp		; DEBUG: {Memory}/None {Register}/RBP ||| RSP | 24 | None ||| N/A | N/A
		0x1805BA7BA push rsi		; DEBUG: {Register}/RSI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805BA7BB push rdi		; DEBUG: {Register}/RDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805BA7BC push r14		; DEBUG: {Register}/R14 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805BA7BE sub rsp,20h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 32
		0x1805BA7C2 cmp byte ptr [18183ED45h],0		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6467874117 | None ||| N/A | 0
		0x1805BA7C9 mov r14d,edx		; DEBUG: {Register}/R14D {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805BA7CC mov rdi,rcx		; DEBUG: {Register}/RDI {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x1805BA7CF jne short 00000001805BA7E3h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805BA7D1 mov ecx,[1814B91C0h]		; DEBUG: {Register}/ECX {Memory}/None ||| RIP | 6464180672 | None ||| N/A | N/A
		0x1805BA7D7 call 00000001800FEB90h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805BA7DC mov byte ptr [18183ED45h],1		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6467874117 | None ||| N/A | 1
		0x1805BA7E3 mov rax,[rdi+18h]		; DEBUG: {Register}/RAX {Memory}/None ||| RDI | 24 | None ||| N/A | N/A
		0x1805BA7E7 xor ebp,ebp		; DEBUG: {Register}/EBP {Register}/EBP ||| None | 0 | None ||| N/A | N/A
		0x1805BA7E9 mov ebx,ebp		; DEBUG: {Register}/EBX {Register}/EBP ||| None | 0 | None ||| N/A | N/A
		0x1805BA7EB mov esi,ebp		; DEBUG: {Register}/ESI {Register}/EBP ||| None | 0 | None ||| N/A | N/A
		0x1805BA7ED test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805BA7F0 je near ptr 00000001805BA93Dh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805BA7F6 nop word ptr [rax+rax]		; DEBUG: {Memory}/None {Register}/None ||| RAX | 0 | RAX ||| N/A | N/A
		0x1805BA800 mov rdx,[18189CB00h]		; DEBUG: {Register}/RDX {Memory}/None ||| RIP | 6468258560 | None ||| N/A | N/A
		0x1805BA807 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805BA80A call 000000018029B0C0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805BA80F cmp esi,eax		; DEBUG: {Register}/ESI {Register}/EAX ||| None | 0 | None ||| N/A | N/A
		0x1805BA811 jge short 00000001805BA884h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805BA813 mov rcx,[rdi+18h]		; DEBUG: {Register}/RCX {Memory}/None ||| RDI | 24 | None ||| N/A | N/A
		0x1805BA817 test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x1805BA81A je near ptr 00000001805BA93Dh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805BA820 mov r8,[181876C58h]		; DEBUG: {Register}/R8 {Memory}/None ||| RIP | 6468103256 | None ||| N/A | N/A
		0x1805BA827 mov edx,ebx		; DEBUG: {Register}/EDX {Register}/EBX ||| None | 0 | None ||| N/A | N/A
		0x1805BA829 call 00000001810B67F0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805BA82E test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805BA831 je near ptr 00000001805BA93Dh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805BA837 cmp r14d,[rax+18h]		; DEBUG: {Register}/R14D {Memory}/None ||| RAX | 24 | None ||| N/A | N/A
		0x1805BA83B jne short 00000001805BA86Eh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805BA83D mov rcx,[rdi+18h]		; DEBUG: {Register}/RCX {Memory}/None ||| RDI | 24 | None ||| N/A | N/A
		0x1805BA841 test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x1805BA844 je near ptr 00000001805BA93Dh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805BA84A mov r8,[181876C58h]		; DEBUG: {Register}/R8 {Memory}/None ||| RIP | 6468103256 | None ||| N/A | N/A
		0x1805BA851 mov edx,ebx		; DEBUG: {Register}/EDX {Register}/EBX ||| None | 0 | None ||| N/A | N/A
		0x1805BA853 call 00000001810B67F0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805BA858 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805BA85B je near ptr 00000001805BA93Dh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805BA861 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805BA863 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805BA866 call 0000000180B29690h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805BA86B mov rbp,rax		; DEBUG: {Register}/RBP {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805BA86E mov rax,[rdi+18h]		; DEBUG: {Register}/RAX {Memory}/None ||| RDI | 24 | None ||| N/A | N/A
		0x1805BA872 inc ebx		; DEBUG: {Register}/EBX {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805BA874 mov esi,ebx		; DEBUG: {Register}/ESI {Register}/EBX ||| None | 0 | None ||| N/A | N/A
		0x1805BA876 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805BA879 je near ptr 00000001805BA93Dh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805BA87F jmp near ptr 00000001805BA800h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805BA884 mov rcx,[18188D758h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468196184 | None ||| N/A | N/A
		0x1805BA88B test byte ptr [rcx+127h],2		; DEBUG: {Memory}/None {Immediate8}/None ||| RCX | 295 | None ||| N/A | 2
		0x1805BA892 je short 00000001805BA8A2h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805BA894 cmp dword ptr [rcx+0D8h],0		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RCX | 216 | None ||| N/A | 0
		0x1805BA89B jne short 00000001805BA8A2h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805BA89D call 000000018010EAF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805BA8A2 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805BA8A5 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805BA8A7 mov rcx,rbp		; DEBUG: {Register}/RCX {Register}/RBP ||| None | 0 | None ||| N/A | N/A
		0x1805BA8AA call 0000000180EA6550h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805BA8AF test al,al		; DEBUG: {Register}/AL {Register}/AL ||| None | 0 | None ||| N/A | N/A
		0x1805BA8B1 je short 00000001805BA927h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805BA8B3 mov rcx,[1818841C8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468157896 | None ||| N/A | N/A
		0x1805BA8BA lea rdx,[rsp+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RSP | 64 | None ||| N/A | N/A
		0x1805BA8BF mov [rsp+40h],r14d		; DEBUG: {Memory}/None {Register}/R14D ||| RSP | 64 | None ||| N/A | N/A
		0x1805BA8C4 call 000000018013A7F0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805BA8C9 mov rcx,[181883F70h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468157296 | None ||| N/A | N/A
		0x1805BA8D0 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805BA8D3 test byte ptr [rcx+127h],2		; DEBUG: {Memory}/None {Immediate8}/None ||| RCX | 295 | None ||| N/A | 2
		0x1805BA8DA je short 00000001805BA8EAh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805BA8DC cmp dword ptr [rcx+0D8h],0		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RCX | 216 | None ||| N/A | 0
		0x1805BA8E3 jne short 00000001805BA8EAh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805BA8E5 call 000000018010EAF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805BA8EA mov rcx,[181888BB8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468176824 | None ||| N/A | N/A
		0x1805BA8F1 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805BA8F4 mov rdx,rbx		; DEBUG: {Register}/RDX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x1805BA8F7 call 0000000180D4CDC0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805BA8FC mov rcx,[18188D688h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468195976 | None ||| N/A | N/A
		0x1805BA903 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805BA906 test byte ptr [rcx+127h],2		; DEBUG: {Memory}/None {Immediate8}/None ||| RCX | 295 | None ||| N/A | 2
		0x1805BA90D je short 00000001805BA91Dh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805BA90F cmp dword ptr [rcx+0D8h],0		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RCX | 216 | None ||| N/A | 0
		0x1805BA916 jne short 00000001805BA91Dh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805BA918 call 000000018010EAF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805BA91D xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805BA91F mov rcx,rbx		; DEBUG: {Register}/RCX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x1805BA922 call 0000000180B2C440h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805BA927 mov rbx,[rsp+48h]		; DEBUG: {Register}/RBX {Memory}/None ||| RSP | 72 | None ||| N/A | N/A
		0x1805BA92C mov rax,rbp		; DEBUG: {Register}/RAX {Register}/RBP ||| None | 0 | None ||| N/A | N/A
		0x1805BA92F mov rbp,[rsp+50h]		; DEBUG: {Register}/RBP {Memory}/None ||| RSP | 80 | None ||| N/A | N/A
		0x1805BA934 add rsp,20h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 32
		0x1805BA938 pop r14		; DEBUG: {Register}/R14 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805BA93A pop rdi		; DEBUG: {Register}/RDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805BA93B pop rsi		; DEBUG: {Register}/RSI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805BA93C ret		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805BA93D xor ecx,ecx		; DEBUG: {Register}/ECX {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x1805BA93F call 000000018012BDA0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805BA944 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method UnityEngine.GameObject SceneFlagObjectManager::GetStartPosition(System.Int32):
		End of function at 0x1805BA945
		Absolute End is at 0x1805BA945
		Identified Jump Destination addresses:

		0x1805BA7BA: Saves the content of rsi to the stack
		0x1805BA7BB: Saves the content of rdi to the stack
		0x1805BA7BC: Saves the content of r14 to the stack
		0x1805BA7C2: Compares {Unknown Global at 0x18183ED45, first ten bytes are [219 1 0 229 219 1 0 60 61 103], or as chars "Û åÛ <=g"} and 0
		0x1805BA7C9: Copies {'id' (function parameter, type System.Int32)} from rdx into r14
		0x1805BA7CC: Copies {'this' (function parameter, type SceneFlagObjectManager)} from rcx into rdi
		0x1805BA7CF: Jumps to 0x1805BA7E3 if {Unknown Global at 0x18183ED45, first ten bytes are [219 1 0 229 219 1 0 60 61 103], or as chars "Û åÛ <=g"} != 0

		0x1805BA7D1: Loads string "ê^" into register rcx as constant {'constant3' (constant value of type Cpp2IL.Core.Analysis.ResultModels.Il2CppString)}
		0x1805BA7D7: Attempts to load the il2cpp metadata for this method (method id 0) and init it cpp-side.

		0x1805BA7E3: [!] Reads field m_objList from {'this' (function parameter, type SceneFlagObjectManager)} and stores in a new local {'m_objList' (type System.Collections.Generic.List`1<SceneFlagObject>)}

		0x1805BA7E7: Clears register rbp, yielding zero-local {'local3' (type System.Int32)}
		0x1805BA7E9: Copies {'local3' (type System.Int32)} from rbp into rbx
		0x1805BA7EB: Copies {'local3' (type System.Int32)} from rbp into rsi
		0x1805BA7ED: [!] Compares {'m_objList' (type System.Collections.Generic.List`1<SceneFlagObject>)} and 0
		0x1805BA7F0: Jumps to 0x1805BA93D (which throws a NRE) if m_objList equals 0. Implicitly present in managed code, so ignored here.

		Potential Loop Start (0x1805BA800):
		0x1805BA800: Loads the global generic method reference for method System.Int32 System.Collections.Generic.List`1::get_Count() on type System.Collections.Generic.List`1<SceneFlagObject> and stores the result in constant {'get_Count' (constant value of type Cpp2IL.Core.Analysis.ResultModels.GenericMethodReference)} in rdx
		0x1805BA807: Copies {'m_objList' (type System.Collections.Generic.List`1<SceneFlagObject>)} from rax into rcx
		0x1805BA80A: [!] Calls managed method System.Int32 System.Collections.Generic.List`1::get_Count() on instance {'m_objList' (type System.Collections.Generic.List`1<SceneFlagObject>)} and stores the result in {'count' (type System.Int32)} ;  - Method resolved from concrete implementations at this address, with the help of a constant value to identify which concrete implementation.

		0x1805BA80F: [!] Compares {'local3' (type System.Int32)} and {'count' (type System.Int32)}
		0x1805BA811: Jumps to 0x1805BA884 (which is an if statement's body) if {'local3' (type System.Int32)} is greater than or equal to {'count' (type System.Int32)} ;  - Increasing indentation - is standard if, unimportant is False

		0x1805BA813: [!] Reads field m_objList from {'this' (function parameter, type SceneFlagObjectManager)} and stores in a new local {'m_objList2' (type System.Collections.Generic.List`1<SceneFlagObject>)}

		0x1805BA817: [!] Compares {'m_objList2' (type System.Collections.Generic.List`1<SceneFlagObject>)} and 0
		0x1805BA81A: Jumps to 0x1805BA93D (which throws a NRE) if m_objList2 equals 0. Implicitly present in managed code, so ignored here.
		0x1805BA820: Loads the global generic method reference for method T System.Collections.Generic.List`1::get_Item(System.Int32) on type System.Collections.Generic.List`1<SceneFlagObject> and stores the result in constant {'get_Item' (constant value of type Cpp2IL.Core.Analysis.ResultModels.GenericMethodReference)} in r8
		0x1805BA827: Copies {'local3' (type System.Int32)} from rbx into rdx
		0x1805BA829: [!] Calls managed method T System.Collections.Generic.List`1::get_Item(System.Int32) on instance {'m_objList2' (type System.Collections.Generic.List`1<SceneFlagObject>)} with arguments [{'local3' (type System.Int32)}] and stores the result in {'item' (type SceneFlagObject)} ;  - Method resolved from concrete implementations at this address, with the help of a constant value to identify which concrete implementation.

		0x1805BA82E: [!] Compares {'item' (type SceneFlagObject)} and 0
		0x1805BA831: Jumps to 0x1805BA93D (which throws a NRE) if item equals 0. Implicitly present in managed code, so ignored here.
		0x1805BA837: [!] Compares {'id' (function parameter, type System.Int32)} and {field m_objId, read from local {'item' (type SceneFlagObject)}}
		0x1805BA83B: Jumps to 0x1805BA86E (which is an if statement's body) if {'id' (function parameter, type System.Int32)} != {field m_objId, read from local {'item' (type SceneFlagObject)}} ;  - Increasing indentation - is standard if, unimportant is False

		0x1805BA83D: [!] Reads field m_objList from {'this' (function parameter, type SceneFlagObjectManager)} and stores in a new local {'m_objList3' (type System.Collections.Generic.List`1<SceneFlagObject>)}

		0x1805BA841: [!] Compares {'m_objList3' (type System.Collections.Generic.List`1<SceneFlagObject>)} and 0
		0x1805BA844: Jumps to 0x1805BA93D (which throws a NRE) if m_objList3 equals 0. Implicitly present in managed code, so ignored here.
		0x1805BA84A: Loads the global generic method reference for method T System.Collections.Generic.List`1::get_Item(System.Int32) on type System.Collections.Generic.List`1<SceneFlagObject> and stores the result in constant {'get_Item' (constant value of type Cpp2IL.Core.Analysis.ResultModels.GenericMethodReference)} in r8
		0x1805BA851: Copies {'local3' (type System.Int32)} from rbx into rdx
		0x1805BA853: [!] Calls managed method T System.Collections.Generic.List`1::get_Item(System.Int32) on instance {'m_objList3' (type System.Collections.Generic.List`1<SceneFlagObject>)} with arguments [{'local3' (type System.Int32)}] and stores the result in {'item2' (type SceneFlagObject)} ;  - Method resolved from concrete implementations at this address, with the help of a constant value to identify which concrete implementation.

		0x1805BA858: [!] Compares {'item2' (type SceneFlagObject)} and 0
		0x1805BA85B: Jumps to 0x1805BA93D (which throws a NRE) if item2 equals 0. Implicitly present in managed code, so ignored here.
		0x1805BA863: Copies {'item2' (type SceneFlagObject)} from rax into rcx
		0x1805BA866: [!] Calls managed method UnityEngine.GameObject UnityEngine.Component::get_gameObject() on instance {'item2' (type SceneFlagObject)} and stores the result in {'gameObject' (type UnityEngine.GameObject)}

		0x1805BA86B: Copies {'gameObject' (type UnityEngine.GameObject)} from rax into rbp
		0x1805BA86E: [!] Reads field m_objList from {'this' (function parameter, type SceneFlagObjectManager)} and stores in a new local {'m_objList4' (type System.Collections.Generic.List`1<SceneFlagObject>)}

		0x1805BA872: [!] Adds 1 to the value {'local3' (type System.Int32)}, stored in rbx
		0x1805BA874: Copies {'local3' (type System.Int32)} from rbx into rsi
		0x1805BA876: [!] Compares {'m_objList4' (type System.Collections.Generic.List`1<SceneFlagObject>)} and 0
		0x1805BA879: Jumps to 0x1805BA93D (which throws a NRE) if m_objList4 equals 0. Implicitly present in managed code, so ignored here.
		0x1805BA87F: Jumps to 0x1805BA800 - which is still in this function, but further up. Probably indicative that this is a loop.
		0x1805BA884: Loads the type definition for managed type UnityEngine.Object as a constant "Object" in rcx
		0x1805BA88B: Compares "{il2cpp field on {'Object' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" and 2
		0x1805BA892: Jumps to 0x1805BA8A2 if "{il2cpp field on {'Object' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" equals 2 ;  - This is probably a goto, jumping to 0x1805BA8A2 which is after end of current block @ 0x1805BA86E (started at 0x1805BA83D)

		0x1805BA894: Compares "{il2cpp field on {'Object' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" and 0
		0x1805BA89B: Jumps to 0x1805BA8A2 if "{il2cpp field on {'Object' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" != 0 ;  - This is probably a goto, jumping to 0x1805BA8A2 which is after end of current block @ 0x1805BA86E (started at 0x1805BA83D)

		0x1805BA89D: Calls the il2cpp cctor for the type UnityEngine.Object
		0x1805BA8A5: Clears register rdx, yielding zero-local {'local13' (type System.Int32)}
		0x1805BA8A7: Copies {'local3' (type System.Int32)} from rbp into rcx
		0x1805BA8AA: [!] Calls static managed method System.Boolean UnityEngine.Object::op_Equality(UnityEngine.Object,UnityEngine.Object) with arguments [{'local3' (type System.Int32)}, {'local13' (type System.Int32)}] and stores the result in {'boolean' (type System.Boolean)}

		0x1805BA8AF: [!] Compares {'boolean' (type System.Boolean)} and False
		0x1805BA8B1: Jumps to 0x1805BA927 if boolean equals False ;  - This is probably a goto, jumping to 0x1805BA927 which is after end of current block @ 0x1805BA86E (started at 0x1805BA83D)

		0x1805BA8B3: Loads the type definition for managed type System.Int32 as a constant "Int32" in rcx
		0x1805BA8BA: Loads a pointer to stack offset 0x40 into register rdx as new constant constant20
		0x1805BA8BF: Moves id (type System.Int32) from register r14 to the stack at offset 64 (0x40)
		0x1805BA8C4: Boxes a cpp primitive value {'id' (function parameter, type System.Int32)} to managed type System.Int32 and stores the result in new local  in register rax.
		0x1805BA8C9: Loads the type definition for managed type System.String as a constant "String" in rcx
		0x1805BA8D0: Copies {'boolean' (type System.Boolean)} from rax into rbx
		0x1805BA8D3: Compares "{il2cpp field on {'String' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" and 2
		0x1805BA8DA: Jumps to 0x1805BA8EA if "{il2cpp field on {'String' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" equals 2 ;  - This is probably a goto, jumping to 0x1805BA8EA which is after end of current block @ 0x1805BA86E (started at 0x1805BA83D)

		0x1805BA8DC: Compares "{il2cpp field on {'String' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" and 0
		0x1805BA8E3: Jumps to 0x1805BA8EA if "{il2cpp field on {'String' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" != 0 ;  - This is probably a goto, jumping to 0x1805BA8EA which is after end of current block @ 0x1805BA86E (started at 0x1805BA83D)

		0x1805BA8E5: Calls the il2cpp cctor for the type System.String
		0x1805BA8EA: Loads the string literal "Data Not Found : " as a constant "constant26" in rcx
		0x1805BA8F4: Copies {'boolean' (type System.Boolean)} from rbx into rdx
		0x1805BA8F7: [!] Calls static managed method System.String System.String::Concat(System.Object,System.Object) with arguments ["Data Not Found : ", {'boolean' (type System.Boolean)}] and stores the result in {'string' (type System.String)}

		0x1805BA8FC: Loads the type definition for managed type UnityEngine.Debug as a constant "Debug" in rcx
		0x1805BA903: Copies {'string' (type System.String)} from rax into rbx
		0x1805BA906: Compares "{il2cpp field on {'Debug' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" and 2
		0x1805BA90D: Jumps to 0x1805BA91D if "{il2cpp field on {'Debug' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" equals 2 ;  - This is probably a goto, jumping to 0x1805BA91D which is after end of current block @ 0x1805BA86E (started at 0x1805BA83D)

		0x1805BA90F: Compares "{il2cpp field on {'Debug' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" and 0
		0x1805BA916: Jumps to 0x1805BA91D if "{il2cpp field on {'Debug' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" != 0 ;  - This is probably a goto, jumping to 0x1805BA91D which is after end of current block @ 0x1805BA86E (started at 0x1805BA83D)

		0x1805BA918: Calls the il2cpp cctor for the type UnityEngine.Debug
		0x1805BA91F: Copies {'string' (type System.String)} from rbx into rcx
		0x1805BA922: [!] Calls static managed method System.Void UnityEngine.Debug::LogWarning(System.Object) with arguments [{'string' (type System.String)}]

		0x1805BA927: Reads unknown value in stack, offset 72 (0x48) and stores the pointer in register rbx as new constant constant32
		0x1805BA92C: Copies {'local3' (type System.Int32)} from rbp into rax
		0x1805BA92F: Reads unknown value in stack, offset 80 (0x50) and stores the pointer in register rbp as new constant constant33
		0x1805BA93C: [!] Returns {'local3' (type System.Int32)} from the function

		0x1805BA93F: [!] Constructs and throws an exception of kind System.NullReferenceException




	Generated Pseudocode:

	Declaring Type: SceneFlagObjectManager
	UnityEngine.GameObject GetStartPosition(System.Int32 id)
		System.Collections.Generic.List`1<SceneFlagObject> m_objList = this.m_objList
		ulong local3 = 0

		System.Int32 count = m_objList.Count

		if (local3 < count)
		    System.Collections.Generic.List`1<SceneFlagObject> m_objList2 = this.m_objList

		    SceneFlagObject item = m_objList2.Item

		    if (id == item.m_objId)
		        System.Collections.Generic.List`1<SceneFlagObject> m_objList3 = this.m_objList

		        SceneFlagObject item2 = m_objList3.Item

		        UnityEngine.GameObject gameObject = item2.gameObject
		    endif
            
		    System.Collections.Generic.List`1<SceneFlagObject> m_objList4 = this.m_objList
		    local3 += 1
		endif
        
		ulong local13 = 0

		System.Boolean boolean = UnityEngine.Object.op_Equality(local3, local13) //(Object x, Object y)

		if (boolean == False)
            goto INSN_1805BA927
        endif

		System.String string = System.String.Concat("Data Not Found : ", boolean) //(Object arg0, Object arg1)

		UnityEngine.Debug.LogWarning(string) //(Object message)

		INSN_1805BA927:
		return local3
		throw new System.NullReferenceException()


Generated IL:
	Action of type Cpp2IL.Core.Analysis.Actions.x86.Important.ReturnFromFunctionAction at (0x1805BA93C) is corrupt (Return value has a type of System.Int32, expecting an object of type UnityEngine.GameObject) and cannot be created as IL. Aborting here.


Method: System.Void SceneFlagObjectManager::SetActiveObject(System.Int32,System.Boolean):	Method Body (x86 ASM):
		0x1805BA950 mov [rsp+18h],rbp		; DEBUG: {Memory}/None {Register}/RBP ||| RSP | 24 | None ||| N/A | N/A
		0x1805BA955 mov [rsp+20h],rdi		; DEBUG: {Memory}/None {Register}/RDI ||| RSP | 32 | None ||| N/A | N/A
		0x1805BA95A push r14		; DEBUG: {Register}/R14 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805BA95C sub rsp,20h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 32
		0x1805BA960 cmp byte ptr [18183ED46h],0		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6467874118 | None ||| N/A | 0
		0x1805BA967 movzx r14d,r8b		; DEBUG: {Register}/R14D {Register}/R8L ||| None | 0 | None ||| N/A | N/A
		0x1805BA96B mov ebp,edx		; DEBUG: {Register}/EBP {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805BA96D mov rdi,rcx		; DEBUG: {Register}/RDI {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x1805BA970 jne short 00000001805BA984h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805BA972 mov ecx,[1814B91D8h]		; DEBUG: {Register}/ECX {Memory}/None ||| RIP | 6464180696 | None ||| N/A | N/A
		0x1805BA978 call 00000001800FEB90h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805BA97D mov byte ptr [18183ED46h],1		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6467874118 | None ||| N/A | 1
		0x1805BA984 mov rcx,[rdi+18h]		; DEBUG: {Register}/RCX {Memory}/None ||| RDI | 24 | None ||| N/A | N/A
		0x1805BA988 mov [rsp+30h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RSP | 48 | None ||| N/A | N/A
		0x1805BA98D mov [rsp+38h],rsi		; DEBUG: {Memory}/None {Register}/RSI ||| RSP | 56 | None ||| N/A | N/A
		0x1805BA992 test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x1805BA995 je near ptr 00000001805BAA26h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805BA99B mov rdx,[18189CB00h]		; DEBUG: {Register}/RDX {Memory}/None ||| RIP | 6468258560 | None ||| N/A | N/A
		0x1805BA9A2 call 000000018029B0C0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805BA9A7 xor ebx,ebx		; DEBUG: {Register}/EBX {Register}/EBX ||| None | 0 | None ||| N/A | N/A
		0x1805BA9A9 mov esi,eax		; DEBUG: {Register}/ESI {Register}/EAX ||| None | 0 | None ||| N/A | N/A
		0x1805BA9AB test eax,eax		; DEBUG: {Register}/EAX {Register}/EAX ||| None | 0 | None ||| N/A | N/A
		0x1805BA9AD jle short 00000001805BAA0Bh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805BA9AF nop		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805BA9B0 mov rcx,[rdi+18h]		; DEBUG: {Register}/RCX {Memory}/None ||| RDI | 24 | None ||| N/A | N/A
		0x1805BA9B4 test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x1805BA9B7 je short 00000001805BAA26h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805BA9B9 mov r8,[181876C58h]		; DEBUG: {Register}/R8 {Memory}/None ||| RIP | 6468103256 | None ||| N/A | N/A
		0x1805BA9C0 mov edx,ebx		; DEBUG: {Register}/EDX {Register}/EBX ||| None | 0 | None ||| N/A | N/A
		0x1805BA9C2 call 00000001810B67F0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805BA9C7 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805BA9CA je short 00000001805BAA26h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805BA9CC cmp ebp,[rax+18h]		; DEBUG: {Register}/EBP {Memory}/None ||| RAX | 24 | None ||| N/A | N/A
		0x1805BA9CF jne short 00000001805BAA05h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805BA9D1 mov rcx,[rdi+18h]		; DEBUG: {Register}/RCX {Memory}/None ||| RDI | 24 | None ||| N/A | N/A
		0x1805BA9D5 test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x1805BA9D8 je short 00000001805BAA26h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805BA9DA mov r8,[181876C58h]		; DEBUG: {Register}/R8 {Memory}/None ||| RIP | 6468103256 | None ||| N/A | N/A
		0x1805BA9E1 mov edx,ebx		; DEBUG: {Register}/EDX {Register}/EBX ||| None | 0 | None ||| N/A | N/A
		0x1805BA9E3 call 00000001810B67F0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805BA9E8 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805BA9EB je short 00000001805BAA26h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805BA9ED mov r9,[rax]		; DEBUG: {Register}/R9 {Memory}/None ||| RAX | 0 | None ||| N/A | N/A
		0x1805BA9F0 movzx edx,r14b		; DEBUG: {Register}/EDX {Register}/R14L ||| None | 0 | None ||| N/A | N/A
		0x1805BA9F4 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805BA9F7 mov r8,[r9+170h]		; DEBUG: {Register}/R8 {Memory}/None ||| R9 | 368 | None ||| N/A | N/A
		0x1805BA9FE call qword ptr [r9+168h]		; DEBUG: {Memory}/None {Register}/None ||| R9 | 360 | None ||| N/A | N/A
		0x1805BAA05 inc ebx		; DEBUG: {Register}/EBX {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805BAA07 cmp ebx,esi		; DEBUG: {Register}/EBX {Register}/ESI ||| None | 0 | None ||| N/A | N/A
		0x1805BAA09 jl short 00000001805BA9B0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805BAA0B mov rsi,[rsp+38h]		; DEBUG: {Register}/RSI {Memory}/None ||| RSP | 56 | None ||| N/A | N/A
		0x1805BAA10 mov rbx,[rsp+30h]		; DEBUG: {Register}/RBX {Memory}/None ||| RSP | 48 | None ||| N/A | N/A
		0x1805BAA15 mov rbp,[rsp+40h]		; DEBUG: {Register}/RBP {Memory}/None ||| RSP | 64 | None ||| N/A | N/A
		0x1805BAA1A mov rdi,[rsp+48h]		; DEBUG: {Register}/RDI {Memory}/None ||| RSP | 72 | None ||| N/A | N/A
		0x1805BAA1F add rsp,20h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 32
		0x1805BAA23 pop r14		; DEBUG: {Register}/R14 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805BAA25 ret		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805BAA26 xor ecx,ecx		; DEBUG: {Register}/ECX {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x1805BAA28 call 000000018012BDA0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805BAA2D int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.Void SceneFlagObjectManager::SetActiveObject(System.Int32,System.Boolean):
		End of function at 0x1805BAA2E
		Absolute End is at 0x1805BAA2E
		Identified Jump Destination addresses:

		0x1805BA95A: Saves the content of r14 to the stack
		0x1805BA960: Compares {Unknown Global at 0x18183ED46, first ten bytes are [1 0 229 219 1 0 60 61 103 1], or as chars " åÛ <=g"} and 0
		0x1805BA967: Copies {'active' (function parameter, type System.Boolean)} from r8 into r14
		0x1805BA96B: Copies {'id' (function parameter, type System.Int32)} from rdx into rbp
		0x1805BA96D: Copies {'this' (function parameter, type SceneFlagObjectManager)} from rcx into rdi
		0x1805BA970: Jumps to 0x1805BA984 if {Unknown Global at 0x18183ED46, first ten bytes are [1 0 229 219 1 0 60 61 103 1], or as chars " åÛ <=g"} != 0

		0x1805BA972: Loads string "ë^" into register rcx as constant {'constant3' (constant value of type Cpp2IL.Core.Analysis.ResultModels.Il2CppString)}
		0x1805BA978: Attempts to load the il2cpp metadata for this method (method id 0) and init it cpp-side.

		0x1805BA984: [!] Reads field m_objList from {'this' (function parameter, type SceneFlagObjectManager)} and stores in a new local {'m_objList' (type System.Collections.Generic.List`1<SceneFlagObject>)}

		0x1805BA992: [!] Compares {'m_objList' (type System.Collections.Generic.List`1<SceneFlagObject>)} and 0
		0x1805BA995: Jumps to 0x1805BAA26 (which throws a NRE) if m_objList equals 0. Implicitly present in managed code, so ignored here.
		0x1805BA99B: Loads the global generic method reference for method System.Int32 System.Collections.Generic.List`1::get_Count() on type System.Collections.Generic.List`1<SceneFlagObject> and stores the result in constant {'get_Count' (constant value of type Cpp2IL.Core.Analysis.ResultModels.GenericMethodReference)} in rdx
		0x1805BA9A2: [!] Calls managed method System.Int32 System.Collections.Generic.List`1::get_Count() on instance {'m_objList' (type System.Collections.Generic.List`1<SceneFlagObject>)} and stores the result in {'count' (type System.Int32)} ;  - Method resolved from concrete implementations at this address, with the help of a constant value to identify which concrete implementation.

		0x1805BA9A7: Clears register rbx, yielding zero-local {'local5' (type System.Int32)}
		0x1805BA9A9: Copies {'count' (type System.Int32)} from rax into rsi
		0x1805BA9AB: [!] Compares {'count' (type System.Int32)} and 0
		0x1805BA9AD: Jumps to 0x1805BAA0B (which is an if statement's body) if {'count' (type System.Int32)} is less than or equal to 0 ;  - Increasing indentation - is standard if, unimportant is False

		0x1805BA9B0: [!] Reads field m_objList from {'this' (function parameter, type SceneFlagObjectManager)} and stores in a new local {'m_objList2' (type System.Collections.Generic.List`1<SceneFlagObject>)}

		0x1805BA9B4: [!] Compares {'m_objList2' (type System.Collections.Generic.List`1<SceneFlagObject>)} and 0
		0x1805BA9B7: Jumps to 0x1805BAA26 (which throws a NRE) if m_objList2 equals 0. Implicitly present in managed code, so ignored here.
		0x1805BA9B9: Loads the global generic method reference for method T System.Collections.Generic.List`1::get_Item(System.Int32) on type System.Collections.Generic.List`1<SceneFlagObject> and stores the result in constant {'get_Item' (constant value of type Cpp2IL.Core.Analysis.ResultModels.GenericMethodReference)} in r8
		0x1805BA9C0: Copies {'local5' (type System.Int32)} from rbx into rdx
		0x1805BA9C2: [!] Calls managed method T System.Collections.Generic.List`1::get_Item(System.Int32) on instance {'m_objList2' (type System.Collections.Generic.List`1<SceneFlagObject>)} with arguments [{'local5' (type System.Int32)}] and stores the result in {'item' (type SceneFlagObject)} ;  - Method resolved from concrete implementations at this address, with the help of a constant value to identify which concrete implementation.

		0x1805BA9C7: [!] Compares {'item' (type SceneFlagObject)} and 0
		0x1805BA9CA: Jumps to 0x1805BAA26 (which throws a NRE) if item equals 0. Implicitly present in managed code, so ignored here.
		0x1805BA9CC: [!] Compares {'id' (function parameter, type System.Int32)} and {field m_objId, read from local {'item' (type SceneFlagObject)}}
		0x1805BA9CF: Jumps to 0x1805BAA05 (which is an if statement's body) if {'id' (function parameter, type System.Int32)} != {field m_objId, read from local {'item' (type SceneFlagObject)}} ;  - Increasing indentation - is standard if, unimportant is False

		0x1805BA9D1: [!] Reads field m_objList from {'this' (function parameter, type SceneFlagObjectManager)} and stores in a new local {'m_objList3' (type System.Collections.Generic.List`1<SceneFlagObject>)}

		0x1805BA9D5: [!] Compares {'m_objList3' (type System.Collections.Generic.List`1<SceneFlagObject>)} and 0
		0x1805BA9D8: Jumps to 0x1805BAA26 (which throws a NRE) if m_objList3 equals 0. Implicitly present in managed code, so ignored here.
		0x1805BA9DA: Loads the global generic method reference for method T System.Collections.Generic.List`1::get_Item(System.Int32) on type System.Collections.Generic.List`1<SceneFlagObject> and stores the result in constant {'get_Item' (constant value of type Cpp2IL.Core.Analysis.ResultModels.GenericMethodReference)} in r8
		0x1805BA9E1: Copies {'local5' (type System.Int32)} from rbx into rdx
		0x1805BA9E3: [!] Calls managed method T System.Collections.Generic.List`1::get_Item(System.Int32) on instance {'m_objList3' (type System.Collections.Generic.List`1<SceneFlagObject>)} with arguments [{'local5' (type System.Int32)}] and stores the result in {'item2' (type SceneFlagObject)} ;  - Method resolved from concrete implementations at this address, with the help of a constant value to identify which concrete implementation.

		0x1805BA9E8: [!] Compares {'item2' (type SceneFlagObject)} and 0
		0x1805BA9EB: Jumps to 0x1805BAA26 (which throws a NRE) if item2 equals 0. Implicitly present in managed code, so ignored here.
		0x1805BA9ED: Loads the class pointer from item2 into a constant constant13 in register r9
		0x1805BA9F0: Copies {'active' (function parameter, type System.Boolean)} from r14 into rdx
		0x1805BA9F4: Copies {'item2' (type SceneFlagObject)} from rax into rcx
		0x1805BA9F7: Loads the pointer to the implementation of virtual function System.Void SceneFlagObject::SetActive(System.Boolean) specific to SceneFlagObject from the class pointer in r9, slot 4 (from memory offset 368) and stores in constant constant14
		0x1805BA9FE: [!] Calls managed method System.Void SceneFlagObject::SetActive(System.Boolean) on instance {'item2' (type SceneFlagObject)} with arguments [{'active' (function parameter, type System.Boolean)}]

		0x1805BAA05: [!] Adds 1 to the value {'local5' (type System.Int32)}, stored in rbx
		0x1805BAA07: [!] Compares {'local5' (type System.Int32)} and {'count' (type System.Int32)}
		0x1805BAA0B: Reads unknown value in stack, offset 56 (0x38) and stores the pointer in register rsi as new constant constant15
		0x1805BAA10: Reads unknown value in stack, offset 48 (0x30) and stores the pointer in register rbx as new constant constant16
		0x1805BAA15: Reads unknown value in stack, offset 64 (0x40) and stores the pointer in register rbp as new constant constant17
		0x1805BAA1A: Reads unknown value in stack, offset 72 (0x48) and stores the pointer in register rdi as new constant constant18
		0x1805BAA25: [!] Returns from the function

		0x1805BAA28: [!] Constructs and throws an exception of kind System.NullReferenceException




	Generated Pseudocode:

	Declaring Type: SceneFlagObjectManager
	System.Void SetActiveObject(System.Int32 id, System.Boolean active)
		System.Collections.Generic.List`1<SceneFlagObject> m_objList = this.m_objList

		System.Int32 count = m_objList.Count
		ulong local5 = 0

		if (count > 0)
		    System.Collections.Generic.List`1<SceneFlagObject> m_objList2 = this.m_objList

		    SceneFlagObject item = m_objList2.Item

		    if (id == item.m_objId)
		        System.Collections.Generic.List`1<SceneFlagObject> m_objList3 = this.m_objList

		        SceneFlagObject item2 = m_objList3.Item

		        item2.SetActive(active) //(Boolean active)
		    endif
            
		    local5 += 1
		endif
        
		return
		throw new System.NullReferenceException()


Generated IL:
	IL_0000: ldarg.0
	IL_0001: ldfld System.Collections.Generic.List`1<SceneFlagObject> SceneFlagObjectManager::m_objList
	IL_0006: call System.Int32 System.Collections.Generic.List`1::get_Count()
	IL_000b: stloc.0
	IL_000c: ldc.i4.0
	IL_000d: stloc.1
	IL_000e: ldloc.0
	IL_000f: ldc.i4.0
	IL_0010: ble.s IL_003e
	IL_0012: ldarg.0
	IL_0013: ldfld System.Collections.Generic.List`1<SceneFlagObject> SceneFlagObjectManager::m_objList
	IL_0018: ldloc.1
	IL_0019: call T System.Collections.Generic.List`1::get_Item(System.Int32)
	IL_001e: stloc.2
	IL_001f: ldarg.1
	IL_0020: ldloc.2
	IL_0021: ldfld System.Int32 SceneFlagObject::m_objId
	IL_0026: bne.un.s IL_003a
	IL_0028: ldarg.0
	IL_0029: ldfld System.Collections.Generic.List`1<SceneFlagObject> SceneFlagObjectManager::m_objList
	IL_002e: ldloc.1
	IL_002f: call T System.Collections.Generic.List`1::get_Item(System.Int32)
	IL_0034: ldarg.2
	IL_0035: callvirt System.Void SceneFlagObject::SetActive(System.Boolean)
	IL_003a: ldloc.1
	IL_003b: ldc.i4.1
	IL_003c: add
	IL_003d: stloc.1
	IL_003e: ret
	IL_003f: newobj System.Void System.NullReferenceException::.ctor()
	IL_0044: throw
	

