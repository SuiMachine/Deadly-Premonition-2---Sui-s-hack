Type: C020_SideQuest_Define

Method: System.Void C020_SideQuest_Define::.ctor():	Method Body (x86 ASM):
		0x1802068B0 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1802068B2 jmp near ptr 0000000180207540h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802068B7 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.Void C020_SideQuest_Define::.ctor():
		End of function at 0x1802068B8
		Absolute End is at 0x1802068B8
		Identified Jump Destination addresses:

		0x1802068B2: [!] Calls managed method System.Void System.Object::.ctor() on instance {'this' (function parameter, type C020_SideQuest_Define)}

		0x1802068B2: [!] Returns from the function




	Generated Pseudocode:

	Declaring Type: C020_SideQuest_Define
	System.Void .ctor()

		base..ctor()
		return


Generated IL:
	IL_0000: ldarg.0
	IL_0001: call System.Void System.Object::.ctor()
	IL_0006: ret
	

Method: System.Void C020_SideQuest_Define::.cctor():	Method Body (x86 ASM):
		0x180215850 mov [rsp+8],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RSP | 8 | None ||| N/A | N/A
		0x180215855 push rdi		; DEBUG: {Register}/RDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180215856 sub rsp,20h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 32
		0x18021585A cmp byte ptr [18183D2CCh],0		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6467867340 | None ||| N/A | 0
		0x180215861 jne short 0000000180215875h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215863 mov ecx,[181515FECh]		; DEBUG: {Register}/ECX {Memory}/None ||| RIP | 6464561132 | None ||| N/A | N/A
		0x180215869 call 00000001800FEB90h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021586E mov byte ptr [18183D2CCh],1		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6467867340 | None ||| N/A | 1
		0x180215875 mov rcx,[181884F78h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468161400 | None ||| N/A | N/A
		0x18021587C mov edx,23h		; DEBUG: {Register}/EDX {Immediate32}/None ||| None | 0 | None ||| N/A | 35
		0x180215881 call 0000000180141320h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215886 mov rcx,[181884228h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468157992 | None ||| N/A | N/A
		0x18021588D mov rdi,rax		; DEBUG: {Register}/RDI {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180215890 mov rbx,[181872A20h]		; DEBUG: {Register}/RBX {Memory}/None ||| RIP | 6468086304 | None ||| N/A | N/A
		0x180215897 test byte ptr [rcx+127h],2		; DEBUG: {Memory}/None {Immediate8}/None ||| RCX | 295 | None ||| N/A | 2
		0x18021589E je short 00000001802158AEh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802158A0 cmp dword ptr [rcx+0D8h],0		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RCX | 216 | None ||| N/A | 0
		0x1802158A7 jne short 00000001802158AEh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802158A9 call 000000018010EAF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802158AE xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1802158B0 mov rcx,rbx		; DEBUG: {Register}/RCX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x1802158B3 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802158B8 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1802158BB test rdi,rdi		; DEBUG: {Register}/RDI {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x1802158BE je near ptr 00000001802160CDh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802158C4 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1802158C7 je short 00000001802158E1h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802158C9 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1802158CC mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1802158CF mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1802158D3 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802158D8 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1802158DB je near ptr 00000001802160D5h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802158E1 cmp dword ptr [rdi+18h],1		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 1
		0x1802158E5 jbe near ptr 00000001802160E8h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802158EB mov [rdi+28h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 40 | None ||| N/A | N/A
		0x1802158EF xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1802158F1 mov rcx,[181872A40h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468086336 | None ||| N/A | N/A
		0x1802158F8 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802158FD mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180215900 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180215903 je short 000000018021591Dh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215905 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x180215908 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021590B mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18021590F call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215914 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180215917 je near ptr 00000001802160FBh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021591D cmp dword ptr [rdi+18h],2		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 2
		0x180215921 jbe near ptr 000000018021610Eh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215927 mov [rdi+30h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 48 | None ||| N/A | N/A
		0x18021592B xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021592D mov rcx,[181872A68h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468086376 | None ||| N/A | N/A
		0x180215934 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215939 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021593C test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021593F je short 0000000180215959h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215941 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x180215944 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180215947 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18021594B call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215950 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180215953 je near ptr 0000000180216121h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215959 cmp dword ptr [rdi+18h],3		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 3
		0x18021595D jbe near ptr 0000000180216134h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215963 mov [rdi+38h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 56 | None ||| N/A | N/A
		0x180215967 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180215969 mov rcx,[181872A80h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468086400 | None ||| N/A | N/A
		0x180215970 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215975 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180215978 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021597B je short 0000000180215995h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021597D mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x180215980 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180215983 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x180215987 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021598C test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021598F je near ptr 0000000180216147h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215995 cmp dword ptr [rdi+18h],4		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 4
		0x180215999 jbe near ptr 000000018021615Ah		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021599F mov [rdi+40h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 64 | None ||| N/A | N/A
		0x1802159A3 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1802159A5 mov rcx,[181872AC8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468086472 | None ||| N/A | N/A
		0x1802159AC call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802159B1 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1802159B4 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1802159B7 je short 00000001802159D1h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802159B9 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1802159BC mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1802159BF mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1802159C3 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802159C8 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1802159CB je near ptr 000000018021616Dh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802159D1 cmp dword ptr [rdi+18h],5		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 5
		0x1802159D5 jbe near ptr 0000000180216180h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802159DB mov [rdi+48h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 72 | None ||| N/A | N/A
		0x1802159DF xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1802159E1 mov rcx,[181872AE0h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468086496 | None ||| N/A | N/A
		0x1802159E8 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802159ED mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1802159F0 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1802159F3 je short 0000000180215A0Dh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802159F5 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1802159F8 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1802159FB mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1802159FF call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215A04 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180215A07 je near ptr 0000000180216193h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215A0D cmp dword ptr [rdi+18h],6		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 6
		0x180215A11 jbe near ptr 00000001802161A6h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215A17 mov [rdi+50h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 80 | None ||| N/A | N/A
		0x180215A1B xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180215A1D mov rcx,[181872B08h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468086536 | None ||| N/A | N/A
		0x180215A24 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215A29 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180215A2C test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180215A2F je short 0000000180215A49h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215A31 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x180215A34 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180215A37 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x180215A3B call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215A40 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180215A43 je near ptr 00000001802161B9h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215A49 cmp dword ptr [rdi+18h],7		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 7
		0x180215A4D jbe near ptr 00000001802161CCh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215A53 mov [rdi+58h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 88 | None ||| N/A | N/A
		0x180215A57 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180215A59 mov rcx,[181872B20h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468086560 | None ||| N/A | N/A
		0x180215A60 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215A65 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180215A68 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180215A6B je short 0000000180215A85h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215A6D mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x180215A70 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180215A73 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x180215A77 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215A7C test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180215A7F je near ptr 00000001802161DFh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215A85 cmp dword ptr [rdi+18h],8		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 8
		0x180215A89 jbe near ptr 00000001802161F2h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215A8F mov [rdi+60h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 96 | None ||| N/A | N/A
		0x180215A93 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180215A95 mov rcx,[181872B68h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468086632 | None ||| N/A | N/A
		0x180215A9C call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215AA1 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180215AA4 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180215AA7 je short 0000000180215AC1h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215AA9 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x180215AAC mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180215AAF mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x180215AB3 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215AB8 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180215ABB je near ptr 0000000180216205h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215AC1 cmp dword ptr [rdi+18h],9		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 9
		0x180215AC5 jbe near ptr 0000000180216218h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215ACB mov [rdi+68h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 104 | None ||| N/A | N/A
		0x180215ACF xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180215AD1 mov rcx,[181872B78h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468086648 | None ||| N/A | N/A
		0x180215AD8 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215ADD mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180215AE0 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180215AE3 je short 0000000180215AFDh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215AE5 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x180215AE8 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180215AEB mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x180215AEF call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215AF4 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180215AF7 je near ptr 000000018021622Bh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215AFD cmp dword ptr [rdi+18h],0Ah		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 10
		0x180215B01 jbe near ptr 000000018021623Eh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215B07 mov [rdi+70h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 112 | None ||| N/A | N/A
		0x180215B0B xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180215B0D mov rcx,[181872BB8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468086712 | None ||| N/A | N/A
		0x180215B14 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215B19 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180215B1C test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180215B1F je short 0000000180215B39h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215B21 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x180215B24 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180215B27 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x180215B2B call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215B30 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180215B33 je near ptr 0000000180216251h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215B39 cmp dword ptr [rdi+18h],0Bh		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 11
		0x180215B3D jbe near ptr 0000000180216264h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215B43 mov [rdi+78h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 120 | None ||| N/A | N/A
		0x180215B47 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180215B49 mov rcx,[181872BD0h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468086736 | None ||| N/A | N/A
		0x180215B50 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215B55 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180215B58 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180215B5B je short 0000000180215B75h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215B5D mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x180215B60 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180215B63 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x180215B67 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215B6C test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180215B6F je near ptr 0000000180216277h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215B75 cmp dword ptr [rdi+18h],0Ch		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 12
		0x180215B79 jbe near ptr 000000018021628Ah		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215B7F mov [rdi+80h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 128 | None ||| N/A | N/A
		0x180215B86 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180215B88 mov rcx,[181872BE8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468086760 | None ||| N/A | N/A
		0x180215B8F call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215B94 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180215B97 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180215B9A je short 0000000180215BB4h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215B9C mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x180215B9F mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180215BA2 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x180215BA6 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215BAB test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180215BAE je near ptr 000000018021629Dh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215BB4 cmp dword ptr [rdi+18h],0Dh		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 13
		0x180215BB8 jbe near ptr 00000001802162B0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215BBE mov [rdi+88h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 136 | None ||| N/A | N/A
		0x180215BC5 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180215BC7 mov rcx,[181872C28h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468086824 | None ||| N/A | N/A
		0x180215BCE call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215BD3 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180215BD6 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180215BD9 je short 0000000180215BF3h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215BDB mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x180215BDE mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180215BE1 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x180215BE5 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215BEA test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180215BED je near ptr 00000001802162C3h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215BF3 cmp dword ptr [rdi+18h],0Eh		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 14
		0x180215BF7 jbe near ptr 00000001802162D6h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215BFD mov [rdi+90h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 144 | None ||| N/A | N/A
		0x180215C04 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180215C06 mov rcx,[181872C58h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468086872 | None ||| N/A | N/A
		0x180215C0D call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215C12 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180215C15 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180215C18 je short 0000000180215C32h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215C1A mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x180215C1D mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180215C20 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x180215C24 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215C29 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180215C2C je near ptr 00000001802162E9h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215C32 cmp dword ptr [rdi+18h],0Fh		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 15
		0x180215C36 jbe near ptr 00000001802162FCh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215C3C mov [rdi+98h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 152 | None ||| N/A | N/A
		0x180215C43 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180215C45 mov rcx,[181872C80h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468086912 | None ||| N/A | N/A
		0x180215C4C call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215C51 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180215C54 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180215C57 je short 0000000180215C71h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215C59 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x180215C5C mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180215C5F mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x180215C63 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215C68 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180215C6B je near ptr 000000018021630Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215C71 cmp dword ptr [rdi+18h],10h		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 16
		0x180215C75 jbe near ptr 0000000180216322h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215C7B mov [rdi+0A0h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 160 | None ||| N/A | N/A
		0x180215C82 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180215C84 mov rcx,[181872C88h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468086920 | None ||| N/A | N/A
		0x180215C8B call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215C90 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180215C93 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180215C96 je short 0000000180215CB0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215C98 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x180215C9B mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180215C9E mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x180215CA2 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215CA7 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180215CAA je near ptr 0000000180216335h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215CB0 cmp dword ptr [rdi+18h],11h		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 17
		0x180215CB4 jbe near ptr 0000000180216348h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215CBA mov [rdi+0A8h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 168 | None ||| N/A | N/A
		0x180215CC1 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180215CC3 mov rcx,[181872CC8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468086984 | None ||| N/A | N/A
		0x180215CCA call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215CCF mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180215CD2 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180215CD5 je short 0000000180215CEFh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215CD7 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x180215CDA mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180215CDD mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x180215CE1 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215CE6 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180215CE9 je near ptr 000000018021635Bh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215CEF cmp dword ptr [rdi+18h],12h		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 18
		0x180215CF3 jbe near ptr 000000018021636Eh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215CF9 mov [rdi+0B0h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 176 | None ||| N/A | N/A
		0x180215D00 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180215D02 mov rcx,[181872CF8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468087032 | None ||| N/A | N/A
		0x180215D09 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215D0E mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180215D11 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180215D14 je short 0000000180215D2Eh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215D16 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x180215D19 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180215D1C mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x180215D20 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215D25 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180215D28 je near ptr 0000000180216381h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215D2E cmp dword ptr [rdi+18h],13h		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 19
		0x180215D32 jbe near ptr 0000000180216394h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215D38 mov [rdi+0B8h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 184 | None ||| N/A | N/A
		0x180215D3F xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180215D41 mov rcx,[181872D20h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468087072 | None ||| N/A | N/A
		0x180215D48 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215D4D mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180215D50 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180215D53 je short 0000000180215D6Dh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215D55 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x180215D58 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180215D5B mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x180215D5F call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215D64 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180215D67 je near ptr 00000001802163A7h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215D6D cmp dword ptr [rdi+18h],14h		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 20
		0x180215D71 jbe near ptr 00000001802163BAh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215D77 mov [rdi+0C0h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 192 | None ||| N/A | N/A
		0x180215D7E xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180215D80 mov rcx,[181872D38h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468087096 | None ||| N/A | N/A
		0x180215D87 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215D8C mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180215D8F test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180215D92 je short 0000000180215DACh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215D94 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x180215D97 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180215D9A mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x180215D9E call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215DA3 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180215DA6 je near ptr 00000001802163CDh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215DAC cmp dword ptr [rdi+18h],15h		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 21
		0x180215DB0 jbe near ptr 00000001802163E0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215DB6 mov [rdi+0C8h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 200 | None ||| N/A | N/A
		0x180215DBD xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180215DBF mov rcx,[181872D68h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468087144 | None ||| N/A | N/A
		0x180215DC6 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215DCB mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180215DCE test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180215DD1 je short 0000000180215DEBh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215DD3 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x180215DD6 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180215DD9 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x180215DDD call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215DE2 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180215DE5 je near ptr 00000001802163F3h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215DEB cmp dword ptr [rdi+18h],16h		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 22
		0x180215DEF jbe near ptr 0000000180216406h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215DF5 mov [rdi+0D0h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 208 | None ||| N/A | N/A
		0x180215DFC xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180215DFE mov rcx,[181872D88h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468087176 | None ||| N/A | N/A
		0x180215E05 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215E0A mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180215E0D test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180215E10 je short 0000000180215E2Ah		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215E12 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x180215E15 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180215E18 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x180215E1C call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215E21 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180215E24 je near ptr 0000000180216419h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215E2A cmp dword ptr [rdi+18h],17h		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 23
		0x180215E2E jbe near ptr 000000018021642Ch		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215E34 mov [rdi+0D8h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 216 | None ||| N/A | N/A
		0x180215E3B xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180215E3D mov rcx,[181872DA8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468087208 | None ||| N/A | N/A
		0x180215E44 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215E49 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180215E4C test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180215E4F je short 0000000180215E69h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215E51 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x180215E54 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180215E57 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x180215E5B call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215E60 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180215E63 je near ptr 000000018021643Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215E69 cmp dword ptr [rdi+18h],18h		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 24
		0x180215E6D jbe near ptr 0000000180216452h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215E73 mov [rdi+0E0h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 224 | None ||| N/A | N/A
		0x180215E7A xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180215E7C mov rcx,[181872DD0h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468087248 | None ||| N/A | N/A
		0x180215E83 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215E88 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180215E8B test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180215E8E je short 0000000180215EA8h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215E90 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x180215E93 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180215E96 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x180215E9A call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215E9F test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180215EA2 je near ptr 0000000180216465h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215EA8 cmp dword ptr [rdi+18h],19h		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 25
		0x180215EAC jbe near ptr 0000000180216478h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215EB2 mov [rdi+0E8h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 232 | None ||| N/A | N/A
		0x180215EB9 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180215EBB mov rcx,[181872E08h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468087304 | None ||| N/A | N/A
		0x180215EC2 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215EC7 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180215ECA test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180215ECD je short 0000000180215EE7h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215ECF mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x180215ED2 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180215ED5 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x180215ED9 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215EDE test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180215EE1 je near ptr 000000018021648Bh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215EE7 cmp dword ptr [rdi+18h],1Ah		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 26
		0x180215EEB jbe near ptr 000000018021649Eh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215EF1 mov [rdi+0F0h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 240 | None ||| N/A | N/A
		0x180215EF8 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180215EFA mov rcx,[181872E30h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468087344 | None ||| N/A | N/A
		0x180215F01 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215F06 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180215F09 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180215F0C je short 0000000180215F26h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215F0E mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x180215F11 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180215F14 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x180215F18 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215F1D test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180215F20 je near ptr 00000001802164B1h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215F26 cmp dword ptr [rdi+18h],1Bh		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 27
		0x180215F2A jbe near ptr 00000001802164C4h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215F30 mov [rdi+0F8h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 248 | None ||| N/A | N/A
		0x180215F37 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180215F39 mov rcx,[181872E40h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468087360 | None ||| N/A | N/A
		0x180215F40 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215F45 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180215F48 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180215F4B je short 0000000180215F65h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215F4D mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x180215F50 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180215F53 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x180215F57 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215F5C test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180215F5F je near ptr 00000001802164D7h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215F65 cmp dword ptr [rdi+18h],1Ch		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 28
		0x180215F69 jbe near ptr 00000001802164EAh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215F6F mov [rdi+100h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 256 | None ||| N/A | N/A
		0x180215F76 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180215F78 mov rcx,[181872E88h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468087432 | None ||| N/A | N/A
		0x180215F7F call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215F84 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180215F87 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180215F8A je short 0000000180215FA4h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215F8C mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x180215F8F mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180215F92 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x180215F96 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215F9B test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180215F9E je near ptr 00000001802164FDh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215FA4 cmp dword ptr [rdi+18h],1Dh		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 29
		0x180215FA8 jbe near ptr 0000000180216510h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215FAE mov [rdi+108h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 264 | None ||| N/A | N/A
		0x180215FB5 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180215FB7 mov rcx,[181872EA0h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468087456 | None ||| N/A | N/A
		0x180215FBE call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215FC3 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180215FC6 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180215FC9 je short 0000000180215FE3h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215FCB mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x180215FCE mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180215FD1 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x180215FD5 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215FDA test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180215FDD je near ptr 0000000180216523h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215FE3 cmp dword ptr [rdi+18h],1Eh		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 30
		0x180215FE7 jbe near ptr 0000000180216536h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180215FED mov [rdi+110h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 272 | None ||| N/A | N/A
		0x180215FF4 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180215FF6 mov rcx,[181872ED0h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468087504 | None ||| N/A | N/A
		0x180215FFD call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180216002 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180216005 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180216008 je short 0000000180216022h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021600A mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18021600D mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180216010 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x180216014 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180216019 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021601C je near ptr 0000000180216549h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180216022 cmp dword ptr [rdi+18h],1Fh		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 31
		0x180216026 jbe near ptr 000000018021655Ch		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021602C mov [rdi+118h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 280 | None ||| N/A | N/A
		0x180216033 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180216035 mov rcx,[181872EF0h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468087536 | None ||| N/A | N/A
		0x18021603C call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180216041 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180216044 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180216047 je short 0000000180216061h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180216049 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18021604C mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021604F mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x180216053 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180216058 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021605B je near ptr 000000018021656Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180216061 cmp dword ptr [rdi+18h],20h		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 32
		0x180216065 jbe near ptr 0000000180216582h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021606B mov [rdi+120h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 288 | None ||| N/A | N/A
		0x180216072 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180216074 mov rcx,[181872F28h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468087592 | None ||| N/A | N/A
		0x18021607B call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180216080 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180216083 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180216086 je short 00000001802160A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180216088 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18021608B mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021608E mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x180216092 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180216097 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021609A je near ptr 0000000180216595h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802160A0 cmp dword ptr [rdi+18h],21h		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 33
		0x1802160A4 jbe near ptr 00000001802165A8h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802160AA mov [rdi+128h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 296 | None ||| N/A | N/A
		0x1802160B1 mov rax,[18189B9D0h]		; DEBUG: {Register}/RAX {Memory}/None ||| RIP | 6468254160 | None ||| N/A | N/A
		0x1802160B8 mov rbx,[rsp+30h]		; DEBUG: {Register}/RBX {Memory}/None ||| RSP | 48 | None ||| N/A | N/A
		0x1802160BD mov rcx,[rax+0B8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RAX | 184 | None ||| N/A | N/A
		0x1802160C4 mov [rcx],rdi		; DEBUG: {Memory}/None {Register}/RDI ||| RCX | 0 | None ||| N/A | N/A
		0x1802160C7 add rsp,20h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 32
		0x1802160CB pop rdi		; DEBUG: {Register}/RDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1802160CC ret		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1802160CD xor ecx,ecx		; DEBUG: {Register}/ECX {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x1802160CF call 000000018012BDA0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802160D4 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1802160D5 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802160DA mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1802160DD xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1802160E0 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1802160E2 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802160E7 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1802160FB call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180216100 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180216103 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x180216106 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180216108 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021610D int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180216121 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180216126 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180216129 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18021612C xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021612E call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180216133 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180216147 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021614C mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021614F xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x180216152 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180216154 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180216159 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18021616D call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180216172 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180216175 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x180216178 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021617A call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021617F int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180216193 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180216198 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021619B xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18021619E xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1802161A0 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802161A5 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1802161B9 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802161BE mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1802161C1 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1802161C4 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1802161C6 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802161CB int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1802161DF call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802161E4 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1802161E7 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1802161EA xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1802161EC call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802161F1 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180216205 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021620A mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021620D xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x180216210 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180216212 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180216217 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18021622B call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180216230 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180216233 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x180216236 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180216238 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021623D int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180216251 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180216256 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180216259 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18021625C xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021625E call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180216263 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180216277 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021627C mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021627F xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x180216282 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180216284 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180216289 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18021629D call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802162A2 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1802162A5 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1802162A8 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1802162AA call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802162AF int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1802162C3 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802162C8 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1802162CB xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1802162CE xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1802162D0 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802162D5 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1802162E9 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802162EE mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1802162F1 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1802162F4 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1802162F6 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802162FB int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18021630F call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180216314 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180216317 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18021631A xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021631C call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180216321 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180216335 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021633A mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021633D xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x180216340 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180216342 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180216347 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18021635B call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180216360 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180216363 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x180216366 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180216368 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021636D int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180216381 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180216386 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180216389 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18021638C xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021638E call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180216393 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1802163A7 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802163AC mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1802163AF xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1802163B2 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1802163B4 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802163B9 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1802163CD call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802163D2 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1802163D5 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1802163D8 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1802163DA call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802163DF int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1802163F3 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802163F8 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1802163FB xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1802163FE xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180216400 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180216405 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180216419 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021641E mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180216421 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x180216424 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180216426 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021642B int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18021643F call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180216444 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180216447 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18021644A xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021644C call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180216451 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180216465 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021646A mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021646D xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x180216470 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180216472 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180216477 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18021648B call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180216490 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180216493 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x180216496 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180216498 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021649D int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1802164B1 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802164B6 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1802164B9 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1802164BC xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1802164BE call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802164C3 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1802164D7 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802164DC mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1802164DF xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1802164E2 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1802164E4 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802164E9 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1802164FD call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180216502 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180216505 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x180216508 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021650A call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021650F int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180216523 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180216528 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021652B xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18021652E xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180216530 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180216535 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180216549 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021654E mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180216551 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x180216554 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180216556 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021655B int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18021656F call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180216574 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180216577 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18021657A xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021657C call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180216581 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180216595 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021659A mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021659D xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1802165A0 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1802165A2 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802165A7 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Static Method System.Void C020_SideQuest_Define::.cctor():
		End of function at 0x1802165A8
		Absolute End is at 0x1802165A8
		Identified Jump Destination addresses:

		0x180215855: Saves the content of rdi to the stack
		0x18021585A: Compares {Unknown Global at 0x18183D2CC, first ten bytes are [0 0 0 0 0 0 0 0 0 0], or as chars "          "} and 0
		0x180215861: Jumps to 0x180215875 if {Unknown Global at 0x18183D2CC, first ten bytes are [0 0 0 0 0 0 0 0 0 0], or as chars "          "} != 0

		0x180215863: Loads string "è" into register rcx as constant {'constant3' (constant value of type Cpp2IL.Core.Analysis.ResultModels.Il2CppString)}
		0x180215869: Attempts to load the il2cpp metadata for this method (method id 0) and init it cpp-side.

		0x180215875: Loads the type definition for managed type System.Type[] as a constant "Type[]" in rcx
		0x18021587C: [!] Writes the constant 0x23 into operand 35 (type UInt64) in register rdx
		0x180215881: [!] Allocates an array of type System.Type[] of size 35 and stores the result as local0 in register rax

		0x180215886: Loads the type definition for managed type System.Type as a constant "Type" in rcx
		0x18021588D: Copies {'local0' (type System.Type[])} from rax into rdi
		0x180215890: Loads the type definition for managed type ESerifSideQ_Pol_C020_1000 as a constant "ESerifSideQ_Pol_C020_1000" in rbx
		0x180215897: Compares "{il2cpp field on {'Type' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" and 2
		0x18021589E: Jumps to 0x1802158AE if "{il2cpp field on {'Type' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" equals 2

		0x1802158A0: Compares "{il2cpp field on {'Type' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" and 0
		0x1802158A7: Jumps to 0x1802158AE if "{il2cpp field on {'Type' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" != 0

		0x1802158A9: Calls the il2cpp cctor for the type System.Type
		0x1802158B0: Copies {'ESerifSideQ_Pol_C020_1000' (constant value of type Mono.Cecil.TypeReference)} from rbx into rcx
		0x1802158B3: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C020_1000' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle' (type System.Type)}

		0x1802158B8: Copies {'typeFromHandle' (type System.Type)} from rax into rbx
		0x1802158BB: [!] Compares {'local0' (type System.Type[])} and 0
		0x1802158BE: Jumps to 0x1802160CD (which throws a NRE) if local0 equals 0. Implicitly present in managed code, so ignored here.
		0x1802158C4: [!] Compares {'typeFromHandle' (type System.Type)} and 0
		0x1802158C7: Jumps to 0x1802158E1 (which is an if statement's body) if typeFromHandle equals 0 ;  - Increasing indentation - is standard if, unimportant is False

		0x1802158C9: Loads the class pointer from local0 into a constant constant14 in register rdx
		0x1802158CC: Copies {'typeFromHandle' (type System.Type)} from rax into rcx
		0x1802158CF: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x1802158D8: [!] Compares {'typeFromHandle' (type System.Type)} and 0
		0x1802158DB: Jumps to 0x1802160D5 if typeFromHandle equals 0 ;  - This is probably a goto, jumping to 0x1802160D5 which is after end of current block @ 0x1802158E1 (started at 0x1802158C9)

		0x1802158E1: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 1
		0x1802158E5: Jumps to 0x1802160E8 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 1. Implicitly present in managed code, so ignored here.
		0x1802158EB: Sets the value at offset 1 in array local0 to {'typeFromHandle' (type System.Type)}
		0x1802158F1: Loads the type definition for managed type ESerifSideQ_Pol_C020_1001 as a constant "ESerifSideQ_Pol_C020_1001" in rcx
		0x1802158F8: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C020_1001' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle2' (type System.Type)}

		0x1802158FD: Copies {'typeFromHandle2' (type System.Type)} from rax into rbx
		0x180215900: [!] Compares {'typeFromHandle2' (type System.Type)} and 0
		0x180215903: Jumps to 0x18021591D if typeFromHandle2 equals 0 ;  - This is probably a goto, jumping to 0x18021591D which is after end of current block @ 0x1802158E1 (started at 0x1802158C9)

		0x180215905: Loads the class pointer from local0 into a constant constant19 in register rdx
		0x180215908: Copies {'typeFromHandle2' (type System.Type)} from rax into rcx
		0x18021590B: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x180215914: [!] Compares {'typeFromHandle2' (type System.Type)} and 0
		0x180215917: Jumps to 0x1802160FB if typeFromHandle2 equals 0 ;  - This is probably a goto, jumping to 0x1802160FB which is after end of current block @ 0x1802158E1 (started at 0x1802158C9)

		0x18021591D: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 2
		0x180215921: Jumps to 0x18021610E (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 2. Implicitly present in managed code, so ignored here.
		0x180215927: Sets the value at offset 2 in array local0 to {'typeFromHandle2' (type System.Type)}
		0x18021592D: Loads the type definition for managed type ESerifSideQ_Pol_C020_1002 as a constant "ESerifSideQ_Pol_C020_1002" in rcx
		0x180215934: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C020_1002' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle3' (type System.Type)}

		0x180215939: Copies {'typeFromHandle3' (type System.Type)} from rax into rbx
		0x18021593C: [!] Compares {'typeFromHandle3' (type System.Type)} and 0
		0x18021593F: Jumps to 0x180215959 if typeFromHandle3 equals 0 ;  - This is probably a goto, jumping to 0x180215959 which is after end of current block @ 0x1802158E1 (started at 0x1802158C9)

		0x180215941: Loads the class pointer from local0 into a constant constant24 in register rdx
		0x180215944: Copies {'typeFromHandle3' (type System.Type)} from rax into rcx
		0x180215947: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x180215950: [!] Compares {'typeFromHandle3' (type System.Type)} and 0
		0x180215953: Jumps to 0x180216121 if typeFromHandle3 equals 0 ;  - This is probably a goto, jumping to 0x180216121 which is after end of current block @ 0x1802158E1 (started at 0x1802158C9)

		0x180215959: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 3
		0x18021595D: Jumps to 0x180216134 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 3. Implicitly present in managed code, so ignored here.
		0x180215963: Sets the value at offset 3 in array local0 to {'typeFromHandle3' (type System.Type)}
		0x180215969: Loads the type definition for managed type ESerifSideQ_Pol_C020_1003 as a constant "ESerifSideQ_Pol_C020_1003" in rcx
		0x180215970: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C020_1003' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle4' (type System.Type)}

		0x180215975: Copies {'typeFromHandle4' (type System.Type)} from rax into rbx
		0x180215978: [!] Compares {'typeFromHandle4' (type System.Type)} and 0
		0x18021597B: Jumps to 0x180215995 if typeFromHandle4 equals 0 ;  - This is probably a goto, jumping to 0x180215995 which is after end of current block @ 0x1802158E1 (started at 0x1802158C9)

		0x18021597D: Loads the class pointer from local0 into a constant constant29 in register rdx
		0x180215980: Copies {'typeFromHandle4' (type System.Type)} from rax into rcx
		0x180215983: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18021598C: [!] Compares {'typeFromHandle4' (type System.Type)} and 0
		0x18021598F: Jumps to 0x180216147 if typeFromHandle4 equals 0 ;  - This is probably a goto, jumping to 0x180216147 which is after end of current block @ 0x1802158E1 (started at 0x1802158C9)

		0x180215995: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 4
		0x180215999: Jumps to 0x18021615A (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 4. Implicitly present in managed code, so ignored here.
		0x18021599F: Sets the value at offset 4 in array local0 to {'typeFromHandle4' (type System.Type)}
		0x1802159A5: Loads the type definition for managed type ESerifSideQ_Pol_C020_1004 as a constant "ESerifSideQ_Pol_C020_1004" in rcx
		0x1802159AC: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C020_1004' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle5' (type System.Type)}

		0x1802159B1: Copies {'typeFromHandle5' (type System.Type)} from rax into rbx
		0x1802159B4: [!] Compares {'typeFromHandle5' (type System.Type)} and 0
		0x1802159B7: Jumps to 0x1802159D1 if typeFromHandle5 equals 0 ;  - This is probably a goto, jumping to 0x1802159D1 which is after end of current block @ 0x1802158E1 (started at 0x1802158C9)

		0x1802159B9: Loads the class pointer from local0 into a constant constant34 in register rdx
		0x1802159BC: Copies {'typeFromHandle5' (type System.Type)} from rax into rcx
		0x1802159BF: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x1802159C8: [!] Compares {'typeFromHandle5' (type System.Type)} and 0
		0x1802159CB: Jumps to 0x18021616D if typeFromHandle5 equals 0 ;  - This is probably a goto, jumping to 0x18021616D which is after end of current block @ 0x1802158E1 (started at 0x1802158C9)

		0x1802159D1: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 5
		0x1802159D5: Jumps to 0x180216180 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 5. Implicitly present in managed code, so ignored here.
		0x1802159DB: Sets the value at offset 5 in array local0 to {'typeFromHandle5' (type System.Type)}
		0x1802159E1: Loads the type definition for managed type ESerifSideQ_Pol_C020_1005 as a constant "ESerifSideQ_Pol_C020_1005" in rcx
		0x1802159E8: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C020_1005' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle6' (type System.Type)}

		0x1802159ED: Copies {'typeFromHandle6' (type System.Type)} from rax into rbx
		0x1802159F0: [!] Compares {'typeFromHandle6' (type System.Type)} and 0
		0x1802159F3: Jumps to 0x180215A0D if typeFromHandle6 equals 0 ;  - This is probably a goto, jumping to 0x180215A0D which is after end of current block @ 0x1802158E1 (started at 0x1802158C9)

		0x1802159F5: Loads the class pointer from local0 into a constant constant39 in register rdx
		0x1802159F8: Copies {'typeFromHandle6' (type System.Type)} from rax into rcx
		0x1802159FB: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x180215A04: [!] Compares {'typeFromHandle6' (type System.Type)} and 0
		0x180215A07: Jumps to 0x180216193 if typeFromHandle6 equals 0 ;  - This is probably a goto, jumping to 0x180216193 which is after end of current block @ 0x1802158E1 (started at 0x1802158C9)

		0x180215A0D: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 6
		0x180215A11: Jumps to 0x1802161A6 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 6. Implicitly present in managed code, so ignored here.
		0x180215A17: Sets the value at offset 6 in array local0 to {'typeFromHandle6' (type System.Type)}
		0x180215A1D: Loads the type definition for managed type ESerifSideQ_Pol_C020_1006 as a constant "ESerifSideQ_Pol_C020_1006" in rcx
		0x180215A24: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C020_1006' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle7' (type System.Type)}

		0x180215A29: Copies {'typeFromHandle7' (type System.Type)} from rax into rbx
		0x180215A2C: [!] Compares {'typeFromHandle7' (type System.Type)} and 0
		0x180215A2F: Jumps to 0x180215A49 if typeFromHandle7 equals 0 ;  - This is probably a goto, jumping to 0x180215A49 which is after end of current block @ 0x1802158E1 (started at 0x1802158C9)

		0x180215A31: Loads the class pointer from local0 into a constant constant44 in register rdx
		0x180215A34: Copies {'typeFromHandle7' (type System.Type)} from rax into rcx
		0x180215A37: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x180215A40: [!] Compares {'typeFromHandle7' (type System.Type)} and 0
		0x180215A43: Jumps to 0x1802161B9 if typeFromHandle7 equals 0 ;  - This is probably a goto, jumping to 0x1802161B9 which is after end of current block @ 0x1802158E1 (started at 0x1802158C9)

		0x180215A49: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 7
		0x180215A4D: Jumps to 0x1802161CC (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 7. Implicitly present in managed code, so ignored here.
		0x180215A53: Sets the value at offset 7 in array local0 to {'typeFromHandle7' (type System.Type)}
		0x180215A59: Loads the type definition for managed type ESerifSideQ_Pol_C020_1007 as a constant "ESerifSideQ_Pol_C020_1007" in rcx
		0x180215A60: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C020_1007' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle8' (type System.Type)}

		0x180215A65: Copies {'typeFromHandle8' (type System.Type)} from rax into rbx
		0x180215A68: [!] Compares {'typeFromHandle8' (type System.Type)} and 0
		0x180215A6B: Jumps to 0x180215A85 if typeFromHandle8 equals 0 ;  - This is probably a goto, jumping to 0x180215A85 which is after end of current block @ 0x1802158E1 (started at 0x1802158C9)

		0x180215A6D: Loads the class pointer from local0 into a constant constant49 in register rdx
		0x180215A70: Copies {'typeFromHandle8' (type System.Type)} from rax into rcx
		0x180215A73: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x180215A7C: [!] Compares {'typeFromHandle8' (type System.Type)} and 0
		0x180215A7F: Jumps to 0x1802161DF if typeFromHandle8 equals 0 ;  - This is probably a goto, jumping to 0x1802161DF which is after end of current block @ 0x1802158E1 (started at 0x1802158C9)

		0x180215A85: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 8
		0x180215A89: Jumps to 0x1802161F2 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 8. Implicitly present in managed code, so ignored here.
		0x180215A8F: Sets the value at offset 8 in array local0 to {'typeFromHandle8' (type System.Type)}
		0x180215A95: Loads the type definition for managed type ESerifSideQ_Pol_C020_1008 as a constant "ESerifSideQ_Pol_C020_1008" in rcx
		0x180215A9C: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C020_1008' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle9' (type System.Type)}

		0x180215AA1: Copies {'typeFromHandle9' (type System.Type)} from rax into rbx
		0x180215AA4: [!] Compares {'typeFromHandle9' (type System.Type)} and 0
		0x180215AA7: Jumps to 0x180215AC1 if typeFromHandle9 equals 0 ;  - This is probably a goto, jumping to 0x180215AC1 which is after end of current block @ 0x1802158E1 (started at 0x1802158C9)

		0x180215AA9: Loads the class pointer from local0 into a constant constant54 in register rdx
		0x180215AAC: Copies {'typeFromHandle9' (type System.Type)} from rax into rcx
		0x180215AAF: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x180215AB8: [!] Compares {'typeFromHandle9' (type System.Type)} and 0
		0x180215ABB: Jumps to 0x180216205 if typeFromHandle9 equals 0 ;  - This is probably a goto, jumping to 0x180216205 which is after end of current block @ 0x1802158E1 (started at 0x1802158C9)

		0x180215AC1: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 9
		0x180215AC5: Jumps to 0x180216218 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 9. Implicitly present in managed code, so ignored here.
		0x180215ACB: Sets the value at offset 9 in array local0 to {'typeFromHandle9' (type System.Type)}
		0x180215AD1: Loads the type definition for managed type ESerifSideQ_Pol_C020_1009 as a constant "ESerifSideQ_Pol_C020_1009" in rcx
		0x180215AD8: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C020_1009' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle10' (type System.Type)}

		0x180215ADD: Copies {'typeFromHandle10' (type System.Type)} from rax into rbx
		0x180215AE0: [!] Compares {'typeFromHandle10' (type System.Type)} and 0
		0x180215AE3: Jumps to 0x180215AFD if typeFromHandle10 equals 0 ;  - This is probably a goto, jumping to 0x180215AFD which is after end of current block @ 0x1802158E1 (started at 0x1802158C9)

		0x180215AE5: Loads the class pointer from local0 into a constant constant59 in register rdx
		0x180215AE8: Copies {'typeFromHandle10' (type System.Type)} from rax into rcx
		0x180215AEB: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x180215AF4: [!] Compares {'typeFromHandle10' (type System.Type)} and 0
		0x180215AF7: Jumps to 0x18021622B if typeFromHandle10 equals 0 ;  - This is probably a goto, jumping to 0x18021622B which is after end of current block @ 0x1802158E1 (started at 0x1802158C9)

		0x180215AFD: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 10
		0x180215B01: Jumps to 0x18021623E (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 10. Implicitly present in managed code, so ignored here.
		0x180215B07: Sets the value at offset 10 in array local0 to {'typeFromHandle10' (type System.Type)}
		0x180215B0D: Loads the type definition for managed type ESerifSideQ_Pol_C020_1010 as a constant "ESerifSideQ_Pol_C020_1010" in rcx
		0x180215B14: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C020_1010' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle11' (type System.Type)}

		0x180215B19: Copies {'typeFromHandle11' (type System.Type)} from rax into rbx
		0x180215B1C: [!] Compares {'typeFromHandle11' (type System.Type)} and 0
		0x180215B1F: Jumps to 0x180215B39 if typeFromHandle11 equals 0 ;  - This is probably a goto, jumping to 0x180215B39 which is after end of current block @ 0x1802158E1 (started at 0x1802158C9)

		0x180215B21: Loads the class pointer from local0 into a constant constant64 in register rdx
		0x180215B24: Copies {'typeFromHandle11' (type System.Type)} from rax into rcx
		0x180215B27: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x180215B30: [!] Compares {'typeFromHandle11' (type System.Type)} and 0
		0x180215B33: Jumps to 0x180216251 if typeFromHandle11 equals 0 ;  - This is probably a goto, jumping to 0x180216251 which is after end of current block @ 0x1802158E1 (started at 0x1802158C9)

		0x180215B39: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 11
		0x180215B3D: Jumps to 0x180216264 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 11. Implicitly present in managed code, so ignored here.
		0x180215B43: Sets the value at offset 11 in array local0 to {'typeFromHandle11' (type System.Type)}
		0x180215B49: Loads the type definition for managed type ESerifSideQ_Pol_C020_1011 as a constant "ESerifSideQ_Pol_C020_1011" in rcx
		0x180215B50: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C020_1011' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle12' (type System.Type)}

		0x180215B55: Copies {'typeFromHandle12' (type System.Type)} from rax into rbx
		0x180215B58: [!] Compares {'typeFromHandle12' (type System.Type)} and 0
		0x180215B5B: Jumps to 0x180215B75 if typeFromHandle12 equals 0 ;  - This is probably a goto, jumping to 0x180215B75 which is after end of current block @ 0x1802158E1 (started at 0x1802158C9)

		0x180215B5D: Loads the class pointer from local0 into a constant constant69 in register rdx
		0x180215B60: Copies {'typeFromHandle12' (type System.Type)} from rax into rcx
		0x180215B63: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x180215B6C: [!] Compares {'typeFromHandle12' (type System.Type)} and 0
		0x180215B6F: Jumps to 0x180216277 if typeFromHandle12 equals 0 ;  - This is probably a goto, jumping to 0x180216277 which is after end of current block @ 0x1802158E1 (started at 0x1802158C9)

		0x180215B75: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 12
		0x180215B79: Jumps to 0x18021628A (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 12. Implicitly present in managed code, so ignored here.
		0x180215B7F: Sets the value at offset 12 in array local0 to {'typeFromHandle12' (type System.Type)}
		0x180215B88: Loads the type definition for managed type ESerifSideQ_Pol_C020_1012 as a constant "ESerifSideQ_Pol_C020_1012" in rcx
		0x180215B8F: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C020_1012' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle13' (type System.Type)}

		0x180215B94: Copies {'typeFromHandle13' (type System.Type)} from rax into rbx
		0x180215B97: [!] Compares {'typeFromHandle13' (type System.Type)} and 0
		0x180215B9A: Jumps to 0x180215BB4 if typeFromHandle13 equals 0 ;  - This is probably a goto, jumping to 0x180215BB4 which is after end of current block @ 0x1802158E1 (started at 0x1802158C9)

		0x180215B9C: Loads the class pointer from local0 into a constant constant74 in register rdx
		0x180215B9F: Copies {'typeFromHandle13' (type System.Type)} from rax into rcx
		0x180215BA2: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x180215BAB: [!] Compares {'typeFromHandle13' (type System.Type)} and 0
		0x180215BAE: Jumps to 0x18021629D if typeFromHandle13 equals 0 ;  - This is probably a goto, jumping to 0x18021629D which is after end of current block @ 0x1802158E1 (started at 0x1802158C9)

		0x180215BB4: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 13
		0x180215BB8: Jumps to 0x1802162B0 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 13. Implicitly present in managed code, so ignored here.
		0x180215BBE: Sets the value at offset 13 in array local0 to {'typeFromHandle13' (type System.Type)}
		0x180215BC7: Loads the type definition for managed type ESerifSideQ_Pol_C020_1013 as a constant "ESerifSideQ_Pol_C020_1013" in rcx
		0x180215BCE: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C020_1013' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle14' (type System.Type)}

		0x180215BD3: Copies {'typeFromHandle14' (type System.Type)} from rax into rbx
		0x180215BD6: [!] Compares {'typeFromHandle14' (type System.Type)} and 0
		0x180215BD9: Jumps to 0x180215BF3 if typeFromHandle14 equals 0 ;  - This is probably a goto, jumping to 0x180215BF3 which is after end of current block @ 0x1802158E1 (started at 0x1802158C9)

		0x180215BDB: Loads the class pointer from local0 into a constant constant79 in register rdx
		0x180215BDE: Copies {'typeFromHandle14' (type System.Type)} from rax into rcx
		0x180215BE1: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x180215BEA: [!] Compares {'typeFromHandle14' (type System.Type)} and 0
		0x180215BED: Jumps to 0x1802162C3 if typeFromHandle14 equals 0 ;  - This is probably a goto, jumping to 0x1802162C3 which is after end of current block @ 0x1802158E1 (started at 0x1802158C9)

		0x180215BF3: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 14
		0x180215BF7: Jumps to 0x1802162D6 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 14. Implicitly present in managed code, so ignored here.
		0x180215BFD: Sets the value at offset 14 in array local0 to {'typeFromHandle14' (type System.Type)}
		0x180215C06: Loads the type definition for managed type ESerifSideQ_Pol_C020_1013_1 as a constant "ESerifSideQ_Pol_C020_1013_1" in rcx
		0x180215C0D: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C020_1013_1' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle15' (type System.Type)}

		0x180215C12: Copies {'typeFromHandle15' (type System.Type)} from rax into rbx
		0x180215C15: [!] Compares {'typeFromHandle15' (type System.Type)} and 0
		0x180215C18: Jumps to 0x180215C32 if typeFromHandle15 equals 0 ;  - This is probably a goto, jumping to 0x180215C32 which is after end of current block @ 0x1802158E1 (started at 0x1802158C9)

		0x180215C1A: Loads the class pointer from local0 into a constant constant84 in register rdx
		0x180215C1D: Copies {'typeFromHandle15' (type System.Type)} from rax into rcx
		0x180215C20: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x180215C29: [!] Compares {'typeFromHandle15' (type System.Type)} and 0
		0x180215C2C: Jumps to 0x1802162E9 if typeFromHandle15 equals 0 ;  - This is probably a goto, jumping to 0x1802162E9 which is after end of current block @ 0x1802158E1 (started at 0x1802158C9)

		0x180215C32: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 15
		0x180215C36: Jumps to 0x1802162FC (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 15. Implicitly present in managed code, so ignored here.
		0x180215C3C: Sets the value at offset 15 in array local0 to {'typeFromHandle15' (type System.Type)}
		0x180215C45: Loads the type definition for managed type ESerifSideQ_Pol_C020_2000 as a constant "ESerifSideQ_Pol_C020_2000" in rcx
		0x180215C4C: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C020_2000' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle16' (type System.Type)}

		0x180215C51: Copies {'typeFromHandle16' (type System.Type)} from rax into rbx
		0x180215C54: [!] Compares {'typeFromHandle16' (type System.Type)} and 0
		0x180215C57: Jumps to 0x180215C71 if typeFromHandle16 equals 0 ;  - This is probably a goto, jumping to 0x180215C71 which is after end of current block @ 0x1802158E1 (started at 0x1802158C9)

		0x180215C59: Loads the class pointer from local0 into a constant constant89 in register rdx
		0x180215C5C: Copies {'typeFromHandle16' (type System.Type)} from rax into rcx
		0x180215C5F: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x180215C68: [!] Compares {'typeFromHandle16' (type System.Type)} and 0
		0x180215C6B: Jumps to 0x18021630F if typeFromHandle16 equals 0 ;  - This is probably a goto, jumping to 0x18021630F which is after end of current block @ 0x1802158E1 (started at 0x1802158C9)

		0x180215C71: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 16
		0x180215C75: Jumps to 0x180216322 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 16. Implicitly present in managed code, so ignored here.
		0x180215C7B: Sets the value at offset 16 in array local0 to {'typeFromHandle16' (type System.Type)}
		0x180215C84: Loads the type definition for managed type ESerifSideQ_Pol_C020_2001 as a constant "ESerifSideQ_Pol_C020_2001" in rcx
		0x180215C8B: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C020_2001' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle17' (type System.Type)}

		0x180215C90: Copies {'typeFromHandle17' (type System.Type)} from rax into rbx
		0x180215C93: [!] Compares {'typeFromHandle17' (type System.Type)} and 0
		0x180215C96: Jumps to 0x180215CB0 if typeFromHandle17 equals 0 ;  - This is probably a goto, jumping to 0x180215CB0 which is after end of current block @ 0x1802158E1 (started at 0x1802158C9)

		0x180215C98: Loads the class pointer from local0 into a constant constant94 in register rdx
		0x180215C9B: Copies {'typeFromHandle17' (type System.Type)} from rax into rcx
		0x180215C9E: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x180215CA7: [!] Compares {'typeFromHandle17' (type System.Type)} and 0
		0x180215CAA: Jumps to 0x180216335 if typeFromHandle17 equals 0 ;  - This is probably a goto, jumping to 0x180216335 which is after end of current block @ 0x1802158E1 (started at 0x1802158C9)

		0x180215CB0: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 17
		0x180215CB4: Jumps to 0x180216348 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 17. Implicitly present in managed code, so ignored here.
		0x180215CBA: Sets the value at offset 17 in array local0 to {'typeFromHandle17' (type System.Type)}
		0x180215CC3: Loads the type definition for managed type ESerifSideQ_Pol_C020_2002 as a constant "ESerifSideQ_Pol_C020_2002" in rcx
		0x180215CCA: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C020_2002' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle18' (type System.Type)}

		0x180215CCF: Copies {'typeFromHandle18' (type System.Type)} from rax into rbx
		0x180215CD2: [!] Compares {'typeFromHandle18' (type System.Type)} and 0
		0x180215CD5: Jumps to 0x180215CEF if typeFromHandle18 equals 0 ;  - This is probably a goto, jumping to 0x180215CEF which is after end of current block @ 0x1802158E1 (started at 0x1802158C9)

		0x180215CD7: Loads the class pointer from local0 into a constant constant99 in register rdx
		0x180215CDA: Copies {'typeFromHandle18' (type System.Type)} from rax into rcx
		0x180215CDD: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x180215CE6: [!] Compares {'typeFromHandle18' (type System.Type)} and 0
		0x180215CE9: Jumps to 0x18021635B if typeFromHandle18 equals 0 ;  - This is probably a goto, jumping to 0x18021635B which is after end of current block @ 0x1802158E1 (started at 0x1802158C9)

		0x180215CEF: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 18
		0x180215CF3: Jumps to 0x18021636E (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 18. Implicitly present in managed code, so ignored here.
		0x180215CF9: Sets the value at offset 18 in array local0 to {'typeFromHandle18' (type System.Type)}
		0x180215D02: Loads the type definition for managed type ESerifSideQ_Pol_C020_2003 as a constant "ESerifSideQ_Pol_C020_2003" in rcx
		0x180215D09: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C020_2003' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle19' (type System.Type)}

		0x180215D0E: Copies {'typeFromHandle19' (type System.Type)} from rax into rbx
		0x180215D11: [!] Compares {'typeFromHandle19' (type System.Type)} and 0
		0x180215D14: Jumps to 0x180215D2E if typeFromHandle19 equals 0 ;  - This is probably a goto, jumping to 0x180215D2E which is after end of current block @ 0x1802158E1 (started at 0x1802158C9)

		0x180215D16: Loads the class pointer from local0 into a constant constant104 in register rdx
		0x180215D19: Copies {'typeFromHandle19' (type System.Type)} from rax into rcx
		0x180215D1C: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x180215D25: [!] Compares {'typeFromHandle19' (type System.Type)} and 0
		0x180215D28: Jumps to 0x180216381 if typeFromHandle19 equals 0 ;  - This is probably a goto, jumping to 0x180216381 which is after end of current block @ 0x1802158E1 (started at 0x1802158C9)

		0x180215D2E: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 19
		0x180215D32: Jumps to 0x180216394 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 19. Implicitly present in managed code, so ignored here.
		0x180215D38: Sets the value at offset 19 in array local0 to {'typeFromHandle19' (type System.Type)}
		0x180215D41: Loads the type definition for managed type ESerifSideQ_Pol_C020_2004 as a constant "ESerifSideQ_Pol_C020_2004" in rcx
		0x180215D48: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C020_2004' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle20' (type System.Type)}

		0x180215D4D: Copies {'typeFromHandle20' (type System.Type)} from rax into rbx
		0x180215D50: [!] Compares {'typeFromHandle20' (type System.Type)} and 0
		0x180215D53: Jumps to 0x180215D6D if typeFromHandle20 equals 0 ;  - This is probably a goto, jumping to 0x180215D6D which is after end of current block @ 0x1802158E1 (started at 0x1802158C9)

		0x180215D55: Loads the class pointer from local0 into a constant constant109 in register rdx
		0x180215D58: Copies {'typeFromHandle20' (type System.Type)} from rax into rcx
		0x180215D5B: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x180215D64: [!] Compares {'typeFromHandle20' (type System.Type)} and 0
		0x180215D67: Jumps to 0x1802163A7 if typeFromHandle20 equals 0 ;  - This is probably a goto, jumping to 0x1802163A7 which is after end of current block @ 0x1802158E1 (started at 0x1802158C9)

		0x180215D6D: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 20
		0x180215D71: Jumps to 0x1802163BA (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 20. Implicitly present in managed code, so ignored here.
		0x180215D77: Sets the value at offset 20 in array local0 to {'typeFromHandle20' (type System.Type)}
		0x180215D80: Loads the type definition for managed type ESerifSideQ_Pol_C020_2004_1 as a constant "ESerifSideQ_Pol_C020_2004_1" in rcx
		0x180215D87: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C020_2004_1' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle21' (type System.Type)}

		0x180215D8C: Copies {'typeFromHandle21' (type System.Type)} from rax into rbx
		0x180215D8F: [!] Compares {'typeFromHandle21' (type System.Type)} and 0
		0x180215D92: Jumps to 0x180215DAC if typeFromHandle21 equals 0 ;  - This is probably a goto, jumping to 0x180215DAC which is after end of current block @ 0x1802158E1 (started at 0x1802158C9)

		0x180215D94: Loads the class pointer from local0 into a constant constant114 in register rdx
		0x180215D97: Copies {'typeFromHandle21' (type System.Type)} from rax into rcx
		0x180215D9A: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x180215DA3: [!] Compares {'typeFromHandle21' (type System.Type)} and 0
		0x180215DA6: Jumps to 0x1802163CD if typeFromHandle21 equals 0 ;  - This is probably a goto, jumping to 0x1802163CD which is after end of current block @ 0x1802158E1 (started at 0x1802158C9)

		0x180215DAC: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 21
		0x180215DB0: Jumps to 0x1802163E0 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 21. Implicitly present in managed code, so ignored here.
		0x180215DB6: Sets the value at offset 21 in array local0 to {'typeFromHandle21' (type System.Type)}
		0x180215DBF: Loads the type definition for managed type ESerifSideQ_Pol_C020_3000 as a constant "ESerifSideQ_Pol_C020_3000" in rcx
		0x180215DC6: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C020_3000' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle22' (type System.Type)}

		0x180215DCB: Copies {'typeFromHandle22' (type System.Type)} from rax into rbx
		0x180215DCE: [!] Compares {'typeFromHandle22' (type System.Type)} and 0
		0x180215DD1: Jumps to 0x180215DEB if typeFromHandle22 equals 0 ;  - This is probably a goto, jumping to 0x180215DEB which is after end of current block @ 0x1802158E1 (started at 0x1802158C9)

		0x180215DD3: Loads the class pointer from local0 into a constant constant119 in register rdx
		0x180215DD6: Copies {'typeFromHandle22' (type System.Type)} from rax into rcx
		0x180215DD9: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x180215DE2: [!] Compares {'typeFromHandle22' (type System.Type)} and 0
		0x180215DE5: Jumps to 0x1802163F3 if typeFromHandle22 equals 0 ;  - This is probably a goto, jumping to 0x1802163F3 which is after end of current block @ 0x1802158E1 (started at 0x1802158C9)

		0x180215DEB: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 22
		0x180215DEF: Jumps to 0x180216406 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 22. Implicitly present in managed code, so ignored here.
		0x180215DF5: Sets the value at offset 22 in array local0 to {'typeFromHandle22' (type System.Type)}
		0x180215DFE: Loads the type definition for managed type ESerifSideQ_Pol_C020_3001 as a constant "ESerifSideQ_Pol_C020_3001" in rcx
		0x180215E05: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C020_3001' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle23' (type System.Type)}

		0x180215E0A: Copies {'typeFromHandle23' (type System.Type)} from rax into rbx
		0x180215E0D: [!] Compares {'typeFromHandle23' (type System.Type)} and 0
		0x180215E10: Jumps to 0x180215E2A if typeFromHandle23 equals 0 ;  - This is probably a goto, jumping to 0x180215E2A which is after end of current block @ 0x1802158E1 (started at 0x1802158C9)

		0x180215E12: Loads the class pointer from local0 into a constant constant124 in register rdx
		0x180215E15: Copies {'typeFromHandle23' (type System.Type)} from rax into rcx
		0x180215E18: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x180215E21: [!] Compares {'typeFromHandle23' (type System.Type)} and 0
		0x180215E24: Jumps to 0x180216419 if typeFromHandle23 equals 0 ;  - This is probably a goto, jumping to 0x180216419 which is after end of current block @ 0x1802158E1 (started at 0x1802158C9)

		0x180215E2A: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 23
		0x180215E2E: Jumps to 0x18021642C (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 23. Implicitly present in managed code, so ignored here.
		0x180215E34: Sets the value at offset 23 in array local0 to {'typeFromHandle23' (type System.Type)}
		0x180215E3D: Loads the type definition for managed type ESerifSideQ_Pol_C020_3002 as a constant "ESerifSideQ_Pol_C020_3002" in rcx
		0x180215E44: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C020_3002' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle24' (type System.Type)}

		0x180215E49: Copies {'typeFromHandle24' (type System.Type)} from rax into rbx
		0x180215E4C: [!] Compares {'typeFromHandle24' (type System.Type)} and 0
		0x180215E4F: Jumps to 0x180215E69 if typeFromHandle24 equals 0 ;  - This is probably a goto, jumping to 0x180215E69 which is after end of current block @ 0x1802158E1 (started at 0x1802158C9)

		0x180215E51: Loads the class pointer from local0 into a constant constant129 in register rdx
		0x180215E54: Copies {'typeFromHandle24' (type System.Type)} from rax into rcx
		0x180215E57: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x180215E60: [!] Compares {'typeFromHandle24' (type System.Type)} and 0
		0x180215E63: Jumps to 0x18021643F if typeFromHandle24 equals 0 ;  - This is probably a goto, jumping to 0x18021643F which is after end of current block @ 0x1802158E1 (started at 0x1802158C9)

		0x180215E69: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 24
		0x180215E6D: Jumps to 0x180216452 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 24. Implicitly present in managed code, so ignored here.
		0x180215E73: Sets the value at offset 24 in array local0 to {'typeFromHandle24' (type System.Type)}
		0x180215E7C: Loads the type definition for managed type ESerifSideQ_Pol_C020_3003 as a constant "ESerifSideQ_Pol_C020_3003" in rcx
		0x180215E83: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C020_3003' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle25' (type System.Type)}

		0x180215E88: Copies {'typeFromHandle25' (type System.Type)} from rax into rbx
		0x180215E8B: [!] Compares {'typeFromHandle25' (type System.Type)} and 0
		0x180215E8E: Jumps to 0x180215EA8 if typeFromHandle25 equals 0 ;  - This is probably a goto, jumping to 0x180215EA8 which is after end of current block @ 0x1802158E1 (started at 0x1802158C9)

		0x180215E90: Loads the class pointer from local0 into a constant constant134 in register rdx
		0x180215E93: Copies {'typeFromHandle25' (type System.Type)} from rax into rcx
		0x180215E96: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x180215E9F: [!] Compares {'typeFromHandle25' (type System.Type)} and 0
		0x180215EA2: Jumps to 0x180216465 if typeFromHandle25 equals 0 ;  - This is probably a goto, jumping to 0x180216465 which is after end of current block @ 0x1802158E1 (started at 0x1802158C9)

		0x180215EA8: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 25
		0x180215EAC: Jumps to 0x180216478 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 25. Implicitly present in managed code, so ignored here.
		0x180215EB2: Sets the value at offset 25 in array local0 to {'typeFromHandle25' (type System.Type)}
		0x180215EBB: Loads the type definition for managed type ESerifSideQ_Pol_C020_3004 as a constant "ESerifSideQ_Pol_C020_3004" in rcx
		0x180215EC2: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C020_3004' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle26' (type System.Type)}

		0x180215EC7: Copies {'typeFromHandle26' (type System.Type)} from rax into rbx
		0x180215ECA: [!] Compares {'typeFromHandle26' (type System.Type)} and 0
		0x180215ECD: Jumps to 0x180215EE7 if typeFromHandle26 equals 0 ;  - This is probably a goto, jumping to 0x180215EE7 which is after end of current block @ 0x1802158E1 (started at 0x1802158C9)

		0x180215ECF: Loads the class pointer from local0 into a constant constant139 in register rdx
		0x180215ED2: Copies {'typeFromHandle26' (type System.Type)} from rax into rcx
		0x180215ED5: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x180215EDE: [!] Compares {'typeFromHandle26' (type System.Type)} and 0
		0x180215EE1: Jumps to 0x18021648B if typeFromHandle26 equals 0 ;  - This is probably a goto, jumping to 0x18021648B which is after end of current block @ 0x1802158E1 (started at 0x1802158C9)

		0x180215EE7: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 26
		0x180215EEB: Jumps to 0x18021649E (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 26. Implicitly present in managed code, so ignored here.
		0x180215EF1: Sets the value at offset 26 in array local0 to {'typeFromHandle26' (type System.Type)}
		0x180215EFA: Loads the type definition for managed type ESerifSideQ_Pol_C020_3004_1 as a constant "ESerifSideQ_Pol_C020_3004_1" in rcx
		0x180215F01: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C020_3004_1' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle27' (type System.Type)}

		0x180215F06: Copies {'typeFromHandle27' (type System.Type)} from rax into rbx
		0x180215F09: [!] Compares {'typeFromHandle27' (type System.Type)} and 0
		0x180215F0C: Jumps to 0x180215F26 if typeFromHandle27 equals 0 ;  - This is probably a goto, jumping to 0x180215F26 which is after end of current block @ 0x1802158E1 (started at 0x1802158C9)

		0x180215F0E: Loads the class pointer from local0 into a constant constant144 in register rdx
		0x180215F11: Copies {'typeFromHandle27' (type System.Type)} from rax into rcx
		0x180215F14: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x180215F1D: [!] Compares {'typeFromHandle27' (type System.Type)} and 0
		0x180215F20: Jumps to 0x1802164B1 if typeFromHandle27 equals 0 ;  - This is probably a goto, jumping to 0x1802164B1 which is after end of current block @ 0x1802158E1 (started at 0x1802158C9)

		0x180215F26: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 27
		0x180215F2A: Jumps to 0x1802164C4 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 27. Implicitly present in managed code, so ignored here.
		0x180215F30: Sets the value at offset 27 in array local0 to {'typeFromHandle27' (type System.Type)}
		0x180215F39: Loads the type definition for managed type ESerifSideQ_Pol_C020_4000 as a constant "ESerifSideQ_Pol_C020_4000" in rcx
		0x180215F40: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C020_4000' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle28' (type System.Type)}

		0x180215F45: Copies {'typeFromHandle28' (type System.Type)} from rax into rbx
		0x180215F48: [!] Compares {'typeFromHandle28' (type System.Type)} and 0
		0x180215F4B: Jumps to 0x180215F65 if typeFromHandle28 equals 0 ;  - This is probably a goto, jumping to 0x180215F65 which is after end of current block @ 0x1802158E1 (started at 0x1802158C9)

		0x180215F4D: Loads the class pointer from local0 into a constant constant149 in register rdx
		0x180215F50: Copies {'typeFromHandle28' (type System.Type)} from rax into rcx
		0x180215F53: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x180215F5C: [!] Compares {'typeFromHandle28' (type System.Type)} and 0
		0x180215F5F: Jumps to 0x1802164D7 if typeFromHandle28 equals 0 ;  - This is probably a goto, jumping to 0x1802164D7 which is after end of current block @ 0x1802158E1 (started at 0x1802158C9)

		0x180215F65: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 28
		0x180215F69: Jumps to 0x1802164EA (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 28. Implicitly present in managed code, so ignored here.
		0x180215F6F: Sets the value at offset 28 in array local0 to {'typeFromHandle28' (type System.Type)}
		0x180215F78: Loads the type definition for managed type ESerifSideQ_Pol_C020_4001 as a constant "ESerifSideQ_Pol_C020_4001" in rcx
		0x180215F7F: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C020_4001' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle29' (type System.Type)}

		0x180215F84: Copies {'typeFromHandle29' (type System.Type)} from rax into rbx
		0x180215F87: [!] Compares {'typeFromHandle29' (type System.Type)} and 0
		0x180215F8A: Jumps to 0x180215FA4 if typeFromHandle29 equals 0 ;  - This is probably a goto, jumping to 0x180215FA4 which is after end of current block @ 0x1802158E1 (started at 0x1802158C9)

		0x180215F8C: Loads the class pointer from local0 into a constant constant154 in register rdx
		0x180215F8F: Copies {'typeFromHandle29' (type System.Type)} from rax into rcx
		0x180215F92: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x180215F9B: [!] Compares {'typeFromHandle29' (type System.Type)} and 0
		0x180215F9E: Jumps to 0x1802164FD if typeFromHandle29 equals 0 ;  - This is probably a goto, jumping to 0x1802164FD which is after end of current block @ 0x1802158E1 (started at 0x1802158C9)

		0x180215FA4: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 29
		0x180215FA8: Jumps to 0x180216510 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 29. Implicitly present in managed code, so ignored here.
		0x180215FAE: Sets the value at offset 29 in array local0 to {'typeFromHandle29' (type System.Type)}
		0x180215FB7: Loads the type definition for managed type ESerifSideQ_Pol_C020_4002 as a constant "ESerifSideQ_Pol_C020_4002" in rcx
		0x180215FBE: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C020_4002' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle30' (type System.Type)}

		0x180215FC3: Copies {'typeFromHandle30' (type System.Type)} from rax into rbx
		0x180215FC6: [!] Compares {'typeFromHandle30' (type System.Type)} and 0
		0x180215FC9: Jumps to 0x180215FE3 if typeFromHandle30 equals 0 ;  - This is probably a goto, jumping to 0x180215FE3 which is after end of current block @ 0x1802158E1 (started at 0x1802158C9)

		0x180215FCB: Loads the class pointer from local0 into a constant constant159 in register rdx
		0x180215FCE: Copies {'typeFromHandle30' (type System.Type)} from rax into rcx
		0x180215FD1: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x180215FDA: [!] Compares {'typeFromHandle30' (type System.Type)} and 0
		0x180215FDD: Jumps to 0x180216523 if typeFromHandle30 equals 0 ;  - This is probably a goto, jumping to 0x180216523 which is after end of current block @ 0x1802158E1 (started at 0x1802158C9)

		0x180215FE3: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 30
		0x180215FE7: Jumps to 0x180216536 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 30. Implicitly present in managed code, so ignored here.
		0x180215FED: Sets the value at offset 30 in array local0 to {'typeFromHandle30' (type System.Type)}
		0x180215FF6: Loads the type definition for managed type ESerifSideQ_Pol_C020_4003 as a constant "ESerifSideQ_Pol_C020_4003" in rcx
		0x180215FFD: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C020_4003' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle31' (type System.Type)}

		0x180216002: Copies {'typeFromHandle31' (type System.Type)} from rax into rbx
		0x180216005: [!] Compares {'typeFromHandle31' (type System.Type)} and 0
		0x180216008: Jumps to 0x180216022 if typeFromHandle31 equals 0 ;  - This is probably a goto, jumping to 0x180216022 which is after end of current block @ 0x1802158E1 (started at 0x1802158C9)

		0x18021600A: Loads the class pointer from local0 into a constant constant164 in register rdx
		0x18021600D: Copies {'typeFromHandle31' (type System.Type)} from rax into rcx
		0x180216010: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x180216019: [!] Compares {'typeFromHandle31' (type System.Type)} and 0
		0x18021601C: Jumps to 0x180216549 if typeFromHandle31 equals 0 ;  - This is probably a goto, jumping to 0x180216549 which is after end of current block @ 0x1802158E1 (started at 0x1802158C9)

		0x180216022: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 31
		0x180216026: Jumps to 0x18021655C (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 31. Implicitly present in managed code, so ignored here.
		0x18021602C: Sets the value at offset 31 in array local0 to {'typeFromHandle31' (type System.Type)}
		0x180216035: Loads the type definition for managed type ESerifSideQ_Pol_C020_4004 as a constant "ESerifSideQ_Pol_C020_4004" in rcx
		0x18021603C: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C020_4004' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle32' (type System.Type)}

		0x180216041: Copies {'typeFromHandle32' (type System.Type)} from rax into rbx
		0x180216044: [!] Compares {'typeFromHandle32' (type System.Type)} and 0
		0x180216047: Jumps to 0x180216061 if typeFromHandle32 equals 0 ;  - This is probably a goto, jumping to 0x180216061 which is after end of current block @ 0x1802158E1 (started at 0x1802158C9)

		0x180216049: Loads the class pointer from local0 into a constant constant169 in register rdx
		0x18021604C: Copies {'typeFromHandle32' (type System.Type)} from rax into rcx
		0x18021604F: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x180216058: [!] Compares {'typeFromHandle32' (type System.Type)} and 0
		0x18021605B: Jumps to 0x18021656F if typeFromHandle32 equals 0 ;  - This is probably a goto, jumping to 0x18021656F which is after end of current block @ 0x1802158E1 (started at 0x1802158C9)

		0x180216061: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 32
		0x180216065: Jumps to 0x180216582 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 32. Implicitly present in managed code, so ignored here.
		0x18021606B: Sets the value at offset 32 in array local0 to {'typeFromHandle32' (type System.Type)}
		0x180216074: Loads the type definition for managed type ESerifSideQ_Pol_C020_4004_1 as a constant "ESerifSideQ_Pol_C020_4004_1" in rcx
		0x18021607B: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C020_4004_1' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle33' (type System.Type)}

		0x180216080: Copies {'typeFromHandle33' (type System.Type)} from rax into rbx
		0x180216083: [!] Compares {'typeFromHandle33' (type System.Type)} and 0
		0x180216086: Jumps to 0x1802160A0 if typeFromHandle33 equals 0 ;  - This is probably a goto, jumping to 0x1802160A0 which is after end of current block @ 0x1802158E1 (started at 0x1802158C9)

		0x180216088: Loads the class pointer from local0 into a constant constant174 in register rdx
		0x18021608B: Copies {'typeFromHandle33' (type System.Type)} from rax into rcx
		0x18021608E: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x180216097: [!] Compares {'typeFromHandle33' (type System.Type)} and 0
		0x18021609A: Jumps to 0x180216595 if typeFromHandle33 equals 0 ;  - This is probably a goto, jumping to 0x180216595 which is after end of current block @ 0x1802158E1 (started at 0x1802158C9)

		0x1802160A0: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 33
		0x1802160A4: Jumps to 0x1802165A8 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 33. Implicitly present in managed code, so ignored here.
		0x1802160AA: Sets the value at offset 33 in array local0 to {'typeFromHandle33' (type System.Type)}
		0x1802160B1: Loads the type definition for managed type C020_SideQuest_Define as a constant "C020_SideQuest_Define" in rax
		0x1802160B8: Reads unknown value in stack, offset 48 (0x30) and stores the pointer in register rbx as new constant constant178
		0x1802160BD: Loads the pointer to the static fields for C020_SideQuest_Define and stores it in constant179 in register rcx
		0x1802160C4: [!] Sets static field . to {'local0' (type System.Type[])}
		0x1802160CC: [!] Returns from the function

		0x1802160CF: [!] Constructs and throws an exception of kind System.NullReferenceException

		0x1802160DA: Copies {'local68' (type System.NullReferenceException)} from rax into rcx
		0x180216100: Copies {'local68' (type System.NullReferenceException)} from rax into rcx
		0x180216126: Copies {'local68' (type System.NullReferenceException)} from rax into rcx
		0x18021614C: Copies {'local68' (type System.NullReferenceException)} from rax into rcx
		0x180216172: Copies {'local68' (type System.NullReferenceException)} from rax into rcx
		0x180216198: Copies {'local68' (type System.NullReferenceException)} from rax into rcx
		0x1802161BE: Copies {'local68' (type System.NullReferenceException)} from rax into rcx
		0x1802161E4: Copies {'local68' (type System.NullReferenceException)} from rax into rcx
		0x18021620A: Copies {'local68' (type System.NullReferenceException)} from rax into rcx
		0x180216230: Copies {'local68' (type System.NullReferenceException)} from rax into rcx
		0x180216256: Copies {'local68' (type System.NullReferenceException)} from rax into rcx
		0x18021627C: Copies {'local68' (type System.NullReferenceException)} from rax into rcx
		0x1802162A2: Copies {'local68' (type System.NullReferenceException)} from rax into rcx
		0x1802162C8: Copies {'local68' (type System.NullReferenceException)} from rax into rcx
		0x1802162EE: Copies {'local68' (type System.NullReferenceException)} from rax into rcx
		0x180216314: Copies {'local68' (type System.NullReferenceException)} from rax into rcx
		0x18021633A: Copies {'local68' (type System.NullReferenceException)} from rax into rcx
		0x180216360: Copies {'local68' (type System.NullReferenceException)} from rax into rcx
		0x180216386: Copies {'local68' (type System.NullReferenceException)} from rax into rcx
		0x1802163AC: Copies {'local68' (type System.NullReferenceException)} from rax into rcx
		0x1802163D2: Copies {'local68' (type System.NullReferenceException)} from rax into rcx
		0x1802163F8: Copies {'local68' (type System.NullReferenceException)} from rax into rcx
		0x18021641E: Copies {'local68' (type System.NullReferenceException)} from rax into rcx
		0x180216444: Copies {'local68' (type System.NullReferenceException)} from rax into rcx
		0x18021646A: Copies {'local68' (type System.NullReferenceException)} from rax into rcx
		0x180216490: Copies {'local68' (type System.NullReferenceException)} from rax into rcx
		0x1802164B6: Copies {'local68' (type System.NullReferenceException)} from rax into rcx
		0x1802164DC: Copies {'local68' (type System.NullReferenceException)} from rax into rcx
		0x180216502: Copies {'local68' (type System.NullReferenceException)} from rax into rcx
		0x180216528: Copies {'local68' (type System.NullReferenceException)} from rax into rcx
		0x18021654E: Copies {'local68' (type System.NullReferenceException)} from rax into rcx
		0x180216574: Copies {'local68' (type System.NullReferenceException)} from rax into rcx
		0x18021659A: Copies {'local68' (type System.NullReferenceException)} from rax into rcx



	Generated Pseudocode:

	Declaring Type: C020_SideQuest_Define
	static System.Void .cctor()
		System.Type[] local0 = new System.Type[35]

		System.Type typeFromHandle = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C020_1000' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle != 0)

		    if (typeFromHandle == 0)
                goto INSN_1802160D5
            endif
		endif
        
		local0[1] = typeFromHandle

		System.Type typeFromHandle2 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C020_1001' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle2 == 0)
            goto INSN_18021591D
        endif

		if (typeFromHandle2 == 0)
            goto INSN_1802160FB
        endif

		INSN_18021591D:
		local0[2] = typeFromHandle2

		System.Type typeFromHandle3 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C020_1002' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle3 == 0)
            goto INSN_180215959
        endif

		if (typeFromHandle3 == 0)
            goto INSN_180216121
        endif

		INSN_180215959:
		local0[3] = typeFromHandle3

		System.Type typeFromHandle4 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C020_1003' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle4 == 0)
            goto INSN_180215995
        endif

		if (typeFromHandle4 == 0)
            goto INSN_180216147
        endif

		INSN_180215995:
		local0[4] = typeFromHandle4

		System.Type typeFromHandle5 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C020_1004' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle5 == 0)
            goto INSN_1802159D1
        endif

		if (typeFromHandle5 == 0)
            goto INSN_18021616D
        endif

		INSN_1802159D1:
		local0[5] = typeFromHandle5

		System.Type typeFromHandle6 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C020_1005' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle6 == 0)
            goto INSN_180215A0D
        endif

		if (typeFromHandle6 == 0)
            goto INSN_180216193
        endif

		INSN_180215A0D:
		local0[6] = typeFromHandle6

		System.Type typeFromHandle7 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C020_1006' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle7 == 0)
            goto INSN_180215A49
        endif

		if (typeFromHandle7 == 0)
            goto INSN_1802161B9
        endif

		INSN_180215A49:
		local0[7] = typeFromHandle7

		System.Type typeFromHandle8 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C020_1007' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle8 == 0)
            goto INSN_180215A85
        endif

		if (typeFromHandle8 == 0)
            goto INSN_1802161DF
        endif

		INSN_180215A85:
		local0[8] = typeFromHandle8

		System.Type typeFromHandle9 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C020_1008' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle9 == 0)
            goto INSN_180215AC1
        endif

		if (typeFromHandle9 == 0)
            goto INSN_180216205
        endif

		INSN_180215AC1:
		local0[9] = typeFromHandle9

		System.Type typeFromHandle10 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C020_1009' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle10 == 0)
            goto INSN_180215AFD
        endif

		if (typeFromHandle10 == 0)
            goto INSN_18021622B
        endif

		INSN_180215AFD:
		local0[10] = typeFromHandle10

		System.Type typeFromHandle11 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C020_1010' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle11 == 0)
            goto INSN_180215B39
        endif

		if (typeFromHandle11 == 0)
            goto INSN_180216251
        endif

		INSN_180215B39:
		local0[11] = typeFromHandle11

		System.Type typeFromHandle12 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C020_1011' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle12 == 0)
            goto INSN_180215B75
        endif

		if (typeFromHandle12 == 0)
            goto INSN_180216277
        endif

		INSN_180215B75:
		local0[12] = typeFromHandle12

		System.Type typeFromHandle13 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C020_1012' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle13 == 0)
            goto INSN_180215BB4
        endif

		if (typeFromHandle13 == 0)
            goto INSN_18021629D
        endif

		INSN_180215BB4:
		local0[13] = typeFromHandle13

		System.Type typeFromHandle14 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C020_1013' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle14 == 0)
            goto INSN_180215BF3
        endif

		if (typeFromHandle14 == 0)
            goto INSN_1802162C3
        endif

		INSN_180215BF3:
		local0[14] = typeFromHandle14

		System.Type typeFromHandle15 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C020_1013_1' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle15 == 0)
            goto INSN_180215C32
        endif

		if (typeFromHandle15 == 0)
            goto INSN_1802162E9
        endif

		INSN_180215C32:
		local0[15] = typeFromHandle15

		System.Type typeFromHandle16 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C020_2000' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle16 == 0)
            goto INSN_180215C71
        endif

		if (typeFromHandle16 == 0)
            goto INSN_18021630F
        endif

		INSN_180215C71:
		local0[16] = typeFromHandle16

		System.Type typeFromHandle17 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C020_2001' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle17 == 0)
            goto INSN_180215CB0
        endif

		if (typeFromHandle17 == 0)
            goto INSN_180216335
        endif

		INSN_180215CB0:
		local0[17] = typeFromHandle17

		System.Type typeFromHandle18 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C020_2002' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle18 == 0)
            goto INSN_180215CEF
        endif

		if (typeFromHandle18 == 0)
            goto INSN_18021635B
        endif

		INSN_180215CEF:
		local0[18] = typeFromHandle18

		System.Type typeFromHandle19 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C020_2003' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle19 == 0)
            goto INSN_180215D2E
        endif

		if (typeFromHandle19 == 0)
            goto INSN_180216381
        endif

		INSN_180215D2E:
		local0[19] = typeFromHandle19

		System.Type typeFromHandle20 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C020_2004' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle20 == 0)
            goto INSN_180215D6D
        endif

		if (typeFromHandle20 == 0)
            goto INSN_1802163A7
        endif

		INSN_180215D6D:
		local0[20] = typeFromHandle20

		System.Type typeFromHandle21 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C020_2004_1' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle21 == 0)
            goto INSN_180215DAC
        endif

		if (typeFromHandle21 == 0)
            goto INSN_1802163CD
        endif

		INSN_180215DAC:
		local0[21] = typeFromHandle21

		System.Type typeFromHandle22 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C020_3000' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle22 == 0)
            goto INSN_180215DEB
        endif

		if (typeFromHandle22 == 0)
            goto INSN_1802163F3
        endif

		INSN_180215DEB:
		local0[22] = typeFromHandle22

		System.Type typeFromHandle23 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C020_3001' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle23 == 0)
            goto INSN_180215E2A
        endif

		if (typeFromHandle23 == 0)
            goto INSN_180216419
        endif

		INSN_180215E2A:
		local0[23] = typeFromHandle23

		System.Type typeFromHandle24 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C020_3002' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle24 == 0)
            goto INSN_180215E69
        endif

		if (typeFromHandle24 == 0)
            goto INSN_18021643F
        endif

		INSN_180215E69:
		local0[24] = typeFromHandle24

		System.Type typeFromHandle25 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C020_3003' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle25 == 0)
            goto INSN_180215EA8
        endif

		if (typeFromHandle25 == 0)
            goto INSN_180216465
        endif

		INSN_180215EA8:
		local0[25] = typeFromHandle25

		System.Type typeFromHandle26 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C020_3004' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle26 == 0)
            goto INSN_180215EE7
        endif

		if (typeFromHandle26 == 0)
            goto INSN_18021648B
        endif

		INSN_180215EE7:
		local0[26] = typeFromHandle26

		System.Type typeFromHandle27 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C020_3004_1' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle27 == 0)
            goto INSN_180215F26
        endif

		if (typeFromHandle27 == 0)
            goto INSN_1802164B1
        endif

		INSN_180215F26:
		local0[27] = typeFromHandle27

		System.Type typeFromHandle28 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C020_4000' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle28 == 0)
            goto INSN_180215F65
        endif

		if (typeFromHandle28 == 0)
            goto INSN_1802164D7
        endif

		INSN_180215F65:
		local0[28] = typeFromHandle28

		System.Type typeFromHandle29 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C020_4001' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle29 == 0)
            goto INSN_180215FA4
        endif

		if (typeFromHandle29 == 0)
            goto INSN_1802164FD
        endif

		INSN_180215FA4:
		local0[29] = typeFromHandle29

		System.Type typeFromHandle30 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C020_4002' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle30 == 0)
            goto INSN_180215FE3
        endif

		if (typeFromHandle30 == 0)
            goto INSN_180216523
        endif

		INSN_180215FE3:
		local0[30] = typeFromHandle30

		System.Type typeFromHandle31 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C020_4003' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle31 == 0)
            goto INSN_180216022
        endif

		if (typeFromHandle31 == 0)
            goto INSN_180216549
        endif

		INSN_180216022:
		local0[31] = typeFromHandle31

		System.Type typeFromHandle32 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C020_4004' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle32 == 0)
            goto INSN_180216061
        endif

		if (typeFromHandle32 == 0)
            goto INSN_18021656F
        endif

		INSN_180216061:
		local0[32] = typeFromHandle32

		System.Type typeFromHandle33 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C020_4004_1' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle33 == 0)
            goto INSN_1802160A0
        endif

		if (typeFromHandle33 == 0)
            goto INSN_180216595
        endif

		INSN_1802160A0:
		local0[33] = typeFromHandle33
		. = local0
		return
		throw new System.NullReferenceException()

		INSN_1802160D5:

		INSN_1802160FB:

		INSN_180216121:

		INSN_180216147:

		INSN_18021616D:

		INSN_180216193:

		INSN_1802161B9:

		INSN_1802161DF:

		INSN_180216205:

		INSN_18021622B:

		INSN_180216251:

		INSN_180216277:

		INSN_18021629D:

		INSN_1802162C3:

		INSN_1802162E9:

		INSN_18021630F:

		INSN_180216335:

		INSN_18021635B:

		INSN_180216381:

		INSN_1802163A7:

		INSN_1802163CD:

		INSN_1802163F3:

		INSN_180216419:

		INSN_18021643F:

		INSN_180216465:

		INSN_18021648B:

		INSN_1802164B1:

		INSN_1802164D7:

		INSN_1802164FD:

		INSN_180216523:

		INSN_180216549:

		INSN_18021656F:

		INSN_180216595:


Generated IL:
	Action of type Cpp2IL.Core.Analysis.Actions.x86.Important.RegToStaticFieldAction at (0x1802160C4) is corrupt (No further info) and cannot be created as IL. Aborting here.


