Type: TagItem

Method: System.Void TagItem::.ctor():	Method Body (x86 ASM):
		0x180203000 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180203002 jmp near ptr 0000000180CE1E90h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180203007 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.Void TagItem::.ctor():
		End of function at 0x180203008
		Absolute End is at 0x180203008
		Identified Jump Destination addresses:

		0x180203002: [!] Calls managed method System.Void UnityEngine.MonoBehaviour::.ctor() on instance {'this' (function parameter, type TagItem)}

		0x180203002: [!] Returns from the function




	Generated Pseudocode:

	Declaring Type: TagItem
	System.Void .ctor()

		base..ctor()
		return


Generated IL:
	IL_0000: ldarg.0
	IL_0001: call System.Void UnityEngine.MonoBehaviour::.ctor()
	IL_0006: ret
	

Method: System.Void TagItem::AfterParse():	Method Body (x86 ASM):
		0x18032BAE0 push rbx		; DEBUG: {Register}/RBX {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18032BAE2 push r14		; DEBUG: {Register}/R14 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18032BAE4 sub rsp,28h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 40
		0x18032BAE8 cmp byte ptr [18183DA37h],0		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6467869239 | None ||| N/A | 0
		0x18032BAEF mov r14,rcx		; DEBUG: {Register}/R14 {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x18032BAF2 jne short 000000018032BB06h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032BAF4 mov ecx,[1814C5EA0h]		; DEBUG: {Register}/ECX {Memory}/None ||| RIP | 6464233120 | None ||| N/A | N/A
		0x18032BAFA call 00000001800FEB90h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032BAFF mov byte ptr [18183DA37h],1		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6467869239 | None ||| N/A | 1
		0x18032BB06 mov rcx,[r14+30h]		; DEBUG: {Register}/RCX {Memory}/None ||| R14 | 48 | None ||| N/A | N/A
		0x18032BB0A xor ebx,ebx		; DEBUG: {Register}/EBX {Register}/EBX ||| None | 0 | None ||| N/A | N/A
		0x18032BB0C mov [rsp+48h],rbp		; DEBUG: {Memory}/None {Register}/RBP ||| RSP | 72 | None ||| N/A | N/A
		0x18032BB11 mov [rsp+50h],rsi		; DEBUG: {Memory}/None {Register}/RSI ||| RSP | 80 | None ||| N/A | N/A
		0x18032BB16 mov [rsp+20h],rdi		; DEBUG: {Memory}/None {Register}/RDI ||| RSP | 32 | None ||| N/A | N/A
		0x18032BB1B mov [rsp+40h],ebx		; DEBUG: {Memory}/None {Register}/EBX ||| RSP | 64 | None ||| N/A | N/A
		0x18032BB1F test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x18032BB22 je near ptr 000000018032BD11h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032BB28 cmp dword ptr [rcx+18h],1		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RCX | 24 | None ||| N/A | 1
		0x18032BB2C jbe near ptr 000000018032BD19h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032BB32 mov rcx,[rcx+28h]		; DEBUG: {Register}/RCX {Memory}/None ||| RCX | 40 | None ||| N/A | N/A
		0x18032BB36 lea rdx,[rsp+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RSP | 64 | None ||| N/A | N/A
		0x18032BB3B xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18032BB3E call 0000000180E861E0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032BB43 mov rcx,[181899DE8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468247016 | None ||| N/A | N/A
		0x18032BB4A test al,al		; DEBUG: {Register}/AL {Register}/AL ||| None | 0 | None ||| N/A | N/A
		0x18032BB4C jne near ptr 000000018032BC3Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032BB52 test byte ptr [rcx+127h],2		; DEBUG: {Memory}/None {Immediate8}/None ||| RCX | 295 | None ||| N/A | 2
		0x18032BB59 je short 000000018032BB68h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032BB5B cmp [rcx+0D8h],ebx		; DEBUG: {Memory}/None {Register}/EBX ||| RCX | 216 | None ||| N/A | N/A
		0x18032BB61 jne short 000000018032BB68h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032BB63 call 000000018010EAF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032BB68 xor ecx,ecx		; DEBUG: {Register}/ECX {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x18032BB6A call 000000018114D5C0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032BB6F mov rcx,[18188E0C8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468198600 | None ||| N/A | N/A
		0x18032BB76 mov rdi,rax		; DEBUG: {Register}/RDI {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18032BB79 call 000000018013AC40h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032BB7E mov rdx,[181893978h]		; DEBUG: {Register}/RDX {Memory}/None ||| RIP | 6468221304 | None ||| N/A | N/A
		0x18032BB85 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18032BB88 mov rsi,rax		; DEBUG: {Register}/RSI {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18032BB8B call 0000000180F40AB0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032BB90 mov ebp,ebx		; DEBUG: {Register}/EBP {Register}/EBX ||| None | 0 | None ||| N/A | N/A
		0x18032BB92 test rdi,rdi		; DEBUG: {Register}/RDI {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x18032BB95 je near ptr 000000018032BD11h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032BB9B nop dword ptr [rax+rax]		; DEBUG: {Memory}/None {Register}/None ||| RAX | 0 | RAX ||| N/A | N/A
		0x18032BBA0 mov rcx,[rdi+18h]		; DEBUG: {Register}/RCX {Memory}/None ||| RDI | 24 | None ||| N/A | N/A
		0x18032BBA4 test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x18032BBA7 je near ptr 000000018032BD11h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032BBAD mov rdx,[18189B700h]		; DEBUG: {Register}/RDX {Memory}/None ||| RIP | 6468253440 | None ||| N/A | N/A
		0x18032BBB4 call 000000018029B0C0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032BBB9 cmp ebp,eax		; DEBUG: {Register}/EBP {Register}/EAX ||| None | 0 | None ||| N/A | N/A
		0x18032BBBB jge short 000000018032BC02h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032BBBD mov rcx,[rdi+18h]		; DEBUG: {Register}/RCX {Memory}/None ||| RDI | 24 | None ||| N/A | N/A
		0x18032BBC1 test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x18032BBC4 je near ptr 000000018032BD11h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032BBCA mov r8,[1818753D8h]		; DEBUG: {Register}/R8 {Memory}/None ||| RIP | 6468096984 | None ||| N/A | N/A
		0x18032BBD1 mov edx,ebx		; DEBUG: {Register}/EDX {Register}/EBX ||| None | 0 | None ||| N/A | N/A
		0x18032BBD3 call 00000001810B67F0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032BBD8 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18032BBDB je near ptr 000000018032BD11h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032BBE1 test rsi,rsi		; DEBUG: {Register}/RSI {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x18032BBE4 je near ptr 000000018032BD11h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032BBEA mov r8,[1818939C8h]		; DEBUG: {Register}/R8 {Memory}/None ||| RIP | 6468221384 | None ||| N/A | N/A
		0x18032BBF1 mov rcx,rsi		; DEBUG: {Register}/RCX {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x18032BBF4 mov edx,[rax+10h]		; DEBUG: {Register}/EDX {Memory}/None ||| RAX | 16 | None ||| N/A | N/A
		0x18032BBF7 call 0000000180F34CC0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032BBFC inc ebx		; DEBUG: {Register}/EBX {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18032BBFE mov ebp,ebx		; DEBUG: {Register}/EBP {Register}/EBX ||| None | 0 | None ||| N/A | N/A
		0x18032BC00 jmp short 000000018032BBA0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032BC02 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18032BC05 mov rdx,rsi		; DEBUG: {Register}/RDX {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x18032BC08 mov rcx,r14		; DEBUG: {Register}/RCX {Register}/R14 ||| None | 0 | None ||| N/A | N/A
		0x18032BC0B call 0000000180326D90h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032BC10 mov rcx,[181899DE8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468247016 | None ||| N/A | N/A
		0x18032BC17 mov ebx,eax		; DEBUG: {Register}/EBX {Register}/EAX ||| None | 0 | None ||| N/A | N/A
		0x18032BC19 mov [rsp+40h],eax		; DEBUG: {Memory}/None {Register}/EAX ||| RSP | 64 | None ||| N/A | N/A
		0x18032BC1D test byte ptr [rcx+127h],2		; DEBUG: {Memory}/None {Immediate8}/None ||| RCX | 295 | None ||| N/A | 2
		0x18032BC24 je short 000000018032BC34h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032BC26 cmp dword ptr [rcx+0D8h],0		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RCX | 216 | None ||| N/A | 0
		0x18032BC2D jne short 000000018032BC34h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032BC2F call 000000018010EAF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032BC34 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18032BC36 mov ecx,ebx		; DEBUG: {Register}/ECX {Register}/EBX ||| None | 0 | None ||| N/A | N/A
		0x18032BC38 call 000000018114D620h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032BC3D jmp short 000000018032BCA4h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032BC3F mov ebx,[rsp+40h]		; DEBUG: {Register}/EBX {Memory}/None ||| RSP | 64 | None ||| N/A | N/A
		0x18032BC43 cmp ebx,0FFFFFFFFh		; DEBUG: {Register}/EBX {Immediate8to32}/None ||| None | 0 | None ||| N/A | 18446744073709551615
		0x18032BC46 je short 000000018032BC6Ah		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032BC48 test byte ptr [rcx+127h],2		; DEBUG: {Memory}/None {Immediate8}/None ||| RCX | 295 | None ||| N/A | 2
		0x18032BC4F je short 000000018032BC5Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032BC51 cmp dword ptr [rcx+0D8h],0		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RCX | 216 | None ||| N/A | 0
		0x18032BC58 jne short 000000018032BC5Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032BC5A call 000000018010EAF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032BC5F xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18032BC61 mov ecx,ebx		; DEBUG: {Register}/ECX {Register}/EBX ||| None | 0 | None ||| N/A | N/A
		0x18032BC63 call 000000018114D620h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032BC68 jmp short 000000018032BCA4h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032BC6A test byte ptr [rcx+127h],2		; DEBUG: {Memory}/None {Immediate8}/None ||| RCX | 295 | None ||| N/A | 2
		0x18032BC71 je short 000000018032BC81h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032BC73 cmp dword ptr [rcx+0D8h],0		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RCX | 216 | None ||| N/A | 0
		0x18032BC7A jne short 000000018032BC81h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032BC7C call 000000018010EAF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032BC81 xor ecx,ecx		; DEBUG: {Register}/ECX {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x18032BC83 call 000000018114D5C0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032BC88 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18032BC8B je near ptr 000000018032BD11h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032BC91 mov r8,[181870F20h]		; DEBUG: {Register}/R8 {Memory}/None ||| RIP | 6468079392 | None ||| N/A | N/A
		0x18032BC98 mov rcx,r14		; DEBUG: {Register}/RCX {Register}/R14 ||| None | 0 | None ||| N/A | N/A
		0x18032BC9B mov rdx,[rax+18h]		; DEBUG: {Register}/RDX {Memory}/None ||| RAX | 24 | None ||| N/A | N/A
		0x18032BC9F call 000000018090EDC0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032BCA4 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18032BCA7 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18032BCAA je short 000000018032BCFAh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032BCAC mov rcx,[r14+18h]		; DEBUG: {Register}/RCX {Memory}/None ||| R14 | 24 | None ||| N/A | N/A
		0x18032BCB0 test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x18032BCB3 je short 000000018032BD11h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032BCB5 mov edx,[rax+10h]		; DEBUG: {Register}/EDX {Memory}/None ||| RAX | 16 | None ||| N/A | N/A
		0x18032BCB8 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18032BCBB call 0000000180877AB0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032BCC0 mov rcx,[rbx+20h]		; DEBUG: {Register}/RCX {Memory}/None ||| RBX | 32 | None ||| N/A | N/A
		0x18032BCC4 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18032BCC6 mov rdi,[r14+30h]		; DEBUG: {Register}/RDI {Memory}/None ||| R14 | 48 | None ||| N/A | N/A
		0x18032BCCA call 00000001802D1460h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032BCCF mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18032BCD2 test rdi,rdi		; DEBUG: {Register}/RDI {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x18032BCD5 je short 000000018032BD11h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032BCD7 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18032BCDA je short 000000018032BCF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032BCDC mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18032BCDF mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18032BCE2 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18032BCE6 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032BCEB test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18032BCEE je short 000000018032BD2Ch		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032BCF0 cmp dword ptr [rdi+18h],1		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 1
		0x18032BCF4 jbe short 000000018032BD3Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032BCF6 mov [rdi+28h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 40 | None ||| N/A | N/A
		0x18032BCFA mov rdi,[rsp+20h]		; DEBUG: {Register}/RDI {Memory}/None ||| RSP | 32 | None ||| N/A | N/A
		0x18032BCFF mov rsi,[rsp+50h]		; DEBUG: {Register}/RSI {Memory}/None ||| RSP | 80 | None ||| N/A | N/A
		0x18032BD04 mov rbp,[rsp+48h]		; DEBUG: {Register}/RBP {Memory}/None ||| RSP | 72 | None ||| N/A | N/A
		0x18032BD09 add rsp,28h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 40
		0x18032BD0D pop r14		; DEBUG: {Register}/R14 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18032BD0F pop rbx		; DEBUG: {Register}/RBX {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18032BD10 ret		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18032BD11 xor ecx,ecx		; DEBUG: {Register}/ECX {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x18032BD13 call 000000018012BDA0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032BD18 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18032BD2C call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032BD31 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18032BD34 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18032BD37 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18032BD39 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18032BD3E int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.Void TagItem::AfterParse():
		End of function at 0x18032BD3F
		Absolute End is at 0x18032BD3F
		Identified Jump Destination addresses:
			0x18032BCA4
		0x18032BAE0: Saves the content of rbx to the stack
		0x18032BAE2: Saves the content of r14 to the stack
		0x18032BAE8: Compares {Unknown Global at 0x18183DA37, first ten bytes are [0 224 60 103 1 16 54 1 0 52], or as chars " à<g6 4"} and 0
		0x18032BAEF: Copies {'this' (function parameter, type TagItem)} from rcx into r14
		0x18032BAF2: Jumps to 0x18032BB06 if {Unknown Global at 0x18183DA37, first ten bytes are [0 224 60 103 1 16 54 1 0 52], or as chars " à<g6 4"} != 0

		0x18032BAF4: Reads {Unknown Global at 0x1814C5EA0, first ten bytes are [136 106 0 0 136 42 0 0 137 74], or as chars "j  *  J"} into register rcx as a constant constant3
		0x18032BAFA: Attempts to load the il2cpp metadata for this method (method id 27272) and init it cpp-side.

		0x18032BB06: [!] Reads field m_subs from {'this' (function parameter, type TagItem)} and stores in a new local {'m_subs' (type System.String[])}

		0x18032BB0A: Clears register rbx, yielding zero-local {'local2' (type System.Int32)}
		0x18032BB1B: Moves local2 (type System.Int32) from register rbx to the stack at offset 64 (0x40)
		0x18032BB1F: [!] Compares {'m_subs' (type System.String[])} and 0
		0x18032BB22: Jumps to 0x18032BD11 (which throws a NRE) if m_subs equals 0. Implicitly present in managed code, so ignored here.
		0x18032BB28: [!] Compares {Property System.Int32 System.Array::Length() on {'m_subs' (type System.String[])}} and 1
		0x18032BB2C: Jumps to 0x18032BD19 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'m_subs' (type System.String[])}} is less than or equal to 1. Implicitly present in managed code, so ignored here.
		0x18032BB32: [!] Reads a value from the array {'m_subs' (type System.String[])} at index 1, into a new local {'local3' (type System.String)}

		0x18032BB36: Loads a pointer to stack offset 0x40 into register rdx as new constant constant6
		0x18032BB3E: [!] Calls static managed method System.Boolean System.Int32::TryParse(System.String,System.Int32&) with arguments [{'local3' (type System.String)}, {'local2' (type System.Int32)}] and stores the result in {'boolean' (type System.Boolean)}

		0x18032BB43: Loads the type definition for managed type DataManager as a constant "DataManager" in rcx
		0x18032BB4A: [!] Compares {'boolean' (type System.Boolean)} and False
		0x18032BB4C: Jumps to 0x18032BC3F if {'boolean' (type System.Boolean)} != False ;  - Increasing indentation - is if-else, unimportant is False

		0x18032BB52: Compares "{il2cpp field on {'DataManager' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" and 2
		0x18032BB59: Jumps to 0x18032BB68 if "{il2cpp field on {'DataManager' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" equals 2

		0x18032BB5B: Compares "{il2cpp field on {'DataManager' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" and {'local2' (type System.Int32)}
		0x18032BB61: Jumps to 0x18032BB68 if "{il2cpp field on {'DataManager' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" != {'local2' (type System.Int32)}

		0x18032BB63: Calls the il2cpp cctor for the type DataManager
		0x18032BB68: Clears register rcx, yielding zero-local {'local6' (type System.Int32)}
		0x18032BB6A: [!] Calls static managed method ItemDataParam DataManager::GetItemDataParam() and stores the result in {'itemDataParam' (type ItemDataParam)}

		0x18032BB6F: Loads the type definition for managed type System.Collections.Generic.List`1<System.Int32> as a constant "List`1" in rcx
		0x18032BB76: Copies {'itemDataParam' (type ItemDataParam)} from rax into rdi
		0x18032BB79: [!] Allocates an instance of type System.Collections.Generic.List`1<System.Int32> and stores it as list in rax.

		0x18032BB7E: Loads the global generic method reference for method System.Void System.Collections.Generic.List`1::.ctor() on type System.Collections.Generic.List`1<System.Int32> and stores the result in constant {'.ctor' (constant value of type Cpp2IL.Core.Analysis.ResultModels.GenericMethodReference)} in rdx
		0x18032BB85: Copies {'list' (type System.Collections.Generic.List`1<System.Int32>)} from rax into rcx
		0x18032BB88: Copies {'list' (type System.Collections.Generic.List`1<System.Int32>)} from rax into rsi
		0x18032BB8B: [!] Calls managed method System.Void System.Collections.Generic.List`1::.ctor() on instance {'list' (type System.Collections.Generic.List`1<System.Int32>)} ;  - Method resolved from concrete implementations at this address, with the help of a constant value to identify which concrete implementation.

		0x18032BB90: Copies {'local2' (type System.Int32)} from rbx into rbp
		0x18032BB92: [!] Compares {'itemDataParam' (type ItemDataParam)} and 0
		0x18032BB95: Jumps to 0x18032BD11 (which throws a NRE) if itemDataParam equals 0. Implicitly present in managed code, so ignored here.

		Potential Loop Start (0x18032BBA0):
		0x18032BBA0: [!] Reads field param from {'itemDataParam' (type ItemDataParam)} and stores in a new local {'param' (type System.Collections.Generic.List`1<ItemDataParam/ItemParam>)}

		0x18032BBA4: [!] Compares {'param' (type System.Collections.Generic.List`1<ItemDataParam/ItemParam>)} and 0
		0x18032BBA7: Jumps to 0x18032BD11 (which throws a NRE) if param equals 0. Implicitly present in managed code, so ignored here.
		0x18032BBAD: Loads the global generic method reference for method System.Int32 System.Collections.Generic.List`1::get_Count() on type System.Collections.Generic.List`1<ItemDataParam/ItemParam> and stores the result in constant {'get_Count' (constant value of type Cpp2IL.Core.Analysis.ResultModels.GenericMethodReference)} in rdx
		0x18032BBB4: [!] Calls managed method System.Int32 System.Collections.Generic.List`1::get_Count() on instance {'param' (type System.Collections.Generic.List`1<ItemDataParam/ItemParam>)} and stores the result in {'count' (type System.Int32)} ;  - Method resolved from concrete implementations at this address, with the help of a constant value to identify which concrete implementation.

		0x18032BBB9: [!] Compares {'local2' (type System.Int32)} and {'count' (type System.Int32)}
		0x18032BBBB: Jumps to 0x18032BC02 (which is an if statement's body) if {'local2' (type System.Int32)} is greater than or equal to {'count' (type System.Int32)} ;  - Increasing indentation - is standard if, unimportant is False

		0x18032BBBD: [!] Reads field param from {'itemDataParam' (type ItemDataParam)} and stores in a new local {'param2' (type System.Collections.Generic.List`1<ItemDataParam/ItemParam>)}

		0x18032BBC1: [!] Compares {'param2' (type System.Collections.Generic.List`1<ItemDataParam/ItemParam>)} and 0
		0x18032BBC4: Jumps to 0x18032BD11 (which throws a NRE) if param2 equals 0. Implicitly present in managed code, so ignored here.
		0x18032BBCA: Loads the global generic method reference for method T System.Collections.Generic.List`1::get_Item(System.Int32) on type System.Collections.Generic.List`1<ItemDataParam/ItemParam> and stores the result in constant {'get_Item' (constant value of type Cpp2IL.Core.Analysis.ResultModels.GenericMethodReference)} in r8
		0x18032BBD1: Copies {'local2' (type System.Int32)} from rbx into rdx
		0x18032BBD3: [!] Calls managed method T System.Collections.Generic.List`1::get_Item(System.Int32) on instance {'param2' (type System.Collections.Generic.List`1<ItemDataParam/ItemParam>)} with arguments [{'local2' (type System.Int32)}] and stores the result in {'item' (type ItemDataParam/ItemParam)} ;  - Method resolved from concrete implementations at this address, with the help of a constant value to identify which concrete implementation.

		0x18032BBD8: [!] Compares {'item' (type ItemDataParam/ItemParam)} and 0
		0x18032BBDB: Jumps to 0x18032BD11 (which throws a NRE) if item equals 0. Implicitly present in managed code, so ignored here.
		0x18032BBE1: [!] Compares {'list' (type System.Collections.Generic.List`1<System.Int32>)} and 0
		0x18032BBE4: Jumps to 0x18032BD11 (which throws a NRE) if list equals 0. Implicitly present in managed code, so ignored here.
		0x18032BBEA: Loads the global generic method reference for method System.Void System.Collections.Generic.List`1::Add(T) on type System.Collections.Generic.List`1<System.Int32> and stores the result in constant {'Add' (constant value of type Cpp2IL.Core.Analysis.ResultModels.GenericMethodReference)} in r8
		0x18032BBF1: Copies {'list' (type System.Collections.Generic.List`1<System.Int32>)} from rsi into rcx
		0x18032BBF4: [!] Reads field itemId from {'item' (type ItemDataParam/ItemParam)} and stores in a new local {'itemId' (type System.Int32)}

		0x18032BBF7: [!] Calls managed method System.Void System.Collections.Generic.List`1::Add(T) on instance {'list' (type System.Collections.Generic.List`1<System.Int32>)} with arguments [{'itemId' (type System.Int32)}] ;  - Method resolved from concrete implementations at this address, with the help of a constant value to identify which concrete implementation.

		0x18032BBFC: [!] Adds 1 to the value {'local2' (type System.Int32)}, stored in rbx
		0x18032BBFE: Copies {'local2' (type System.Int32)} from rbx into rbp
		0x18032BC00: Jumps to 0x18032BBA0 - which is still in this function, but further up. Probably indicative that this is a loop.
		0x18032BC05: Copies {'list' (type System.Collections.Generic.List`1<System.Int32>)} from rsi into rdx
		0x18032BC08: Copies {'this' (function parameter, type TagItem)} from r14 into rcx
		0x18032BC0B: [!] Calls managed method System.Int32 TagBase::GetRandomId(System.Collections.Generic.List`1<System.Int32>) on instance {'this' (function parameter, type TagItem)} with arguments [{'list' (type System.Collections.Generic.List`1<System.Int32>)}] and stores the result in {'randomId' (type System.Int32)}

		0x18032BC10: Loads the type definition for managed type DataManager as a constant "DataManager" in rcx
		0x18032BC17: Copies {'randomId' (type System.Int32)} from rax into rbx
		0x18032BC19: Moves randomId (type System.Int32) from register rax to the stack at offset 64 (0x40)
		0x18032BC1D: Compares "{il2cpp field on {'DataManager' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" and 2
		0x18032BC24: Jumps to 0x18032BC34 if "{il2cpp field on {'DataManager' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" equals 2 ;  - This is probably a goto, jumping to 0x18032BC34 which is after end of current block @ 0x18032BC02 (started at 0x18032BBBD)

		0x18032BC26: Compares "{il2cpp field on {'DataManager' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" and 0
		0x18032BC2D: Jumps to 0x18032BC34 if "{il2cpp field on {'DataManager' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" != 0 ;  - This is probably a goto, jumping to 0x18032BC34 which is after end of current block @ 0x18032BC02 (started at 0x18032BBBD)

		0x18032BC2F: Calls the il2cpp cctor for the type DataManager
		0x18032BC36: Copies {'randomId' (type System.Int32)} from rbx into rcx
		0x18032BC38: [!] Calls static managed method ItemDataParam/ItemParam DataManager::GetItemData(System.Int32) with arguments [{'randomId' (type System.Int32)}] and stores the result in {'itemData' (type ItemDataParam/ItemParam)}

		0x18032BC3D: Jumps to 0x18032BCA4 (which is an function-local jump destination)

		0x18032BC3F: Reads local {'local2' (type System.Int32)} from stack offset 64 (0x40) into register rbx
		0x18032BC43: [!] Compares {'local2' (type System.Int32)} and -1
		0x18032BC46: Jumps to 0x18032BC6A if local2 equals -1 ;  - Increasing indentation - is if-else, unimportant is False

		0x18032BC48: Compares "{il2cpp field on {'DataManager' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" and 2
		0x18032BC4F: Jumps to 0x18032BC5F if "{il2cpp field on {'DataManager' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" equals 2

		0x18032BC51: Compares "{il2cpp field on {'DataManager' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" and 0
		0x18032BC58: Jumps to 0x18032BC5F if "{il2cpp field on {'DataManager' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" != 0

		0x18032BC5A: Calls the il2cpp cctor for the type DataManager
		0x18032BC61: Copies {'local2' (type System.Int32)} from rbx into rcx
		0x18032BC63: [!] Calls static managed method ItemDataParam/ItemParam DataManager::GetItemData(System.Int32) with arguments [{'local2' (type System.Int32)}] and stores the result in {'itemData2' (type ItemDataParam/ItemParam)}

		0x18032BC68: Jumps to 0x18032BCA4 (which is an function-local jump destination)

		0x18032BC6A: Compares "{il2cpp field on {'DataManager' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" and 2
		0x18032BC71: Jumps to 0x18032BC81 if "{il2cpp field on {'DataManager' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" equals 2

		0x18032BC73: Compares "{il2cpp field on {'DataManager' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" and 0
		0x18032BC7A: Jumps to 0x18032BC81 if "{il2cpp field on {'DataManager' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" != 0

		0x18032BC7C: Calls the il2cpp cctor for the type DataManager
		0x18032BC81: Clears register rcx, yielding zero-local {'local20' (type System.Int32)}
		0x18032BC83: [!] Calls static managed method ItemDataParam DataManager::GetItemDataParam() and stores the result in {'itemDataParam2' (type ItemDataParam)}

		0x18032BC88: [!] Compares {'itemDataParam2' (type ItemDataParam)} and 0
		0x18032BC8B: Jumps to 0x18032BD11 (which throws a NRE) if itemDataParam2 equals 0. Implicitly present in managed code, so ignored here.
		0x18032BC91: Loads the global generic method reference for method T TagBase::GetRandomElement<ItemDataParam/ItemParam>(System.Collections.Generic.List`1<T>) on type TagBase and stores the result in constant {'GetRandomElement' (constant value of type Cpp2IL.Core.Analysis.ResultModels.GenericMethodReference)} in r8
		0x18032BC98: Copies {'this' (function parameter, type TagItem)} from r14 into rcx
		0x18032BC9B: [!] Reads field param from {'itemDataParam2' (type ItemDataParam)} and stores in a new local {'param3' (type System.Collections.Generic.List`1<ItemDataParam/ItemParam>)}

		0x18032BC9F: [!] Calls managed method T TagBase::GetRandomElement<ItemDataParam/ItemParam>(System.Collections.Generic.List`1<T>) on instance {'this' (function parameter, type TagItem)} with arguments [{'param3' (type System.Collections.Generic.List`1<ItemDataParam/ItemParam>)}] and stores the result in {'randomElement' (type ItemDataParam/ItemParam)} ;  - Method resolved from concrete implementations at this address, with the help of a constant value to identify which concrete implementation.


		End Of If-Else Block (at 0x18032BCA4) where the else started at 0x18032BC3F
		0x18032BCA4: Copies {'randomElement' (type ItemDataParam/ItemParam)} from rax into rbx
		0x18032BCA7: [!] Compares {'randomElement' (type ItemDataParam/ItemParam)} and 0
		0x18032BCAA: Jumps to 0x18032BCFA if randomElement equals 0 ;  - This is probably a goto, jumping to 0x18032BCFA which is after end of current block @ 0x18032BCA4 (started at 0x18032BC6A)

		0x18032BCAC: [!] Reads field m_sceLabel from {'this' (function parameter, type TagItem)} and stores in a new local {'m_sceLabel' (type SceUILabel)}

		0x18032BCB0: [!] Compares {'m_sceLabel' (type SceUILabel)} and 0
		0x18032BCB3: Jumps to 0x18032BD11 (which throws a NRE) if m_sceLabel equals 0. Implicitly present in managed code, so ignored here.
		0x18032BCB5: [!] Reads field itemId from {'randomElement' (type ItemDataParam/ItemParam)} and stores in a new local {'itemId2' (type System.Int32)}

		0x18032BCBB: [!] Calls managed method System.Void SceUILabel::set_RandomId(System.Int32) on instance {'m_sceLabel' (type SceUILabel)} with arguments [{'itemId2' (type System.Int32)}]

		0x18032BCC0: [!] Reads field nameDisplayId from {'randomElement' (type ItemDataParam/ItemParam)} and stores in a new local {'nameDisplayId' (type System.String)}

		0x18032BCC6: [!] Reads field m_subs from {'this' (function parameter, type TagItem)} and stores in a new local {'m_subs2' (type System.String[])}

		0x18032BCCA: [!] Calls static managed method System.String DisplayManager::GetMessage(System.String) with arguments [{'nameDisplayId' (type System.String)}] and stores the result in {'message' (type System.String)}

		0x18032BCCF: Copies {'message' (type System.String)} from rax into rbx
		0x18032BCD2: [!] Compares {'m_subs2' (type System.String[])} and 0
		0x18032BCD5: Jumps to 0x18032BD11 (which throws a NRE) if m_subs2 equals 0. Implicitly present in managed code, so ignored here.
		0x18032BCD7: [!] Compares {'message' (type System.String)} and 0
		0x18032BCDA: Jumps to 0x18032BCF0 if message equals 0 ;  - This is probably a goto, jumping to 0x18032BCF0 which is after end of current block @ 0x18032BCA4 (started at 0x18032BC6A)

		0x18032BCDC: Loads the class pointer from m_subs2 into a constant constant42 in register rdx
		0x18032BCDF: Copies {'message' (type System.String)} from rax into rcx
		0x18032BCE2: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='String', parentType=System.Object] and stores in register rdx
		0x18032BCEB: [!] Compares {'message' (type System.String)} and 0
		0x18032BCEE: Jumps to 0x18032BD2C if message equals 0 ;  - This is probably a goto, jumping to 0x18032BD2C which is after end of current block @ 0x18032BCA4 (started at 0x18032BC6A)

		0x18032BCF0: [!] Compares {Property System.Int32 System.Array::Length() on {'m_subs2' (type System.String[])}} and 1
		0x18032BCF4: Jumps to 0x18032BD3F (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'m_subs2' (type System.String[])}} is less than or equal to 1. Implicitly present in managed code, so ignored here.
		0x18032BCF6: Sets the value at offset 1 in array m_subs2 to {'message' (type System.String)}
		0x18032BCFA: Reads unknown value in stack, offset 32 (0x20) and stores the pointer in register rdi as new constant constant45
		0x18032BCFF: Reads unknown value in stack, offset 80 (0x50) and stores the pointer in register rsi as new constant constant46
		0x18032BD04: Reads unknown value in stack, offset 72 (0x48) and stores the pointer in register rbp as new constant constant47
		0x18032BD10: [!] Returns from the function

		0x18032BD13: [!] Constructs and throws an exception of kind System.NullReferenceException

		0x18032BD31: Copies {'local32' (type System.NullReferenceException)} from rax into rcx



	Generated Pseudocode:

	Declaring Type: TagItem
	System.Void AfterParse()
		System.String[] m_subs = this.m_subs
		ulong local2 = 0
		System.String local3 = m_subs[1]

		System.Boolean boolean = System.Int32.TryParse(local3, local2) //(String s, Int32& result)

		if (boolean == False)
		    ulong local6 = 0

		    ItemDataParam itemDataParam = DataManager.GetItemDataParam()
		    System.Collections.Generic.List`1<System.Int32> list = new System.Collections.Generic.List`1<System.Int32>()

		    list..ctor()
		    System.Collections.Generic.List`1<ItemDataParam/ItemParam> param = itemDataParam.param

		    System.Int32 count = param.Count

		    if (local2 < count)
		        System.Collections.Generic.List`1<ItemDataParam/ItemParam> param2 = itemDataParam.param

		        ItemDataParam/ItemParam item = param2.Item
		        System.Int32 itemId = item.itemId

		        list.Add(itemId) //(T item)
		        local2 += 1
		    endif
            

		    System.Int32 randomId = base.GetRandomId(list) //(List`1 idList)

		    ItemDataParam/ItemParam itemData = DataManager.GetItemData(randomId) //(Int32 itemId)
		else

		    if (local2 != -1)

		        ItemDataParam/ItemParam itemData2 = DataManager.GetItemData(local2) //(Int32 itemId)
		    else
		        ulong local20 = 0

		        ItemDataParam itemDataParam2 = DataManager.GetItemDataParam()
		        System.Collections.Generic.List`1<ItemDataParam/ItemParam> param3 = itemDataParam2.param

		        ItemDataParam/ItemParam randomElement = base.GetRandomElement<ItemDataParam/ItemParam>(param3) //(List`1 list)
		    endif
            

		    if (randomElement == 0)
                goto INSN_18032BCFA
            endif
		    SceUILabel m_sceLabel = this.m_sceLabel
		    System.Int32 itemId2 = randomElement.itemId

		    m_sceLabel.RandomId = itemId2
		    System.String nameDisplayId = randomElement.nameDisplayId
		    System.String[] m_subs2 = this.m_subs

		    System.String message = DisplayManager.GetMessage(nameDisplayId) //(String enumStr)

		    if (message == 0)
                goto INSN_18032BCF0
            endif

		    if (message == 0)
                goto INSN_18032BD2C
            endif

		    INSN_18032BCF0:
		    m_subs2[1] = message

		    INSN_18032BCFA:
		    return
		    throw new System.NullReferenceException()

		    INSN_18032BD2C:


Generated IL:
	IL_0000: ldarg.0
	IL_0001: ldfld System.String[] TagBase::m_subs
	IL_0006: stloc.0
	IL_0007: ldc.i4.0
	IL_0008: stloc.1
	IL_0009: ldloc.0
	IL_000a: ldc.i4.1
	IL_000b: ldelem.any System.String
	IL_0010: ldloc.1
	IL_0011: call System.Boolean System.Int32::TryParse(System.String,System.Int32&)
	IL_0016: ldc.i4.0
	IL_0017: bne.un.s IL_0069
	IL_0019: ldc.i4.0
	IL_001a: stloc.2
	IL_001b: call ItemDataParam DataManager::GetItemDataParam()
	IL_0020: stloc.3
	IL_0021: newobj System.Void System.Collections.Generic.List`1::.ctor()
	IL_0026: stloc.s V_4
	IL_0028: ldloc.3
	IL_0029: ldfld System.Collections.Generic.List`1<ItemDataParam/ItemParam> ItemDataParam::param
	IL_002e: call System.Int32 System.Collections.Generic.List`1::get_Count()
	IL_0033: stloc.s V_5
	IL_0035: ldloc.1
	IL_0036: ldloc.s V_5
	IL_0038: bge.s IL_005a
	IL_003a: ldloc.3
	IL_003b: ldfld System.Collections.Generic.List`1<ItemDataParam/ItemParam> ItemDataParam::param
	IL_0040: ldloc.1
	IL_0041: call T System.Collections.Generic.List`1::get_Item(System.Int32)
	IL_0046: ldfld System.Int32 ItemDataParam/ItemParam::itemId
	IL_004b: stloc.s V_6
	IL_004d: ldloc.s V_4
	IL_004f: ldloc.s V_6
	IL_0051: call System.Void System.Collections.Generic.List`1::Add(T)
	IL_0056: ldloc.1
	IL_0057: ldc.i4.1
	IL_0058: add
	IL_0059: stloc.1
	IL_005a: ldarg.0
	IL_005b: ldloc.s V_4
	IL_005d: call System.Int32 TagBase::GetRandomId(System.Collections.Generic.List`1)
	IL_0062: call ItemDataParam/ItemParam DataManager::GetItemData(System.Int32)
	IL_0067: stloc.s V_7
	IL_0069: ldloc.1
	IL_006a: ldc.i4.m1
	IL_006b: beq.s IL_0075
	IL_006d: ldloc.1
	IL_006e: call ItemDataParam/ItemParam DataManager::GetItemData(System.Int32)
	IL_0073: stloc.s V_8
	IL_0075: ldc.i4.0
	IL_0076: stloc.s V_9
	IL_0078: call ItemDataParam DataManager::GetItemDataParam()
	IL_007d: ldfld System.Collections.Generic.List`1<ItemDataParam/ItemParam> ItemDataParam::param
	IL_0082: stloc.s V_10
	IL_0084: ldarg.0
	IL_0085: ldloc.s V_10
	IL_0087: call T TagBase::GetRandomElement<ItemDataParam/ItemParam>(System.Collections.Generic.List`1)
	IL_008c: stloc.s V_11
	IL_008e: ldloc.s V_11
	IL_0090: ldc.i4.0
	IL_0091: beq.s IL_00de
	IL_0093: ldarg.0
	IL_0094: ldfld SceUILabel TagBase::m_sceLabel
	IL_0099: stloc.s V_12
	IL_009b: ldloc.s V_11
	IL_009d: ldfld System.Int32 ItemDataParam/ItemParam::itemId
	IL_00a2: stloc.s V_13
	IL_00a4: ldloc.s V_12
	IL_00a6: ldloc.s V_13
	IL_00a8: call System.Void SceUILabel::set_RandomId(System.Int32)
	IL_00ad: ldloc.s V_11
	IL_00af: ldfld System.String ItemDataParam/ItemParam::nameDisplayId
	IL_00b4: stloc.s V_14
	IL_00b6: ldarg.0
	IL_00b7: ldfld System.String[] TagBase::m_subs
	IL_00bc: stloc.s V_15
	IL_00be: ldloc.s V_14
	IL_00c0: call System.String DisplayManager::GetMessage(System.String)
	IL_00c5: stloc.s V_16
	IL_00c7: ldloc.s V_16
	IL_00c9: ldc.i4.0
	IL_00ca: beq.s IL_00d4
	IL_00cc: ldloc.s V_16
	IL_00ce: ldc.i4.0
	IL_00cf: beq IL_0000
	IL_00d4: ldloc.s V_15
	IL_00d6: ldc.i4.1
	IL_00d7: ldloc.s V_16
	IL_00d9: stelem.any System.String
	IL_00de: ret
	IL_00df: newobj System.Void System.NullReferenceException::.ctor()
	IL_00e4: throw
	

