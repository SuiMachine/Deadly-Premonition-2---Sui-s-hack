Type: C024_SideQuest_Define

Method: System.Void C024_SideQuest_Define::.ctor():	Method Body (x86 ASM):
		0x1802068B0 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1802068B2 jmp near ptr 0000000180207540h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802068B7 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.Void C024_SideQuest_Define::.ctor():
		End of function at 0x1802068B8
		Absolute End is at 0x1802068B8
		Identified Jump Destination addresses:

		0x1802068B2: [!] Calls managed method System.Void System.Object::.ctor() on instance {'this' (function parameter, type C024_SideQuest_Define)}

		0x1802068B2: [!] Returns from the function




	Generated Pseudocode:

	Declaring Type: C024_SideQuest_Define
	System.Void .ctor()

		base..ctor()
		return


Generated IL:
	IL_0000: ldarg.0
	IL_0001: call System.Void System.Object::.ctor()
	IL_0006: ret
	

Method: System.Void C024_SideQuest_Define::.cctor():	Method Body (x86 ASM):
		0x18021E240 mov [rsp+8],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RSP | 8 | None ||| N/A | N/A
		0x18021E245 push rdi		; DEBUG: {Register}/RDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18021E246 sub rsp,20h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 32
		0x18021E24A cmp byte ptr [18183D2D4h],0		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6467867348 | None ||| N/A | 0
		0x18021E251 jne short 000000018021E265h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E253 mov ecx,[181516070h]		; DEBUG: {Register}/ECX {Memory}/None ||| RIP | 6464561264 | None ||| N/A | N/A
		0x18021E259 call 00000001800FEB90h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E25E mov byte ptr [18183D2D4h],1		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6467867348 | None ||| N/A | 1
		0x18021E265 mov rcx,[181884F78h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468161400 | None ||| N/A | N/A
		0x18021E26C mov edx,1Ah		; DEBUG: {Register}/EDX {Immediate32}/None ||| None | 0 | None ||| N/A | 26
		0x18021E271 call 0000000180141320h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E276 mov rcx,[181884228h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468157992 | None ||| N/A | N/A
		0x18021E27D mov rdi,rax		; DEBUG: {Register}/RDI {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021E280 mov rbx,[181875F68h]		; DEBUG: {Register}/RBX {Memory}/None ||| RIP | 6468099944 | None ||| N/A | N/A
		0x18021E287 test byte ptr [rcx+127h],2		; DEBUG: {Memory}/None {Immediate8}/None ||| RCX | 295 | None ||| N/A | 2
		0x18021E28E je short 000000018021E29Eh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E290 cmp dword ptr [rcx+0D8h],0		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RCX | 216 | None ||| N/A | 0
		0x18021E297 jne short 000000018021E29Eh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E299 call 000000018010EAF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E29E xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021E2A0 mov rcx,rbx		; DEBUG: {Register}/RCX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x18021E2A3 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E2A8 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021E2AB test rdi,rdi		; DEBUG: {Register}/RDI {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x18021E2AE je near ptr 000000018021E886h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E2B4 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021E2B7 je short 000000018021E2D1h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E2B9 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18021E2BC mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021E2BF mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18021E2C3 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E2C8 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021E2CB je near ptr 000000018021E88Eh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E2D1 cmp dword ptr [rdi+18h],1		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 1
		0x18021E2D5 jbe near ptr 000000018021E8A1h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E2DB mov [rdi+28h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 40 | None ||| N/A | N/A
		0x18021E2DF xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021E2E1 mov rcx,[181875F78h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468099960 | None ||| N/A | N/A
		0x18021E2E8 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E2ED mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021E2F0 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021E2F3 je short 000000018021E30Dh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E2F5 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18021E2F8 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021E2FB mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18021E2FF call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E304 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021E307 je near ptr 000000018021E8B4h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E30D cmp dword ptr [rdi+18h],2		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 2
		0x18021E311 jbe near ptr 000000018021E8C7h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E317 mov [rdi+30h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 48 | None ||| N/A | N/A
		0x18021E31B xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021E31D mov rcx,[181875FA8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468100008 | None ||| N/A | N/A
		0x18021E324 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E329 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021E32C test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021E32F je short 000000018021E349h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E331 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18021E334 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021E337 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18021E33B call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E340 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021E343 je near ptr 000000018021E8DAh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E349 cmp dword ptr [rdi+18h],3		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 3
		0x18021E34D jbe near ptr 000000018021E8EDh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E353 mov [rdi+38h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 56 | None ||| N/A | N/A
		0x18021E357 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021E359 mov rcx,[181875FD8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468100056 | None ||| N/A | N/A
		0x18021E360 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E365 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021E368 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021E36B je short 000000018021E385h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E36D mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18021E370 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021E373 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18021E377 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E37C test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021E37F je near ptr 000000018021E900h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E385 cmp dword ptr [rdi+18h],4		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 4
		0x18021E389 jbe near ptr 000000018021E913h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E38F mov [rdi+40h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 64 | None ||| N/A | N/A
		0x18021E393 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021E395 mov rcx,[181876008h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468100104 | None ||| N/A | N/A
		0x18021E39C call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E3A1 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021E3A4 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021E3A7 je short 000000018021E3C1h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E3A9 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18021E3AC mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021E3AF mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18021E3B3 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E3B8 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021E3BB je near ptr 000000018021E926h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E3C1 cmp dword ptr [rdi+18h],5		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 5
		0x18021E3C5 jbe near ptr 000000018021E939h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E3CB mov [rdi+48h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 72 | None ||| N/A | N/A
		0x18021E3CF xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021E3D1 mov rcx,[181876018h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468100120 | None ||| N/A | N/A
		0x18021E3D8 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E3DD mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021E3E0 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021E3E3 je short 000000018021E3FDh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E3E5 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18021E3E8 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021E3EB mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18021E3EF call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E3F4 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021E3F7 je near ptr 000000018021E94Ch		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E3FD cmp dword ptr [rdi+18h],6		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 6
		0x18021E401 jbe near ptr 000000018021E95Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E407 mov [rdi+50h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 80 | None ||| N/A | N/A
		0x18021E40B xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021E40D mov rcx,[181876058h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468100184 | None ||| N/A | N/A
		0x18021E414 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E419 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021E41C test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021E41F je short 000000018021E439h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E421 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18021E424 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021E427 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18021E42B call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E430 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021E433 je near ptr 000000018021E972h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E439 cmp dword ptr [rdi+18h],7		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 7
		0x18021E43D jbe near ptr 000000018021E985h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E443 mov [rdi+58h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 88 | None ||| N/A | N/A
		0x18021E447 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021E449 mov rcx,[181876068h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468100200 | None ||| N/A | N/A
		0x18021E450 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E455 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021E458 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021E45B je short 000000018021E475h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E45D mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18021E460 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021E463 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18021E467 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E46C test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021E46F je near ptr 000000018021E998h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E475 cmp dword ptr [rdi+18h],8		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 8
		0x18021E479 jbe near ptr 000000018021E9ABh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E47F mov [rdi+60h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 96 | None ||| N/A | N/A
		0x18021E483 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021E485 mov rcx,[1818760A0h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468100256 | None ||| N/A | N/A
		0x18021E48C call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E491 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021E494 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021E497 je short 000000018021E4B1h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E499 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18021E49C mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021E49F mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18021E4A3 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E4A8 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021E4AB je near ptr 000000018021E9BEh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E4B1 cmp dword ptr [rdi+18h],9		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 9
		0x18021E4B5 jbe near ptr 000000018021E9D1h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E4BB mov [rdi+68h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 104 | None ||| N/A | N/A
		0x18021E4BF xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021E4C1 mov rcx,[1818760C8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468100296 | None ||| N/A | N/A
		0x18021E4C8 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E4CD mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021E4D0 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021E4D3 je short 000000018021E4EDh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E4D5 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18021E4D8 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021E4DB mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18021E4DF call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E4E4 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021E4E7 je near ptr 000000018021E9E4h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E4ED cmp dword ptr [rdi+18h],0Ah		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 10
		0x18021E4F1 jbe near ptr 000000018021E9F7h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E4F7 mov [rdi+70h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 112 | None ||| N/A | N/A
		0x18021E4FB xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021E4FD mov rcx,[1818760E0h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468100320 | None ||| N/A | N/A
		0x18021E504 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E509 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021E50C test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021E50F je short 000000018021E529h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E511 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18021E514 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021E517 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18021E51B call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E520 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021E523 je near ptr 000000018021EA0Ah		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E529 cmp dword ptr [rdi+18h],0Bh		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 11
		0x18021E52D jbe near ptr 000000018021EA1Dh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E533 mov [rdi+78h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 120 | None ||| N/A | N/A
		0x18021E537 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021E539 mov rcx,[181876118h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468100376 | None ||| N/A | N/A
		0x18021E540 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E545 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021E548 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021E54B je short 000000018021E565h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E54D mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18021E550 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021E553 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18021E557 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E55C test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021E55F je near ptr 000000018021EA30h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E565 cmp dword ptr [rdi+18h],0Ch		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 12
		0x18021E569 jbe near ptr 000000018021EA43h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E56F mov [rdi+80h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 128 | None ||| N/A | N/A
		0x18021E576 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021E578 mov rcx,[181876138h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468100408 | None ||| N/A | N/A
		0x18021E57F call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E584 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021E587 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021E58A je short 000000018021E5A4h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E58C mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18021E58F mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021E592 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18021E596 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E59B test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021E59E je near ptr 000000018021EA56h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E5A4 cmp dword ptr [rdi+18h],0Dh		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 13
		0x18021E5A8 jbe near ptr 000000018021EA69h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E5AE mov [rdi+88h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 136 | None ||| N/A | N/A
		0x18021E5B5 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021E5B7 mov rcx,[181876168h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468100456 | None ||| N/A | N/A
		0x18021E5BE call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E5C3 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021E5C6 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021E5C9 je short 000000018021E5E3h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E5CB mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18021E5CE mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021E5D1 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18021E5D5 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E5DA test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021E5DD je near ptr 000000018021EA7Ch		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E5E3 cmp dword ptr [rdi+18h],0Eh		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 14
		0x18021E5E7 jbe near ptr 000000018021EA8Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E5ED mov [rdi+90h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 144 | None ||| N/A | N/A
		0x18021E5F4 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021E5F6 mov rcx,[1818761A0h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468100512 | None ||| N/A | N/A
		0x18021E5FD call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E602 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021E605 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021E608 je short 000000018021E622h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E60A mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18021E60D mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021E610 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18021E614 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E619 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021E61C je near ptr 000000018021EAA2h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E622 cmp dword ptr [rdi+18h],0Fh		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 15
		0x18021E626 jbe near ptr 000000018021EAB5h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E62C mov [rdi+98h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 152 | None ||| N/A | N/A
		0x18021E633 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021E635 mov rcx,[1818761C8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468100552 | None ||| N/A | N/A
		0x18021E63C call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E641 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021E644 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021E647 je short 000000018021E661h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E649 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18021E64C mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021E64F mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18021E653 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E658 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021E65B je near ptr 000000018021EAC8h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E661 cmp dword ptr [rdi+18h],10h		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 16
		0x18021E665 jbe near ptr 000000018021EADBh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E66B mov [rdi+0A0h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 160 | None ||| N/A | N/A
		0x18021E672 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021E674 mov rcx,[1818761E0h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468100576 | None ||| N/A | N/A
		0x18021E67B call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E680 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021E683 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021E686 je short 000000018021E6A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E688 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18021E68B mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021E68E mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18021E692 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E697 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021E69A je near ptr 000000018021EAEEh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E6A0 cmp dword ptr [rdi+18h],11h		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 17
		0x18021E6A4 jbe near ptr 000000018021EB01h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E6AA mov [rdi+0A8h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 168 | None ||| N/A | N/A
		0x18021E6B1 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021E6B3 mov rcx,[1818761F8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468100600 | None ||| N/A | N/A
		0x18021E6BA call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E6BF mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021E6C2 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021E6C5 je short 000000018021E6DFh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E6C7 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18021E6CA mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021E6CD mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18021E6D1 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E6D6 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021E6D9 je near ptr 000000018021EB14h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E6DF cmp dword ptr [rdi+18h],12h		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 18
		0x18021E6E3 jbe near ptr 000000018021EB27h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E6E9 mov [rdi+0B0h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 176 | None ||| N/A | N/A
		0x18021E6F0 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021E6F2 mov rcx,[181876240h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468100672 | None ||| N/A | N/A
		0x18021E6F9 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E6FE mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021E701 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021E704 je short 000000018021E71Eh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E706 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18021E709 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021E70C mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18021E710 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E715 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021E718 je near ptr 000000018021EB3Ah		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E71E cmp dword ptr [rdi+18h],13h		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 19
		0x18021E722 jbe near ptr 000000018021EB4Dh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E728 mov [rdi+0B8h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 184 | None ||| N/A | N/A
		0x18021E72F xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021E731 mov rcx,[181876260h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468100704 | None ||| N/A | N/A
		0x18021E738 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E73D mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021E740 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021E743 je short 000000018021E75Dh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E745 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18021E748 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021E74B mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18021E74F call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E754 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021E757 je near ptr 000000018021EB60h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E75D cmp dword ptr [rdi+18h],14h		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 20
		0x18021E761 jbe near ptr 000000018021EB73h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E767 mov [rdi+0C0h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 192 | None ||| N/A | N/A
		0x18021E76E xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021E770 mov rcx,[181876270h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468100720 | None ||| N/A | N/A
		0x18021E777 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E77C mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021E77F test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021E782 je short 000000018021E79Ch		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E784 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18021E787 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021E78A mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18021E78E call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E793 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021E796 je near ptr 000000018021EB86h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E79C cmp dword ptr [rdi+18h],15h		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 21
		0x18021E7A0 jbe near ptr 000000018021EB99h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E7A6 mov [rdi+0C8h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 200 | None ||| N/A | N/A
		0x18021E7AD xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021E7AF mov rcx,[1818762B8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468100792 | None ||| N/A | N/A
		0x18021E7B6 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E7BB mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021E7BE test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021E7C1 je short 000000018021E7DBh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E7C3 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18021E7C6 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021E7C9 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18021E7CD call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E7D2 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021E7D5 je near ptr 000000018021EBACh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E7DB cmp dword ptr [rdi+18h],16h		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 22
		0x18021E7DF jbe near ptr 000000018021EBBFh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E7E5 mov [rdi+0D0h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 208 | None ||| N/A | N/A
		0x18021E7EC xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021E7EE mov rcx,[1818762D0h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468100816 | None ||| N/A | N/A
		0x18021E7F5 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E7FA mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021E7FD test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021E800 je short 000000018021E81Ah		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E802 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18021E805 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021E808 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18021E80C call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E811 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021E814 je near ptr 000000018021EBD2h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E81A cmp dword ptr [rdi+18h],17h		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 23
		0x18021E81E jbe near ptr 000000018021EBE5h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E824 mov [rdi+0D8h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 216 | None ||| N/A | N/A
		0x18021E82B xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021E82D mov rcx,[1818762F0h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468100848 | None ||| N/A | N/A
		0x18021E834 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E839 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021E83C test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021E83F je short 000000018021E859h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E841 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18021E844 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021E847 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18021E84B call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E850 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021E853 je near ptr 000000018021EBF8h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E859 cmp dword ptr [rdi+18h],18h		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 24
		0x18021E85D jbe near ptr 000000018021EC0Bh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E863 mov [rdi+0E0h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 224 | None ||| N/A | N/A
		0x18021E86A mov rax,[18189BAE0h]		; DEBUG: {Register}/RAX {Memory}/None ||| RIP | 6468254432 | None ||| N/A | N/A
		0x18021E871 mov rbx,[rsp+30h]		; DEBUG: {Register}/RBX {Memory}/None ||| RSP | 48 | None ||| N/A | N/A
		0x18021E876 mov rcx,[rax+0B8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RAX | 184 | None ||| N/A | N/A
		0x18021E87D mov [rcx],rdi		; DEBUG: {Memory}/None {Register}/RDI ||| RCX | 0 | None ||| N/A | N/A
		0x18021E880 add rsp,20h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 32
		0x18021E884 pop rdi		; DEBUG: {Register}/RDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18021E885 ret		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18021E886 xor ecx,ecx		; DEBUG: {Register}/ECX {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x18021E888 call 000000018012BDA0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E88D int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18021E88E call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E893 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021E896 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18021E899 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021E89B call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E8A0 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18021E8B4 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E8B9 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021E8BC xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18021E8BF xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021E8C1 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E8C6 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18021E8DA call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E8DF mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021E8E2 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18021E8E5 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021E8E7 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E8EC int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18021E900 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E905 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021E908 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18021E90B xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021E90D call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E912 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18021E926 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E92B mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021E92E xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18021E931 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021E933 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E938 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18021E94C call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E951 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021E954 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18021E957 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021E959 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E95E int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18021E972 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E977 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021E97A xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18021E97D xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021E97F call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E984 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18021E998 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E99D mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021E9A0 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18021E9A3 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021E9A5 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E9AA int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18021E9BE call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E9C3 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021E9C6 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18021E9C9 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021E9CB call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E9D0 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18021E9E4 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E9E9 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021E9EC xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18021E9EF xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021E9F1 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021E9F6 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18021EA0A call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021EA0F mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021EA12 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18021EA15 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021EA17 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021EA1C int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18021EA30 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021EA35 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021EA38 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18021EA3B xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021EA3D call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021EA42 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18021EA56 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021EA5B mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021EA5E xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18021EA61 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021EA63 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021EA68 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18021EA7C call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021EA81 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021EA84 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18021EA87 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021EA89 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021EA8E int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18021EAA2 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021EAA7 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021EAAA xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18021EAAD xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021EAAF call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021EAB4 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18021EAC8 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021EACD mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021EAD0 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18021EAD3 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021EAD5 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021EADA int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18021EAEE call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021EAF3 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021EAF6 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18021EAF9 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021EAFB call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021EB00 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18021EB14 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021EB19 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021EB1C xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18021EB1F xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021EB21 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021EB26 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18021EB3A call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021EB3F mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021EB42 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18021EB45 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021EB47 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021EB4C int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18021EB60 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021EB65 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021EB68 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18021EB6B xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021EB6D call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021EB72 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18021EB86 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021EB8B mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021EB8E xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18021EB91 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021EB93 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021EB98 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18021EBAC call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021EBB1 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021EBB4 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18021EBB7 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021EBB9 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021EBBE int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18021EBD2 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021EBD7 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021EBDA xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18021EBDD xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021EBDF call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021EBE4 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18021EBF8 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021EBFD mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18021EC00 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18021EC03 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18021EC05 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18021EC0A int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Static Method System.Void C024_SideQuest_Define::.cctor():
		End of function at 0x18021EC0B
		Absolute End is at 0x18021EC0B
		Identified Jump Destination addresses:

		0x18021E245: Saves the content of rdi to the stack
		0x18021E24A: Compares {Unknown Global at 0x18183D2D4, first ten bytes are [0 0 0 0 0 0 0 0 0 0], or as chars "          "} and 0
		0x18021E251: Jumps to 0x18021E265 if {Unknown Global at 0x18183D2D4, first ten bytes are [0 0 0 0 0 0 0 0 0 0], or as chars "          "} != 0

		0x18021E253: Loads string "ð" into register rcx as constant {'constant3' (constant value of type Cpp2IL.Core.Analysis.ResultModels.Il2CppString)}
		0x18021E259: Attempts to load the il2cpp metadata for this method (method id 0) and init it cpp-side.

		0x18021E265: Loads the type definition for managed type System.Type[] as a constant "Type[]" in rcx
		0x18021E26C: [!] Writes the constant 0x1A into operand 26 (type UInt64) in register rdx
		0x18021E271: [!] Allocates an array of type System.Type[] of size 26 and stores the result as local0 in register rax

		0x18021E276: Loads the type definition for managed type System.Type as a constant "Type" in rcx
		0x18021E27D: Copies {'local0' (type System.Type[])} from rax into rdi
		0x18021E280: Loads the type definition for managed type ESerifSideQ_Pol_C024_1000 as a constant "ESerifSideQ_Pol_C024_1000" in rbx
		0x18021E287: Compares "{il2cpp field on {'Type' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" and 2
		0x18021E28E: Jumps to 0x18021E29E if "{il2cpp field on {'Type' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" equals 2

		0x18021E290: Compares "{il2cpp field on {'Type' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" and 0
		0x18021E297: Jumps to 0x18021E29E if "{il2cpp field on {'Type' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" != 0

		0x18021E299: Calls the il2cpp cctor for the type System.Type
		0x18021E2A0: Copies {'ESerifSideQ_Pol_C024_1000' (constant value of type Mono.Cecil.TypeReference)} from rbx into rcx
		0x18021E2A3: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C024_1000' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle' (type System.Type)}

		0x18021E2A8: Copies {'typeFromHandle' (type System.Type)} from rax into rbx
		0x18021E2AB: [!] Compares {'local0' (type System.Type[])} and 0
		0x18021E2AE: Jumps to 0x18021E886 (which throws a NRE) if local0 equals 0. Implicitly present in managed code, so ignored here.
		0x18021E2B4: [!] Compares {'typeFromHandle' (type System.Type)} and 0
		0x18021E2B7: Jumps to 0x18021E2D1 (which is an if statement's body) if typeFromHandle equals 0 ;  - Increasing indentation - is standard if, unimportant is False

		0x18021E2B9: Loads the class pointer from local0 into a constant constant14 in register rdx
		0x18021E2BC: Copies {'typeFromHandle' (type System.Type)} from rax into rcx
		0x18021E2BF: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18021E2C8: [!] Compares {'typeFromHandle' (type System.Type)} and 0
		0x18021E2CB: Jumps to 0x18021E88E if typeFromHandle equals 0 ;  - This is probably a goto, jumping to 0x18021E88E which is after end of current block @ 0x18021E2D1 (started at 0x18021E2B9)

		0x18021E2D1: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 1
		0x18021E2D5: Jumps to 0x18021E8A1 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 1. Implicitly present in managed code, so ignored here.
		0x18021E2DB: Sets the value at offset 1 in array local0 to {'typeFromHandle' (type System.Type)}
		0x18021E2E1: Loads the type definition for managed type ESerifSideQ_Pol_C024_1001 as a constant "ESerifSideQ_Pol_C024_1001" in rcx
		0x18021E2E8: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C024_1001' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle2' (type System.Type)}

		0x18021E2ED: Copies {'typeFromHandle2' (type System.Type)} from rax into rbx
		0x18021E2F0: [!] Compares {'typeFromHandle2' (type System.Type)} and 0
		0x18021E2F3: Jumps to 0x18021E30D if typeFromHandle2 equals 0 ;  - This is probably a goto, jumping to 0x18021E30D which is after end of current block @ 0x18021E2D1 (started at 0x18021E2B9)

		0x18021E2F5: Loads the class pointer from local0 into a constant constant19 in register rdx
		0x18021E2F8: Copies {'typeFromHandle2' (type System.Type)} from rax into rcx
		0x18021E2FB: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18021E304: [!] Compares {'typeFromHandle2' (type System.Type)} and 0
		0x18021E307: Jumps to 0x18021E8B4 if typeFromHandle2 equals 0 ;  - This is probably a goto, jumping to 0x18021E8B4 which is after end of current block @ 0x18021E2D1 (started at 0x18021E2B9)

		0x18021E30D: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 2
		0x18021E311: Jumps to 0x18021E8C7 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 2. Implicitly present in managed code, so ignored here.
		0x18021E317: Sets the value at offset 2 in array local0 to {'typeFromHandle2' (type System.Type)}
		0x18021E31D: Loads the type definition for managed type ESerifSideQ_Pol_C024_1002 as a constant "ESerifSideQ_Pol_C024_1002" in rcx
		0x18021E324: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C024_1002' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle3' (type System.Type)}

		0x18021E329: Copies {'typeFromHandle3' (type System.Type)} from rax into rbx
		0x18021E32C: [!] Compares {'typeFromHandle3' (type System.Type)} and 0
		0x18021E32F: Jumps to 0x18021E349 if typeFromHandle3 equals 0 ;  - This is probably a goto, jumping to 0x18021E349 which is after end of current block @ 0x18021E2D1 (started at 0x18021E2B9)

		0x18021E331: Loads the class pointer from local0 into a constant constant24 in register rdx
		0x18021E334: Copies {'typeFromHandle3' (type System.Type)} from rax into rcx
		0x18021E337: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18021E340: [!] Compares {'typeFromHandle3' (type System.Type)} and 0
		0x18021E343: Jumps to 0x18021E8DA if typeFromHandle3 equals 0 ;  - This is probably a goto, jumping to 0x18021E8DA which is after end of current block @ 0x18021E2D1 (started at 0x18021E2B9)

		0x18021E349: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 3
		0x18021E34D: Jumps to 0x18021E8ED (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 3. Implicitly present in managed code, so ignored here.
		0x18021E353: Sets the value at offset 3 in array local0 to {'typeFromHandle3' (type System.Type)}
		0x18021E359: Loads the type definition for managed type ESerifSideQ_Pol_C024_1003 as a constant "ESerifSideQ_Pol_C024_1003" in rcx
		0x18021E360: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C024_1003' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle4' (type System.Type)}

		0x18021E365: Copies {'typeFromHandle4' (type System.Type)} from rax into rbx
		0x18021E368: [!] Compares {'typeFromHandle4' (type System.Type)} and 0
		0x18021E36B: Jumps to 0x18021E385 if typeFromHandle4 equals 0 ;  - This is probably a goto, jumping to 0x18021E385 which is after end of current block @ 0x18021E2D1 (started at 0x18021E2B9)

		0x18021E36D: Loads the class pointer from local0 into a constant constant29 in register rdx
		0x18021E370: Copies {'typeFromHandle4' (type System.Type)} from rax into rcx
		0x18021E373: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18021E37C: [!] Compares {'typeFromHandle4' (type System.Type)} and 0
		0x18021E37F: Jumps to 0x18021E900 if typeFromHandle4 equals 0 ;  - This is probably a goto, jumping to 0x18021E900 which is after end of current block @ 0x18021E2D1 (started at 0x18021E2B9)

		0x18021E385: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 4
		0x18021E389: Jumps to 0x18021E913 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 4. Implicitly present in managed code, so ignored here.
		0x18021E38F: Sets the value at offset 4 in array local0 to {'typeFromHandle4' (type System.Type)}
		0x18021E395: Loads the type definition for managed type ESerifSideQ_Pol_C024_1004 as a constant "ESerifSideQ_Pol_C024_1004" in rcx
		0x18021E39C: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C024_1004' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle5' (type System.Type)}

		0x18021E3A1: Copies {'typeFromHandle5' (type System.Type)} from rax into rbx
		0x18021E3A4: [!] Compares {'typeFromHandle5' (type System.Type)} and 0
		0x18021E3A7: Jumps to 0x18021E3C1 if typeFromHandle5 equals 0 ;  - This is probably a goto, jumping to 0x18021E3C1 which is after end of current block @ 0x18021E2D1 (started at 0x18021E2B9)

		0x18021E3A9: Loads the class pointer from local0 into a constant constant34 in register rdx
		0x18021E3AC: Copies {'typeFromHandle5' (type System.Type)} from rax into rcx
		0x18021E3AF: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18021E3B8: [!] Compares {'typeFromHandle5' (type System.Type)} and 0
		0x18021E3BB: Jumps to 0x18021E926 if typeFromHandle5 equals 0 ;  - This is probably a goto, jumping to 0x18021E926 which is after end of current block @ 0x18021E2D1 (started at 0x18021E2B9)

		0x18021E3C1: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 5
		0x18021E3C5: Jumps to 0x18021E939 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 5. Implicitly present in managed code, so ignored here.
		0x18021E3CB: Sets the value at offset 5 in array local0 to {'typeFromHandle5' (type System.Type)}
		0x18021E3D1: Loads the type definition for managed type ESerifSideQ_Pol_C024_1005 as a constant "ESerifSideQ_Pol_C024_1005" in rcx
		0x18021E3D8: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C024_1005' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle6' (type System.Type)}

		0x18021E3DD: Copies {'typeFromHandle6' (type System.Type)} from rax into rbx
		0x18021E3E0: [!] Compares {'typeFromHandle6' (type System.Type)} and 0
		0x18021E3E3: Jumps to 0x18021E3FD if typeFromHandle6 equals 0 ;  - This is probably a goto, jumping to 0x18021E3FD which is after end of current block @ 0x18021E2D1 (started at 0x18021E2B9)

		0x18021E3E5: Loads the class pointer from local0 into a constant constant39 in register rdx
		0x18021E3E8: Copies {'typeFromHandle6' (type System.Type)} from rax into rcx
		0x18021E3EB: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18021E3F4: [!] Compares {'typeFromHandle6' (type System.Type)} and 0
		0x18021E3F7: Jumps to 0x18021E94C if typeFromHandle6 equals 0 ;  - This is probably a goto, jumping to 0x18021E94C which is after end of current block @ 0x18021E2D1 (started at 0x18021E2B9)

		0x18021E3FD: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 6
		0x18021E401: Jumps to 0x18021E95F (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 6. Implicitly present in managed code, so ignored here.
		0x18021E407: Sets the value at offset 6 in array local0 to {'typeFromHandle6' (type System.Type)}
		0x18021E40D: Loads the type definition for managed type ESerifSideQ_Pol_C024_1006 as a constant "ESerifSideQ_Pol_C024_1006" in rcx
		0x18021E414: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C024_1006' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle7' (type System.Type)}

		0x18021E419: Copies {'typeFromHandle7' (type System.Type)} from rax into rbx
		0x18021E41C: [!] Compares {'typeFromHandle7' (type System.Type)} and 0
		0x18021E41F: Jumps to 0x18021E439 if typeFromHandle7 equals 0 ;  - This is probably a goto, jumping to 0x18021E439 which is after end of current block @ 0x18021E2D1 (started at 0x18021E2B9)

		0x18021E421: Loads the class pointer from local0 into a constant constant44 in register rdx
		0x18021E424: Copies {'typeFromHandle7' (type System.Type)} from rax into rcx
		0x18021E427: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18021E430: [!] Compares {'typeFromHandle7' (type System.Type)} and 0
		0x18021E433: Jumps to 0x18021E972 if typeFromHandle7 equals 0 ;  - This is probably a goto, jumping to 0x18021E972 which is after end of current block @ 0x18021E2D1 (started at 0x18021E2B9)

		0x18021E439: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 7
		0x18021E43D: Jumps to 0x18021E985 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 7. Implicitly present in managed code, so ignored here.
		0x18021E443: Sets the value at offset 7 in array local0 to {'typeFromHandle7' (type System.Type)}
		0x18021E449: Loads the type definition for managed type ESerifSideQ_Pol_C024_2000 as a constant "ESerifSideQ_Pol_C024_2000" in rcx
		0x18021E450: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C024_2000' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle8' (type System.Type)}

		0x18021E455: Copies {'typeFromHandle8' (type System.Type)} from rax into rbx
		0x18021E458: [!] Compares {'typeFromHandle8' (type System.Type)} and 0
		0x18021E45B: Jumps to 0x18021E475 if typeFromHandle8 equals 0 ;  - This is probably a goto, jumping to 0x18021E475 which is after end of current block @ 0x18021E2D1 (started at 0x18021E2B9)

		0x18021E45D: Loads the class pointer from local0 into a constant constant49 in register rdx
		0x18021E460: Copies {'typeFromHandle8' (type System.Type)} from rax into rcx
		0x18021E463: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18021E46C: [!] Compares {'typeFromHandle8' (type System.Type)} and 0
		0x18021E46F: Jumps to 0x18021E998 if typeFromHandle8 equals 0 ;  - This is probably a goto, jumping to 0x18021E998 which is after end of current block @ 0x18021E2D1 (started at 0x18021E2B9)

		0x18021E475: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 8
		0x18021E479: Jumps to 0x18021E9AB (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 8. Implicitly present in managed code, so ignored here.
		0x18021E47F: Sets the value at offset 8 in array local0 to {'typeFromHandle8' (type System.Type)}
		0x18021E485: Loads the type definition for managed type ESerifSideQ_Pol_C024_2001 as a constant "ESerifSideQ_Pol_C024_2001" in rcx
		0x18021E48C: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C024_2001' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle9' (type System.Type)}

		0x18021E491: Copies {'typeFromHandle9' (type System.Type)} from rax into rbx
		0x18021E494: [!] Compares {'typeFromHandle9' (type System.Type)} and 0
		0x18021E497: Jumps to 0x18021E4B1 if typeFromHandle9 equals 0 ;  - This is probably a goto, jumping to 0x18021E4B1 which is after end of current block @ 0x18021E2D1 (started at 0x18021E2B9)

		0x18021E499: Loads the class pointer from local0 into a constant constant54 in register rdx
		0x18021E49C: Copies {'typeFromHandle9' (type System.Type)} from rax into rcx
		0x18021E49F: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18021E4A8: [!] Compares {'typeFromHandle9' (type System.Type)} and 0
		0x18021E4AB: Jumps to 0x18021E9BE if typeFromHandle9 equals 0 ;  - This is probably a goto, jumping to 0x18021E9BE which is after end of current block @ 0x18021E2D1 (started at 0x18021E2B9)

		0x18021E4B1: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 9
		0x18021E4B5: Jumps to 0x18021E9D1 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 9. Implicitly present in managed code, so ignored here.
		0x18021E4BB: Sets the value at offset 9 in array local0 to {'typeFromHandle9' (type System.Type)}
		0x18021E4C1: Loads the type definition for managed type ESerifSideQ_Pol_C024_2002 as a constant "ESerifSideQ_Pol_C024_2002" in rcx
		0x18021E4C8: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C024_2002' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle10' (type System.Type)}

		0x18021E4CD: Copies {'typeFromHandle10' (type System.Type)} from rax into rbx
		0x18021E4D0: [!] Compares {'typeFromHandle10' (type System.Type)} and 0
		0x18021E4D3: Jumps to 0x18021E4ED if typeFromHandle10 equals 0 ;  - This is probably a goto, jumping to 0x18021E4ED which is after end of current block @ 0x18021E2D1 (started at 0x18021E2B9)

		0x18021E4D5: Loads the class pointer from local0 into a constant constant59 in register rdx
		0x18021E4D8: Copies {'typeFromHandle10' (type System.Type)} from rax into rcx
		0x18021E4DB: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18021E4E4: [!] Compares {'typeFromHandle10' (type System.Type)} and 0
		0x18021E4E7: Jumps to 0x18021E9E4 if typeFromHandle10 equals 0 ;  - This is probably a goto, jumping to 0x18021E9E4 which is after end of current block @ 0x18021E2D1 (started at 0x18021E2B9)

		0x18021E4ED: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 10
		0x18021E4F1: Jumps to 0x18021E9F7 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 10. Implicitly present in managed code, so ignored here.
		0x18021E4F7: Sets the value at offset 10 in array local0 to {'typeFromHandle10' (type System.Type)}
		0x18021E4FD: Loads the type definition for managed type ESerifSideQ_Pol_C024_2003 as a constant "ESerifSideQ_Pol_C024_2003" in rcx
		0x18021E504: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C024_2003' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle11' (type System.Type)}

		0x18021E509: Copies {'typeFromHandle11' (type System.Type)} from rax into rbx
		0x18021E50C: [!] Compares {'typeFromHandle11' (type System.Type)} and 0
		0x18021E50F: Jumps to 0x18021E529 if typeFromHandle11 equals 0 ;  - This is probably a goto, jumping to 0x18021E529 which is after end of current block @ 0x18021E2D1 (started at 0x18021E2B9)

		0x18021E511: Loads the class pointer from local0 into a constant constant64 in register rdx
		0x18021E514: Copies {'typeFromHandle11' (type System.Type)} from rax into rcx
		0x18021E517: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18021E520: [!] Compares {'typeFromHandle11' (type System.Type)} and 0
		0x18021E523: Jumps to 0x18021EA0A if typeFromHandle11 equals 0 ;  - This is probably a goto, jumping to 0x18021EA0A which is after end of current block @ 0x18021E2D1 (started at 0x18021E2B9)

		0x18021E529: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 11
		0x18021E52D: Jumps to 0x18021EA1D (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 11. Implicitly present in managed code, so ignored here.
		0x18021E533: Sets the value at offset 11 in array local0 to {'typeFromHandle11' (type System.Type)}
		0x18021E539: Loads the type definition for managed type ESerifSideQ_Pol_C024_2004 as a constant "ESerifSideQ_Pol_C024_2004" in rcx
		0x18021E540: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C024_2004' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle12' (type System.Type)}

		0x18021E545: Copies {'typeFromHandle12' (type System.Type)} from rax into rbx
		0x18021E548: [!] Compares {'typeFromHandle12' (type System.Type)} and 0
		0x18021E54B: Jumps to 0x18021E565 if typeFromHandle12 equals 0 ;  - This is probably a goto, jumping to 0x18021E565 which is after end of current block @ 0x18021E2D1 (started at 0x18021E2B9)

		0x18021E54D: Loads the class pointer from local0 into a constant constant69 in register rdx
		0x18021E550: Copies {'typeFromHandle12' (type System.Type)} from rax into rcx
		0x18021E553: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18021E55C: [!] Compares {'typeFromHandle12' (type System.Type)} and 0
		0x18021E55F: Jumps to 0x18021EA30 if typeFromHandle12 equals 0 ;  - This is probably a goto, jumping to 0x18021EA30 which is after end of current block @ 0x18021E2D1 (started at 0x18021E2B9)

		0x18021E565: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 12
		0x18021E569: Jumps to 0x18021EA43 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 12. Implicitly present in managed code, so ignored here.
		0x18021E56F: Sets the value at offset 12 in array local0 to {'typeFromHandle12' (type System.Type)}
		0x18021E578: Loads the type definition for managed type ESerifSideQ_Pol_C024_3000 as a constant "ESerifSideQ_Pol_C024_3000" in rcx
		0x18021E57F: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C024_3000' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle13' (type System.Type)}

		0x18021E584: Copies {'typeFromHandle13' (type System.Type)} from rax into rbx
		0x18021E587: [!] Compares {'typeFromHandle13' (type System.Type)} and 0
		0x18021E58A: Jumps to 0x18021E5A4 if typeFromHandle13 equals 0 ;  - This is probably a goto, jumping to 0x18021E5A4 which is after end of current block @ 0x18021E2D1 (started at 0x18021E2B9)

		0x18021E58C: Loads the class pointer from local0 into a constant constant74 in register rdx
		0x18021E58F: Copies {'typeFromHandle13' (type System.Type)} from rax into rcx
		0x18021E592: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18021E59B: [!] Compares {'typeFromHandle13' (type System.Type)} and 0
		0x18021E59E: Jumps to 0x18021EA56 if typeFromHandle13 equals 0 ;  - This is probably a goto, jumping to 0x18021EA56 which is after end of current block @ 0x18021E2D1 (started at 0x18021E2B9)

		0x18021E5A4: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 13
		0x18021E5A8: Jumps to 0x18021EA69 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 13. Implicitly present in managed code, so ignored here.
		0x18021E5AE: Sets the value at offset 13 in array local0 to {'typeFromHandle13' (type System.Type)}
		0x18021E5B7: Loads the type definition for managed type ESerifSideQ_Pol_C024_3001 as a constant "ESerifSideQ_Pol_C024_3001" in rcx
		0x18021E5BE: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C024_3001' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle14' (type System.Type)}

		0x18021E5C3: Copies {'typeFromHandle14' (type System.Type)} from rax into rbx
		0x18021E5C6: [!] Compares {'typeFromHandle14' (type System.Type)} and 0
		0x18021E5C9: Jumps to 0x18021E5E3 if typeFromHandle14 equals 0 ;  - This is probably a goto, jumping to 0x18021E5E3 which is after end of current block @ 0x18021E2D1 (started at 0x18021E2B9)

		0x18021E5CB: Loads the class pointer from local0 into a constant constant79 in register rdx
		0x18021E5CE: Copies {'typeFromHandle14' (type System.Type)} from rax into rcx
		0x18021E5D1: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18021E5DA: [!] Compares {'typeFromHandle14' (type System.Type)} and 0
		0x18021E5DD: Jumps to 0x18021EA7C if typeFromHandle14 equals 0 ;  - This is probably a goto, jumping to 0x18021EA7C which is after end of current block @ 0x18021E2D1 (started at 0x18021E2B9)

		0x18021E5E3: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 14
		0x18021E5E7: Jumps to 0x18021EA8F (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 14. Implicitly present in managed code, so ignored here.
		0x18021E5ED: Sets the value at offset 14 in array local0 to {'typeFromHandle14' (type System.Type)}
		0x18021E5F6: Loads the type definition for managed type ESerifSideQ_Pol_C024_3002 as a constant "ESerifSideQ_Pol_C024_3002" in rcx
		0x18021E5FD: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C024_3002' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle15' (type System.Type)}

		0x18021E602: Copies {'typeFromHandle15' (type System.Type)} from rax into rbx
		0x18021E605: [!] Compares {'typeFromHandle15' (type System.Type)} and 0
		0x18021E608: Jumps to 0x18021E622 if typeFromHandle15 equals 0 ;  - This is probably a goto, jumping to 0x18021E622 which is after end of current block @ 0x18021E2D1 (started at 0x18021E2B9)

		0x18021E60A: Loads the class pointer from local0 into a constant constant84 in register rdx
		0x18021E60D: Copies {'typeFromHandle15' (type System.Type)} from rax into rcx
		0x18021E610: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18021E619: [!] Compares {'typeFromHandle15' (type System.Type)} and 0
		0x18021E61C: Jumps to 0x18021EAA2 if typeFromHandle15 equals 0 ;  - This is probably a goto, jumping to 0x18021EAA2 which is after end of current block @ 0x18021E2D1 (started at 0x18021E2B9)

		0x18021E622: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 15
		0x18021E626: Jumps to 0x18021EAB5 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 15. Implicitly present in managed code, so ignored here.
		0x18021E62C: Sets the value at offset 15 in array local0 to {'typeFromHandle15' (type System.Type)}
		0x18021E635: Loads the type definition for managed type ESerifSideQ_Pol_C024_3003 as a constant "ESerifSideQ_Pol_C024_3003" in rcx
		0x18021E63C: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C024_3003' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle16' (type System.Type)}

		0x18021E641: Copies {'typeFromHandle16' (type System.Type)} from rax into rbx
		0x18021E644: [!] Compares {'typeFromHandle16' (type System.Type)} and 0
		0x18021E647: Jumps to 0x18021E661 if typeFromHandle16 equals 0 ;  - This is probably a goto, jumping to 0x18021E661 which is after end of current block @ 0x18021E2D1 (started at 0x18021E2B9)

		0x18021E649: Loads the class pointer from local0 into a constant constant89 in register rdx
		0x18021E64C: Copies {'typeFromHandle16' (type System.Type)} from rax into rcx
		0x18021E64F: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18021E658: [!] Compares {'typeFromHandle16' (type System.Type)} and 0
		0x18021E65B: Jumps to 0x18021EAC8 if typeFromHandle16 equals 0 ;  - This is probably a goto, jumping to 0x18021EAC8 which is after end of current block @ 0x18021E2D1 (started at 0x18021E2B9)

		0x18021E661: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 16
		0x18021E665: Jumps to 0x18021EADB (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 16. Implicitly present in managed code, so ignored here.
		0x18021E66B: Sets the value at offset 16 in array local0 to {'typeFromHandle16' (type System.Type)}
		0x18021E674: Loads the type definition for managed type ESerifSideQ_Pol_C024_4000 as a constant "ESerifSideQ_Pol_C024_4000" in rcx
		0x18021E67B: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C024_4000' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle17' (type System.Type)}

		0x18021E680: Copies {'typeFromHandle17' (type System.Type)} from rax into rbx
		0x18021E683: [!] Compares {'typeFromHandle17' (type System.Type)} and 0
		0x18021E686: Jumps to 0x18021E6A0 if typeFromHandle17 equals 0 ;  - This is probably a goto, jumping to 0x18021E6A0 which is after end of current block @ 0x18021E2D1 (started at 0x18021E2B9)

		0x18021E688: Loads the class pointer from local0 into a constant constant94 in register rdx
		0x18021E68B: Copies {'typeFromHandle17' (type System.Type)} from rax into rcx
		0x18021E68E: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18021E697: [!] Compares {'typeFromHandle17' (type System.Type)} and 0
		0x18021E69A: Jumps to 0x18021EAEE if typeFromHandle17 equals 0 ;  - This is probably a goto, jumping to 0x18021EAEE which is after end of current block @ 0x18021E2D1 (started at 0x18021E2B9)

		0x18021E6A0: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 17
		0x18021E6A4: Jumps to 0x18021EB01 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 17. Implicitly present in managed code, so ignored here.
		0x18021E6AA: Sets the value at offset 17 in array local0 to {'typeFromHandle17' (type System.Type)}
		0x18021E6B3: Loads the type definition for managed type ESerifSideQ_Pol_C024_4001 as a constant "ESerifSideQ_Pol_C024_4001" in rcx
		0x18021E6BA: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C024_4001' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle18' (type System.Type)}

		0x18021E6BF: Copies {'typeFromHandle18' (type System.Type)} from rax into rbx
		0x18021E6C2: [!] Compares {'typeFromHandle18' (type System.Type)} and 0
		0x18021E6C5: Jumps to 0x18021E6DF if typeFromHandle18 equals 0 ;  - This is probably a goto, jumping to 0x18021E6DF which is after end of current block @ 0x18021E2D1 (started at 0x18021E2B9)

		0x18021E6C7: Loads the class pointer from local0 into a constant constant99 in register rdx
		0x18021E6CA: Copies {'typeFromHandle18' (type System.Type)} from rax into rcx
		0x18021E6CD: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18021E6D6: [!] Compares {'typeFromHandle18' (type System.Type)} and 0
		0x18021E6D9: Jumps to 0x18021EB14 if typeFromHandle18 equals 0 ;  - This is probably a goto, jumping to 0x18021EB14 which is after end of current block @ 0x18021E2D1 (started at 0x18021E2B9)

		0x18021E6DF: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 18
		0x18021E6E3: Jumps to 0x18021EB27 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 18. Implicitly present in managed code, so ignored here.
		0x18021E6E9: Sets the value at offset 18 in array local0 to {'typeFromHandle18' (type System.Type)}
		0x18021E6F2: Loads the type definition for managed type ESerifSideQ_Pol_C024_4002 as a constant "ESerifSideQ_Pol_C024_4002" in rcx
		0x18021E6F9: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C024_4002' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle19' (type System.Type)}

		0x18021E6FE: Copies {'typeFromHandle19' (type System.Type)} from rax into rbx
		0x18021E701: [!] Compares {'typeFromHandle19' (type System.Type)} and 0
		0x18021E704: Jumps to 0x18021E71E if typeFromHandle19 equals 0 ;  - This is probably a goto, jumping to 0x18021E71E which is after end of current block @ 0x18021E2D1 (started at 0x18021E2B9)

		0x18021E706: Loads the class pointer from local0 into a constant constant104 in register rdx
		0x18021E709: Copies {'typeFromHandle19' (type System.Type)} from rax into rcx
		0x18021E70C: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18021E715: [!] Compares {'typeFromHandle19' (type System.Type)} and 0
		0x18021E718: Jumps to 0x18021EB3A if typeFromHandle19 equals 0 ;  - This is probably a goto, jumping to 0x18021EB3A which is after end of current block @ 0x18021E2D1 (started at 0x18021E2B9)

		0x18021E71E: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 19
		0x18021E722: Jumps to 0x18021EB4D (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 19. Implicitly present in managed code, so ignored here.
		0x18021E728: Sets the value at offset 19 in array local0 to {'typeFromHandle19' (type System.Type)}
		0x18021E731: Loads the type definition for managed type ESerifSideQ_Pol_C024_4003 as a constant "ESerifSideQ_Pol_C024_4003" in rcx
		0x18021E738: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C024_4003' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle20' (type System.Type)}

		0x18021E73D: Copies {'typeFromHandle20' (type System.Type)} from rax into rbx
		0x18021E740: [!] Compares {'typeFromHandle20' (type System.Type)} and 0
		0x18021E743: Jumps to 0x18021E75D if typeFromHandle20 equals 0 ;  - This is probably a goto, jumping to 0x18021E75D which is after end of current block @ 0x18021E2D1 (started at 0x18021E2B9)

		0x18021E745: Loads the class pointer from local0 into a constant constant109 in register rdx
		0x18021E748: Copies {'typeFromHandle20' (type System.Type)} from rax into rcx
		0x18021E74B: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18021E754: [!] Compares {'typeFromHandle20' (type System.Type)} and 0
		0x18021E757: Jumps to 0x18021EB60 if typeFromHandle20 equals 0 ;  - This is probably a goto, jumping to 0x18021EB60 which is after end of current block @ 0x18021E2D1 (started at 0x18021E2B9)

		0x18021E75D: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 20
		0x18021E761: Jumps to 0x18021EB73 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 20. Implicitly present in managed code, so ignored here.
		0x18021E767: Sets the value at offset 20 in array local0 to {'typeFromHandle20' (type System.Type)}
		0x18021E770: Loads the type definition for managed type ESerifSideQ_Pol_C024_5000 as a constant "ESerifSideQ_Pol_C024_5000" in rcx
		0x18021E777: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C024_5000' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle21' (type System.Type)}

		0x18021E77C: Copies {'typeFromHandle21' (type System.Type)} from rax into rbx
		0x18021E77F: [!] Compares {'typeFromHandle21' (type System.Type)} and 0
		0x18021E782: Jumps to 0x18021E79C if typeFromHandle21 equals 0 ;  - This is probably a goto, jumping to 0x18021E79C which is after end of current block @ 0x18021E2D1 (started at 0x18021E2B9)

		0x18021E784: Loads the class pointer from local0 into a constant constant114 in register rdx
		0x18021E787: Copies {'typeFromHandle21' (type System.Type)} from rax into rcx
		0x18021E78A: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18021E793: [!] Compares {'typeFromHandle21' (type System.Type)} and 0
		0x18021E796: Jumps to 0x18021EB86 if typeFromHandle21 equals 0 ;  - This is probably a goto, jumping to 0x18021EB86 which is after end of current block @ 0x18021E2D1 (started at 0x18021E2B9)

		0x18021E79C: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 21
		0x18021E7A0: Jumps to 0x18021EB99 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 21. Implicitly present in managed code, so ignored here.
		0x18021E7A6: Sets the value at offset 21 in array local0 to {'typeFromHandle21' (type System.Type)}
		0x18021E7AF: Loads the type definition for managed type ESerifSideQ_Pol_C024_5001 as a constant "ESerifSideQ_Pol_C024_5001" in rcx
		0x18021E7B6: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C024_5001' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle22' (type System.Type)}

		0x18021E7BB: Copies {'typeFromHandle22' (type System.Type)} from rax into rbx
		0x18021E7BE: [!] Compares {'typeFromHandle22' (type System.Type)} and 0
		0x18021E7C1: Jumps to 0x18021E7DB if typeFromHandle22 equals 0 ;  - This is probably a goto, jumping to 0x18021E7DB which is after end of current block @ 0x18021E2D1 (started at 0x18021E2B9)

		0x18021E7C3: Loads the class pointer from local0 into a constant constant119 in register rdx
		0x18021E7C6: Copies {'typeFromHandle22' (type System.Type)} from rax into rcx
		0x18021E7C9: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18021E7D2: [!] Compares {'typeFromHandle22' (type System.Type)} and 0
		0x18021E7D5: Jumps to 0x18021EBAC if typeFromHandle22 equals 0 ;  - This is probably a goto, jumping to 0x18021EBAC which is after end of current block @ 0x18021E2D1 (started at 0x18021E2B9)

		0x18021E7DB: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 22
		0x18021E7DF: Jumps to 0x18021EBBF (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 22. Implicitly present in managed code, so ignored here.
		0x18021E7E5: Sets the value at offset 22 in array local0 to {'typeFromHandle22' (type System.Type)}
		0x18021E7EE: Loads the type definition for managed type ESerifSideQ_Pol_C024_5002 as a constant "ESerifSideQ_Pol_C024_5002" in rcx
		0x18021E7F5: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C024_5002' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle23' (type System.Type)}

		0x18021E7FA: Copies {'typeFromHandle23' (type System.Type)} from rax into rbx
		0x18021E7FD: [!] Compares {'typeFromHandle23' (type System.Type)} and 0
		0x18021E800: Jumps to 0x18021E81A if typeFromHandle23 equals 0 ;  - This is probably a goto, jumping to 0x18021E81A which is after end of current block @ 0x18021E2D1 (started at 0x18021E2B9)

		0x18021E802: Loads the class pointer from local0 into a constant constant124 in register rdx
		0x18021E805: Copies {'typeFromHandle23' (type System.Type)} from rax into rcx
		0x18021E808: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18021E811: [!] Compares {'typeFromHandle23' (type System.Type)} and 0
		0x18021E814: Jumps to 0x18021EBD2 if typeFromHandle23 equals 0 ;  - This is probably a goto, jumping to 0x18021EBD2 which is after end of current block @ 0x18021E2D1 (started at 0x18021E2B9)

		0x18021E81A: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 23
		0x18021E81E: Jumps to 0x18021EBE5 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 23. Implicitly present in managed code, so ignored here.
		0x18021E824: Sets the value at offset 23 in array local0 to {'typeFromHandle23' (type System.Type)}
		0x18021E82D: Loads the type definition for managed type ESerifSideQ_Pol_C024_5003 as a constant "ESerifSideQ_Pol_C024_5003" in rcx
		0x18021E834: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C024_5003' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle24' (type System.Type)}

		0x18021E839: Copies {'typeFromHandle24' (type System.Type)} from rax into rbx
		0x18021E83C: [!] Compares {'typeFromHandle24' (type System.Type)} and 0
		0x18021E83F: Jumps to 0x18021E859 if typeFromHandle24 equals 0 ;  - This is probably a goto, jumping to 0x18021E859 which is after end of current block @ 0x18021E2D1 (started at 0x18021E2B9)

		0x18021E841: Loads the class pointer from local0 into a constant constant129 in register rdx
		0x18021E844: Copies {'typeFromHandle24' (type System.Type)} from rax into rcx
		0x18021E847: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x18021E850: [!] Compares {'typeFromHandle24' (type System.Type)} and 0
		0x18021E853: Jumps to 0x18021EBF8 if typeFromHandle24 equals 0 ;  - This is probably a goto, jumping to 0x18021EBF8 which is after end of current block @ 0x18021E2D1 (started at 0x18021E2B9)

		0x18021E859: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 24
		0x18021E85D: Jumps to 0x18021EC0B (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 24. Implicitly present in managed code, so ignored here.
		0x18021E863: Sets the value at offset 24 in array local0 to {'typeFromHandle24' (type System.Type)}
		0x18021E86A: Loads the type definition for managed type C024_SideQuest_Define as a constant "C024_SideQuest_Define" in rax
		0x18021E871: Reads unknown value in stack, offset 48 (0x30) and stores the pointer in register rbx as new constant constant133
		0x18021E876: Loads the pointer to the static fields for C024_SideQuest_Define and stores it in constant134 in register rcx
		0x18021E87D: [!] Sets static field . to {'local0' (type System.Type[])}
		0x18021E885: [!] Returns from the function

		0x18021E888: [!] Constructs and throws an exception of kind System.NullReferenceException

		0x18021E893: Copies {'local50' (type System.NullReferenceException)} from rax into rcx
		0x18021E8B9: Copies {'local50' (type System.NullReferenceException)} from rax into rcx
		0x18021E8DF: Copies {'local50' (type System.NullReferenceException)} from rax into rcx
		0x18021E905: Copies {'local50' (type System.NullReferenceException)} from rax into rcx
		0x18021E92B: Copies {'local50' (type System.NullReferenceException)} from rax into rcx
		0x18021E951: Copies {'local50' (type System.NullReferenceException)} from rax into rcx
		0x18021E977: Copies {'local50' (type System.NullReferenceException)} from rax into rcx
		0x18021E99D: Copies {'local50' (type System.NullReferenceException)} from rax into rcx
		0x18021E9C3: Copies {'local50' (type System.NullReferenceException)} from rax into rcx
		0x18021E9E9: Copies {'local50' (type System.NullReferenceException)} from rax into rcx
		0x18021EA0F: Copies {'local50' (type System.NullReferenceException)} from rax into rcx
		0x18021EA35: Copies {'local50' (type System.NullReferenceException)} from rax into rcx
		0x18021EA5B: Copies {'local50' (type System.NullReferenceException)} from rax into rcx
		0x18021EA81: Copies {'local50' (type System.NullReferenceException)} from rax into rcx
		0x18021EAA7: Copies {'local50' (type System.NullReferenceException)} from rax into rcx
		0x18021EACD: Copies {'local50' (type System.NullReferenceException)} from rax into rcx
		0x18021EAF3: Copies {'local50' (type System.NullReferenceException)} from rax into rcx
		0x18021EB19: Copies {'local50' (type System.NullReferenceException)} from rax into rcx
		0x18021EB3F: Copies {'local50' (type System.NullReferenceException)} from rax into rcx
		0x18021EB65: Copies {'local50' (type System.NullReferenceException)} from rax into rcx
		0x18021EB8B: Copies {'local50' (type System.NullReferenceException)} from rax into rcx
		0x18021EBB1: Copies {'local50' (type System.NullReferenceException)} from rax into rcx
		0x18021EBD7: Copies {'local50' (type System.NullReferenceException)} from rax into rcx
		0x18021EBFD: Copies {'local50' (type System.NullReferenceException)} from rax into rcx



	Generated Pseudocode:

	Declaring Type: C024_SideQuest_Define
	static System.Void .cctor()
		System.Type[] local0 = new System.Type[26]

		System.Type typeFromHandle = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C024_1000' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle != 0)

		    if (typeFromHandle == 0)
                goto INSN_18021E88E
            endif
		endif
        
		local0[1] = typeFromHandle

		System.Type typeFromHandle2 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C024_1001' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle2 == 0)
            goto INSN_18021E30D
        endif

		if (typeFromHandle2 == 0)
            goto INSN_18021E8B4
        endif

		INSN_18021E30D:
		local0[2] = typeFromHandle2

		System.Type typeFromHandle3 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C024_1002' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle3 == 0)
            goto INSN_18021E349
        endif

		if (typeFromHandle3 == 0)
            goto INSN_18021E8DA
        endif

		INSN_18021E349:
		local0[3] = typeFromHandle3

		System.Type typeFromHandle4 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C024_1003' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle4 == 0)
            goto INSN_18021E385
        endif

		if (typeFromHandle4 == 0)
            goto INSN_18021E900
        endif

		INSN_18021E385:
		local0[4] = typeFromHandle4

		System.Type typeFromHandle5 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C024_1004' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle5 == 0)
            goto INSN_18021E3C1
        endif

		if (typeFromHandle5 == 0)
            goto INSN_18021E926
        endif

		INSN_18021E3C1:
		local0[5] = typeFromHandle5

		System.Type typeFromHandle6 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C024_1005' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle6 == 0)
            goto INSN_18021E3FD
        endif

		if (typeFromHandle6 == 0)
            goto INSN_18021E94C
        endif

		INSN_18021E3FD:
		local0[6] = typeFromHandle6

		System.Type typeFromHandle7 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C024_1006' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle7 == 0)
            goto INSN_18021E439
        endif

		if (typeFromHandle7 == 0)
            goto INSN_18021E972
        endif

		INSN_18021E439:
		local0[7] = typeFromHandle7

		System.Type typeFromHandle8 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C024_2000' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle8 == 0)
            goto INSN_18021E475
        endif

		if (typeFromHandle8 == 0)
            goto INSN_18021E998
        endif

		INSN_18021E475:
		local0[8] = typeFromHandle8

		System.Type typeFromHandle9 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C024_2001' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle9 == 0)
            goto INSN_18021E4B1
        endif

		if (typeFromHandle9 == 0)
            goto INSN_18021E9BE
        endif

		INSN_18021E4B1:
		local0[9] = typeFromHandle9

		System.Type typeFromHandle10 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C024_2002' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle10 == 0)
            goto INSN_18021E4ED
        endif

		if (typeFromHandle10 == 0)
            goto INSN_18021E9E4
        endif

		INSN_18021E4ED:
		local0[10] = typeFromHandle10

		System.Type typeFromHandle11 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C024_2003' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle11 == 0)
            goto INSN_18021E529
        endif

		if (typeFromHandle11 == 0)
            goto INSN_18021EA0A
        endif

		INSN_18021E529:
		local0[11] = typeFromHandle11

		System.Type typeFromHandle12 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C024_2004' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle12 == 0)
            goto INSN_18021E565
        endif

		if (typeFromHandle12 == 0)
            goto INSN_18021EA30
        endif

		INSN_18021E565:
		local0[12] = typeFromHandle12

		System.Type typeFromHandle13 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C024_3000' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle13 == 0)
            goto INSN_18021E5A4
        endif

		if (typeFromHandle13 == 0)
            goto INSN_18021EA56
        endif

		INSN_18021E5A4:
		local0[13] = typeFromHandle13

		System.Type typeFromHandle14 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C024_3001' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle14 == 0)
            goto INSN_18021E5E3
        endif

		if (typeFromHandle14 == 0)
            goto INSN_18021EA7C
        endif

		INSN_18021E5E3:
		local0[14] = typeFromHandle14

		System.Type typeFromHandle15 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C024_3002' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle15 == 0)
            goto INSN_18021E622
        endif

		if (typeFromHandle15 == 0)
            goto INSN_18021EAA2
        endif

		INSN_18021E622:
		local0[15] = typeFromHandle15

		System.Type typeFromHandle16 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C024_3003' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle16 == 0)
            goto INSN_18021E661
        endif

		if (typeFromHandle16 == 0)
            goto INSN_18021EAC8
        endif

		INSN_18021E661:
		local0[16] = typeFromHandle16

		System.Type typeFromHandle17 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C024_4000' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle17 == 0)
            goto INSN_18021E6A0
        endif

		if (typeFromHandle17 == 0)
            goto INSN_18021EAEE
        endif

		INSN_18021E6A0:
		local0[17] = typeFromHandle17

		System.Type typeFromHandle18 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C024_4001' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle18 == 0)
            goto INSN_18021E6DF
        endif

		if (typeFromHandle18 == 0)
            goto INSN_18021EB14
        endif

		INSN_18021E6DF:
		local0[18] = typeFromHandle18

		System.Type typeFromHandle19 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C024_4002' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle19 == 0)
            goto INSN_18021E71E
        endif

		if (typeFromHandle19 == 0)
            goto INSN_18021EB3A
        endif

		INSN_18021E71E:
		local0[19] = typeFromHandle19

		System.Type typeFromHandle20 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C024_4003' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle20 == 0)
            goto INSN_18021E75D
        endif

		if (typeFromHandle20 == 0)
            goto INSN_18021EB60
        endif

		INSN_18021E75D:
		local0[20] = typeFromHandle20

		System.Type typeFromHandle21 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C024_5000' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle21 == 0)
            goto INSN_18021E79C
        endif

		if (typeFromHandle21 == 0)
            goto INSN_18021EB86
        endif

		INSN_18021E79C:
		local0[21] = typeFromHandle21

		System.Type typeFromHandle22 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C024_5001' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle22 == 0)
            goto INSN_18021E7DB
        endif

		if (typeFromHandle22 == 0)
            goto INSN_18021EBAC
        endif

		INSN_18021E7DB:
		local0[22] = typeFromHandle22

		System.Type typeFromHandle23 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C024_5002' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle23 == 0)
            goto INSN_18021E81A
        endif

		if (typeFromHandle23 == 0)
            goto INSN_18021EBD2
        endif

		INSN_18021E81A:
		local0[23] = typeFromHandle23

		System.Type typeFromHandle24 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C024_5003' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle24 == 0)
            goto INSN_18021E859
        endif

		if (typeFromHandle24 == 0)
            goto INSN_18021EBF8
        endif

		INSN_18021E859:
		local0[24] = typeFromHandle24
		. = local0
		return
		throw new System.NullReferenceException()

		INSN_18021E88E:

		INSN_18021E8B4:

		INSN_18021E8DA:

		INSN_18021E900:

		INSN_18021E926:

		INSN_18021E94C:

		INSN_18021E972:

		INSN_18021E998:

		INSN_18021E9BE:

		INSN_18021E9E4:

		INSN_18021EA0A:

		INSN_18021EA30:

		INSN_18021EA56:

		INSN_18021EA7C:

		INSN_18021EAA2:

		INSN_18021EAC8:

		INSN_18021EAEE:

		INSN_18021EB14:

		INSN_18021EB3A:

		INSN_18021EB60:

		INSN_18021EB86:

		INSN_18021EBAC:

		INSN_18021EBD2:

		INSN_18021EBF8:


Generated IL:
	Action of type Cpp2IL.Core.Analysis.Actions.x86.Important.RegToStaticFieldAction at (0x18021E87D) is corrupt (No further info) and cannot be created as IL. Aborting here.


