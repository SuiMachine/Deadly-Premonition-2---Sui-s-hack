Type: ResultRankingBadge

Method: System.Void ResultRankingBadge::.ctor():	Method Body (x86 ASM):
		0x180203000 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180203002 jmp near ptr 0000000180CE1E90h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180203007 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.Void ResultRankingBadge::.ctor():
		End of function at 0x180203008
		Absolute End is at 0x180203008
		Identified Jump Destination addresses:

		0x180203002: [!] Calls managed method System.Void UnityEngine.MonoBehaviour::.ctor() on instance {'this' (function parameter, type ResultRankingBadge)}

		0x180203002: [!] Returns from the function




	Generated Pseudocode:

	Declaring Type: ResultRankingBadge
	System.Void .ctor()

		base..ctor()
		return


Generated IL:
	IL_0000: ldarg.0
	IL_0001: call System.Void UnityEngine.MonoBehaviour::.ctor()
	IL_0006: ret
	

Method: System.Void ResultRankingBadge::Init(EMinigame,System.Int32):	Method Body (x86 ASM):
		0x180313DB0 mov [rsp+8],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RSP | 8 | None ||| N/A | N/A
		0x180313DB5 mov [rsp+10h],rsi		; DEBUG: {Memory}/None {Register}/RSI ||| RSP | 16 | None ||| N/A | N/A
		0x180313DBA push rdi		; DEBUG: {Register}/RDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180313DBB sub rsp,20h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 32
		0x180313DBF mov eax,r8d		; DEBUG: {Register}/EAX {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x180313DC2 mov r9d,edx		; DEBUG: {Register}/R9D {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180313DC5 mov rsi,rcx		; DEBUG: {Register}/RSI {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x180313DC8 mov edx,eax		; DEBUG: {Register}/EDX {Register}/EAX ||| None | 0 | None ||| N/A | N/A
		0x180313DCA mov ecx,r9d		; DEBUG: {Register}/ECX {Register}/R9D ||| None | 0 | None ||| N/A | N/A
		0x180313DCD xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x180313DD0 call 0000000180314910h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180313DD5 xor ebx,ebx		; DEBUG: {Register}/EBX {Register}/EBX ||| None | 0 | None ||| N/A | N/A
		0x180313DD7 mov rdi,rax		; DEBUG: {Register}/RDI {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180313DDA mov edx,ebx		; DEBUG: {Register}/EDX {Register}/EBX ||| None | 0 | None ||| N/A | N/A
		0x180313DDC test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180313DDF je short 0000000180313E59h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180313DE1 mov ecx,[rdi+18h]		; DEBUG: {Register}/ECX {Memory}/None ||| RDI | 24 | None ||| N/A | N/A
		0x180313DE4 cmp edx,ecx		; DEBUG: {Register}/EDX {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x180313DE6 jge short 0000000180313E23h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180313DE8 mov rax,[rsi+18h]		; DEBUG: {Register}/RAX {Memory}/None ||| RSI | 24 | None ||| N/A | N/A
		0x180313DEC test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180313DEF je short 0000000180313E59h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180313DF1 movsxd r8,ebx		; DEBUG: {Register}/R8 {Register}/EBX ||| None | 0 | None ||| N/A | N/A
		0x180313DF4 cmp ebx,[rax+18h]		; DEBUG: {Register}/EBX {Memory}/None ||| RAX | 24 | None ||| N/A | N/A
		0x180313DF7 jae short 0000000180313E46h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180313DF9 cmp ebx,ecx		; DEBUG: {Register}/EBX {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x180313DFB jae short 0000000180313E33h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180313DFD mov rdx,[rdi+r8*8+20h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 32 | R8 ||| N/A | N/A
		0x180313E02 test rdx,rdx		; DEBUG: {Register}/RDX {Register}/RDX ||| None | 0 | None ||| N/A | N/A
		0x180313E05 je short 0000000180313E59h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180313E07 mov rcx,[rax+r8*8+20h]		; DEBUG: {Register}/RCX {Memory}/None ||| RAX | 32 | R8 ||| N/A | N/A
		0x180313E0C test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x180313E0F je short 0000000180313E59h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180313E11 movzx edx,byte ptr [rdx+10h]		; DEBUG: {Register}/EDX {Memory}/None ||| RDX | 16 | None ||| N/A | N/A
		0x180313E15 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x180313E18 call 0000000180B2E5A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180313E1D inc ebx		; DEBUG: {Register}/EBX {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180313E1F mov edx,ebx		; DEBUG: {Register}/EDX {Register}/EBX ||| None | 0 | None ||| N/A | N/A
		0x180313E21 jmp short 0000000180313DE1h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180313E23 mov rbx,[rsp+30h]		; DEBUG: {Register}/RBX {Memory}/None ||| RSP | 48 | None ||| N/A | N/A
		0x180313E28 mov rsi,[rsp+38h]		; DEBUG: {Register}/RSI {Memory}/None ||| RSP | 56 | None ||| N/A | N/A
		0x180313E2D add rsp,20h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 32
		0x180313E31 pop rdi		; DEBUG: {Register}/RDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180313E32 ret		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180313E33 call 000000018012A7F0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180313E38 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180313E3B xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x180313E3E xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180313E40 call 000000018012BD50h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180313E45 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.Void ResultRankingBadge::Init(EMinigame,System.Int32):
		End of function at 0x180313E46
		Absolute End is at 0x180313E46
		Identified Jump Destination addresses:

		0x180313DBA: Saves the content of rdi to the stack
		0x180313DBF: Copies {'stageId' (function parameter, type System.Int32)} from r8 into rax
		0x180313DC2: [!] Implicitly reads field at offset 0 (which is value__) from struct minigame of type EMinigame and stores in new local {'local3' (type System.Int32)}
		0x180313DC5: Copies {'this' (function parameter, type ResultRankingBadge)} from rcx into rsi
		0x180313DC8: Copies {'stageId' (function parameter, type System.Int32)} from rax into rdx
		0x180313DCA: Copies {'local3' (type System.Int32)} from r9 into rcx
		0x180313DD0: [!] Calls static managed method RankingRewardParam[] ResultUtility::GetRankingRewards(EMinigame,System.Int32) and stores the result in {'rankingRewards' (type RankingRewardParam[])} ;  - parameters do not match, but there is only one function at this address.

		0x180313DD5: Clears register rbx, yielding zero-local {'local6' (type System.Int32)}
		0x180313DD7: Copies {'rankingRewards' (type RankingRewardParam[])} from rax into rdi
		0x180313DDA: Copies {'local6' (type System.Int32)} from rbx into rdx
		0x180313DDC: [!] Compares {'rankingRewards' (type RankingRewardParam[])} and 0
		0x180313DDF: Jumps to 0x180313E59 (which throws a NRE) if rankingRewards equals 0. Implicitly present in managed code, so ignored here.

		Potential Loop Start (0x180313DE1):
		0x180313DE1: Reads the length of the array "{'rankingRewards' (type RankingRewardParam[])}" and stores it in new local {'length' (type System.Int32)} in register rcx
		0x180313DE4: [!] Compares {'local6' (type System.Int32)} and {'length' (type System.Int32)}
		0x180313DE6: Jumps to 0x180313E23 (which is an if statement's body) if {'local6' (type System.Int32)} is greater than or equal to {'length' (type System.Int32)} ;  - Increasing indentation - is standard if, unimportant is False

		0x180313DE8: [!] Reads field m_objs from {'this' (function parameter, type ResultRankingBadge)} and stores in a new local {'m_objs' (type UnityEngine.GameObject[])}

		0x180313DEC: [!] Compares {'m_objs' (type UnityEngine.GameObject[])} and 0
		0x180313DEF: Jumps to 0x180313E59 (which throws a NRE) if m_objs equals 0. Implicitly present in managed code, so ignored here.
		0x180313DF1: Copies {'local6' (type System.Int32)} from rbx into r8
		0x180313DF4: [!] Compares {'local6' (type System.Int32)} and {Property System.Int32 System.Array::Length() on {'m_objs' (type UnityEngine.GameObject[])}}
		0x180313DF7: Jumps to 0x180313E46 (which throws a NRE) if {'local6' (type System.Int32)} is greater than or equal to {Property System.Int32 System.Array::Length() on {'m_objs' (type UnityEngine.GameObject[])}}. Implicitly present in managed code, so ignored here.
		0x180313DF9: [!] Compares {'local6' (type System.Int32)} and {'length' (type System.Int32)}
		0x180313DFB: Jumps to 0x180313E33 (which throws a NRE) if {'local6' (type System.Int32)} is greater than or equal to {'length' (type System.Int32)}. Implicitly present in managed code, so ignored here.
		0x180313DFD: Copies the element in the array {'rankingRewards' (type RankingRewardParam[])} at the index specified by {'local6' (type System.Int32)} into new local {'rankingRewardParam' (type RankingRewardParam)}
		0x180313E02: [!] Compares {'rankingRewardParam' (type RankingRewardParam)} and 0
		0x180313E05: Jumps to 0x180313E59 (which throws a NRE) if rankingRewardParam equals 0. Implicitly present in managed code, so ignored here.
		0x180313E07: Copies the element in the array {'m_objs' (type UnityEngine.GameObject[])} at the index specified by {'local6' (type System.Int32)} into new local {'gameObject' (type UnityEngine.GameObject)}
		0x180313E0C: [!] Compares {'gameObject' (type UnityEngine.GameObject)} and 0
		0x180313E0F: Jumps to 0x180313E59 (which throws a NRE) if gameObject equals 0. Implicitly present in managed code, so ignored here.
		0x180313E11: [!] Reads field m_isObtained from {'rankingRewardParam' (type RankingRewardParam)} and stores in a new local {'m_isObtained' (type System.Boolean)}

		0x180313E18: [!] Calls managed method System.Void UnityEngine.GameObject::SetActive(System.Boolean) on instance {'gameObject' (type UnityEngine.GameObject)} with arguments [{'m_isObtained' (type System.Boolean)}]

		0x180313E1D: [!] Adds 1 to the value {'local6' (type System.Int32)}, stored in rbx
		0x180313E1F: Copies {'local6' (type System.Int32)} from rbx into rdx
		0x180313E21: Jumps to 0x180313DE1 - which is still in this function, but further up. Probably indicative that this is a loop.
		0x180313E23: Reads unknown value in stack, offset 48 (0x30) and stores the pointer in register rbx as new constant constant5
		0x180313E28: Reads unknown value in stack, offset 56 (0x38) and stores the pointer in register rsi as new constant constant6
		0x180313E32: [!] Returns from the function

		0x180313E33: [!] Constructs and throws an exception of kind System.IndexOutOfRangeException

		0x180313E38: Copies {'local13' (type System.IndexOutOfRangeException)} from rax into rcx
		0x180313E40: [!] Throws {'local13' (type System.IndexOutOfRangeException)}



	Generated Pseudocode:

	Declaring Type: ResultRankingBadge
	System.Void Init(EMinigame minigame, System.Int32 stageId)
		System.Int32 local3 = minigame.value__

		RankingRewardParam[] rankingRewards = ResultUtility.GetRankingRewards()
		ulong local6 = 0
		System.Int32 length = rankingRewards.Length

		if (local6 < length)
		    UnityEngine.GameObject[] m_objs = this.m_objs
		    RankingRewardParam rankingRewardParam = rankingRewards[local6]
		    UnityEngine.GameObject gameObject = m_objs[local6]
		    System.Boolean m_isObtained = rankingRewardParam.m_isObtained

		    gameObject.SetActive(m_isObtained) //(Boolean value)
		    local6 += 1
		endif
        
		return
		throw new System.IndexOutOfRangeException()
		throw local13


Generated IL:
	Action of type Cpp2IL.Core.Analysis.Actions.x86.Important.CallManagedFunctionAction at (0x180313DD0) is corrupt (Couldn't get arguments, or actual count (-1) is not equal to expected count (2)) and cannot be created as IL. Aborting here.


