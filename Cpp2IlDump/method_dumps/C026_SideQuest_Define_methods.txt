Type: C026_SideQuest_Define

Method: System.Void C026_SideQuest_Define::.ctor():	Method Body (x86 ASM):
		0x1802068B0 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1802068B2 jmp near ptr 0000000180207540h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802068B7 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.Void C026_SideQuest_Define::.ctor():
		End of function at 0x1802068B8
		Absolute End is at 0x1802068B8
		Identified Jump Destination addresses:

		0x1802068B2: [!] Calls managed method System.Void System.Object::.ctor() on instance {'this' (function parameter, type C026_SideQuest_Define)}

		0x1802068B2: [!] Returns from the function




	Generated Pseudocode:

	Declaring Type: C026_SideQuest_Define
	System.Void .ctor()

		base..ctor()
		return


Generated IL:
	IL_0000: ldarg.0
	IL_0001: call System.Void System.Object::.ctor()
	IL_0006: ret
	

Method: System.Void C026_SideQuest_Define::.cctor():	Method Body (x86 ASM):
		0x1802215B0 mov [rsp+8],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RSP | 8 | None ||| N/A | N/A
		0x1802215B5 push rdi		; DEBUG: {Register}/RDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1802215B6 sub rsp,20h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 32
		0x1802215BA cmp byte ptr [18183D2D8h],0		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6467867352 | None ||| N/A | 0
		0x1802215C1 jne short 00000001802215D5h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802215C3 mov ecx,[1815160A8h]		; DEBUG: {Register}/ECX {Memory}/None ||| RIP | 6464561320 | None ||| N/A | N/A
		0x1802215C9 call 00000001800FEB90h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802215CE mov byte ptr [18183D2D8h],1		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6467867352 | None ||| N/A | 1
		0x1802215D5 mov rcx,[181884F78h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468161400 | None ||| N/A | N/A
		0x1802215DC mov edx,0Eh		; DEBUG: {Register}/EDX {Immediate32}/None ||| None | 0 | None ||| N/A | 14
		0x1802215E1 call 0000000180141320h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802215E6 mov rcx,[181884228h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468157992 | None ||| N/A | N/A
		0x1802215ED mov rdi,rax		; DEBUG: {Register}/RDI {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1802215F0 mov rbx,[181877308h]		; DEBUG: {Register}/RBX {Memory}/None ||| RIP | 6468104968 | None ||| N/A | N/A
		0x1802215F7 test byte ptr [rcx+127h],2		; DEBUG: {Memory}/None {Immediate8}/None ||| RCX | 295 | None ||| N/A | 2
		0x1802215FE je short 000000018022160Eh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180221600 cmp dword ptr [rcx+0D8h],0		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RCX | 216 | None ||| N/A | 0
		0x180221607 jne short 000000018022160Eh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180221609 call 000000018010EAF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18022160E xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180221610 mov rcx,rbx		; DEBUG: {Register}/RCX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x180221613 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180221618 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18022161B test rdi,rdi		; DEBUG: {Register}/RDI {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x18022161E je near ptr 0000000180221902h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180221624 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180221627 je short 0000000180221641h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180221629 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18022162C mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18022162F mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x180221633 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180221638 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18022163B je near ptr 000000018022190Ah		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180221641 cmp dword ptr [rdi+18h],1		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 1
		0x180221645 jbe near ptr 000000018022191Dh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18022164B mov [rdi+28h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 40 | None ||| N/A | N/A
		0x18022164F xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180221651 mov rcx,[181877338h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468105016 | None ||| N/A | N/A
		0x180221658 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18022165D mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180221660 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180221663 je short 000000018022167Dh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180221665 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x180221668 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18022166B mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18022166F call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180221674 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180221677 je near ptr 0000000180221930h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18022167D cmp dword ptr [rdi+18h],2		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 2
		0x180221681 jbe near ptr 0000000180221943h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180221687 mov [rdi+30h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 48 | None ||| N/A | N/A
		0x18022168B xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18022168D mov rcx,[181877360h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468105056 | None ||| N/A | N/A
		0x180221694 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180221699 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18022169C test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18022169F je short 00000001802216B9h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802216A1 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1802216A4 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1802216A7 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1802216AB call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802216B0 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1802216B3 je near ptr 0000000180221956h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802216B9 cmp dword ptr [rdi+18h],3		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 3
		0x1802216BD jbe near ptr 0000000180221969h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802216C3 mov [rdi+38h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 56 | None ||| N/A | N/A
		0x1802216C7 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1802216C9 mov rcx,[181877388h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468105096 | None ||| N/A | N/A
		0x1802216D0 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802216D5 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1802216D8 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1802216DB je short 00000001802216F5h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802216DD mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1802216E0 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1802216E3 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1802216E7 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802216EC test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1802216EF je near ptr 000000018022197Ch		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802216F5 cmp dword ptr [rdi+18h],4		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 4
		0x1802216F9 jbe near ptr 000000018022198Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802216FF mov [rdi+40h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 64 | None ||| N/A | N/A
		0x180221703 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180221705 mov rcx,[1818773A8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468105128 | None ||| N/A | N/A
		0x18022170C call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180221711 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180221714 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180221717 je short 0000000180221731h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180221719 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18022171C mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18022171F mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x180221723 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180221728 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18022172B je near ptr 00000001802219A2h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180221731 cmp dword ptr [rdi+18h],5		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 5
		0x180221735 jbe near ptr 00000001802219B5h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18022173B mov [rdi+48h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 72 | None ||| N/A | N/A
		0x18022173F xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180221741 mov rcx,[1818773C8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468105160 | None ||| N/A | N/A
		0x180221748 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18022174D mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180221750 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180221753 je short 000000018022176Dh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180221755 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x180221758 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18022175B mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18022175F call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180221764 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180221767 je near ptr 00000001802219C8h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18022176D cmp dword ptr [rdi+18h],6		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 6
		0x180221771 jbe near ptr 00000001802219DBh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180221777 mov [rdi+50h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 80 | None ||| N/A | N/A
		0x18022177B xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18022177D mov rcx,[1818773F8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468105208 | None ||| N/A | N/A
		0x180221784 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180221789 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18022178C test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18022178F je short 00000001802217A9h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180221791 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x180221794 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180221797 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18022179B call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802217A0 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1802217A3 je near ptr 00000001802219EEh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802217A9 cmp dword ptr [rdi+18h],7		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 7
		0x1802217AD jbe near ptr 0000000180221A01h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802217B3 mov [rdi+58h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 88 | None ||| N/A | N/A
		0x1802217B7 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1802217B9 mov rcx,[181877420h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468105248 | None ||| N/A | N/A
		0x1802217C0 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802217C5 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1802217C8 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1802217CB je short 00000001802217E5h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802217CD mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1802217D0 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1802217D3 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1802217D7 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802217DC test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1802217DF je near ptr 0000000180221A14h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802217E5 cmp dword ptr [rdi+18h],8		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 8
		0x1802217E9 jbe near ptr 0000000180221A27h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802217EF mov [rdi+60h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 96 | None ||| N/A | N/A
		0x1802217F3 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1802217F5 mov rcx,[181877450h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468105296 | None ||| N/A | N/A
		0x1802217FC call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180221801 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180221804 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180221807 je short 0000000180221821h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180221809 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x18022180C mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18022180F mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x180221813 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180221818 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18022181B je near ptr 0000000180221A3Ah		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180221821 cmp dword ptr [rdi+18h],9		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 9
		0x180221825 jbe near ptr 0000000180221A4Dh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18022182B mov [rdi+68h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 104 | None ||| N/A | N/A
		0x18022182F xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180221831 mov rcx,[181877488h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468105352 | None ||| N/A | N/A
		0x180221838 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18022183D mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180221840 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180221843 je short 000000018022185Dh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180221845 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x180221848 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18022184B mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18022184F call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180221854 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180221857 je near ptr 0000000180221A60h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18022185D cmp dword ptr [rdi+18h],0Ah		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 10
		0x180221861 jbe near ptr 0000000180221A73h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180221867 mov [rdi+70h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 112 | None ||| N/A | N/A
		0x18022186B xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18022186D mov rcx,[1818774A8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468105384 | None ||| N/A | N/A
		0x180221874 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180221879 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18022187C test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18022187F je short 0000000180221899h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180221881 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x180221884 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180221887 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x18022188B call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180221890 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180221893 je near ptr 0000000180221A86h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180221899 cmp dword ptr [rdi+18h],0Bh		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 11
		0x18022189D jbe near ptr 0000000180221A99h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802218A3 mov [rdi+78h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 120 | None ||| N/A | N/A
		0x1802218A7 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1802218A9 mov rcx,[1818774B8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468105400 | None ||| N/A | N/A
		0x1802218B0 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802218B5 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1802218B8 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1802218BB je short 00000001802218D5h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802218BD mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1802218C0 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1802218C3 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1802218C7 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802218CC test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1802218CF je near ptr 0000000180221AACh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802218D5 cmp dword ptr [rdi+18h],0Ch		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 12
		0x1802218D9 jbe near ptr 0000000180221ABFh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802218DF mov [rdi+80h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 128 | None ||| N/A | N/A
		0x1802218E6 mov rax,[18189BB60h]		; DEBUG: {Register}/RAX {Memory}/None ||| RIP | 6468254560 | None ||| N/A | N/A
		0x1802218ED mov rbx,[rsp+30h]		; DEBUG: {Register}/RBX {Memory}/None ||| RSP | 48 | None ||| N/A | N/A
		0x1802218F2 mov rcx,[rax+0B8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RAX | 184 | None ||| N/A | N/A
		0x1802218F9 mov [rcx],rdi		; DEBUG: {Memory}/None {Register}/RDI ||| RCX | 0 | None ||| N/A | N/A
		0x1802218FC add rsp,20h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 32
		0x180221900 pop rdi		; DEBUG: {Register}/RDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180221901 ret		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180221902 xor ecx,ecx		; DEBUG: {Register}/ECX {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x180221904 call 000000018012BDA0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180221909 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18022190A call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18022190F mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180221912 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x180221915 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180221917 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18022191C int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180221930 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180221935 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180221938 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18022193B xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18022193D call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180221942 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180221956 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18022195B mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18022195E xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x180221961 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180221963 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180221968 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18022197C call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180221981 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180221984 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x180221987 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180221989 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18022198E int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1802219A2 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802219A7 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1802219AA xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1802219AD xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1802219AF call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802219B4 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1802219C8 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802219CD mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1802219D0 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1802219D3 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1802219D5 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802219DA int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1802219EE call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802219F3 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1802219F6 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1802219F9 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1802219FB call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180221A00 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180221A14 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180221A19 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180221A1C xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x180221A1F xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180221A21 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180221A26 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180221A3A call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180221A3F mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180221A42 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x180221A45 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180221A47 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180221A4C int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180221A60 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180221A65 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180221A68 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x180221A6B xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180221A6D call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180221A72 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180221A86 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180221A8B mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180221A8E xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x180221A91 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180221A93 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180221A98 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x180221AAC call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180221AB1 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x180221AB4 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x180221AB7 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180221AB9 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180221ABE int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Static Method System.Void C026_SideQuest_Define::.cctor():
		End of function at 0x180221ABF
		Absolute End is at 0x180221ABF
		Identified Jump Destination addresses:

		0x1802215B5: Saves the content of rdi to the stack
		0x1802215BA: Compares {Unknown Global at 0x18183D2D8, first ten bytes are [0 0 0 0 0 0 0 0 0 0], or as chars "          "} and 0
		0x1802215C1: Jumps to 0x1802215D5 if {Unknown Global at 0x18183D2D8, first ten bytes are [0 0 0 0 0 0 0 0 0 0], or as chars "          "} != 0

		0x1802215C3: Loads string "ô" into register rcx as constant {'constant3' (constant value of type Cpp2IL.Core.Analysis.ResultModels.Il2CppString)}
		0x1802215C9: Attempts to load the il2cpp metadata for this method (method id 0) and init it cpp-side.

		0x1802215D5: Loads the type definition for managed type System.Type[] as a constant "Type[]" in rcx
		0x1802215DC: [!] Writes the constant 0xE into operand 14 (type UInt64) in register rdx
		0x1802215E1: [!] Allocates an array of type System.Type[] of size 14 and stores the result as local0 in register rax

		0x1802215E6: Loads the type definition for managed type System.Type as a constant "Type" in rcx
		0x1802215ED: Copies {'local0' (type System.Type[])} from rax into rdi
		0x1802215F0: Loads the type definition for managed type ESerifSideQ_Pol_C026_1000 as a constant "ESerifSideQ_Pol_C026_1000" in rbx
		0x1802215F7: Compares "{il2cpp field on {'Type' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" and 2
		0x1802215FE: Jumps to 0x18022160E if "{il2cpp field on {'Type' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" equals 2

		0x180221600: Compares "{il2cpp field on {'Type' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" and 0
		0x180221607: Jumps to 0x18022160E if "{il2cpp field on {'Type' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" != 0

		0x180221609: Calls the il2cpp cctor for the type System.Type
		0x180221610: Copies {'ESerifSideQ_Pol_C026_1000' (constant value of type Mono.Cecil.TypeReference)} from rbx into rcx
		0x180221613: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C026_1000' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle' (type System.Type)}

		0x180221618: Copies {'typeFromHandle' (type System.Type)} from rax into rbx
		0x18022161B: [!] Compares {'local0' (type System.Type[])} and 0
		0x18022161E: Jumps to 0x180221902 (which throws a NRE) if local0 equals 0. Implicitly present in managed code, so ignored here.
		0x180221624: [!] Compares {'typeFromHandle' (type System.Type)} and 0
		0x180221627: Jumps to 0x180221641 (which is an if statement's body) if typeFromHandle equals 0 ;  - Increasing indentation - is standard if, unimportant is False

		0x180221629: Loads the class pointer from local0 into a constant constant14 in register rdx
		0x18022162C: Copies {'typeFromHandle' (type System.Type)} from rax into rcx
		0x18022162F: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x180221638: [!] Compares {'typeFromHandle' (type System.Type)} and 0
		0x18022163B: Jumps to 0x18022190A if typeFromHandle equals 0 ;  - This is probably a goto, jumping to 0x18022190A which is after end of current block @ 0x180221641 (started at 0x180221629)

		0x180221641: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 1
		0x180221645: Jumps to 0x18022191D (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 1. Implicitly present in managed code, so ignored here.
		0x18022164B: Sets the value at offset 1 in array local0 to {'typeFromHandle' (type System.Type)}
		0x180221651: Loads the type definition for managed type ESerifSideQ_Pol_C026_1001 as a constant "ESerifSideQ_Pol_C026_1001" in rcx
		0x180221658: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C026_1001' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle2' (type System.Type)}

		0x18022165D: Copies {'typeFromHandle2' (type System.Type)} from rax into rbx
		0x180221660: [!] Compares {'typeFromHandle2' (type System.Type)} and 0
		0x180221663: Jumps to 0x18022167D if typeFromHandle2 equals 0 ;  - This is probably a goto, jumping to 0x18022167D which is after end of current block @ 0x180221641 (started at 0x180221629)

		0x180221665: Loads the class pointer from local0 into a constant constant19 in register rdx
		0x180221668: Copies {'typeFromHandle2' (type System.Type)} from rax into rcx
		0x18022166B: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x180221674: [!] Compares {'typeFromHandle2' (type System.Type)} and 0
		0x180221677: Jumps to 0x180221930 if typeFromHandle2 equals 0 ;  - This is probably a goto, jumping to 0x180221930 which is after end of current block @ 0x180221641 (started at 0x180221629)

		0x18022167D: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 2
		0x180221681: Jumps to 0x180221943 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 2. Implicitly present in managed code, so ignored here.
		0x180221687: Sets the value at offset 2 in array local0 to {'typeFromHandle2' (type System.Type)}
		0x18022168D: Loads the type definition for managed type ESerifSideQ_Pol_C026_1002 as a constant "ESerifSideQ_Pol_C026_1002" in rcx
		0x180221694: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C026_1002' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle3' (type System.Type)}

		0x180221699: Copies {'typeFromHandle3' (type System.Type)} from rax into rbx
		0x18022169C: [!] Compares {'typeFromHandle3' (type System.Type)} and 0
		0x18022169F: Jumps to 0x1802216B9 if typeFromHandle3 equals 0 ;  - This is probably a goto, jumping to 0x1802216B9 which is after end of current block @ 0x180221641 (started at 0x180221629)

		0x1802216A1: Loads the class pointer from local0 into a constant constant24 in register rdx
		0x1802216A4: Copies {'typeFromHandle3' (type System.Type)} from rax into rcx
		0x1802216A7: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x1802216B0: [!] Compares {'typeFromHandle3' (type System.Type)} and 0
		0x1802216B3: Jumps to 0x180221956 if typeFromHandle3 equals 0 ;  - This is probably a goto, jumping to 0x180221956 which is after end of current block @ 0x180221641 (started at 0x180221629)

		0x1802216B9: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 3
		0x1802216BD: Jumps to 0x180221969 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 3. Implicitly present in managed code, so ignored here.
		0x1802216C3: Sets the value at offset 3 in array local0 to {'typeFromHandle3' (type System.Type)}
		0x1802216C9: Loads the type definition for managed type ESerifSideQ_Pol_C026_1003 as a constant "ESerifSideQ_Pol_C026_1003" in rcx
		0x1802216D0: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C026_1003' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle4' (type System.Type)}

		0x1802216D5: Copies {'typeFromHandle4' (type System.Type)} from rax into rbx
		0x1802216D8: [!] Compares {'typeFromHandle4' (type System.Type)} and 0
		0x1802216DB: Jumps to 0x1802216F5 if typeFromHandle4 equals 0 ;  - This is probably a goto, jumping to 0x1802216F5 which is after end of current block @ 0x180221641 (started at 0x180221629)

		0x1802216DD: Loads the class pointer from local0 into a constant constant29 in register rdx
		0x1802216E0: Copies {'typeFromHandle4' (type System.Type)} from rax into rcx
		0x1802216E3: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x1802216EC: [!] Compares {'typeFromHandle4' (type System.Type)} and 0
		0x1802216EF: Jumps to 0x18022197C if typeFromHandle4 equals 0 ;  - This is probably a goto, jumping to 0x18022197C which is after end of current block @ 0x180221641 (started at 0x180221629)

		0x1802216F5: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 4
		0x1802216F9: Jumps to 0x18022198F (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 4. Implicitly present in managed code, so ignored here.
		0x1802216FF: Sets the value at offset 4 in array local0 to {'typeFromHandle4' (type System.Type)}
		0x180221705: Loads the type definition for managed type ESerifSideQ_Pol_C026_2000 as a constant "ESerifSideQ_Pol_C026_2000" in rcx
		0x18022170C: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C026_2000' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle5' (type System.Type)}

		0x180221711: Copies {'typeFromHandle5' (type System.Type)} from rax into rbx
		0x180221714: [!] Compares {'typeFromHandle5' (type System.Type)} and 0
		0x180221717: Jumps to 0x180221731 if typeFromHandle5 equals 0 ;  - This is probably a goto, jumping to 0x180221731 which is after end of current block @ 0x180221641 (started at 0x180221629)

		0x180221719: Loads the class pointer from local0 into a constant constant34 in register rdx
		0x18022171C: Copies {'typeFromHandle5' (type System.Type)} from rax into rcx
		0x18022171F: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x180221728: [!] Compares {'typeFromHandle5' (type System.Type)} and 0
		0x18022172B: Jumps to 0x1802219A2 if typeFromHandle5 equals 0 ;  - This is probably a goto, jumping to 0x1802219A2 which is after end of current block @ 0x180221641 (started at 0x180221629)

		0x180221731: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 5
		0x180221735: Jumps to 0x1802219B5 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 5. Implicitly present in managed code, so ignored here.
		0x18022173B: Sets the value at offset 5 in array local0 to {'typeFromHandle5' (type System.Type)}
		0x180221741: Loads the type definition for managed type ESerifSideQ_Pol_C026_2001 as a constant "ESerifSideQ_Pol_C026_2001" in rcx
		0x180221748: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C026_2001' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle6' (type System.Type)}

		0x18022174D: Copies {'typeFromHandle6' (type System.Type)} from rax into rbx
		0x180221750: [!] Compares {'typeFromHandle6' (type System.Type)} and 0
		0x180221753: Jumps to 0x18022176D if typeFromHandle6 equals 0 ;  - This is probably a goto, jumping to 0x18022176D which is after end of current block @ 0x180221641 (started at 0x180221629)

		0x180221755: Loads the class pointer from local0 into a constant constant39 in register rdx
		0x180221758: Copies {'typeFromHandle6' (type System.Type)} from rax into rcx
		0x18022175B: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x180221764: [!] Compares {'typeFromHandle6' (type System.Type)} and 0
		0x180221767: Jumps to 0x1802219C8 if typeFromHandle6 equals 0 ;  - This is probably a goto, jumping to 0x1802219C8 which is after end of current block @ 0x180221641 (started at 0x180221629)

		0x18022176D: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 6
		0x180221771: Jumps to 0x1802219DB (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 6. Implicitly present in managed code, so ignored here.
		0x180221777: Sets the value at offset 6 in array local0 to {'typeFromHandle6' (type System.Type)}
		0x18022177D: Loads the type definition for managed type ESerifSideQ_Pol_C026_3000 as a constant "ESerifSideQ_Pol_C026_3000" in rcx
		0x180221784: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C026_3000' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle7' (type System.Type)}

		0x180221789: Copies {'typeFromHandle7' (type System.Type)} from rax into rbx
		0x18022178C: [!] Compares {'typeFromHandle7' (type System.Type)} and 0
		0x18022178F: Jumps to 0x1802217A9 if typeFromHandle7 equals 0 ;  - This is probably a goto, jumping to 0x1802217A9 which is after end of current block @ 0x180221641 (started at 0x180221629)

		0x180221791: Loads the class pointer from local0 into a constant constant44 in register rdx
		0x180221794: Copies {'typeFromHandle7' (type System.Type)} from rax into rcx
		0x180221797: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x1802217A0: [!] Compares {'typeFromHandle7' (type System.Type)} and 0
		0x1802217A3: Jumps to 0x1802219EE if typeFromHandle7 equals 0 ;  - This is probably a goto, jumping to 0x1802219EE which is after end of current block @ 0x180221641 (started at 0x180221629)

		0x1802217A9: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 7
		0x1802217AD: Jumps to 0x180221A01 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 7. Implicitly present in managed code, so ignored here.
		0x1802217B3: Sets the value at offset 7 in array local0 to {'typeFromHandle7' (type System.Type)}
		0x1802217B9: Loads the type definition for managed type ESerifSideQ_Pol_C026_3001 as a constant "ESerifSideQ_Pol_C026_3001" in rcx
		0x1802217C0: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C026_3001' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle8' (type System.Type)}

		0x1802217C5: Copies {'typeFromHandle8' (type System.Type)} from rax into rbx
		0x1802217C8: [!] Compares {'typeFromHandle8' (type System.Type)} and 0
		0x1802217CB: Jumps to 0x1802217E5 if typeFromHandle8 equals 0 ;  - This is probably a goto, jumping to 0x1802217E5 which is after end of current block @ 0x180221641 (started at 0x180221629)

		0x1802217CD: Loads the class pointer from local0 into a constant constant49 in register rdx
		0x1802217D0: Copies {'typeFromHandle8' (type System.Type)} from rax into rcx
		0x1802217D3: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x1802217DC: [!] Compares {'typeFromHandle8' (type System.Type)} and 0
		0x1802217DF: Jumps to 0x180221A14 if typeFromHandle8 equals 0 ;  - This is probably a goto, jumping to 0x180221A14 which is after end of current block @ 0x180221641 (started at 0x180221629)

		0x1802217E5: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 8
		0x1802217E9: Jumps to 0x180221A27 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 8. Implicitly present in managed code, so ignored here.
		0x1802217EF: Sets the value at offset 8 in array local0 to {'typeFromHandle8' (type System.Type)}
		0x1802217F5: Loads the type definition for managed type ESerifSideQ_Pol_C026_4000 as a constant "ESerifSideQ_Pol_C026_4000" in rcx
		0x1802217FC: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C026_4000' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle9' (type System.Type)}

		0x180221801: Copies {'typeFromHandle9' (type System.Type)} from rax into rbx
		0x180221804: [!] Compares {'typeFromHandle9' (type System.Type)} and 0
		0x180221807: Jumps to 0x180221821 if typeFromHandle9 equals 0 ;  - This is probably a goto, jumping to 0x180221821 which is after end of current block @ 0x180221641 (started at 0x180221629)

		0x180221809: Loads the class pointer from local0 into a constant constant54 in register rdx
		0x18022180C: Copies {'typeFromHandle9' (type System.Type)} from rax into rcx
		0x18022180F: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x180221818: [!] Compares {'typeFromHandle9' (type System.Type)} and 0
		0x18022181B: Jumps to 0x180221A3A if typeFromHandle9 equals 0 ;  - This is probably a goto, jumping to 0x180221A3A which is after end of current block @ 0x180221641 (started at 0x180221629)

		0x180221821: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 9
		0x180221825: Jumps to 0x180221A4D (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 9. Implicitly present in managed code, so ignored here.
		0x18022182B: Sets the value at offset 9 in array local0 to {'typeFromHandle9' (type System.Type)}
		0x180221831: Loads the type definition for managed type ESerifSideQ_Pol_C026_4001 as a constant "ESerifSideQ_Pol_C026_4001" in rcx
		0x180221838: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C026_4001' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle10' (type System.Type)}

		0x18022183D: Copies {'typeFromHandle10' (type System.Type)} from rax into rbx
		0x180221840: [!] Compares {'typeFromHandle10' (type System.Type)} and 0
		0x180221843: Jumps to 0x18022185D if typeFromHandle10 equals 0 ;  - This is probably a goto, jumping to 0x18022185D which is after end of current block @ 0x180221641 (started at 0x180221629)

		0x180221845: Loads the class pointer from local0 into a constant constant59 in register rdx
		0x180221848: Copies {'typeFromHandle10' (type System.Type)} from rax into rcx
		0x18022184B: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x180221854: [!] Compares {'typeFromHandle10' (type System.Type)} and 0
		0x180221857: Jumps to 0x180221A60 if typeFromHandle10 equals 0 ;  - This is probably a goto, jumping to 0x180221A60 which is after end of current block @ 0x180221641 (started at 0x180221629)

		0x18022185D: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 10
		0x180221861: Jumps to 0x180221A73 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 10. Implicitly present in managed code, so ignored here.
		0x180221867: Sets the value at offset 10 in array local0 to {'typeFromHandle10' (type System.Type)}
		0x18022186D: Loads the type definition for managed type ESerifSideQ_Pol_C026_5000 as a constant "ESerifSideQ_Pol_C026_5000" in rcx
		0x180221874: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C026_5000' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle11' (type System.Type)}

		0x180221879: Copies {'typeFromHandle11' (type System.Type)} from rax into rbx
		0x18022187C: [!] Compares {'typeFromHandle11' (type System.Type)} and 0
		0x18022187F: Jumps to 0x180221899 if typeFromHandle11 equals 0 ;  - This is probably a goto, jumping to 0x180221899 which is after end of current block @ 0x180221641 (started at 0x180221629)

		0x180221881: Loads the class pointer from local0 into a constant constant64 in register rdx
		0x180221884: Copies {'typeFromHandle11' (type System.Type)} from rax into rcx
		0x180221887: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x180221890: [!] Compares {'typeFromHandle11' (type System.Type)} and 0
		0x180221893: Jumps to 0x180221A86 if typeFromHandle11 equals 0 ;  - This is probably a goto, jumping to 0x180221A86 which is after end of current block @ 0x180221641 (started at 0x180221629)

		0x180221899: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 11
		0x18022189D: Jumps to 0x180221A99 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 11. Implicitly present in managed code, so ignored here.
		0x1802218A3: Sets the value at offset 11 in array local0 to {'typeFromHandle11' (type System.Type)}
		0x1802218A9: Loads the type definition for managed type ESerifSideQ_Pol_C026_5001 as a constant "ESerifSideQ_Pol_C026_5001" in rcx
		0x1802218B0: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifSideQ_Pol_C026_5001' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle12' (type System.Type)}

		0x1802218B5: Copies {'typeFromHandle12' (type System.Type)} from rax into rbx
		0x1802218B8: [!] Compares {'typeFromHandle12' (type System.Type)} and 0
		0x1802218BB: Jumps to 0x1802218D5 if typeFromHandle12 equals 0 ;  - This is probably a goto, jumping to 0x1802218D5 which is after end of current block @ 0x180221641 (started at 0x180221629)

		0x1802218BD: Loads the class pointer from local0 into a constant constant69 in register rdx
		0x1802218C0: Copies {'typeFromHandle12' (type System.Type)} from rax into rcx
		0x1802218C3: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x1802218CC: [!] Compares {'typeFromHandle12' (type System.Type)} and 0
		0x1802218CF: Jumps to 0x180221AAC if typeFromHandle12 equals 0 ;  - This is probably a goto, jumping to 0x180221AAC which is after end of current block @ 0x180221641 (started at 0x180221629)

		0x1802218D5: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 12
		0x1802218D9: Jumps to 0x180221ABF (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 12. Implicitly present in managed code, so ignored here.
		0x1802218DF: Sets the value at offset 12 in array local0 to {'typeFromHandle12' (type System.Type)}
		0x1802218E6: Loads the type definition for managed type C026_SideQuest_Define as a constant "C026_SideQuest_Define" in rax
		0x1802218ED: Reads unknown value in stack, offset 48 (0x30) and stores the pointer in register rbx as new constant constant73
		0x1802218F2: Loads the pointer to the static fields for C026_SideQuest_Define and stores it in constant74 in register rcx
		0x1802218F9: [!] Sets static field . to {'local0' (type System.Type[])}
		0x180221901: [!] Returns from the function

		0x180221904: [!] Constructs and throws an exception of kind System.NullReferenceException

		0x18022190F: Copies {'local26' (type System.NullReferenceException)} from rax into rcx
		0x180221935: Copies {'local26' (type System.NullReferenceException)} from rax into rcx
		0x18022195B: Copies {'local26' (type System.NullReferenceException)} from rax into rcx
		0x180221981: Copies {'local26' (type System.NullReferenceException)} from rax into rcx
		0x1802219A7: Copies {'local26' (type System.NullReferenceException)} from rax into rcx
		0x1802219CD: Copies {'local26' (type System.NullReferenceException)} from rax into rcx
		0x1802219F3: Copies {'local26' (type System.NullReferenceException)} from rax into rcx
		0x180221A19: Copies {'local26' (type System.NullReferenceException)} from rax into rcx
		0x180221A3F: Copies {'local26' (type System.NullReferenceException)} from rax into rcx
		0x180221A65: Copies {'local26' (type System.NullReferenceException)} from rax into rcx
		0x180221A8B: Copies {'local26' (type System.NullReferenceException)} from rax into rcx
		0x180221AB1: Copies {'local26' (type System.NullReferenceException)} from rax into rcx



	Generated Pseudocode:

	Declaring Type: C026_SideQuest_Define
	static System.Void .cctor()
		System.Type[] local0 = new System.Type[14]

		System.Type typeFromHandle = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C026_1000' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle != 0)

		    if (typeFromHandle == 0)
                goto INSN_18022190A
            endif
		endif
        
		local0[1] = typeFromHandle

		System.Type typeFromHandle2 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C026_1001' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle2 == 0)
            goto INSN_18022167D
        endif

		if (typeFromHandle2 == 0)
            goto INSN_180221930
        endif

		INSN_18022167D:
		local0[2] = typeFromHandle2

		System.Type typeFromHandle3 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C026_1002' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle3 == 0)
            goto INSN_1802216B9
        endif

		if (typeFromHandle3 == 0)
            goto INSN_180221956
        endif

		INSN_1802216B9:
		local0[3] = typeFromHandle3

		System.Type typeFromHandle4 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C026_1003' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle4 == 0)
            goto INSN_1802216F5
        endif

		if (typeFromHandle4 == 0)
            goto INSN_18022197C
        endif

		INSN_1802216F5:
		local0[4] = typeFromHandle4

		System.Type typeFromHandle5 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C026_2000' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle5 == 0)
            goto INSN_180221731
        endif

		if (typeFromHandle5 == 0)
            goto INSN_1802219A2
        endif

		INSN_180221731:
		local0[5] = typeFromHandle5

		System.Type typeFromHandle6 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C026_2001' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle6 == 0)
            goto INSN_18022176D
        endif

		if (typeFromHandle6 == 0)
            goto INSN_1802219C8
        endif

		INSN_18022176D:
		local0[6] = typeFromHandle6

		System.Type typeFromHandle7 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C026_3000' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle7 == 0)
            goto INSN_1802217A9
        endif

		if (typeFromHandle7 == 0)
            goto INSN_1802219EE
        endif

		INSN_1802217A9:
		local0[7] = typeFromHandle7

		System.Type typeFromHandle8 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C026_3001' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle8 == 0)
            goto INSN_1802217E5
        endif

		if (typeFromHandle8 == 0)
            goto INSN_180221A14
        endif

		INSN_1802217E5:
		local0[8] = typeFromHandle8

		System.Type typeFromHandle9 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C026_4000' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle9 == 0)
            goto INSN_180221821
        endif

		if (typeFromHandle9 == 0)
            goto INSN_180221A3A
        endif

		INSN_180221821:
		local0[9] = typeFromHandle9

		System.Type typeFromHandle10 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C026_4001' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle10 == 0)
            goto INSN_18022185D
        endif

		if (typeFromHandle10 == 0)
            goto INSN_180221A60
        endif

		INSN_18022185D:
		local0[10] = typeFromHandle10

		System.Type typeFromHandle11 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C026_5000' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle11 == 0)
            goto INSN_180221899
        endif

		if (typeFromHandle11 == 0)
            goto INSN_180221A86
        endif

		INSN_180221899:
		local0[11] = typeFromHandle11

		System.Type typeFromHandle12 = System.Type.GetTypeFromHandle({'ESerifSideQ_Pol_C026_5001' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle12 == 0)
            goto INSN_1802218D5
        endif

		if (typeFromHandle12 == 0)
            goto INSN_180221AAC
        endif

		INSN_1802218D5:
		local0[12] = typeFromHandle12
		. = local0
		return
		throw new System.NullReferenceException()

		INSN_18022190A:

		INSN_180221930:

		INSN_180221956:

		INSN_18022197C:

		INSN_1802219A2:

		INSN_1802219C8:

		INSN_1802219EE:

		INSN_180221A14:

		INSN_180221A3A:

		INSN_180221A60:

		INSN_180221A86:

		INSN_180221AAC:


Generated IL:
	Action of type Cpp2IL.Core.Analysis.Actions.x86.Important.RegToStaticFieldAction at (0x1802218F9) is corrupt (No further info) and cannot be created as IL. Aborting here.


