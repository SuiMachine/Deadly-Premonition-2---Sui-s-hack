Type: Enemy_Pain01_OpenWorld

Method: System.Void Enemy_Pain01_OpenWorld::.ctor():	Method Body (x86 ASM):
		0x1805E6A20 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805E6A22 jmp near ptr 00000001805321C0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E6A27 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.Void Enemy_Pain01_OpenWorld::.ctor():
		End of function at 0x1805E6A28
		Absolute End is at 0x1805E6A28
		Identified Jump Destination addresses:

		0x1805E6A22: [!] Calls managed method System.Void OpenWorldEnemy::.ctor() on instance {'this' (function parameter, type Enemy_Pain01_OpenWorld)}

		0x1805E6A22: [!] Returns from the function




	Generated Pseudocode:

	Declaring Type: Enemy_Pain01_OpenWorld
	System.Void .ctor()

		base..ctor()
		return


Generated IL:
	IL_0000: ldarg.0
	IL_0001: call System.Void OpenWorldEnemy::.ctor()
	IL_0006: ret
	

Method: System.Void Enemy_Pain01_OpenWorld::InitUniqueParam():	Method Body (x86 ASM):
		0x1805E8AC0 push rbx		; DEBUG: {Register}/RBX {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805E8AC2 sub rsp,20h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 32
		0x1805E8AC6 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805E8AC8 mov rbx,rcx		; DEBUG: {Register}/RBX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x1805E8ACB call 0000000180531A40h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E8AD0 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805E8AD3 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805E8AD5 mov rcx,rbx		; DEBUG: {Register}/RCX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x1805E8AD8 call 0000000180211970h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E8ADD xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805E8AE0 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805E8AE2 mov rcx,rbx		; DEBUG: {Register}/RCX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x1805E8AE5 call 000000018020FDF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E8AEA mov rcx,[rbx+78h]		; DEBUG: {Register}/RCX {Memory}/None ||| RBX | 120 | None ||| N/A | N/A
		0x1805E8AEE test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x1805E8AF1 je short 00000001805E8B51h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E8AF3 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805E8AF5 call 0000000180206C20h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E8AFA xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805E8AFD mov dl,1		; DEBUG: {Register}/DL {Immediate8}/None ||| None | 0 | None ||| N/A | 1
		0x1805E8AFF mov rcx,rbx		; DEBUG: {Register}/RCX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x1805E8B02 call 0000000180211A00h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E8B07 mov eax,[rbx+48h]		; DEBUG: {Register}/EAX {Memory}/None ||| RBX | 72 | None ||| N/A | N/A
		0x1805E8B0A test eax,eax		; DEBUG: {Register}/EAX {Register}/EAX ||| None | 0 | None ||| N/A | N/A
		0x1805E8B0C je short 00000001805E8B41h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E8B0E cmp eax,1		; DEBUG: {Register}/EAX {Immediate8to32}/None ||| None | 0 | None ||| N/A | 1
		0x1805E8B11 je short 00000001805E8B31h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E8B13 cmp eax,15h		; DEBUG: {Register}/EAX {Immediate8to32}/None ||| None | 0 | None ||| N/A | 21
		0x1805E8B16 je short 00000001805E8B41h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E8B18 cmp eax,16h		; DEBUG: {Register}/EAX {Immediate8to32}/None ||| None | 0 | None ||| N/A | 22
		0x1805E8B1B je short 00000001805E8B31h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E8B1D cmp eax,48h		; DEBUG: {Register}/EAX {Immediate8to32}/None ||| None | 0 | None ||| N/A | 72
		0x1805E8B20 je short 00000001805E8B41h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E8B22 cmp eax,49h		; DEBUG: {Register}/EAX {Immediate8to32}/None ||| None | 0 | None ||| N/A | 73
		0x1805E8B25 je short 00000001805E8B31h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E8B27 cmp eax,4Eh		; DEBUG: {Register}/EAX {Immediate8to32}/None ||| None | 0 | None ||| N/A | 78
		0x1805E8B2A je short 00000001805E8B41h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E8B2C cmp eax,4Fh		; DEBUG: {Register}/EAX {Immediate8to32}/None ||| None | 0 | None ||| N/A | 79
		0x1805E8B2F jne short 00000001805E8B3Bh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E8B31 mov dword ptr [rbx+134h],1		; DEBUG: {Memory}/None {Immediate32}/None ||| RBX | 308 | None ||| N/A | 1
		0x1805E8B3B add rsp,20h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 32
		0x1805E8B3F pop rbx		; DEBUG: {Register}/RBX {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805E8B40 ret		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805E8B41 mov dword ptr [rbx+134h],0		; DEBUG: {Memory}/None {Immediate32}/None ||| RBX | 308 | None ||| N/A | 0
		0x1805E8B4B add rsp,20h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 32
		0x1805E8B4F pop rbx		; DEBUG: {Register}/RBX {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805E8B50 ret		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805E8B51 call 000000018012BDA0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E8B56 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.Void Enemy_Pain01_OpenWorld::InitUniqueParam():
		End of function at 0x1805E8B57
		Absolute End is at 0x1805E8B57
		Identified Jump Destination addresses:

		0x1805E8AC0: Saves the content of rbx to the stack
		0x1805E8AC8: Copies {'this' (function parameter, type Enemy_Pain01_OpenWorld)} from rcx into rbx
		0x1805E8ACB: [!] Calls managed method System.Void OpenWorldEnemy::InitUniqueParam() on instance {'this' (function parameter, type Enemy_Pain01_OpenWorld)}

		0x1805E8AD3: Clears register rdx, yielding zero-local {'local3' (type System.Int32)}
		0x1805E8AD5: Copies {'this' (function parameter, type Enemy_Pain01_OpenWorld)} from rbx into rcx
		0x1805E8AD8: [!] Calls managed method System.Void Enemy::set_EnableInspector(System.Boolean) on instance {'this' (function parameter, type Enemy_Pain01_OpenWorld)} with arguments [{'local3' (type System.Int32)}]

		0x1805E8AE0: Clears register rdx, yielding zero-local {'local5' (type System.Int32)}
		0x1805E8AE2: Copies {'this' (function parameter, type Enemy_Pain01_OpenWorld)} from rbx into rcx
		0x1805E8AE5: [!] Calls managed method System.Void Enemy::SetPuppetMasterEnabled(System.Boolean) on instance {'this' (function parameter, type Enemy_Pain01_OpenWorld)} with arguments [{'local5' (type System.Int32)}]

		0x1805E8AEA: [!] Reads field m_aiAgent from {'this' (function parameter, type Enemy_Pain01_OpenWorld)} and stores in a new local {'m_aiAgent' (type EnemyAIAgent)}

		0x1805E8AEE: [!] Compares {'m_aiAgent' (type EnemyAIAgent)} and 0
		0x1805E8AF1: Jumps to 0x1805E8B51 (which throws a NRE) if m_aiAgent equals 0. Implicitly present in managed code, so ignored here.
		0x1805E8AF5: [!] Calls managed method System.Void EnemyAIAgent::OnUpdate_Init() on instance {'m_aiAgent' (type EnemyAIAgent)}

		0x1805E8AFD: [!] Writes the constant 0x1 into operand True (type UInt64) in register rdx
		0x1805E8AFF: Copies {'this' (function parameter, type Enemy_Pain01_OpenWorld)} from rbx into rcx
		0x1805E8B02: [!] Calls managed method System.Void Enemy::set_IsFirstAttack(System.Boolean) on instance {'this' (function parameter, type Enemy_Pain01_OpenWorld)} with arguments [True]

		0x1805E8B07: [!] Reads field m_type from {'this' (function parameter, type Enemy_Pain01_OpenWorld)} and stores in a new local {'m_type' (type EEnemyType)}

		0x1805E8B0A: [!] Compares {'m_type' (type EEnemyType)} and 0
		0x1805E8B0C: Jumps to 0x1805E8B41 (which is an if statement's body) if m_type equals 0 ;  - Increasing indentation - is standard if, unimportant is False

		0x1805E8B0E: [!] Compares {'m_type' (type EEnemyType)} and 1
		0x1805E8B11: Jumps to 0x1805E8B31 (which is an if statement's body) if m_type equals 1 ;  - Increasing indentation - is standard if, unimportant is False

		0x1805E8B13: [!] Compares {'m_type' (type EEnemyType)} and 21
		0x1805E8B16: Jumps to 0x1805E8B41 (which is an if statement's body) if m_type equals 21 ;  - Increasing indentation - is standard if, unimportant is False

		0x1805E8B18: [!] Compares {'m_type' (type EEnemyType)} and 22
		0x1805E8B1B: Jumps to 0x1805E8B31 (which is an if statement's body) if m_type equals 22 ;  - Increasing indentation - is standard if, unimportant is False

		0x1805E8B1D: [!] Compares {'m_type' (type EEnemyType)} and 72
		0x1805E8B20: Jumps to 0x1805E8B41 (which is an if statement's body) if m_type equals 72 ;  - Increasing indentation - is standard if, unimportant is False

		0x1805E8B22: [!] Compares {'m_type' (type EEnemyType)} and 73
		0x1805E8B25: Jumps to 0x1805E8B31 (which is an if statement's body) if m_type equals 73 ;  - Increasing indentation - is standard if, unimportant is False

		0x1805E8B27: [!] Compares {'m_type' (type EEnemyType)} and 78
		0x1805E8B2A: Jumps to 0x1805E8B41 (which is an if statement's body) if m_type equals 78 ;  - Increasing indentation - is standard if, unimportant is False

		0x1805E8B2C: [!] Compares {'m_type' (type EEnemyType)} and 79
		0x1805E8B2F: Jumps to 0x1805E8B3B (which is an if statement's body) if {'m_type' (type EEnemyType)} != 79 ;  - Increasing indentation - is standard if, unimportant is False

		0x1805E8B31: [!] Sets the field m_firstAttackNum (Type System.Int32) on local {'this' (function parameter, type Enemy_Pain01_OpenWorld)} to the value stored in 1
		0x1805E8B40: [!] Returns from the function

		0x1805E8B41: [!] Sets the field m_firstAttackNum (Type System.Int32) on local {'this' (function parameter, type Enemy_Pain01_OpenWorld)} to the value stored in 0
		0x1805E8B50: [!] Returns from the function

		0x1805E8B51: [!] Constructs and throws an exception of kind System.NullReferenceException




	Generated Pseudocode:

	Declaring Type: Enemy_Pain01_OpenWorld
	System.Void InitUniqueParam()

		base.InitUniqueParam()
		ulong local3 = 0

		base.EnableInspector = local3
		ulong local5 = 0

		base.SetPuppetMasterEnabled(local5) //(Boolean enabled)
		EnemyAIAgent m_aiAgent = this.m_aiAgent

		m_aiAgent.OnUpdate_Init()

		base.IsFirstAttack = True
		EEnemyType m_type = this.m_type

		if (m_type != 0)

		    if (m_type != 1)

		        if (m_type != 21)

		            if (m_type != 22)

		                if (m_type != 72)

		                    if (m_type != 73)

		                        if (m_type != 78)

		                            if (m_type == 79)
		                            endif
                                    
		                            this.m_firstAttackNum = 1
		                        endif
                                
		                        return
		                    endif
                            
		                    this.m_firstAttackNum = 0
		                    return
		                    throw new System.NullReferenceException()


Generated IL:
	IL_0000: ldarg.0
	IL_0001: call System.Void OpenWorldEnemy::InitUniqueParam()
	IL_0006: ldc.i4.0
	IL_0007: stloc.0
	IL_0008: ldarg.0
	IL_0009: ldloc.0
	IL_000a: call System.Void Enemy::set_EnableInspector(System.Boolean)
	IL_000f: ldc.i4.0
	IL_0010: stloc.1
	IL_0011: ldarg.0
	IL_0012: ldloc.1
	IL_0013: call System.Void Enemy::SetPuppetMasterEnabled(System.Boolean)
	IL_0018: ldarg.0
	IL_0019: ldfld EnemyAIAgent Enemy::m_aiAgent
	IL_001e: call System.Void EnemyAIAgent::OnUpdate_Init()
	IL_0023: ldarg.0
	IL_0024: ldc.i4.1
	IL_0025: call System.Void Enemy::set_IsFirstAttack(System.Boolean)
	IL_002a: ldarg.0
	IL_002b: ldfld EEnemyType Enemy::m_type
	IL_0030: stloc.2
	IL_0031: ldloc.2
	IL_0032: ldc.i4.0
	IL_0033: beq.s IL_0061
	IL_0035: ldloc.2
	IL_0036: ldc.i4.1
	IL_0037: beq.s IL_0057
	IL_0039: ldloc.2
	IL_003a: ldc.i4.s 21
	IL_003c: beq.s IL_0061
	IL_003e: ldloc.2
	IL_003f: ldc.i4.s 22
	IL_0041: beq.s IL_0057
	IL_0043: ldloc.2
	IL_0044: ldc.i4.s 72
	IL_0046: beq.s IL_0061
	IL_0048: ldloc.2
	IL_0049: ldc.i4.s 73
	IL_004b: beq.s IL_0057
	IL_004d: ldloc.2
	IL_004e: ldc.i4.s 78
	IL_0050: beq.s IL_0061
	IL_0052: ldloc.2
	IL_0053: ldc.i4.s 79
	IL_0055: bne.un.s IL_0060
	IL_0057: ldarg.0
	IL_0058: ldc.i4.1
	IL_0059: conv.i8
	IL_005a: conv.u8
	IL_005b: stfld System.Int32 Enemy::m_firstAttackNum
	IL_0060: ret
	IL_0061: ldarg.0
	IL_0062: ldc.i4.0
	IL_0063: conv.i8
	IL_0064: conv.u8
	IL_0065: stfld System.Int32 Enemy::m_firstAttackNum
	IL_006a: ret
	IL_006b: newobj System.Void System.NullReferenceException::.ctor()
	IL_0070: throw
	

Method: System.Boolean Enemy_Pain01_OpenWorld::OnGetActionPlan(System.Collections.Generic.List`1<EEnemyActionType>):	Method Body (x86 ASM):
		0x1805E8B60 mov [rsp+10h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RSP | 16 | None ||| N/A | N/A
		0x1805E8B65 mov [rsp+18h],rbp		; DEBUG: {Memory}/None {Register}/RBP ||| RSP | 24 | None ||| N/A | N/A
		0x1805E8B6A mov [rsp+20h],rdi		; DEBUG: {Memory}/None {Register}/RDI ||| RSP | 32 | None ||| N/A | N/A
		0x1805E8B6F push r14		; DEBUG: {Register}/R14 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805E8B71 sub rsp,20h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 32
		0x1805E8B75 cmp byte ptr [18183EE19h],0		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6467874329 | None ||| N/A | 0
		0x1805E8B7C mov rdi,rdx		; DEBUG: {Register}/RDI {Register}/RDX ||| None | 0 | None ||| N/A | N/A
		0x1805E8B7F mov rbx,rcx		; DEBUG: {Register}/RBX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x1805E8B82 jne short 00000001805E8B96h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E8B84 mov ecx,[1814C52B0h]		; DEBUG: {Register}/ECX {Memory}/None ||| RIP | 6464230064 | None ||| N/A | N/A
		0x1805E8B8A call 00000001800FEB90h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E8B8F mov byte ptr [18183EE19h],1		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6467874329 | None ||| N/A | 1
		0x1805E8B96 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805E8B98 mov [rsp+30h],rsi		; DEBUG: {Memory}/None {Register}/RSI ||| RSP | 48 | None ||| N/A | N/A
		0x1805E8B9D mov rcx,rbx		; DEBUG: {Register}/RCX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x1805E8BA0 xor bpl,bpl		; DEBUG: {Register}/BPL {Register}/BPL ||| None | 0 | None ||| N/A | N/A
		0x1805E8BA3 xor r14b,r14b		; DEBUG: {Register}/R14L {Register}/R14L ||| None | 0 | None ||| N/A | N/A
		0x1805E8BA6 call 0000000180211750h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E8BAB test al,al		; DEBUG: {Register}/AL {Register}/AL ||| None | 0 | None ||| N/A | N/A
		0x1805E8BAD jne near ptr 00000001805E8E2Fh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E8BB3 cmp [rbx+150h],bpl		; DEBUG: {Memory}/None {Register}/BPL ||| RBX | 336 | None ||| N/A | N/A
		0x1805E8BBA jne near ptr 00000001805E8E00h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E8BC0 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805E8BC2 mov rcx,rbx		; DEBUG: {Register}/RCX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x1805E8BC5 call 0000000180211830h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E8BCA test al,al		; DEBUG: {Register}/AL {Register}/AL ||| None | 0 | None ||| N/A | N/A
		0x1805E8BCC jne near ptr 00000001805E8D1Bh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E8BD2 cmp [rbx+0ECh],bpl		; DEBUG: {Memory}/None {Register}/BPL ||| RBX | 236 | None ||| N/A | N/A
		0x1805E8BD9 jne near ptr 00000001805E8CE5h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E8BDF xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805E8BE1 mov rcx,rbx		; DEBUG: {Register}/RCX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x1805E8BE4 call 00000001802116B0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E8BE9 test al,al		; DEBUG: {Register}/AL {Register}/AL ||| None | 0 | None ||| N/A | N/A
		0x1805E8BEB jne near ptr 00000001805E8CA2h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E8BF1 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805E8BF3 mov rcx,rbx		; DEBUG: {Register}/RCX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x1805E8BF6 cmp [rbx+111h],bpl		; DEBUG: {Memory}/None {Register}/BPL ||| RBX | 273 | None ||| N/A | N/A
		0x1805E8BFD jne short 00000001805E8C5Dh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E8BFF call 0000000180211770h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E8C04 test rdi,rdi		; DEBUG: {Register}/RDI {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x1805E8C07 je near ptr 00000001805E8E83h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E8C0D mov r8,[18188C748h]		; DEBUG: {Register}/R8 {Memory}/None ||| RIP | 6468192072 | None ||| N/A | N/A
		0x1805E8C14 mov rcx,rdi		; DEBUG: {Register}/RCX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x1805E8C17 test al,al		; DEBUG: {Register}/AL {Register}/AL ||| None | 0 | None ||| N/A | N/A
		0x1805E8C19 jne short 00000001805E8C4Bh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E8C1B mov edx,1		; DEBUG: {Register}/EDX {Immediate32}/None ||| None | 0 | None ||| N/A | 1
		0x1805E8C20 call 0000000180F34CC0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E8C25 mov r8,[18188C748h]		; DEBUG: {Register}/R8 {Memory}/None ||| RIP | 6468192072 | None ||| N/A | N/A
		0x1805E8C2C mov edx,3		; DEBUG: {Register}/EDX {Immediate32}/None ||| None | 0 | None ||| N/A | 3
		0x1805E8C31 mov rcx,rdi		; DEBUG: {Register}/RCX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x1805E8C34 call 0000000180F34CC0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E8C39 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805E8C3C mov dl,1		; DEBUG: {Register}/DL {Immediate8}/None ||| None | 0 | None ||| N/A | 1
		0x1805E8C3E mov rcx,rbx		; DEBUG: {Register}/RCX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x1805E8C41 call 0000000180211970h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E8C46 jmp near ptr 00000001805E8E55h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E8C4B mov edx,14h		; DEBUG: {Register}/EDX {Immediate32}/None ||| None | 0 | None ||| N/A | 20
		0x1805E8C50 call 0000000180F34CC0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E8C55 mov r14b,1		; DEBUG: {Register}/R14L {Immediate8}/None ||| None | 0 | None ||| N/A | 1
		0x1805E8C58 jmp near ptr 00000001805E8E55h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E8C5D call 00000001802115A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E8C62 test al,al		; DEBUG: {Register}/AL {Register}/AL ||| None | 0 | None ||| N/A | N/A
		0x1805E8C64 mov edx,15h		; DEBUG: {Register}/EDX {Immediate32}/None ||| None | 0 | None ||| N/A | 21
		0x1805E8C69 mov ecx,0Ch		; DEBUG: {Register}/ECX {Immediate32}/None ||| None | 0 | None ||| N/A | 12
		0x1805E8C6E cmove edx,ecx		; DEBUG: {Register}/EDX {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x1805E8C71 test rdi,rdi		; DEBUG: {Register}/RDI {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x1805E8C74 je near ptr 00000001805E8E83h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E8C7A mov r8,[18188C748h]		; DEBUG: {Register}/R8 {Memory}/None ||| RIP | 6468192072 | None ||| N/A | N/A
		0x1805E8C81 mov rcx,rdi		; DEBUG: {Register}/RCX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x1805E8C84 call 0000000180F34CC0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E8C89 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805E8C8C mov [rbx+111h],bpl		; DEBUG: {Memory}/None {Register}/BPL ||| RBX | 273 | None ||| N/A | N/A
		0x1805E8C93 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805E8C95 mov rcx,rbx		; DEBUG: {Register}/RCX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x1805E8C98 call 0000000180211970h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E8C9D jmp near ptr 00000001805E8E55h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E8CA2 test rdi,rdi		; DEBUG: {Register}/RDI {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x1805E8CA5 je near ptr 00000001805E8E83h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E8CAB mov r8,[18188C748h]		; DEBUG: {Register}/R8 {Memory}/None ||| RIP | 6468192072 | None ||| N/A | N/A
		0x1805E8CB2 mov edx,3		; DEBUG: {Register}/EDX {Immediate32}/None ||| None | 0 | None ||| N/A | 3
		0x1805E8CB7 mov rcx,rdi		; DEBUG: {Register}/RCX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x1805E8CBA call 0000000180F34CC0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E8CBF mov r8,[18188C748h]		; DEBUG: {Register}/R8 {Memory}/None ||| RIP | 6468192072 | None ||| N/A | N/A
		0x1805E8CC6 mov edx,8		; DEBUG: {Register}/EDX {Immediate32}/None ||| None | 0 | None ||| N/A | 8
		0x1805E8CCB mov rcx,rdi		; DEBUG: {Register}/RCX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x1805E8CCE call 0000000180F34CC0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E8CD3 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805E8CD6 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805E8CD8 mov rcx,rbx		; DEBUG: {Register}/RCX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x1805E8CDB call 00000001802119B0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E8CE0 jmp near ptr 00000001805E8E55h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E8CE5 test rdi,rdi		; DEBUG: {Register}/RDI {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x1805E8CE8 je near ptr 00000001805E8E83h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E8CEE mov r8,[18188C748h]		; DEBUG: {Register}/R8 {Memory}/None ||| RIP | 6468192072 | None ||| N/A | N/A
		0x1805E8CF5 mov edx,5		; DEBUG: {Register}/EDX {Immediate32}/None ||| None | 0 | None ||| N/A | 5
		0x1805E8CFA mov rcx,rdi		; DEBUG: {Register}/RCX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x1805E8CFD call 0000000180F34CC0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E8D02 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805E8D05 mov [rbx+0ECh],bpl		; DEBUG: {Memory}/None {Register}/BPL ||| RBX | 236 | None ||| N/A | N/A
		0x1805E8D0C xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805E8D0E mov rcx,rbx		; DEBUG: {Register}/RCX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x1805E8D11 call 0000000180211970h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E8D16 jmp near ptr 00000001805E8E55h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E8D1B mov rcx,[18188D758h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468196184 | None ||| N/A | N/A
		0x1805E8D22 mov rsi,[rbx+0A0h]		; DEBUG: {Register}/RSI {Memory}/None ||| RBX | 160 | None ||| N/A | N/A
		0x1805E8D29 test byte ptr [rcx+127h],2		; DEBUG: {Memory}/None {Immediate8}/None ||| RCX | 295 | None ||| N/A | 2
		0x1805E8D30 je short 00000001805E8D40h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E8D32 cmp dword ptr [rcx+0D8h],0		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RCX | 216 | None ||| N/A | 0
		0x1805E8D39 jne short 00000001805E8D40h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E8D3B call 000000018010EAF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E8D40 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805E8D43 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805E8D45 mov rcx,rsi		; DEBUG: {Register}/RCX {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x1805E8D48 call 0000000180EA6750h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E8D4D test al,al		; DEBUG: {Register}/AL {Register}/AL ||| None | 0 | None ||| N/A | N/A
		0x1805E8D4F je short 00000001805E8DACh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E8D51 mov rsi,[rbx+0A0h]		; DEBUG: {Register}/RSI {Memory}/None ||| RBX | 160 | None ||| N/A | N/A
		0x1805E8D58 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805E8D5A mov rcx,rbx		; DEBUG: {Register}/RCX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x1805E8D5D call 0000000180B29690h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E8D62 test rsi,rsi		; DEBUG: {Register}/RSI {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x1805E8D65 je near ptr 00000001805E8E83h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E8D6B xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805E8D6E mov rdx,rax		; DEBUG: {Register}/RDX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805E8D71 mov rcx,rsi		; DEBUG: {Register}/RCX {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x1805E8D74 call 00000001806ED2B0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E8D79 test al,al		; DEBUG: {Register}/AL {Register}/AL ||| None | 0 | None ||| N/A | N/A
		0x1805E8D7B je short 00000001805E8DACh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E8D7D test rdi,rdi		; DEBUG: {Register}/RDI {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x1805E8D80 je near ptr 00000001805E8E83h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E8D86 mov r8,[18188C748h]		; DEBUG: {Register}/R8 {Memory}/None ||| RIP | 6468192072 | None ||| N/A | N/A
		0x1805E8D8D mov edx,7		; DEBUG: {Register}/EDX {Immediate32}/None ||| None | 0 | None ||| N/A | 7
		0x1805E8D92 mov rcx,rdi		; DEBUG: {Register}/RCX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x1805E8D95 call 0000000180F34CC0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E8D9A xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805E8D9D xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805E8D9F mov rcx,rbx		; DEBUG: {Register}/RCX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x1805E8DA2 call 0000000180211AE0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E8DA7 jmp near ptr 00000001805E8E55h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E8DAC xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805E8DAE mov rcx,rbx		; DEBUG: {Register}/RCX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x1805E8DB1 call 000000018020C2F0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E8DB6 test al,al		; DEBUG: {Register}/AL {Register}/AL ||| None | 0 | None ||| N/A | N/A
		0x1805E8DB8 je short 00000001805E8DCAh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E8DBA test rdi,rdi		; DEBUG: {Register}/RDI {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x1805E8DBD je near ptr 00000001805E8E83h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E8DC3 mov edx,17h		; DEBUG: {Register}/EDX {Immediate32}/None ||| None | 0 | None ||| N/A | 23
		0x1805E8DC8 jmp short 00000001805E8DDFh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E8DCA xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805E8DCC mov rcx,rbx		; DEBUG: {Register}/RCX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x1805E8DCF call 000000018020B940h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E8DD4 test rdi,rdi		; DEBUG: {Register}/RDI {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x1805E8DD7 je near ptr 00000001805E8E83h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E8DDD mov edx,eax		; DEBUG: {Register}/EDX {Register}/EAX ||| None | 0 | None ||| N/A | N/A
		0x1805E8DDF mov r8,[18188C748h]		; DEBUG: {Register}/R8 {Memory}/None ||| RIP | 6468192072 | None ||| N/A | N/A
		0x1805E8DE6 mov rcx,rdi		; DEBUG: {Register}/RCX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x1805E8DE9 call 0000000180F34CC0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E8DEE mov bpl,1		; DEBUG: {Register}/BPL {Immediate8}/None ||| None | 0 | None ||| N/A | 1
		0x1805E8DF1 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805E8DF4 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805E8DF6 mov rcx,rbx		; DEBUG: {Register}/RCX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x1805E8DF9 call 0000000180211AE0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E8DFE jmp short 00000001805E8E55h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E8E00 test rdi,rdi		; DEBUG: {Register}/RDI {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x1805E8E03 je short 00000001805E8E83h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E8E05 mov r8,[18188C748h]		; DEBUG: {Register}/R8 {Memory}/None ||| RIP | 6468192072 | None ||| N/A | N/A
		0x1805E8E0C mov edx,13h		; DEBUG: {Register}/EDX {Immediate32}/None ||| None | 0 | None ||| N/A | 19
		0x1805E8E11 mov rcx,rdi		; DEBUG: {Register}/RCX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x1805E8E14 call 0000000180F34CC0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E8E19 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805E8E1C xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805E8E1E mov rcx,rbx		; DEBUG: {Register}/RCX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x1805E8E21 call 0000000180211970h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E8E26 mov [rbx+150h],bpl		; DEBUG: {Memory}/None {Register}/BPL ||| RBX | 336 | None ||| N/A | N/A
		0x1805E8E2D jmp short 00000001805E8E55h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E8E2F test rdi,rdi		; DEBUG: {Register}/RDI {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x1805E8E32 je short 00000001805E8E83h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E8E34 mov r8,[18188C748h]		; DEBUG: {Register}/R8 {Memory}/None ||| RIP | 6468192072 | None ||| N/A | N/A
		0x1805E8E3B mov edx,6		; DEBUG: {Register}/EDX {Immediate32}/None ||| None | 0 | None ||| N/A | 6
		0x1805E8E40 mov rcx,rdi		; DEBUG: {Register}/RCX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x1805E8E43 call 0000000180F34CC0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E8E48 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805E8E4B xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805E8E4D mov rcx,rbx		; DEBUG: {Register}/RCX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x1805E8E50 call 0000000180211A30h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E8E55 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805E8E58 movzx edx,r14b		; DEBUG: {Register}/EDX {Register}/R14L ||| None | 0 | None ||| N/A | N/A
		0x1805E8E5C mov rcx,rbx		; DEBUG: {Register}/RCX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x1805E8E5F call 0000000180211A50h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E8E64 mov rsi,[rsp+30h]		; DEBUG: {Register}/RSI {Memory}/None ||| RSP | 48 | None ||| N/A | N/A
		0x1805E8E69 movzx eax,bpl		; DEBUG: {Register}/EAX {Register}/BPL ||| None | 0 | None ||| N/A | N/A
		0x1805E8E6D mov rbp,[rsp+40h]		; DEBUG: {Register}/RBP {Memory}/None ||| RSP | 64 | None ||| N/A | N/A
		0x1805E8E72 mov rbx,[rsp+38h]		; DEBUG: {Register}/RBX {Memory}/None ||| RSP | 56 | None ||| N/A | N/A
		0x1805E8E77 mov rdi,[rsp+48h]		; DEBUG: {Register}/RDI {Memory}/None ||| RSP | 72 | None ||| N/A | N/A
		0x1805E8E7C add rsp,20h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 32
		0x1805E8E80 pop r14		; DEBUG: {Register}/R14 {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805E8E82 ret		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805E8E83 xor ecx,ecx		; DEBUG: {Register}/ECX {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x1805E8E85 call 000000018012BDA0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E8E8A int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.Boolean Enemy_Pain01_OpenWorld::OnGetActionPlan(System.Collections.Generic.List`1<EEnemyActionType>):
		End of function at 0x1805E8E8B
		Absolute End is at 0x1805E8E8B
		Identified Jump Destination addresses:
			0x1805E8E55
			0x1805E8DDF
		0x1805E8B6F: Saves the content of r14 to the stack
		0x1805E8B75: Compares {Unknown Global at 0x18183EE19, first ten bytes are [60 103 1 16 227 1 0 151 227 1], or as chars "<gã ã"} and 0
		0x1805E8B7C: Copies {'actions' (function parameter, type System.Collections.Generic.List`1<EEnemyActionType>)} from rdx into rdi
		0x1805E8B7F: Copies {'this' (function parameter, type Enemy_Pain01_OpenWorld)} from rcx into rbx
		0x1805E8B82: Jumps to 0x1805E8B96 if {Unknown Global at 0x18183EE19, first ten bytes are [60 103 1 16 227 1 0 151 227 1], or as chars "<gã ã"} != 0

		0x1805E8B84: Loads string "É)" into register rcx as constant {'constant3' (constant value of type Cpp2IL.Core.Analysis.ResultModels.Il2CppString)}
		0x1805E8B8A: Attempts to load the il2cpp metadata for this method (method id 0) and init it cpp-side.

		0x1805E8B9D: Copies {'this' (function parameter, type Enemy_Pain01_OpenWorld)} from rbx into rcx
		0x1805E8BA0: Clears register rbp, yielding zero-local {'local3' (type System.Int32)}
		0x1805E8BA3: Clears register r14, yielding zero-local {'local4' (type System.Int32)}
		0x1805E8BA6: [!] Calls managed method System.Boolean Enemy::get_IsInspector() on instance {'this' (function parameter, type Enemy_Pain01_OpenWorld)} and stores the result in {'isInspector' (type System.Boolean)}

		0x1805E8BAB: [!] Compares {'isInspector' (type System.Boolean)} and False
		0x1805E8BAD: Jumps to 0x1805E8E2F if {'isInspector' (type System.Boolean)} != False ;  - Increasing indentation - is if-else, unimportant is False

		0x1805E8BB3: [!] Compares  and {'local3' (type System.Int32)}
		0x1805E8BBA: Jumps to 0x1805E8E00 if  != {'local3' (type System.Int32)} ;  - Increasing indentation - is if-else, unimportant is False

		0x1805E8BC2: Copies {'this' (function parameter, type Enemy_Pain01_OpenWorld)} from rbx into rcx
		0x1805E8BC5: [!] Calls managed method System.Boolean Enemy::get_StartAttack() on instance {'this' (function parameter, type Enemy_Pain01_OpenWorld)} and stores the result in {'startAttack' (type System.Boolean)}

		0x1805E8BCA: [!] Compares {'startAttack' (type System.Boolean)} and False
		0x1805E8BCC: Jumps to 0x1805E8D1B if {'startAttack' (type System.Boolean)} != False ;  - Increasing indentation - is if-else, unimportant is False

		0x1805E8BD2: [!] Compares  and {'local3' (type System.Int32)}
		0x1805E8BD9: Jumps to 0x1805E8CE5 if  != {'local3' (type System.Int32)} ;  - Increasing indentation - is if-else, unimportant is False

		0x1805E8BE1: Copies {'this' (function parameter, type Enemy_Pain01_OpenWorld)} from rbx into rcx
		0x1805E8BE4: [!] Calls managed method System.Boolean Enemy::get_IsAttacked() on instance {'this' (function parameter, type Enemy_Pain01_OpenWorld)} and stores the result in {'isAttacked' (type System.Boolean)}

		0x1805E8BE9: [!] Compares {'isAttacked' (type System.Boolean)} and False
		0x1805E8BEB: Jumps to 0x1805E8CA2 if {'isAttacked' (type System.Boolean)} != False ;  - Increasing indentation - is if-else, unimportant is False

		0x1805E8BF3: Copies {'this' (function parameter, type Enemy_Pain01_OpenWorld)} from rbx into rcx
		0x1805E8BF6: [!] Compares  and {'local3' (type System.Int32)}
		0x1805E8BFD: Jumps to 0x1805E8C5D if  != {'local3' (type System.Int32)} ;  - Increasing indentation - is if-else, unimportant is False

		0x1805E8BFF: [!] Calls managed method System.Boolean Enemy::get_IsMovePosition() on instance {'this' (function parameter, type Enemy_Pain01_OpenWorld)} and stores the result in {'isMovePosition' (type System.Boolean)}

		0x1805E8C04: [!] Compares {'actions' (function parameter, type System.Collections.Generic.List`1<EEnemyActionType>)} and 0
		0x1805E8C07: Jumps to 0x1805E8E83 (which throws a NRE) if actions equals 0. Implicitly present in managed code, so ignored here.
		0x1805E8C0D: Loads the global generic method reference for method System.Void System.Collections.Generic.List`1::Add(T) on type System.Collections.Generic.List`1<EEnemyActionType> and stores the result in constant {'Add' (constant value of type Cpp2IL.Core.Analysis.ResultModels.GenericMethodReference)} in r8
		0x1805E8C14: Copies {'actions' (function parameter, type System.Collections.Generic.List`1<EEnemyActionType>)} from rdi into rcx
		0x1805E8C17: [!] Compares {'isMovePosition' (type System.Boolean)} and False
		0x1805E8C19: Jumps to 0x1805E8C4B if {'isMovePosition' (type System.Boolean)} != False ;  - Increasing indentation - is if-else, unimportant is False

		0x1805E8C1B: [!] Writes the constant 0x1 into operand 1 (type UInt64) in register rdx
		0x1805E8C20: [!] Calls managed method System.Void System.Collections.Generic.List`1::Add(T) on instance {'actions' (function parameter, type System.Collections.Generic.List`1<EEnemyActionType>)} with arguments [1] ;  - Method resolved from concrete implementations at this address, with the help of a constant value to identify which concrete implementation.

		0x1805E8C25: Loads the global generic method reference for method System.Void System.Collections.Generic.List`1::Add(T) on type System.Collections.Generic.List`1<EEnemyActionType> and stores the result in constant {'Add' (constant value of type Cpp2IL.Core.Analysis.ResultModels.GenericMethodReference)} in r8
		0x1805E8C2C: [!] Writes the constant 0x3 into operand 3 (type UInt64) in register rdx
		0x1805E8C31: Copies {'actions' (function parameter, type System.Collections.Generic.List`1<EEnemyActionType>)} from rdi into rcx
		0x1805E8C34: [!] Calls managed method System.Void System.Collections.Generic.List`1::Add(T) on instance {'actions' (function parameter, type System.Collections.Generic.List`1<EEnemyActionType>)} with arguments [3] ;  - Method resolved from concrete implementations at this address, with the help of a constant value to identify which concrete implementation.

		0x1805E8C3C: [!] Writes the constant 0x1 into operand True (type UInt64) in register rdx
		0x1805E8C3E: Copies {'this' (function parameter, type Enemy_Pain01_OpenWorld)} from rbx into rcx
		0x1805E8C41: [!] Calls managed method System.Void Enemy::set_EnableInspector(System.Boolean) on instance {'this' (function parameter, type Enemy_Pain01_OpenWorld)} with arguments [True]

		0x1805E8C46: Jumps to 0x1805E8E55 (which is an function-local jump destination)

		0x1805E8C4B: [!] Writes the constant 0x14 into operand 20 (type UInt64) in register rdx
		0x1805E8C50: [!] Calls managed method System.Void System.Collections.Generic.List`1::Add(T) on instance {'actions' (function parameter, type System.Collections.Generic.List`1<EEnemyActionType>)} with arguments [20] ;  - Method resolved from concrete implementations at this address, with the help of a constant value to identify which concrete implementation.

		0x1805E8C55: [!] Writes the constant 0x1 into operand 1 (type UInt64) in register r14
		0x1805E8C58: Jumps to 0x1805E8E55 (which is an function-local jump destination)

		0x1805E8C5D: [!] Calls managed method System.Boolean Enemy::get_AppearType2() on instance {'this' (function parameter, type Enemy_Pain01_OpenWorld)} and stores the result in {'appearType2' (type System.Boolean)}

		0x1805E8C62: [!] Compares {'appearType2' (type System.Boolean)} and False
		0x1805E8C64: [!] Writes the constant 0x15 into operand 21 (type UInt64) in register rdx
		0x1805E8C69: [!] Writes the constant 0xC into operand 12 (type UInt64) in register rcx
		0x1805E8C6E: [!] Copies 12 from rcx into rdx based on previous comparison
		0x1805E8C71: [!] Compares {'actions' (function parameter, type System.Collections.Generic.List`1<EEnemyActionType>)} and 0
		0x1805E8C74: Jumps to 0x1805E8E83 (which throws a NRE) if actions equals 0. Implicitly present in managed code, so ignored here.
		0x1805E8C7A: Loads the global generic method reference for method System.Void System.Collections.Generic.List`1::Add(T) on type System.Collections.Generic.List`1<EEnemyActionType> and stores the result in constant {'Add' (constant value of type Cpp2IL.Core.Analysis.ResultModels.GenericMethodReference)} in r8
		0x1805E8C81: Copies {'actions' (function parameter, type System.Collections.Generic.List`1<EEnemyActionType>)} from rdi into rcx
		0x1805E8C84: [!] Calls managed method System.Void System.Collections.Generic.List`1::Add(T) on instance {'actions' (function parameter, type System.Collections.Generic.List`1<EEnemyActionType>)} with arguments [12] ;  - Method resolved from concrete implementations at this address, with the help of a constant value to identify which concrete implementation.

		0x1805E8C8C: [!] Sets the field m_appearAction (Type System.Boolean) on local {'this' (function parameter, type Enemy_Pain01_OpenWorld)} to the value stored in {'local3' (type System.Int32)}
		0x1805E8C93: Clears register rdx, yielding zero-local {'local15' (type System.Int32)}
		0x1805E8C95: Copies {'this' (function parameter, type Enemy_Pain01_OpenWorld)} from rbx into rcx
		0x1805E8C98: [!] Calls managed method System.Void Enemy::set_EnableInspector(System.Boolean) on instance {'this' (function parameter, type Enemy_Pain01_OpenWorld)} with arguments [{'local15' (type System.Int32)}]

		0x1805E8C9D: Jumps to 0x1805E8E55 (which is an function-local jump destination)

		0x1805E8CA2: [!] Compares {'actions' (function parameter, type System.Collections.Generic.List`1<EEnemyActionType>)} and 0
		0x1805E8CA5: Jumps to 0x1805E8E83 (which throws a NRE) if actions equals 0. Implicitly present in managed code, so ignored here.
		0x1805E8CAB: Loads the global generic method reference for method System.Void System.Collections.Generic.List`1::Add(T) on type System.Collections.Generic.List`1<EEnemyActionType> and stores the result in constant {'Add' (constant value of type Cpp2IL.Core.Analysis.ResultModels.GenericMethodReference)} in r8
		0x1805E8CB2: [!] Writes the constant 0x3 into operand 3 (type UInt64) in register rdx
		0x1805E8CB7: Copies {'actions' (function parameter, type System.Collections.Generic.List`1<EEnemyActionType>)} from rdi into rcx
		0x1805E8CBA: [!] Calls managed method System.Void System.Collections.Generic.List`1::Add(T) on instance {'actions' (function parameter, type System.Collections.Generic.List`1<EEnemyActionType>)} with arguments [3] ;  - Method resolved from concrete implementations at this address, with the help of a constant value to identify which concrete implementation.

		0x1805E8CBF: Loads the global generic method reference for method System.Void System.Collections.Generic.List`1::Add(T) on type System.Collections.Generic.List`1<EEnemyActionType> and stores the result in constant {'Add' (constant value of type Cpp2IL.Core.Analysis.ResultModels.GenericMethodReference)} in r8
		0x1805E8CC6: [!] Writes the constant 0x8 into operand 8 (type UInt64) in register rdx
		0x1805E8CCB: Copies {'actions' (function parameter, type System.Collections.Generic.List`1<EEnemyActionType>)} from rdi into rcx
		0x1805E8CCE: [!] Calls managed method System.Void System.Collections.Generic.List`1::Add(T) on instance {'actions' (function parameter, type System.Collections.Generic.List`1<EEnemyActionType>)} with arguments [8] ;  - Method resolved from concrete implementations at this address, with the help of a constant value to identify which concrete implementation.

		0x1805E8CD6: Clears register rdx, yielding zero-local {'local17' (type System.Int32)}
		0x1805E8CD8: Copies {'this' (function parameter, type Enemy_Pain01_OpenWorld)} from rbx into rcx
		0x1805E8CDB: [!] Calls managed method System.Void Enemy::set_IsAttacked(System.Boolean) on instance {'this' (function parameter, type Enemy_Pain01_OpenWorld)} with arguments [{'local17' (type System.Int32)}]

		0x1805E8CE0: Jumps to 0x1805E8E55 (which is an function-local jump destination)

		0x1805E8CE5: [!] Compares {'actions' (function parameter, type System.Collections.Generic.List`1<EEnemyActionType>)} and 0
		0x1805E8CE8: Jumps to 0x1805E8E83 (which throws a NRE) if actions equals 0. Implicitly present in managed code, so ignored here.
		0x1805E8CEE: Loads the global generic method reference for method System.Void System.Collections.Generic.List`1::Add(T) on type System.Collections.Generic.List`1<EEnemyActionType> and stores the result in constant {'Add' (constant value of type Cpp2IL.Core.Analysis.ResultModels.GenericMethodReference)} in r8
		0x1805E8CF5: [!] Writes the constant 0x5 into operand 5 (type UInt64) in register rdx
		0x1805E8CFA: Copies {'actions' (function parameter, type System.Collections.Generic.List`1<EEnemyActionType>)} from rdi into rcx
		0x1805E8CFD: [!] Calls managed method System.Void System.Collections.Generic.List`1::Add(T) on instance {'actions' (function parameter, type System.Collections.Generic.List`1<EEnemyActionType>)} with arguments [5] ;  - Method resolved from concrete implementations at this address, with the help of a constant value to identify which concrete implementation.

		0x1805E8D05: [!] Sets the field m_isDamaged (Type System.Boolean) on local {'this' (function parameter, type Enemy_Pain01_OpenWorld)} to the value stored in {'local3' (type System.Int32)}
		0x1805E8D0C: Clears register rdx, yielding zero-local {'local19' (type System.Int32)}
		0x1805E8D0E: Copies {'this' (function parameter, type Enemy_Pain01_OpenWorld)} from rbx into rcx
		0x1805E8D11: [!] Calls managed method System.Void Enemy::set_EnableInspector(System.Boolean) on instance {'this' (function parameter, type Enemy_Pain01_OpenWorld)} with arguments [{'local19' (type System.Int32)}]

		0x1805E8D16: Jumps to 0x1805E8E55 (which is an function-local jump destination)

		0x1805E8D1B: Loads the type definition for managed type UnityEngine.Object as a constant "Object" in rcx
		0x1805E8D22: [!] Reads field m_enemyManager from {'this' (function parameter, type Enemy_Pain01_OpenWorld)} and stores in a new local {'m_enemyManager' (type EnemyManager)}

		0x1805E8D29: Compares "{il2cpp field on {'Object' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" and 2
		0x1805E8D30: Jumps to 0x1805E8D40 if "{il2cpp field on {'Object' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" equals 2

		0x1805E8D32: Compares "{il2cpp field on {'Object' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" and 0
		0x1805E8D39: Jumps to 0x1805E8D40 if "{il2cpp field on {'Object' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" != 0

		0x1805E8D3B: Calls the il2cpp cctor for the type UnityEngine.Object
		0x1805E8D43: Clears register rdx, yielding zero-local {'local22' (type System.Int32)}
		0x1805E8D45: Copies {'m_enemyManager' (type EnemyManager)} from rsi into rcx
		0x1805E8D48: [!] Calls static managed method System.Boolean UnityEngine.Object::op_Inequality(UnityEngine.Object,UnityEngine.Object) with arguments [{'m_enemyManager' (type EnemyManager)}, {'local22' (type System.Int32)}] and stores the result in {'boolean' (type System.Boolean)}

		0x1805E8D4D: [!] Compares {'boolean' (type System.Boolean)} and False
		0x1805E8D4F: Jumps to 0x1805E8DAC if boolean equals False ;  - Increasing indentation - is if-else, unimportant is False

		0x1805E8D51: [!] Reads field m_enemyManager from {'this' (function parameter, type Enemy_Pain01_OpenWorld)} and stores in a new local {'m_enemyManager2' (type EnemyManager)}

		0x1805E8D5A: Copies {'this' (function parameter, type Enemy_Pain01_OpenWorld)} from rbx into rcx
		0x1805E8D5D: [!] Calls managed method UnityEngine.GameObject UnityEngine.Component::get_gameObject() on instance {'this' (function parameter, type Enemy_Pain01_OpenWorld)} and stores the result in {'gameObject' (type UnityEngine.GameObject)}

		0x1805E8D62: [!] Compares {'m_enemyManager2' (type EnemyManager)} and 0
		0x1805E8D65: Jumps to 0x1805E8E83 (which throws a NRE) if m_enemyManager2 equals 0. Implicitly present in managed code, so ignored here.
		0x1805E8D6E: Copies {'gameObject' (type UnityEngine.GameObject)} from rax into rdx
		0x1805E8D71: Copies {'m_enemyManager2' (type EnemyManager)} from rsi into rcx
		0x1805E8D74: [!] Calls managed method System.Boolean EnemyManager::IsAttackEnemy(UnityEngine.GameObject) on instance {'m_enemyManager2' (type EnemyManager)} with arguments [{'gameObject' (type UnityEngine.GameObject)}] and stores the result in {'isAttackEnemy' (type System.Boolean)}

		0x1805E8D79: [!] Compares {'isAttackEnemy' (type System.Boolean)} and False
		0x1805E8D7B: Jumps to 0x1805E8DAC if isAttackEnemy equals False ;  - Increasing indentation - is if-else, unimportant is False

		0x1805E8D7D: [!] Compares {'actions' (function parameter, type System.Collections.Generic.List`1<EEnemyActionType>)} and 0
		0x1805E8D80: Jumps to 0x1805E8E83 (which throws a NRE) if actions equals 0. Implicitly present in managed code, so ignored here.
		0x1805E8D86: Loads the global generic method reference for method System.Void System.Collections.Generic.List`1::Add(T) on type System.Collections.Generic.List`1<EEnemyActionType> and stores the result in constant {'Add' (constant value of type Cpp2IL.Core.Analysis.ResultModels.GenericMethodReference)} in r8
		0x1805E8D8D: [!] Writes the constant 0x7 into operand 7 (type UInt64) in register rdx
		0x1805E8D92: Copies {'actions' (function parameter, type System.Collections.Generic.List`1<EEnemyActionType>)} from rdi into rcx
		0x1805E8D95: [!] Calls managed method System.Void System.Collections.Generic.List`1::Add(T) on instance {'actions' (function parameter, type System.Collections.Generic.List`1<EEnemyActionType>)} with arguments [7] ;  - Method resolved from concrete implementations at this address, with the help of a constant value to identify which concrete implementation.

		0x1805E8D9D: Clears register rdx, yielding zero-local {'local30' (type System.Int32)}
		0x1805E8D9F: Copies {'this' (function parameter, type Enemy_Pain01_OpenWorld)} from rbx into rcx
		0x1805E8DA2: [!] Calls managed method System.Void Enemy::set_StartAttack(System.Boolean) on instance {'this' (function parameter, type Enemy_Pain01_OpenWorld)} with arguments [{'local30' (type System.Int32)}]

		0x1805E8DA7: Jumps to 0x1805E8E55 (which is an function-local jump destination)

		0x1805E8DAE: Copies {'this' (function parameter, type Enemy_Pain01_OpenWorld)} from rbx into rcx
		0x1805E8DB1: [!] Calls managed method System.Boolean Enemy::IsParalysisEffect() on instance {'this' (function parameter, type Enemy_Pain01_OpenWorld)} and stores the result in {'isParalysisEffect' (type System.Boolean)}

		0x1805E8DB6: [!] Compares {'isParalysisEffect' (type System.Boolean)} and False
		0x1805E8DB8: Jumps to 0x1805E8DCA if isParalysisEffect equals False ;  - Increasing indentation - is if-else, unimportant is False

		0x1805E8DBA: [!] Compares {'actions' (function parameter, type System.Collections.Generic.List`1<EEnemyActionType>)} and 0
		0x1805E8DBD: Jumps to 0x1805E8E83 (which throws a NRE) if actions equals 0. Implicitly present in managed code, so ignored here.
		0x1805E8DC3: [!] Writes the constant 0x17 into operand 23 (type UInt64) in register rdx
		0x1805E8DC8: Jumps to 0x1805E8DDF (which is an function-local jump destination)

		0x1805E8DCC: Copies {'this' (function parameter, type Enemy_Pain01_OpenWorld)} from rbx into rcx
		0x1805E8DCF: [!] Calls managed method EEnemyActionType Enemy::GetAttackActionType() on instance {'this' (function parameter, type Enemy_Pain01_OpenWorld)} and stores the result in {'attackActionType' (type EEnemyActionType)}

		0x1805E8DD4: [!] Compares {'actions' (function parameter, type System.Collections.Generic.List`1<EEnemyActionType>)} and 0
		0x1805E8DD7: Jumps to 0x1805E8E83 (which throws a NRE) if actions equals 0. Implicitly present in managed code, so ignored here.
		0x1805E8DDD: [!] Implicitly reads field at offset 0 (which is value__) from struct attackActionType of type EEnemyActionType and stores in new local {'local35' (type System.Int32)}

		End Of If-Else Block (at 0x1805E8DDF) where the else started at 0x1805E8DCA
		0x1805E8DDF: Loads the global generic method reference for method System.Void System.Collections.Generic.List`1::Add(T) on type System.Collections.Generic.List`1<EEnemyActionType> and stores the result in constant {'Add' (constant value of type Cpp2IL.Core.Analysis.ResultModels.GenericMethodReference)} in r8
		0x1805E8DE6: Copies {'actions' (function parameter, type System.Collections.Generic.List`1<EEnemyActionType>)} from rdi into rcx
		0x1805E8DE9: [!] Calls managed method System.Void System.Collections.Generic.List`1::Add(T) on instance {'actions' (function parameter, type System.Collections.Generic.List`1<EEnemyActionType>)} ;  - Method resolved from concrete implementations at this address, with the help of a constant value to identify which concrete implementation. - parameters do not match, but concrete method was resolved from a constant in a register.

		0x1805E8DEE: [!] Writes the constant 0x1 into operand 1 (type UInt64) in register rbp
		0x1805E8DF4: Clears register rdx, yielding zero-local {'local37' (type System.Int32)}
		0x1805E8DF6: Copies {'this' (function parameter, type Enemy_Pain01_OpenWorld)} from rbx into rcx
		0x1805E8DF9: [!] Calls managed method System.Void Enemy::set_StartAttack(System.Boolean) on instance {'this' (function parameter, type Enemy_Pain01_OpenWorld)} with arguments [{'local37' (type System.Int32)}]

		0x1805E8DFE: Jumps to 0x1805E8E55 (which is an function-local jump destination)

		0x1805E8E00: [!] Compares {'actions' (function parameter, type System.Collections.Generic.List`1<EEnemyActionType>)} and 0
		0x1805E8E03: Jumps to 0x1805E8E83 (which throws a NRE) if actions equals 0. Implicitly present in managed code, so ignored here.
		0x1805E8E05: Loads the global generic method reference for method System.Void System.Collections.Generic.List`1::Add(T) on type System.Collections.Generic.List`1<EEnemyActionType> and stores the result in constant {'Add' (constant value of type Cpp2IL.Core.Analysis.ResultModels.GenericMethodReference)} in r8
		0x1805E8E0C: [!] Writes the constant 0x13 into operand 19 (type UInt64) in register rdx
		0x1805E8E11: Copies {'actions' (function parameter, type System.Collections.Generic.List`1<EEnemyActionType>)} from rdi into rcx
		0x1805E8E14: [!] Calls managed method System.Void System.Collections.Generic.List`1::Add(T) on instance {'actions' (function parameter, type System.Collections.Generic.List`1<EEnemyActionType>)} with arguments [19] ;  - Method resolved from concrete implementations at this address, with the help of a constant value to identify which concrete implementation.

		0x1805E8E1C: Clears register rdx, yielding zero-local {'local39' (type System.Int32)}
		0x1805E8E1E: Copies {'this' (function parameter, type Enemy_Pain01_OpenWorld)} from rbx into rcx
		0x1805E8E21: [!] Calls managed method System.Void Enemy::set_EnableInspector(System.Boolean) on instance {'this' (function parameter, type Enemy_Pain01_OpenWorld)} with arguments [{'local39' (type System.Int32)}]

		0x1805E8E26: [!] Sets the field m_isAttention (Type System.Boolean) on local {'this' (function parameter, type Enemy_Pain01_OpenWorld)} to the value stored in {'local3' (type System.Int32)}
		0x1805E8E2D: Jumps to 0x1805E8E55 (which is an function-local jump destination)

		0x1805E8E2F: [!] Compares {'actions' (function parameter, type System.Collections.Generic.List`1<EEnemyActionType>)} and 0
		0x1805E8E32: Jumps to 0x1805E8E83 (which throws a NRE) if actions equals 0. Implicitly present in managed code, so ignored here.
		0x1805E8E34: Loads the global generic method reference for method System.Void System.Collections.Generic.List`1::Add(T) on type System.Collections.Generic.List`1<EEnemyActionType> and stores the result in constant {'Add' (constant value of type Cpp2IL.Core.Analysis.ResultModels.GenericMethodReference)} in r8
		0x1805E8E3B: [!] Writes the constant 0x6 into operand 6 (type UInt64) in register rdx
		0x1805E8E40: Copies {'actions' (function parameter, type System.Collections.Generic.List`1<EEnemyActionType>)} from rdi into rcx
		0x1805E8E43: [!] Calls managed method System.Void System.Collections.Generic.List`1::Add(T) on instance {'actions' (function parameter, type System.Collections.Generic.List`1<EEnemyActionType>)} with arguments [6] ;  - Method resolved from concrete implementations at this address, with the help of a constant value to identify which concrete implementation.

		0x1805E8E4B: Clears register rdx, yielding zero-local {'local41' (type System.Int32)}
		0x1805E8E4D: Copies {'this' (function parameter, type Enemy_Pain01_OpenWorld)} from rbx into rcx
		0x1805E8E50: [!] Calls managed method System.Void Enemy::set_IsInspector(System.Boolean) on instance {'this' (function parameter, type Enemy_Pain01_OpenWorld)} with arguments [{'local41' (type System.Int32)}]


		End Of If-Else Block (at 0x1805E8E55) where the else started at 0x1805E8E2F
		0x1805E8E58: Copies {'local4' (type System.Int32)} from r14 into rdx
		0x1805E8E5C: Copies {'this' (function parameter, type Enemy_Pain01_OpenWorld)} from rbx into rcx
		0x1805E8E5F: [!] Calls managed method System.Void Enemy::set_IsMovePosition(System.Boolean) on instance {'this' (function parameter, type Enemy_Pain01_OpenWorld)} with arguments [{'local4' (type System.Int32)}]

		0x1805E8E64: Reads unknown value in stack, offset 48 (0x30) and stores the pointer in register rsi as new constant constant52
		0x1805E8E69: Copies {'local3' (type System.Int32)} from rbp into rax
		0x1805E8E6D: Reads unknown value in stack, offset 64 (0x40) and stores the pointer in register rbp as new constant constant53
		0x1805E8E72: Reads unknown value in stack, offset 56 (0x38) and stores the pointer in register rbx as new constant constant54
		0x1805E8E77: Reads unknown value in stack, offset 72 (0x48) and stores the pointer in register rdi as new constant constant55
		0x1805E8E82: [!] Returns {'local3' (type System.Int32)} from the function

		0x1805E8E85: [!] Constructs and throws an exception of kind System.NullReferenceException




	Generated Pseudocode:

	Declaring Type: Enemy_Pain01_OpenWorld
	System.Boolean OnGetActionPlan(System.Collections.Generic.List`1<EEnemyActionType> actions)
		ulong local3 = 0
		ulong local4 = 0

		System.Boolean isInspector = base.IsInspector

		if (isInspector == False)

		    if ( == local3)

		        System.Boolean startAttack = base.StartAttack

		        if (startAttack == False)

		            if ( == local3)

		                System.Boolean isAttacked = base.IsAttacked

		                if (isAttacked == False)

		                    if ( == local3)

		                        System.Boolean isMovePosition = base.IsMovePosition

		                        if (isMovePosition == False)

		                            actions.Add(1) //(T item)

		                            actions.Add(3) //(T item)

		                            base.EnableInspector = True
		                        else

		                            actions.Add(20) //(T item)
		                        else

		                            System.Boolean appearType2 = base.AppearType2

		                            actions.Add(12) //(T item)
		                            this.m_appearAction = local3
		                            ulong local15 = 0

		                            base.EnableInspector = local15
		                        else

		                            actions.Add(3) //(T item)

		                            actions.Add(8) //(T item)
		                            ulong local17 = 0

		                            base.IsAttacked = local17
		                        else

		                            actions.Add(5) //(T item)
		                            this.m_isDamaged = local3
		                            ulong local19 = 0

		                            base.EnableInspector = local19
		                        else
		                            EnemyManager m_enemyManager = this.m_enemyManager
		                            ulong local22 = 0

		                            System.Boolean boolean = UnityEngine.Object.op_Inequality(m_enemyManager, local22) //(Object x, Object y)

		                            if (boolean != False)
		                                EnemyManager m_enemyManager2 = this.m_enemyManager

		                                UnityEngine.GameObject gameObject = base.gameObject

		                                System.Boolean isAttackEnemy = m_enemyManager2.IsAttackEnemy(gameObject) //(GameObject enemy)

		                                if (isAttackEnemy != False)

		                                    actions.Add(7) //(T item)
		                                    ulong local30 = 0

		                                    base.StartAttack = local30
		                                else

		                                    System.Boolean isParalysisEffect = base.IsParalysisEffect()

		                                    if (isParalysisEffect != False)
		                                    else

		                                        EEnemyActionType attackActionType = base.GetAttackActionType()
		                                        System.Int32 local35 = attackActionType.value__
		                                    endif
                                            

		                                    actions.Add()
		                                    ulong local37 = 0

		                                    base.StartAttack = local37
		                                else

		                                    actions.Add(19) //(T item)
		                                    ulong local39 = 0

		                                    base.EnableInspector = local39
		                                    this.m_isAttention = local3
		                                else

		                                    actions.Add(6) //(T item)
		                                    ulong local41 = 0

		                                    base.IsInspector = local41
		                                endif
                                        

		                                base.IsMovePosition = local4
		                                return local3
		                                throw new System.NullReferenceException()


Generated IL:
	Action of type Cpp2IL.Core.Analysis.Actions.x86.Important.JumpIfNonZeroOrNonNullAction at (0x1805E8BBA) is corrupt (One of the arguments is null) and cannot be created as IL. Aborting here.


Method: System.Void Enemy_Pain01_OpenWorld::OnSetAttention(UnityEngine.GameObject):	Method Body (x86 ASM):
		0x1805E8E90 mov [rsp+8],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RSP | 8 | None ||| N/A | N/A
		0x1805E8E95 push rdi		; DEBUG: {Register}/RDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805E8E96 sub rsp,30h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 48
		0x1805E8E9A cmp byte ptr [18183EE1Ah],0		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6467874330 | None ||| N/A | 0
		0x1805E8EA1 mov rdi,rdx		; DEBUG: {Register}/RDI {Register}/RDX ||| None | 0 | None ||| N/A | N/A
		0x1805E8EA4 mov rbx,rcx		; DEBUG: {Register}/RBX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x1805E8EA7 jne short 00000001805E8EBBh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E8EA9 mov ecx,[1814C52C0h]		; DEBUG: {Register}/ECX {Memory}/None ||| RIP | 6464230080 | None ||| N/A | N/A
		0x1805E8EAF call 00000001800FEB90h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E8EB4 mov byte ptr [18183EE1Ah],1		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6467874330 | None ||| N/A | 1
		0x1805E8EBB mov rcx,[18188D758h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468196184 | None ||| N/A | N/A
		0x1805E8EC2 test byte ptr [rcx+127h],2		; DEBUG: {Memory}/None {Immediate8}/None ||| RCX | 295 | None ||| N/A | 2
		0x1805E8EC9 je short 00000001805E8ED9h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E8ECB cmp dword ptr [rcx+0D8h],0		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RCX | 216 | None ||| N/A | 0
		0x1805E8ED2 jne short 00000001805E8ED9h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E8ED4 call 000000018010EAF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E8ED9 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805E8EDC xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805E8EDE mov rcx,rdi		; DEBUG: {Register}/RCX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x1805E8EE1 call 0000000180EA6750h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E8EE6 test al,al		; DEBUG: {Register}/AL {Register}/AL ||| None | 0 | None ||| N/A | N/A
		0x1805E8EE8 je short 00000001805E8F55h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E8EEA xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805E8EEC mov rcx,rbx		; DEBUG: {Register}/RCX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x1805E8EEF call 00000001802116D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E8EF4 test al,al		; DEBUG: {Register}/AL {Register}/AL ||| None | 0 | None ||| N/A | N/A
		0x1805E8EF6 jne short 00000001805E8F55h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E8EF8 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805E8EFB mov dl,1		; DEBUG: {Register}/DL {Immediate8}/None ||| None | 0 | None ||| N/A | 1
		0x1805E8EFD mov rcx,rbx		; DEBUG: {Register}/RCX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x1805E8F00 call 00000001802119D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E8F05 mov byte ptr [rbx+150h],1		; DEBUG: {Memory}/None {Immediate8}/None ||| RBX | 336 | None ||| N/A | 1
		0x1805E8F0C test rdi,rdi		; DEBUG: {Register}/RDI {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x1805E8F0F je short 00000001805E8F60h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E8F11 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805E8F13 mov rcx,rdi		; DEBUG: {Register}/RCX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x1805E8F16 call 0000000180B2EA90h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E8F1B test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805E8F1E je short 00000001805E8F60h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E8F20 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805E8F23 lea rcx,[rsp+20h]		; DEBUG: {Register}/RCX {Memory}/None ||| RSP | 32 | None ||| N/A | N/A
		0x1805E8F28 mov rdx,rax		; DEBUG: {Register}/RDX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805E8F2B call 0000000180CE2700h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E8F30 mov rcx,[rbx+78h]		; DEBUG: {Register}/RCX {Memory}/None ||| RBX | 120 | None ||| N/A | N/A
		0x1805E8F34 movsd xmm0,qword ptr [rax]		; DEBUG: {Register}/XMM0 {Memory}/None ||| RAX | 0 | None ||| N/A | N/A
		0x1805E8F38 movsd qword ptr [rbx+154h],xmm0		; DEBUG: {Memory}/None {Register}/XMM0 ||| RBX | 340 | None ||| N/A | N/A
		0x1805E8F40 mov eax,[rax+8]		; DEBUG: {Register}/EAX {Memory}/None ||| RAX | 8 | None ||| N/A | N/A
		0x1805E8F43 mov [rbx+15Ch],eax		; DEBUG: {Memory}/None {Register}/EAX ||| RBX | 348 | None ||| N/A | N/A
		0x1805E8F49 test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x1805E8F4C je short 00000001805E8F60h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E8F4E xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805E8F50 call 0000000180206C30h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E8F55 mov rbx,[rsp+40h]		; DEBUG: {Register}/RBX {Memory}/None ||| RSP | 64 | None ||| N/A | N/A
		0x1805E8F5A add rsp,30h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 48
		0x1805E8F5E pop rdi		; DEBUG: {Register}/RDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805E8F5F ret		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805E8F60 xor ecx,ecx		; DEBUG: {Register}/ECX {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x1805E8F62 call 000000018012BDA0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E8F67 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.Void Enemy_Pain01_OpenWorld::OnSetAttention(UnityEngine.GameObject):
		End of function at 0x1805E8F68
		Absolute End is at 0x1805E8F68
		Identified Jump Destination addresses:

		0x1805E8E95: Saves the content of rdi to the stack
		0x1805E8E9A: Compares {Unknown Global at 0x18183EE1A, first ten bytes are [103 1 16 227 1 0 151 227 1 0], or as chars "gã ã "} and 0
		0x1805E8EA1: Copies {'attentionTarget' (function parameter, type UnityEngine.GameObject)} from rdx into rdi
		0x1805E8EA4: Copies {'this' (function parameter, type Enemy_Pain01_OpenWorld)} from rcx into rbx
		0x1805E8EA7: Jumps to 0x1805E8EBB if {Unknown Global at 0x18183EE1A, first ten bytes are [103 1 16 227 1 0 151 227 1 0], or as chars "gã ã "} != 0

		0x1805E8EA9: Loads string "Ê)" into register rcx as constant {'constant3' (constant value of type Cpp2IL.Core.Analysis.ResultModels.Il2CppString)}
		0x1805E8EAF: Attempts to load the il2cpp metadata for this method (method id 0) and init it cpp-side.

		0x1805E8EBB: Loads the type definition for managed type UnityEngine.Object as a constant "Object" in rcx
		0x1805E8EC2: Compares "{il2cpp field on {'Object' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" and 2
		0x1805E8EC9: Jumps to 0x1805E8ED9 if "{il2cpp field on {'Object' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" equals 2

		0x1805E8ECB: Compares "{il2cpp field on {'Object' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" and 0
		0x1805E8ED2: Jumps to 0x1805E8ED9 if "{il2cpp field on {'Object' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" != 0

		0x1805E8ED4: Calls the il2cpp cctor for the type UnityEngine.Object
		0x1805E8EDC: Clears register rdx, yielding zero-local {'local3' (type System.Int32)}
		0x1805E8EDE: Copies {'attentionTarget' (function parameter, type UnityEngine.GameObject)} from rdi into rcx
		0x1805E8EE1: [!] Calls static managed method System.Boolean UnityEngine.Object::op_Inequality(UnityEngine.Object,UnityEngine.Object) with arguments [{'attentionTarget' (function parameter, type UnityEngine.GameObject)}, {'local3' (type System.Int32)}] and stores the result in {'boolean' (type System.Boolean)}

		0x1805E8EE6: [!] Compares {'boolean' (type System.Boolean)} and False
		0x1805E8EE8: Jumps to 0x1805E8F55 (which is an if statement's body) if boolean equals False ;  - Increasing indentation - is standard if, unimportant is False

		0x1805E8EEC: Copies {'this' (function parameter, type Enemy_Pain01_OpenWorld)} from rbx into rcx
		0x1805E8EEF: [!] Calls managed method System.Boolean Enemy::get_IsAttentionAction() on instance {'this' (function parameter, type Enemy_Pain01_OpenWorld)} and stores the result in {'isAttentionAction' (type System.Boolean)}

		0x1805E8EF4: [!] Compares {'isAttentionAction' (type System.Boolean)} and False
		0x1805E8EF6: Jumps to 0x1805E8F55 (which is an if statement's body) if {'isAttentionAction' (type System.Boolean)} != False ;  - Increasing indentation - is standard if, unimportant is False

		0x1805E8EFB: [!] Writes the constant 0x1 into operand True (type UInt64) in register rdx
		0x1805E8EFD: Copies {'this' (function parameter, type Enemy_Pain01_OpenWorld)} from rbx into rcx
		0x1805E8F00: [!] Calls managed method System.Void Enemy::set_IsAttentionAction(System.Boolean) on instance {'this' (function parameter, type Enemy_Pain01_OpenWorld)} with arguments [True]

		0x1805E8F05: [!] Sets the field m_isAttention (Type System.Boolean) on local {'this' (function parameter, type Enemy_Pain01_OpenWorld)} to the value stored in True
		0x1805E8F0C: [!] Compares {'attentionTarget' (function parameter, type UnityEngine.GameObject)} and 0
		0x1805E8F0F: Jumps to 0x1805E8F60 (which throws a NRE) if attentionTarget equals 0. Implicitly present in managed code, so ignored here.
		0x1805E8F13: Copies {'attentionTarget' (function parameter, type UnityEngine.GameObject)} from rdi into rcx
		0x1805E8F16: [!] Calls managed method UnityEngine.Transform UnityEngine.GameObject::get_transform() on instance {'attentionTarget' (function parameter, type UnityEngine.GameObject)} and stores the result in {'transform' (type UnityEngine.Transform)}

		0x1805E8F1B: [!] Compares {'transform' (type UnityEngine.Transform)} and 0
		0x1805E8F1E: Jumps to 0x1805E8F60 (which throws a NRE) if transform equals 0. Implicitly present in managed code, so ignored here.
		0x1805E8F23: Loads a pointer to stack offset 0x20 into register rcx as new constant constant14
		0x1805E8F28: Copies {'transform' (type UnityEngine.Transform)} from rax into rdx
		0x1805E8F2B: [!] Calls managed method UnityEngine.Vector3 UnityEngine.Transform::get_position() on instance  and stores the result in {'position' (type UnityEngine.Vector3)}

		0x1805E8F30: [!] Reads field m_aiAgent from {'this' (function parameter, type Enemy_Pain01_OpenWorld)} and stores in a new local {'m_aiAgent' (type EnemyAIAgent)}

		0x1805E8F40: [!] Reads field z from {'position' (type UnityEngine.Vector3)} and stores in a new local {'single' (type System.Single)}

		0x1805E8F43: [!] Sets the field m_attentionPos.z (Type System.Single) on local {'this' (function parameter, type Enemy_Pain01_OpenWorld)} to the value stored in {'single' (type System.Single)}
		0x1805E8F49: [!] Compares {'m_aiAgent' (type EnemyAIAgent)} and 0
		0x1805E8F4C: Jumps to 0x1805E8F60 (which throws a NRE) if m_aiAgent equals 0. Implicitly present in managed code, so ignored here.
		0x1805E8F50: [!] Calls managed method System.Void EnemyAIAgent::ResetActionPlan() on instance {'m_aiAgent' (type EnemyAIAgent)}

		0x1805E8F55: Reads unknown value in stack, offset 64 (0x40) and stores the pointer in register rbx as new constant constant16
		0x1805E8F5F: [!] Returns from the function

		0x1805E8F62: [!] Constructs and throws an exception of kind System.NullReferenceException




	Generated Pseudocode:

	Declaring Type: Enemy_Pain01_OpenWorld
	System.Void OnSetAttention(UnityEngine.GameObject attentionTarget)
		ulong local3 = 0

		System.Boolean boolean = UnityEngine.Object.op_Inequality(attentionTarget, local3) //(Object x, Object y)

		if (boolean != False)

		    System.Boolean isAttentionAction = base.IsAttentionAction

		    if (isAttentionAction == False)

		        base.IsAttentionAction = True
		        this.m_isAttention = True

		        UnityEngine.Transform transform = attentionTarget.transform

		        UnityEngine.Vector3 position = .position
		        EnemyAIAgent m_aiAgent = this.m_aiAgent
		        System.Single single = position.z
		        this.m_attentionPos.z = single

		        m_aiAgent.ResetActionPlan()
		    endif
            
		    return
		    throw new System.NullReferenceException()


Generated IL:
	Action of type Cpp2IL.Core.Analysis.Actions.x86.Important.CallManagedFunctionAction at (0x1805E8F2B) is corrupt (Method is non-static but don't have an instance) and cannot be created as IL. Aborting here.


Method: System.Void Enemy_Pain01_OpenWorld::MoveFootStep():	Method Body (x86 ASM):
		0x1805E8670 sub rsp,48h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 72
		0x1805E8674 movss xmm0,dword ptr [181261D04h]		; DEBUG: {Register}/XMM0 {Memory}/None ||| RIP | 6461725956 | None ||| N/A | N/A
		0x1805E867C xor eax,eax		; DEBUG: {Register}/EAX {Register}/EAX ||| None | 0 | None ||| N/A | N/A
		0x1805E867E mov [rsp+30h],rax		; DEBUG: {Memory}/None {Register}/RAX ||| RSP | 48 | None ||| N/A | N/A
		0x1805E8683 xorps xmm3,xmm3		; DEBUG: {Register}/XMM3 {Register}/XMM3 ||| None | 0 | None ||| N/A | N/A
		0x1805E8686 mov [rsp+28h],eax		; DEBUG: {Memory}/None {Register}/EAX ||| RSP | 40 | None ||| N/A | N/A
		0x1805E868A xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805E868D mov edx,0BFh		; DEBUG: {Register}/EDX {Immediate32}/None ||| None | 0 | None ||| N/A | 191
		0x1805E8692 movss dword ptr [rsp+20h],xmm0		; DEBUG: {Memory}/None {Register}/XMM0 ||| RSP | 32 | None ||| N/A | N/A
		0x1805E8698 call 000000018020E050h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805E869D add rsp,48h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 72
		0x1805E86A1 ret		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805E86A2 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.Void Enemy_Pain01_OpenWorld::MoveFootStep():
		End of function at 0x1805E86A3
		Absolute End is at 0x1805E86A3
		Identified Jump Destination addresses:

		0x1805E8674: Reads {Unknown Global at 0x181261D04, first ten bytes are [0 0 128 63 154 153 153 63 0 0], or as chars "  ??  "} into register xmm0 as a constant constant1
		0x1805E867C: Clears register rax, yielding zero-local {'local1' (type System.Int32)}
		0x1805E867E: Moves local1 (type System.Int32) from register rax to the stack at offset 48 (0x30)
		0x1805E8686: Moves local1 (type System.Int32) from register rax to the stack at offset 40 (0x28)
		0x1805E868D: [!] Writes the constant 0xBF into operand 191 (type UInt64) in register rdx
		0x1805E8692: Moves constant1 (type Cpp2IL.Core.Analysis.ResultModels.UnknownGlobalAddr) from register xmm0 to the stack at offset 32 (0x20) as a new local local4
		0x1805E8698: [!] Calls managed method UnityEngine.GameObject Enemy::PlaySE(ESEKind,System.Boolean,System.Single,System.Single,SoundSe/ESameKindCheck) on instance {'this' (function parameter, type Enemy_Pain01_OpenWorld)} and stores the result in {'gameObject' (type UnityEngine.GameObject)} ;  - parameters do not match, but there is only one function at this address.

		0x1805E86A1: [!] Returns from the function




	Generated Pseudocode:

	Declaring Type: Enemy_Pain01_OpenWorld
	System.Void MoveFootStep()
		ulong local1 = 0

		UnityEngine.GameObject gameObject = base.PlaySE()
		return


Generated IL:
	Action of type Cpp2IL.Core.Analysis.Actions.x86.Important.CallManagedFunctionAction at (0x1805E8698) is corrupt (Couldn't get arguments, or actual count (-1) is not equal to expected count (5)) and cannot be created as IL. Aborting here.


