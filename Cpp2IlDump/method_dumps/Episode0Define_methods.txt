Type: Episode0Define

Method: System.Void Episode0Define::.ctor():	Method Body (x86 ASM):
		0x1802068B0 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1802068B2 jmp near ptr 0000000180207540h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1802068B7 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.Void Episode0Define::.ctor():
		End of function at 0x1802068B8
		Absolute End is at 0x1802068B8
		Identified Jump Destination addresses:

		0x1802068B2: [!] Calls managed method System.Void System.Object::.ctor() on instance {'this' (function parameter, type Episode0Define)}

		0x1802068B2: [!] Returns from the function




	Generated Pseudocode:

	Declaring Type: Episode0Define
	System.Void .ctor()

		base..ctor()
		return


Generated IL:
	IL_0000: ldarg.0
	IL_0001: call System.Void System.Object::.ctor()
	IL_0006: ret
	

Method: System.Void Episode0Define::.cctor():	Method Body (x86 ASM):
		0x1805F4610 mov [rsp+8],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RSP | 8 | None ||| N/A | N/A
		0x1805F4615 push rdi		; DEBUG: {Register}/RDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805F4616 sub rsp,20h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 32
		0x1805F461A cmp byte ptr [18183EE84h],0		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6467874436 | None ||| N/A | 0
		0x1805F4621 jne short 00000001805F4635h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F4623 mov ecx,[1814C72E0h]		; DEBUG: {Register}/ECX {Memory}/None ||| RIP | 6464238304 | None ||| N/A | N/A
		0x1805F4629 call 00000001800FEB90h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F462E mov byte ptr [18183EE84h],1		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6467874436 | None ||| N/A | 1
		0x1805F4635 mov rcx,[181884F78h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468161400 | None ||| N/A | N/A
		0x1805F463C mov edx,8		; DEBUG: {Register}/EDX {Immediate32}/None ||| None | 0 | None ||| N/A | 8
		0x1805F4641 call 0000000180141320h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F4646 mov rcx,[181884228h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468157992 | None ||| N/A | N/A
		0x1805F464D mov rdi,rax		; DEBUG: {Register}/RDI {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F4650 mov rbx,[18187A570h]		; DEBUG: {Register}/RBX {Memory}/None ||| RIP | 6468117872 | None ||| N/A | N/A
		0x1805F4657 test byte ptr [rcx+127h],2		; DEBUG: {Memory}/None {Immediate8}/None ||| RCX | 295 | None ||| N/A | 2
		0x1805F465E je short 00000001805F466Eh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F4660 cmp dword ptr [rcx+0D8h],0		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RCX | 216 | None ||| N/A | 0
		0x1805F4667 jne short 00000001805F466Eh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F4669 call 000000018010EAF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F466E xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805F4670 mov rcx,rbx		; DEBUG: {Register}/RCX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x1805F4673 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F4678 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F467B test rdi,rdi		; DEBUG: {Register}/RDI {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x1805F467E je near ptr 00000001805F47F7h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F4684 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F4687 je short 00000001805F46A1h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F4689 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1805F468C mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F468F mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1805F4693 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F4698 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F469B je near ptr 00000001805F47FFh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F46A1 cmp dword ptr [rdi+18h],1		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 1
		0x1805F46A5 jbe near ptr 00000001805F4812h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F46AB mov [rdi+28h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 40 | None ||| N/A | N/A
		0x1805F46AF xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805F46B1 mov rcx,[18187A588h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468117896 | None ||| N/A | N/A
		0x1805F46B8 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F46BD mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F46C0 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F46C3 je short 00000001805F46DDh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F46C5 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1805F46C8 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F46CB mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1805F46CF call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F46D4 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F46D7 je near ptr 00000001805F4825h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F46DD cmp dword ptr [rdi+18h],2		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 2
		0x1805F46E1 jbe near ptr 00000001805F4838h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F46E7 mov [rdi+30h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 48 | None ||| N/A | N/A
		0x1805F46EB xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805F46ED mov rcx,[18187A5C0h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468117952 | None ||| N/A | N/A
		0x1805F46F4 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F46F9 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F46FC test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F46FF je short 00000001805F4719h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F4701 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1805F4704 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F4707 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1805F470B call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F4710 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F4713 je near ptr 00000001805F484Bh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F4719 cmp dword ptr [rdi+18h],3		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 3
		0x1805F471D jbe near ptr 00000001805F485Eh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F4723 mov [rdi+38h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 56 | None ||| N/A | N/A
		0x1805F4727 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805F4729 mov rcx,[18187A5D8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468117976 | None ||| N/A | N/A
		0x1805F4730 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F4735 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F4738 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F473B je short 00000001805F4755h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F473D mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1805F4740 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F4743 mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1805F4747 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F474C test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F474F je near ptr 00000001805F4871h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F4755 cmp dword ptr [rdi+18h],4		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 4
		0x1805F4759 jbe near ptr 00000001805F4884h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F475F mov [rdi+40h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 64 | None ||| N/A | N/A
		0x1805F4763 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805F4765 mov rcx,[18187A608h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468118024 | None ||| N/A | N/A
		0x1805F476C call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F4771 mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F4774 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F4777 je short 00000001805F4791h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F4779 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1805F477C mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F477F mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1805F4783 call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F4788 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F478B je near ptr 00000001805F4897h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F4791 cmp dword ptr [rdi+18h],5		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 5
		0x1805F4795 jbe near ptr 00000001805F48AAh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F479B mov [rdi+48h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 72 | None ||| N/A | N/A
		0x1805F479F xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805F47A1 mov rcx,[18187A628h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468118056 | None ||| N/A | N/A
		0x1805F47A8 call 00000001810EC160h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F47AD mov rbx,rax		; DEBUG: {Register}/RBX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F47B0 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F47B3 je short 00000001805F47CDh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F47B5 mov rdx,[rdi]		; DEBUG: {Register}/RDX {Memory}/None ||| RDI | 0 | None ||| N/A | N/A
		0x1805F47B8 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F47BB mov rdx,[rdx+40h]		; DEBUG: {Register}/RDX {Memory}/None ||| RDX | 64 | None ||| N/A | N/A
		0x1805F47BF call 000000018013AB80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F47C4 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F47C7 je near ptr 00000001805F48BDh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F47CD cmp dword ptr [rdi+18h],6		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RDI | 24 | None ||| N/A | 6
		0x1805F47D1 jbe near ptr 00000001805F48D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F47D7 mov [rdi+50h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RDI | 80 | None ||| N/A | N/A
		0x1805F47DB mov rax,[1818A1EB8h]		; DEBUG: {Register}/RAX {Memory}/None ||| RIP | 6468279992 | None ||| N/A | N/A
		0x1805F47E2 mov rbx,[rsp+30h]		; DEBUG: {Register}/RBX {Memory}/None ||| RSP | 48 | None ||| N/A | N/A
		0x1805F47E7 mov rcx,[rax+0B8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RAX | 184 | None ||| N/A | N/A
		0x1805F47EE mov [rcx],rdi		; DEBUG: {Memory}/None {Register}/RDI ||| RCX | 0 | None ||| N/A | N/A
		0x1805F47F1 add rsp,20h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 32
		0x1805F47F5 pop rdi		; DEBUG: {Register}/RDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805F47F6 ret		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805F47F7 xor ecx,ecx		; DEBUG: {Register}/ECX {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x1805F47F9 call 000000018012BDA0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F47FE int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805F47FF call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F4804 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F4807 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805F480A xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805F480C call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F4811 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805F4825 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F482A mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F482D xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805F4830 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805F4832 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F4837 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805F484B call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F4850 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F4853 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805F4856 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805F4858 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F485D int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805F4871 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F4876 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F4879 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805F487C xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805F487E call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F4883 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805F4897 call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F489C mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F489F xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805F48A2 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805F48A4 call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F48A9 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x1805F48BD call 00000001800580A0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F48C2 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x1805F48C5 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x1805F48C8 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x1805F48CA call 00000001800580D0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x1805F48CF int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Static Method System.Void Episode0Define::.cctor():
		End of function at 0x1805F48D0
		Absolute End is at 0x1805F48D0
		Identified Jump Destination addresses:

		0x1805F4615: Saves the content of rdi to the stack
		0x1805F461A: Compares {Unknown Global at 0x18183EE84, first ten bytes are [64 63 103 1 64 231 1 0 163 231], or as chars "@?g@ç £ç"} and 0
		0x1805F4621: Jumps to 0x1805F4635 if {Unknown Global at 0x18183EE84, first ten bytes are [64 63 103 1 64 231 1 0 163 231], or as chars "@?g@ç £ç"} != 0

		0x1805F4623: Loads string "Í+" into register rcx as constant {'constant3' (constant value of type Cpp2IL.Core.Analysis.ResultModels.Il2CppString)}
		0x1805F4629: Attempts to load the il2cpp metadata for this method (method id 0) and init it cpp-side.

		0x1805F4635: Loads the type definition for managed type System.Type[] as a constant "Type[]" in rcx
		0x1805F463C: [!] Writes the constant 0x8 into operand 8 (type UInt64) in register rdx
		0x1805F4641: [!] Allocates an array of type System.Type[] of size 8 and stores the result as local0 in register rax

		0x1805F4646: Loads the type definition for managed type System.Type as a constant "Type" in rcx
		0x1805F464D: Copies {'local0' (type System.Type[])} from rax into rdi
		0x1805F4650: Loads the type definition for managed type ESerifEP00_18_other_0000 as a constant "ESerifEP00_18_other_0000" in rbx
		0x1805F4657: Compares "{il2cpp field on {'Type' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" and 2
		0x1805F465E: Jumps to 0x1805F466E if "{il2cpp field on {'Type' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" equals 2

		0x1805F4660: Compares "{il2cpp field on {'Type' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" and 0
		0x1805F4667: Jumps to 0x1805F466E if "{il2cpp field on {'Type' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" != 0

		0x1805F4669: Calls the il2cpp cctor for the type System.Type
		0x1805F4670: Copies {'ESerifEP00_18_other_0000' (constant value of type Mono.Cecil.TypeReference)} from rbx into rcx
		0x1805F4673: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEP00_18_other_0000' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle' (type System.Type)}

		0x1805F4678: Copies {'typeFromHandle' (type System.Type)} from rax into rbx
		0x1805F467B: [!] Compares {'local0' (type System.Type[])} and 0
		0x1805F467E: Jumps to 0x1805F47F7 (which throws a NRE) if local0 equals 0. Implicitly present in managed code, so ignored here.
		0x1805F4684: [!] Compares {'typeFromHandle' (type System.Type)} and 0
		0x1805F4687: Jumps to 0x1805F46A1 (which is an if statement's body) if typeFromHandle equals 0 ;  - Increasing indentation - is standard if, unimportant is False

		0x1805F4689: Loads the class pointer from local0 into a constant constant14 in register rdx
		0x1805F468C: Copies {'typeFromHandle' (type System.Type)} from rax into rcx
		0x1805F468F: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x1805F4698: [!] Compares {'typeFromHandle' (type System.Type)} and 0
		0x1805F469B: Jumps to 0x1805F47FF if typeFromHandle equals 0 ;  - This is probably a goto, jumping to 0x1805F47FF which is after end of current block @ 0x1805F46A1 (started at 0x1805F4689)

		0x1805F46A1: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 1
		0x1805F46A5: Jumps to 0x1805F4812 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 1. Implicitly present in managed code, so ignored here.
		0x1805F46AB: Sets the value at offset 1 in array local0 to {'typeFromHandle' (type System.Type)}
		0x1805F46B1: Loads the type definition for managed type ESerifEp00_18_Pol_0000 as a constant "ESerifEp00_18_Pol_0000" in rcx
		0x1805F46B8: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEp00_18_Pol_0000' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle2' (type System.Type)}

		0x1805F46BD: Copies {'typeFromHandle2' (type System.Type)} from rax into rbx
		0x1805F46C0: [!] Compares {'typeFromHandle2' (type System.Type)} and 0
		0x1805F46C3: Jumps to 0x1805F46DD if typeFromHandle2 equals 0 ;  - This is probably a goto, jumping to 0x1805F46DD which is after end of current block @ 0x1805F46A1 (started at 0x1805F4689)

		0x1805F46C5: Loads the class pointer from local0 into a constant constant19 in register rdx
		0x1805F46C8: Copies {'typeFromHandle2' (type System.Type)} from rax into rcx
		0x1805F46CB: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x1805F46D4: [!] Compares {'typeFromHandle2' (type System.Type)} and 0
		0x1805F46D7: Jumps to 0x1805F4825 if typeFromHandle2 equals 0 ;  - This is probably a goto, jumping to 0x1805F4825 which is after end of current block @ 0x1805F46A1 (started at 0x1805F4689)

		0x1805F46DD: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 2
		0x1805F46E1: Jumps to 0x1805F4838 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 2. Implicitly present in managed code, so ignored here.
		0x1805F46E7: Sets the value at offset 2 in array local0 to {'typeFromHandle2' (type System.Type)}
		0x1805F46ED: Loads the type definition for managed type ESerifEP00_18_Pol_0001 as a constant "ESerifEP00_18_Pol_0001" in rcx
		0x1805F46F4: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEP00_18_Pol_0001' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle3' (type System.Type)}

		0x1805F46F9: Copies {'typeFromHandle3' (type System.Type)} from rax into rbx
		0x1805F46FC: [!] Compares {'typeFromHandle3' (type System.Type)} and 0
		0x1805F46FF: Jumps to 0x1805F4719 if typeFromHandle3 equals 0 ;  - This is probably a goto, jumping to 0x1805F4719 which is after end of current block @ 0x1805F46A1 (started at 0x1805F4689)

		0x1805F4701: Loads the class pointer from local0 into a constant constant24 in register rdx
		0x1805F4704: Copies {'typeFromHandle3' (type System.Type)} from rax into rcx
		0x1805F4707: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x1805F4710: [!] Compares {'typeFromHandle3' (type System.Type)} and 0
		0x1805F4713: Jumps to 0x1805F484B if typeFromHandle3 equals 0 ;  - This is probably a goto, jumping to 0x1805F484B which is after end of current block @ 0x1805F46A1 (started at 0x1805F4689)

		0x1805F4719: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 3
		0x1805F471D: Jumps to 0x1805F485E (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 3. Implicitly present in managed code, so ignored here.
		0x1805F4723: Sets the value at offset 3 in array local0 to {'typeFromHandle3' (type System.Type)}
		0x1805F4729: Loads the type definition for managed type ESerifEP00_18_Pol_0002 as a constant "ESerifEP00_18_Pol_0002" in rcx
		0x1805F4730: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEP00_18_Pol_0002' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle4' (type System.Type)}

		0x1805F4735: Copies {'typeFromHandle4' (type System.Type)} from rax into rbx
		0x1805F4738: [!] Compares {'typeFromHandle4' (type System.Type)} and 0
		0x1805F473B: Jumps to 0x1805F4755 if typeFromHandle4 equals 0 ;  - This is probably a goto, jumping to 0x1805F4755 which is after end of current block @ 0x1805F46A1 (started at 0x1805F4689)

		0x1805F473D: Loads the class pointer from local0 into a constant constant29 in register rdx
		0x1805F4740: Copies {'typeFromHandle4' (type System.Type)} from rax into rcx
		0x1805F4743: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x1805F474C: [!] Compares {'typeFromHandle4' (type System.Type)} and 0
		0x1805F474F: Jumps to 0x1805F4871 if typeFromHandle4 equals 0 ;  - This is probably a goto, jumping to 0x1805F4871 which is after end of current block @ 0x1805F46A1 (started at 0x1805F4689)

		0x1805F4755: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 4
		0x1805F4759: Jumps to 0x1805F4884 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 4. Implicitly present in managed code, so ignored here.
		0x1805F475F: Sets the value at offset 4 in array local0 to {'typeFromHandle4' (type System.Type)}
		0x1805F4765: Loads the type definition for managed type ESerifEp00_18_Pol_0003 as a constant "ESerifEp00_18_Pol_0003" in rcx
		0x1805F476C: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEp00_18_Pol_0003' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle5' (type System.Type)}

		0x1805F4771: Copies {'typeFromHandle5' (type System.Type)} from rax into rbx
		0x1805F4774: [!] Compares {'typeFromHandle5' (type System.Type)} and 0
		0x1805F4777: Jumps to 0x1805F4791 if typeFromHandle5 equals 0 ;  - This is probably a goto, jumping to 0x1805F4791 which is after end of current block @ 0x1805F46A1 (started at 0x1805F4689)

		0x1805F4779: Loads the class pointer from local0 into a constant constant34 in register rdx
		0x1805F477C: Copies {'typeFromHandle5' (type System.Type)} from rax into rcx
		0x1805F477F: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x1805F4788: [!] Compares {'typeFromHandle5' (type System.Type)} and 0
		0x1805F478B: Jumps to 0x1805F4897 if typeFromHandle5 equals 0 ;  - This is probably a goto, jumping to 0x1805F4897 which is after end of current block @ 0x1805F46A1 (started at 0x1805F4689)

		0x1805F4791: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 5
		0x1805F4795: Jumps to 0x1805F48AA (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 5. Implicitly present in managed code, so ignored here.
		0x1805F479B: Sets the value at offset 5 in array local0 to {'typeFromHandle5' (type System.Type)}
		0x1805F47A1: Loads the type definition for managed type ESerifEP00_18_Pol_0004 as a constant "ESerifEP00_18_Pol_0004" in rcx
		0x1805F47A8: [!] Calls static managed method System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle) with arguments [{'ESerifEP00_18_Pol_0004' (constant value of type Mono.Cecil.TypeReference)}] and stores the result in {'typeFromHandle6' (type System.Type)}

		0x1805F47AD: Copies {'typeFromHandle6' (type System.Type)} from rax into rbx
		0x1805F47B0: [!] Compares {'typeFromHandle6' (type System.Type)} and 0
		0x1805F47B3: Jumps to 0x1805F47CD if typeFromHandle6 equals 0 ;  - This is probably a goto, jumping to 0x1805F47CD which is after end of current block @ 0x1805F46A1 (started at 0x1805F4689)

		0x1805F47B5: Loads the class pointer from local0 into a constant constant39 in register rdx
		0x1805F47B8: Copies {'typeFromHandle6' (type System.Type)} from rax into rcx
		0x1805F47BB: Reads the element type from the class pointer Il2CppTypeDefinition[namespace='System', name='Type', parentType=System.Reflection.MemberInfo] and stores in register rdx
		0x1805F47C4: [!] Compares {'typeFromHandle6' (type System.Type)} and 0
		0x1805F47C7: Jumps to 0x1805F48BD if typeFromHandle6 equals 0 ;  - This is probably a goto, jumping to 0x1805F48BD which is after end of current block @ 0x1805F46A1 (started at 0x1805F4689)

		0x1805F47CD: [!] Compares {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} and 6
		0x1805F47D1: Jumps to 0x1805F48D0 (which throws a NRE) if {Property System.Int32 System.Array::Length() on {'local0' (type System.Type[])}} is less than or equal to 6. Implicitly present in managed code, so ignored here.
		0x1805F47D7: Sets the value at offset 6 in array local0 to {'typeFromHandle6' (type System.Type)}
		0x1805F47DB: Loads the type definition for managed type Episode0Define as a constant "Episode0Define" in rax
		0x1805F47E2: Reads unknown value in stack, offset 48 (0x30) and stores the pointer in register rbx as new constant constant43
		0x1805F47E7: Loads the pointer to the static fields for Episode0Define and stores it in constant44 in register rcx
		0x1805F47EE: [!] Sets static field . to {'local0' (type System.Type[])}
		0x1805F47F6: [!] Returns from the function

		0x1805F47F9: [!] Constructs and throws an exception of kind System.NullReferenceException

		0x1805F4804: Copies {'local14' (type System.NullReferenceException)} from rax into rcx
		0x1805F482A: Copies {'local14' (type System.NullReferenceException)} from rax into rcx
		0x1805F4850: Copies {'local14' (type System.NullReferenceException)} from rax into rcx
		0x1805F4876: Copies {'local14' (type System.NullReferenceException)} from rax into rcx
		0x1805F489C: Copies {'local14' (type System.NullReferenceException)} from rax into rcx
		0x1805F48C2: Copies {'local14' (type System.NullReferenceException)} from rax into rcx



	Generated Pseudocode:

	Declaring Type: Episode0Define
	static System.Void .cctor()
		System.Type[] local0 = new System.Type[8]

		System.Type typeFromHandle = System.Type.GetTypeFromHandle({'ESerifEP00_18_other_0000' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle != 0)

		    if (typeFromHandle == 0)
                goto INSN_1805F47FF
            endif
		endif
        
		local0[1] = typeFromHandle

		System.Type typeFromHandle2 = System.Type.GetTypeFromHandle({'ESerifEp00_18_Pol_0000' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle2 == 0)
            goto INSN_1805F46DD
        endif

		if (typeFromHandle2 == 0)
            goto INSN_1805F4825
        endif

		INSN_1805F46DD:
		local0[2] = typeFromHandle2

		System.Type typeFromHandle3 = System.Type.GetTypeFromHandle({'ESerifEP00_18_Pol_0001' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle3 == 0)
            goto INSN_1805F4719
        endif

		if (typeFromHandle3 == 0)
            goto INSN_1805F484B
        endif

		INSN_1805F4719:
		local0[3] = typeFromHandle3

		System.Type typeFromHandle4 = System.Type.GetTypeFromHandle({'ESerifEP00_18_Pol_0002' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle4 == 0)
            goto INSN_1805F4755
        endif

		if (typeFromHandle4 == 0)
            goto INSN_1805F4871
        endif

		INSN_1805F4755:
		local0[4] = typeFromHandle4

		System.Type typeFromHandle5 = System.Type.GetTypeFromHandle({'ESerifEp00_18_Pol_0003' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle5 == 0)
            goto INSN_1805F4791
        endif

		if (typeFromHandle5 == 0)
            goto INSN_1805F4897
        endif

		INSN_1805F4791:
		local0[5] = typeFromHandle5

		System.Type typeFromHandle6 = System.Type.GetTypeFromHandle({'ESerifEP00_18_Pol_0004' (constant value of type Mono.Cecil.TypeReference)}) //(RuntimeTypeHandle handle)

		if (typeFromHandle6 == 0)
            goto INSN_1805F47CD
        endif

		if (typeFromHandle6 == 0)
            goto INSN_1805F48BD
        endif

		INSN_1805F47CD:
		local0[6] = typeFromHandle6
		. = local0
		return
		throw new System.NullReferenceException()

		INSN_1805F47FF:

		INSN_1805F4825:

		INSN_1805F484B:

		INSN_1805F4871:

		INSN_1805F4897:

		INSN_1805F48BD:


Generated IL:
	Action of type Cpp2IL.Core.Analysis.Actions.x86.Important.RegToStaticFieldAction at (0x1805F47EE) is corrupt (No further info) and cannot be created as IL. Aborting here.


