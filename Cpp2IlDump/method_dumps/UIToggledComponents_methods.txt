Type: UIToggledComponents

Method: System.Void UIToggledComponents::.ctor():	Method Body (x86 ASM):
		0x180203000 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x180203002 jmp near ptr 0000000180CE1E90h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x180203007 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.Void UIToggledComponents::.ctor():
		End of function at 0x180203008
		Absolute End is at 0x180203008
		Identified Jump Destination addresses:

		0x180203002: [!] Calls managed method System.Void UnityEngine.MonoBehaviour::.ctor() on instance {'this' (function parameter, type UIToggledComponents)}

		0x180203002: [!] Returns from the function




	Generated Pseudocode:

	Declaring Type: UIToggledComponents
	System.Void .ctor()

		base..ctor()
		return


Generated IL:
	IL_0000: ldarg.0
	IL_0001: call System.Void UnityEngine.MonoBehaviour::.ctor()
	IL_0006: ret
	

Method: System.Void UIToggledComponents::Awake():	Method Body (x86 ASM):
		0x18118ED20 mov [rsp+10h],rbx		; DEBUG: {Memory}/None {Register}/RBX ||| RSP | 16 | None ||| N/A | N/A
		0x18118ED25 push rdi		; DEBUG: {Register}/RDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18118ED26 sub rsp,20h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 32
		0x18118ED2A cmp byte ptr [1818A2AE8h],0		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6468283112 | None ||| N/A | 0
		0x18118ED31 mov rbx,rcx		; DEBUG: {Register}/RBX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x18118ED34 jne short 000000018118ED48h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18118ED36 mov ecx,[1814B4350h]		; DEBUG: {Register}/ECX {Memory}/None ||| RIP | 6464160592 | None ||| N/A | N/A
		0x18118ED3C call 00000001800FEB90h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18118ED41 mov byte ptr [1818A2AE8h],1		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6468283112 | None ||| N/A | 1
		0x18118ED48 mov rcx,[18188D758h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468196184 | None ||| N/A | N/A
		0x18118ED4F mov rdi,[rbx+28h]		; DEBUG: {Register}/RDI {Memory}/None ||| RBX | 40 | None ||| N/A | N/A
		0x18118ED53 test byte ptr [rcx+127h],2		; DEBUG: {Memory}/None {Immediate8}/None ||| RCX | 295 | None ||| N/A | 2
		0x18118ED5A je short 000000018118ED6Ah		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18118ED5C cmp dword ptr [rcx+0D8h],0		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RCX | 216 | None ||| N/A | 0
		0x18118ED63 jne short 000000018118ED6Ah		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18118ED65 call 000000018010EAF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18118ED6A xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18118ED6D xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18118ED6F mov rcx,rdi		; DEBUG: {Register}/RCX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x18118ED72 call 0000000180EA6750h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18118ED77 test al,al		; DEBUG: {Register}/AL {Register}/AL ||| None | 0 | None ||| N/A | N/A
		0x18118ED79 je near ptr 000000018118EE04h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18118ED7F mov rcx,[rbx+18h]		; DEBUG: {Register}/RCX {Memory}/None ||| RBX | 24 | None ||| N/A | N/A
		0x18118ED83 test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x18118ED86 je near ptr 000000018118EE80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18118ED8C mov rdx,[18189E268h]		; DEBUG: {Register}/RDX {Memory}/None ||| RIP | 6468264552 | None ||| N/A | N/A
		0x18118ED93 call 000000018029B0C0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18118ED98 test eax,eax		; DEBUG: {Register}/EAX {Register}/EAX ||| None | 0 | None ||| N/A | N/A
		0x18118ED9A jne short 000000018118EDFCh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18118ED9C mov rcx,[rbx+20h]		; DEBUG: {Register}/RCX {Memory}/None ||| RBX | 32 | None ||| N/A | N/A
		0x18118EDA0 test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x18118EDA3 je near ptr 000000018118EE80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18118EDA9 mov rdx,[18189E268h]		; DEBUG: {Register}/RDX {Memory}/None ||| RIP | 6468264552 | None ||| N/A | N/A
		0x18118EDB0 call 000000018029B0C0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18118EDB5 test eax,eax		; DEBUG: {Register}/EAX {Register}/EAX ||| None | 0 | None ||| N/A | N/A
		0x18118EDB7 jne short 000000018118EDFCh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18118EDB9 cmp [rbx+30h],al		; DEBUG: {Memory}/None {Register}/AL ||| RBX | 48 | None ||| N/A | N/A
		0x18118EDBC jne short 000000018118EDDDh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18118EDBE mov rcx,[rbx+18h]		; DEBUG: {Register}/RCX {Memory}/None ||| RBX | 24 | None ||| N/A | N/A
		0x18118EDC2 test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x18118EDC5 je near ptr 000000018118EE80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18118EDCB mov r8,[181897C10h]		; DEBUG: {Register}/R8 {Memory}/None ||| RIP | 6468238352 | None ||| N/A | N/A
		0x18118EDD2 mov rdx,[rbx+28h]		; DEBUG: {Register}/RDX {Memory}/None ||| RBX | 40 | None ||| N/A | N/A
		0x18118EDD6 call 00000001810ACD30h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18118EDDB jmp short 000000018118EE04h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18118EDDD mov rcx,[rbx+20h]		; DEBUG: {Register}/RCX {Memory}/None ||| RBX | 32 | None ||| N/A | N/A
		0x18118EDE1 test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x18118EDE4 je near ptr 000000018118EE80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18118EDEA mov r8,[181897C10h]		; DEBUG: {Register}/R8 {Memory}/None ||| RIP | 6468238352 | None ||| N/A | N/A
		0x18118EDF1 mov rdx,[rbx+28h]		; DEBUG: {Register}/RDX {Memory}/None ||| RBX | 40 | None ||| N/A | N/A
		0x18118EDF5 call 00000001810ACD30h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18118EDFA jmp short 000000018118EE04h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18118EDFC mov qword ptr [rbx+28h],0		; DEBUG: {Memory}/None {Immediate32to64}/None ||| RBX | 40 | None ||| N/A | 0
		0x18118EE04 mov rdx,[181868FE0h]		; DEBUG: {Register}/RDX {Memory}/None ||| RIP | 6468046816 | None ||| N/A | N/A
		0x18118EE0B mov rcx,rbx		; DEBUG: {Register}/RCX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x18118EE0E call 000000018090ADA0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18118EE13 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18118EE16 je short 000000018118EE80h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18118EE18 mov rcx,[18189AFC8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468251592 | None ||| N/A | N/A
		0x18118EE1F mov [rsp+30h],rsi		; DEBUG: {Memory}/None {Register}/RSI ||| RSP | 48 | None ||| N/A | N/A
		0x18118EE24 mov rsi,[rax+50h]		; DEBUG: {Register}/RSI {Memory}/None ||| RAX | 80 | None ||| N/A | N/A
		0x18118EE28 call 000000018013AC40h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18118EE2D mov r8,[181863BC0h]		; DEBUG: {Register}/R8 {Memory}/None ||| RIP | 6468025280 | None ||| N/A | N/A
		0x18118EE34 xor r9d,r9d		; DEBUG: {Register}/R9D {Register}/R9D ||| None | 0 | None ||| N/A | N/A
		0x18118EE37 mov rdx,rbx		; DEBUG: {Register}/RDX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x18118EE3A mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18118EE3D mov rdi,rax		; DEBUG: {Register}/RDI {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18118EE40 call 00000001802ED440h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18118EE45 mov rcx,[181899E60h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468247136 | None ||| N/A | N/A
		0x18118EE4C test byte ptr [rcx+127h],2		; DEBUG: {Memory}/None {Immediate8}/None ||| RCX | 295 | None ||| N/A | 2
		0x18118EE53 je short 000000018118EE63h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18118EE55 cmp dword ptr [rcx+0D8h],0		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RCX | 216 | None ||| N/A | 0
		0x18118EE5C jne short 000000018118EE63h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18118EE5E call 000000018010EAF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18118EE63 xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18118EE66 mov rdx,rdi		; DEBUG: {Register}/RDX {Register}/RDI ||| None | 0 | None ||| N/A | N/A
		0x18118EE69 mov rcx,rsi		; DEBUG: {Register}/RCX {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x18118EE6C mov rsi,[rsp+30h]		; DEBUG: {Register}/RSI {Memory}/None ||| RSP | 48 | None ||| N/A | N/A
		0x18118EE71 mov rbx,[rsp+38h]		; DEBUG: {Register}/RBX {Memory}/None ||| RSP | 56 | None ||| N/A | N/A
		0x18118EE76 add rsp,20h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 32
		0x18118EE7A pop rdi		; DEBUG: {Register}/RDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18118EE7B jmp near ptr 0000000180431040h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18118EE80 xor ecx,ecx		; DEBUG: {Register}/ECX {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x18118EE82 call 000000018012BDA0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18118EE87 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.Void UIToggledComponents::Awake():
		End of function at 0x18118EE88
		Absolute End is at 0x18118EE88
		Identified Jump Destination addresses:
			0x18118EE04
		0x18118ED25: Saves the content of rdi to the stack
		0x18118ED2A: Compares {Unknown Global at 0x1818A2AE8, first ten bytes are [160 184 127 0 190 184 127 0 200 60], or as chars " ¸ ¾¸ È<"} and 0
		0x18118ED31: Copies {'this' (function parameter, type UIToggledComponents)} from rcx into rbx
		0x18118ED34: Jumps to 0x18118ED48 if {Unknown Global at 0x1818A2AE8, first ten bytes are [160 184 127 0 190 184 127 0 200 60], or as chars " ¸ ¾¸ È<"} != 0

		0x18118ED36: Loads string "úy" into register rcx as constant {'constant3' (constant value of type Cpp2IL.Core.Analysis.ResultModels.Il2CppString)}
		0x18118ED3C: Attempts to load the il2cpp metadata for this method (method id 0) and init it cpp-side.

		0x18118ED48: Loads the type definition for managed type UnityEngine.Object as a constant "Object" in rcx
		0x18118ED4F: [!] Reads field target from {'this' (function parameter, type UIToggledComponents)} and stores in a new local {'target' (type UnityEngine.MonoBehaviour)}

		0x18118ED53: Compares "{il2cpp field on {'Object' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" and 2
		0x18118ED5A: Jumps to 0x18118ED6A if "{il2cpp field on {'Object' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" equals 2

		0x18118ED5C: Compares "{il2cpp field on {'Object' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" and 0
		0x18118ED63: Jumps to 0x18118ED6A if "{il2cpp field on {'Object' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" != 0

		0x18118ED65: Calls the il2cpp cctor for the type UnityEngine.Object
		0x18118ED6D: Clears register rdx, yielding zero-local {'local3' (type System.Int32)}
		0x18118ED6F: Copies {'target' (type UnityEngine.MonoBehaviour)} from rdi into rcx
		0x18118ED72: [!] Calls static managed method System.Boolean UnityEngine.Object::op_Inequality(UnityEngine.Object,UnityEngine.Object) with arguments [{'target' (type UnityEngine.MonoBehaviour)}, {'local3' (type System.Int32)}] and stores the result in {'boolean' (type System.Boolean)}

		0x18118ED77: [!] Compares {'boolean' (type System.Boolean)} and False
		0x18118ED79: Jumps to 0x18118EE04 (which is an if statement's body) if boolean equals False ;  - Increasing indentation - is standard if, unimportant is False

		0x18118ED7F: [!] Reads field activate from {'this' (function parameter, type UIToggledComponents)} and stores in a new local {'activate' (type System.Collections.Generic.List`1<UnityEngine.MonoBehaviour>)}

		0x18118ED83: [!] Compares {'activate' (type System.Collections.Generic.List`1<UnityEngine.MonoBehaviour>)} and 0
		0x18118ED86: Jumps to 0x18118EE80 (which throws a NRE) if activate equals 0. Implicitly present in managed code, so ignored here.
		0x18118ED8C: Loads the global generic method reference for method System.Int32 System.Collections.Generic.List`1::get_Count() on type System.Collections.Generic.List`1<UnityEngine.MonoBehaviour> and stores the result in constant {'get_Count' (constant value of type Cpp2IL.Core.Analysis.ResultModels.GenericMethodReference)} in rdx
		0x18118ED93: [!] Calls managed method System.Int32 System.Collections.Generic.List`1::get_Count() on instance {'activate' (type System.Collections.Generic.List`1<UnityEngine.MonoBehaviour>)} and stores the result in {'count' (type System.Int32)} ;  - Method resolved from concrete implementations at this address, with the help of a constant value to identify which concrete implementation.

		0x18118ED98: [!] Compares {'count' (type System.Int32)} and 0
		0x18118ED9A: Jumps to 0x18118EDFC if {'count' (type System.Int32)} != 0 ;  - Increasing indentation - is if-else, unimportant is False

		0x18118ED9C: [!] Reads field deactivate from {'this' (function parameter, type UIToggledComponents)} and stores in a new local {'deactivate' (type System.Collections.Generic.List`1<UnityEngine.MonoBehaviour>)}

		0x18118EDA0: [!] Compares {'deactivate' (type System.Collections.Generic.List`1<UnityEngine.MonoBehaviour>)} and 0
		0x18118EDA3: Jumps to 0x18118EE80 (which throws a NRE) if deactivate equals 0. Implicitly present in managed code, so ignored here.
		0x18118EDA9: Loads the global generic method reference for method System.Int32 System.Collections.Generic.List`1::get_Count() on type System.Collections.Generic.List`1<UnityEngine.MonoBehaviour> and stores the result in constant {'get_Count' (constant value of type Cpp2IL.Core.Analysis.ResultModels.GenericMethodReference)} in rdx
		0x18118EDB0: [!] Calls managed method System.Int32 System.Collections.Generic.List`1::get_Count() on instance {'deactivate' (type System.Collections.Generic.List`1<UnityEngine.MonoBehaviour>)} and stores the result in {'count2' (type System.Int32)} ;  - Method resolved from concrete implementations at this address, with the help of a constant value to identify which concrete implementation.

		0x18118EDB5: [!] Compares {'count2' (type System.Int32)} and 0
		0x18118EDB7: Jumps to 0x18118EDFC if {'count2' (type System.Int32)} != 0 ;  - Increasing indentation - is if-else, unimportant is False

		0x18118EDB9: [!] Compares {field inverse, read from local {'this' (function parameter, type UIToggledComponents)}} and {'count2' (type System.Int32)}
		0x18118EDBC: Jumps to 0x18118EDDD if {field inverse, read from local {'this' (function parameter, type UIToggledComponents)}} != {'count2' (type System.Int32)} ;  - Increasing indentation - is if-else, unimportant is False

		0x18118EDBE: [!] Reads field activate from {'this' (function parameter, type UIToggledComponents)} and stores in a new local {'activate2' (type System.Collections.Generic.List`1<UnityEngine.MonoBehaviour>)}

		0x18118EDC2: [!] Compares {'activate2' (type System.Collections.Generic.List`1<UnityEngine.MonoBehaviour>)} and 0
		0x18118EDC5: Jumps to 0x18118EE80 (which throws a NRE) if activate2 equals 0. Implicitly present in managed code, so ignored here.
		0x18118EDCB: Loads the global generic method reference for method System.Void System.Collections.Generic.List`1::Add(T) on type System.Collections.Generic.List`1<UnityEngine.MonoBehaviour> and stores the result in constant {'Add' (constant value of type Cpp2IL.Core.Analysis.ResultModels.GenericMethodReference)} in r8
		0x18118EDD2: [!] Reads field target from {'this' (function parameter, type UIToggledComponents)} and stores in a new local {'target2' (type UnityEngine.MonoBehaviour)}

		0x18118EDD6: [!] Calls managed method System.Void System.Collections.Generic.List`1::Add(T) on instance {'activate2' (type System.Collections.Generic.List`1<UnityEngine.MonoBehaviour>)} with arguments [{'target2' (type UnityEngine.MonoBehaviour)}] ;  - Method resolved from concrete implementations at this address, with the help of a constant value to identify which concrete implementation.

		0x18118EDDB: Jumps to 0x18118EE04 (which is an function-local jump destination)

		0x18118EDDD: [!] Reads field deactivate from {'this' (function parameter, type UIToggledComponents)} and stores in a new local {'deactivate2' (type System.Collections.Generic.List`1<UnityEngine.MonoBehaviour>)}

		0x18118EDE1: [!] Compares {'deactivate2' (type System.Collections.Generic.List`1<UnityEngine.MonoBehaviour>)} and 0
		0x18118EDE4: Jumps to 0x18118EE80 (which throws a NRE) if deactivate2 equals 0. Implicitly present in managed code, so ignored here.
		0x18118EDEA: Loads the global generic method reference for method System.Void System.Collections.Generic.List`1::Add(T) on type System.Collections.Generic.List`1<UnityEngine.MonoBehaviour> and stores the result in constant {'Add' (constant value of type Cpp2IL.Core.Analysis.ResultModels.GenericMethodReference)} in r8
		0x18118EDF1: [!] Reads field target from {'this' (function parameter, type UIToggledComponents)} and stores in a new local {'target3' (type UnityEngine.MonoBehaviour)}

		0x18118EDF5: [!] Calls managed method System.Void System.Collections.Generic.List`1::Add(T) on instance {'deactivate2' (type System.Collections.Generic.List`1<UnityEngine.MonoBehaviour>)} with arguments [{'target3' (type UnityEngine.MonoBehaviour)}] ;  - Method resolved from concrete implementations at this address, with the help of a constant value to identify which concrete implementation.

		0x18118EDFA: Jumps to 0x18118EE04 (which is an function-local jump destination)

		0x18118EDFC: [!] Sets the field target (Type UnityEngine.MonoBehaviour) on local {'this' (function parameter, type UIToggledComponents)} to the value stored in 0

		End Of If-Else Block (at 0x18118EE04) where the else started at 0x18118EDFC
		0x18118EE04: Loads the global generic method reference for method T UnityEngine.Component::GetComponent<UIToggle>() on type UnityEngine.Component and stores the result in constant {'GetComponent' (constant value of type Cpp2IL.Core.Analysis.ResultModels.GenericMethodReference)} in rdx
		0x18118EE0B: Copies {'this' (function parameter, type UIToggledComponents)} from rbx into rcx
		0x18118EE0E: [!] Calls managed method T UnityEngine.Component::GetComponent<UIToggle>() on instance {'this' (function parameter, type UIToggledComponents)} and stores the result in {'component' (type UIToggle)} ;  - Method resolved from concrete implementations at this address, with the help of a constant value to identify which concrete implementation.

		0x18118EE13: [!] Compares {'component' (type UIToggle)} and 0
		0x18118EE16: Jumps to 0x18118EE80 (which throws a NRE) if component equals 0. Implicitly present in managed code, so ignored here.
		0x18118EE18: Loads the type definition for managed type EventDelegate/Callback as a constant "Callback" in rcx
		0x18118EE24: [!] Reads field onChange from {'component' (type UIToggle)} and stores in a new local {'onChange' (type System.Collections.Generic.List`1<EventDelegate>)}

		0x18118EE28: [!] Allocates an instance of type EventDelegate/Callback and stores it as callback in rax.

		0x18118EE2D: Loads the method definition for managed method System.Void UIToggledComponents::Toggle() as a constant "Toggle"
		0x18118EE37: Copies {'this' (function parameter, type UIToggledComponents)} from rbx into rdx
		0x18118EE3A: Copies {'callback' (type EventDelegate/Callback)} from rax into rcx
		0x18118EE3D: Copies {'callback' (type EventDelegate/Callback)} from rax into rdi
		0x18118EE40: [!] Calls managed method System.Void EventDelegate/Callback::.ctor(System.Object,System.IntPtr) on instance {'callback' (type EventDelegate/Callback)} with arguments [{'this' (function parameter, type UIToggledComponents)}, {'Toggle' (constant value of type Mono.Cecil.MethodReference)}]

		0x18118EE45: Loads the type definition for managed type EventDelegate as a constant "EventDelegate" in rcx
		0x18118EE4C: Compares "{il2cpp field on {'EventDelegate' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" and 2
		0x18118EE53: Jumps to 0x18118EE63 if "{il2cpp field on {'EventDelegate' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" equals 2 ;  - This is probably a goto, jumping to 0x18118EE63 which is after end of current block @ 0x18118EE04 (started at 0x18118EDFC)

		0x18118EE55: Compares "{il2cpp field on {'EventDelegate' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" and 0
		0x18118EE5C: Jumps to 0x18118EE63 if "{il2cpp field on {'EventDelegate' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" != 0 ;  - This is probably a goto, jumping to 0x18118EE63 which is after end of current block @ 0x18118EE04 (started at 0x18118EDFC)

		0x18118EE5E: Calls the il2cpp cctor for the type EventDelegate
		0x18118EE66: Copies {'callback' (type EventDelegate/Callback)} from rdi into rdx
		0x18118EE69: Copies {'onChange' (type System.Collections.Generic.List`1<EventDelegate>)} from rsi into rcx
		0x18118EE6C: Reads unknown value in stack, offset 48 (0x30) and stores the pointer in register rsi as new constant constant29
		0x18118EE71: Reads unknown value in stack, offset 56 (0x38) and stores the pointer in register rbx as new constant constant30
		0x18118EE7B: [!] Calls static managed method EventDelegate EventDelegate::Add(System.Collections.Generic.List`1<EventDelegate>,EventDelegate/Callback) with arguments [{'onChange' (type System.Collections.Generic.List`1<EventDelegate>)}, {'callback' (type EventDelegate/Callback)}] and stores the result in {'eventDelegate' (type EventDelegate)}

		0x18118EE7B: [!] Returns from the function

		0x18118EE82: [!] Constructs and throws an exception of kind System.NullReferenceException




	Generated Pseudocode:

	Declaring Type: UIToggledComponents
	System.Void Awake()
		UnityEngine.MonoBehaviour target = this.target
		ulong local3 = 0

		System.Boolean boolean = UnityEngine.Object.op_Inequality(target, local3) //(Object x, Object y)

		if (boolean != False)
		    System.Collections.Generic.List`1<UnityEngine.MonoBehaviour> activate = this.activate

		    System.Int32 count = activate.Count

		    if (count == 0)
		        System.Collections.Generic.List`1<UnityEngine.MonoBehaviour> deactivate = this.deactivate

		        System.Int32 count2 = deactivate.Count

		        if (count2 == 0)

		            if (this.inverse == count2)
		                System.Collections.Generic.List`1<UnityEngine.MonoBehaviour> activate2 = this.activate
		                UnityEngine.MonoBehaviour target2 = this.target

		                activate2.Add(target2) //(T item)
		            else
		                System.Collections.Generic.List`1<UnityEngine.MonoBehaviour> deactivate2 = this.deactivate
		                UnityEngine.MonoBehaviour target3 = this.target

		                deactivate2.Add(target3) //(T item)
		            else
		                this.target = 0
		            endif
                    

		            UIToggle component = base.GetComponent<UIToggle>()
		            System.Collections.Generic.List`1<EventDelegate> onChange = component.onChange
		            EventDelegate/Callback callback = new EventDelegate/Callback()

		            callback..ctor(this, {'Toggle' (constant value of type Mono.Cecil.MethodReference)}) //(Object object, IntPtr method)

		            EventDelegate eventDelegate = EventDelegate.Add(onChange, callback) //(List`1 list, Callback callback)
		            return
		            throw new System.NullReferenceException()


Generated IL:
	IL_0000: ldarg.0
	IL_0001: ldfld UnityEngine.MonoBehaviour UIToggledComponents::target
	IL_0006: stloc.0
	IL_0007: ldc.i4.0
	IL_0008: stloc.1
	IL_0009: ldloc.0
	IL_000a: ldloc.1
	IL_000b: call System.Boolean UnityEngine.Object::op_Inequality(UnityEngine.Object,UnityEngine.Object)
	IL_0010: ldc.i4.0
	IL_0011: beq.s IL_0073
	IL_0013: ldarg.0
	IL_0014: ldfld System.Collections.Generic.List`1<UnityEngine.MonoBehaviour> UIToggledComponents::activate
	IL_0019: call System.Int32 System.Collections.Generic.List`1::get_Count()
	IL_001e: ldc.i4.0
	IL_001f: bne.un.s IL_006a
	IL_0021: ldarg.0
	IL_0022: ldfld System.Collections.Generic.List`1<UnityEngine.MonoBehaviour> UIToggledComponents::deactivate
	IL_0027: call System.Int32 System.Collections.Generic.List`1::get_Count()
	IL_002c: stloc.2
	IL_002d: ldloc.2
	IL_002e: ldc.i4.0
	IL_002f: bne.un.s IL_006a
	IL_0031: ldarg.0
	IL_0032: ldfld System.Boolean UIToggledComponents::inverse
	IL_0037: ldloc.2
	IL_0038: bne.un.s IL_0051
	IL_003a: ldarg.0
	IL_003b: ldfld System.Collections.Generic.List`1<UnityEngine.MonoBehaviour> UIToggledComponents::activate
	IL_0040: stloc.3
	IL_0041: ldarg.0
	IL_0042: ldfld UnityEngine.MonoBehaviour UIToggledComponents::target
	IL_0047: stloc.s V_4
	IL_0049: ldloc.3
	IL_004a: ldloc.s V_4
	IL_004c: call System.Void System.Collections.Generic.List`1::Add(T)
	IL_0051: ldarg.0
	IL_0052: ldfld System.Collections.Generic.List`1<UnityEngine.MonoBehaviour> UIToggledComponents::deactivate
	IL_0057: stloc.s V_5
	IL_0059: ldarg.0
	IL_005a: ldfld UnityEngine.MonoBehaviour UIToggledComponents::target
	IL_005f: stloc.s V_6
	IL_0061: ldloc.s V_5
	IL_0063: ldloc.s V_6
	IL_0065: call System.Void System.Collections.Generic.List`1::Add(T)
	IL_006a: ldarg.0
	IL_006b: ldc.i4.0
	IL_006c: conv.i8
	IL_006d: conv.u8
	IL_006e: stfld UnityEngine.MonoBehaviour UIToggledComponents::target
	IL_0073: ldarg.0
	IL_0074: call T UnityEngine.Component::GetComponent<UIToggle>()
	IL_0079: ldfld System.Collections.Generic.List`1<EventDelegate> UIToggle::onChange
	IL_007e: stloc.s V_7
	IL_0080: ldarg.0
	IL_0081: ldftn System.Void UIToggledComponents::Toggle()
	IL_0087: newobj System.Void EventDelegate/Callback::.ctor(System.Object,System.IntPtr)
	IL_008c: stloc.s V_8
	IL_008e: ldloc.s V_7
	IL_0090: ldloc.s V_8
	IL_0092: call EventDelegate EventDelegate::Add(System.Collections.Generic.List`1,EventDelegate/Callback)
	IL_0097: stloc.s V_9
	IL_0099: ret
	IL_009a: newobj System.Void System.NullReferenceException::.ctor()
	IL_009f: throw
	

Method: System.Void UIToggledComponents::Toggle():	Method Body (x86 ASM):
		0x18118EE90 push rbx		; DEBUG: {Register}/RBX {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18118EE92 sub rsp,20h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 32
		0x18118EE96 cmp byte ptr [1818A2AE9h],0		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6468283113 | None ||| N/A | 0
		0x18118EE9D mov rbx,rcx		; DEBUG: {Register}/RBX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x18118EEA0 jne short 000000018118EEB4h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18118EEA2 mov ecx,[1814B4354h]		; DEBUG: {Register}/ECX {Memory}/None ||| RIP | 6464160596 | None ||| N/A | N/A
		0x18118EEA8 call 00000001800FEB90h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18118EEAD mov byte ptr [1818A2AE9h],1		; DEBUG: {Memory}/None {Immediate8}/None ||| RIP | 6468283113 | None ||| N/A | 1
		0x18118EEB4 xor edx,edx		; DEBUG: {Register}/EDX {Register}/EDX ||| None | 0 | None ||| N/A | N/A
		0x18118EEB6 mov rcx,rbx		; DEBUG: {Register}/RCX {Register}/RBX ||| None | 0 | None ||| N/A | N/A
		0x18118EEB9 call 0000000180B22650h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18118EEBE test al,al		; DEBUG: {Register}/AL {Register}/AL ||| None | 0 | None ||| N/A | N/A
		0x18118EEC0 je near ptr 000000018118F066h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18118EEC6 mov rax,[rbx+18h]		; DEBUG: {Register}/RAX {Memory}/None ||| RBX | 24 | None ||| N/A | N/A
		0x18118EECA mov [rsp+30h],rbp		; DEBUG: {Memory}/None {Register}/RBP ||| RSP | 48 | None ||| N/A | N/A
		0x18118EECF mov [rsp+38h],rsi		; DEBUG: {Memory}/None {Register}/RSI ||| RSP | 56 | None ||| N/A | N/A
		0x18118EED4 mov [rsp+40h],rdi		; DEBUG: {Memory}/None {Register}/RDI ||| RSP | 64 | None ||| N/A | N/A
		0x18118EED9 xor edi,edi		; DEBUG: {Register}/EDI {Register}/EDI ||| None | 0 | None ||| N/A | N/A
		0x18118EEDB mov esi,edi		; DEBUG: {Register}/ESI {Register}/EDI ||| None | 0 | None ||| N/A | N/A
		0x18118EEDD mov ebp,edi		; DEBUG: {Register}/EBP {Register}/EDI ||| None | 0 | None ||| N/A | N/A
		0x18118EEDF test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18118EEE2 je near ptr 000000018118F06Ch		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18118EEE8 nop dword ptr [rax+rax]		; DEBUG: {Memory}/None {Register}/None ||| RAX | 0 | RAX ||| N/A | N/A
		0x18118EEF0 mov rdx,[18189E268h]		; DEBUG: {Register}/RDX {Memory}/None ||| RIP | 6468264552 | None ||| N/A | N/A
		0x18118EEF7 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18118EEFA call 000000018029B0C0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18118EEFF cmp ebp,eax		; DEBUG: {Register}/EBP {Register}/EAX ||| None | 0 | None ||| N/A | N/A
		0x18118EF01 jge near ptr 000000018118EF9Dh		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18118EF07 mov rcx,[rbx+18h]		; DEBUG: {Register}/RCX {Memory}/None ||| RBX | 24 | None ||| N/A | N/A
		0x18118EF0B test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x18118EF0E je near ptr 000000018118F06Ch		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18118EF14 mov r8,[1818782D8h]		; DEBUG: {Register}/R8 {Memory}/None ||| RIP | 6468109016 | None ||| N/A | N/A
		0x18118EF1B mov edx,esi		; DEBUG: {Register}/EDX {Register}/ESI ||| None | 0 | None ||| N/A | N/A
		0x18118EF1D call 00000001810B67F0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18118EF22 mov rcx,[181864DB0h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468029872 | None ||| N/A | N/A
		0x18118EF29 mov rbp,rax		; DEBUG: {Register}/RBP {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18118EF2C test byte ptr [rcx+127h],2		; DEBUG: {Memory}/None {Immediate8}/None ||| RCX | 295 | None ||| N/A | 2
		0x18118EF33 je short 000000018118EF49h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18118EF35 cmp [rcx+0D8h],edi		; DEBUG: {Memory}/None {Register}/EDI ||| RCX | 216 | None ||| N/A | N/A
		0x18118EF3B jne short 000000018118EF49h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18118EF3D call 000000018010EAF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18118EF42 mov rcx,[181864DB0h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468029872 | None ||| N/A | N/A
		0x18118EF49 mov rcx,[rcx+0B8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RCX | 184 | None ||| N/A | N/A
		0x18118EF50 mov rax,[rcx+8]		; DEBUG: {Register}/RAX {Memory}/None ||| RCX | 8 | None ||| N/A | N/A
		0x18118EF54 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18118EF57 je near ptr 000000018118F06Ch		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18118EF5D cmp [rax+82h],dil		; DEBUG: {Memory}/None {Register}/DIL ||| RAX | 130 | None ||| N/A | N/A
		0x18118EF64 jne short 000000018118EF6Ch		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18118EF66 movzx edx,byte ptr [rax+48h]		; DEBUG: {Register}/EDX {Memory}/None ||| RAX | 72 | None ||| N/A | N/A
		0x18118EF6A jmp short 000000018118EF73h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18118EF6C movzx edx,byte ptr [rax+81h]		; DEBUG: {Register}/EDX {Memory}/None ||| RAX | 129 | None ||| N/A | N/A
		0x18118EF73 test rbp,rbp		; DEBUG: {Register}/RBP {Register}/RBP ||| None | 0 | None ||| N/A | N/A
		0x18118EF76 je near ptr 000000018118F06Ch		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18118EF7C xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18118EF7F mov rcx,rbp		; DEBUG: {Register}/RCX {Register}/RBP ||| None | 0 | None ||| N/A | N/A
		0x18118EF82 call 0000000180B22710h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18118EF87 mov rax,[rbx+18h]		; DEBUG: {Register}/RAX {Memory}/None ||| RBX | 24 | None ||| N/A | N/A
		0x18118EF8B inc esi		; DEBUG: {Register}/ESI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18118EF8D mov ebp,esi		; DEBUG: {Register}/EBP {Register}/ESI ||| None | 0 | None ||| N/A | N/A
		0x18118EF8F test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18118EF92 jne near ptr 000000018118EEF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18118EF98 jmp near ptr 000000018118F06Ch		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18118EF9D mov rax,[rbx+20h]		; DEBUG: {Register}/RAX {Memory}/None ||| RBX | 32 | None ||| N/A | N/A
		0x18118EFA1 mov esi,edi		; DEBUG: {Register}/ESI {Register}/EDI ||| None | 0 | None ||| N/A | N/A
		0x18118EFA3 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18118EFA6 je near ptr 000000018118F06Ch		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18118EFAC nop dword ptr [rax]		; DEBUG: {Memory}/None {Register}/None ||| RAX | 0 | None ||| N/A | N/A
		0x18118EFB0 mov rdx,[18189E268h]		; DEBUG: {Register}/RDX {Memory}/None ||| RIP | 6468264552 | None ||| N/A | N/A
		0x18118EFB7 mov rcx,rax		; DEBUG: {Register}/RCX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18118EFBA call 000000018029B0C0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18118EFBF cmp esi,eax		; DEBUG: {Register}/ESI {Register}/EAX ||| None | 0 | None ||| N/A | N/A
		0x18118EFC1 jge near ptr 000000018118F057h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18118EFC7 mov rcx,[rbx+20h]		; DEBUG: {Register}/RCX {Memory}/None ||| RBX | 32 | None ||| N/A | N/A
		0x18118EFCB test rcx,rcx		; DEBUG: {Register}/RCX {Register}/RCX ||| None | 0 | None ||| N/A | N/A
		0x18118EFCE je near ptr 000000018118F06Ch		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18118EFD4 mov r8,[1818782D8h]		; DEBUG: {Register}/R8 {Memory}/None ||| RIP | 6468109016 | None ||| N/A | N/A
		0x18118EFDB mov edx,edi		; DEBUG: {Register}/EDX {Register}/EDI ||| None | 0 | None ||| N/A | N/A
		0x18118EFDD call 00000001810B67F0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18118EFE2 mov rcx,[181864DB0h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468029872 | None ||| N/A | N/A
		0x18118EFE9 mov rsi,rax		; DEBUG: {Register}/RSI {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18118EFEC test byte ptr [rcx+127h],2		; DEBUG: {Memory}/None {Immediate8}/None ||| RCX | 295 | None ||| N/A | 2
		0x18118EFF3 je short 000000018118F00Ah		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18118EFF5 cmp dword ptr [rcx+0D8h],0		; DEBUG: {Memory}/None {Immediate8to32}/None ||| RCX | 216 | None ||| N/A | 0
		0x18118EFFC jne short 000000018118F00Ah		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18118EFFE call 000000018010EAF0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18118F003 mov rcx,[181864DB0h]		; DEBUG: {Register}/RCX {Memory}/None ||| RIP | 6468029872 | None ||| N/A | N/A
		0x18118F00A mov rcx,[rcx+0B8h]		; DEBUG: {Register}/RCX {Memory}/None ||| RCX | 184 | None ||| N/A | N/A
		0x18118F011 mov rax,[rcx+8]		; DEBUG: {Register}/RAX {Memory}/None ||| RCX | 8 | None ||| N/A | N/A
		0x18118F015 test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18118F018 je short 000000018118F06Ch		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18118F01A cmp byte ptr [rax+82h],0		; DEBUG: {Memory}/None {Immediate8}/None ||| RAX | 130 | None ||| N/A | 0
		0x18118F021 jne short 000000018118F029h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18118F023 movzx ecx,byte ptr [rax+48h]		; DEBUG: {Register}/ECX {Memory}/None ||| RAX | 72 | None ||| N/A | N/A
		0x18118F027 jmp short 000000018118F030h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18118F029 movzx ecx,byte ptr [rax+81h]		; DEBUG: {Register}/ECX {Memory}/None ||| RAX | 129 | None ||| N/A | N/A
		0x18118F030 test rsi,rsi		; DEBUG: {Register}/RSI {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x18118F033 je short 000000018118F06Ch		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18118F035 test cl,cl		; DEBUG: {Register}/CL {Register}/CL ||| None | 0 | None ||| N/A | N/A
		0x18118F037 mov rcx,rsi		; DEBUG: {Register}/RCX {Register}/RSI ||| None | 0 | None ||| N/A | N/A
		0x18118F03A sete dl		; DEBUG: {Register}/DL {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18118F03D xor r8d,r8d		; DEBUG: {Register}/R8D {Register}/R8D ||| None | 0 | None ||| N/A | N/A
		0x18118F040 call 0000000180B22710h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18118F045 mov rax,[rbx+20h]		; DEBUG: {Register}/RAX {Memory}/None ||| RBX | 32 | None ||| N/A | N/A
		0x18118F049 inc edi		; DEBUG: {Register}/EDI {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18118F04B mov esi,edi		; DEBUG: {Register}/ESI {Register}/EDI ||| None | 0 | None ||| N/A | N/A
		0x18118F04D test rax,rax		; DEBUG: {Register}/RAX {Register}/RAX ||| None | 0 | None ||| N/A | N/A
		0x18118F050 je short 000000018118F06Ch		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18118F052 jmp near ptr 000000018118EFB0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18118F057 mov rsi,[rsp+38h]		; DEBUG: {Register}/RSI {Memory}/None ||| RSP | 56 | None ||| N/A | N/A
		0x18118F05C mov rbp,[rsp+30h]		; DEBUG: {Register}/RBP {Memory}/None ||| RSP | 48 | None ||| N/A | N/A
		0x18118F061 mov rdi,[rsp+40h]		; DEBUG: {Register}/RDI {Memory}/None ||| RSP | 64 | None ||| N/A | N/A
		0x18118F066 add rsp,20h		; DEBUG: {Register}/RSP {Immediate8to64}/None ||| None | 0 | None ||| N/A | 32
		0x18118F06A pop rbx		; DEBUG: {Register}/RBX {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18118F06B ret		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A
		0x18118F06C xor ecx,ecx		; DEBUG: {Register}/ECX {Register}/ECX ||| None | 0 | None ||| N/A | N/A
		0x18118F06E call 000000018012BDA0h		; DEBUG: {NearBranch64}/None {Register}/None ||| None | 1 | None ||| N/A | N/A
		0x18118F073 int 3		; DEBUG: {Register}/None {Register}/None ||| None | 0 | None ||| N/A | N/A

	Method Synopsis For Method System.Void UIToggledComponents::Toggle():
		End of function at 0x18118F074
		Absolute End is at 0x18118F074
		Identified Jump Destination addresses:
			0x18118EF73
			0x18118F06C
			0x18118F030
		0x18118EE90: Saves the content of rbx to the stack
		0x18118EE96: Compares {Unknown Global at 0x1818A2AE9, first ten bytes are [184 127 0 190 184 127 0 200 60 103], or as chars "¸ ¾¸ È<g"} and 0
		0x18118EE9D: Copies {'this' (function parameter, type UIToggledComponents)} from rcx into rbx
		0x18118EEA0: Jumps to 0x18118EEB4 if {Unknown Global at 0x1818A2AE9, first ten bytes are [184 127 0 190 184 127 0 200 60 103], or as chars "¸ ¾¸ È<g"} != 0

		0x18118EEA2: Loads string "ûy" into register rcx as constant {'constant3' (constant value of type Cpp2IL.Core.Analysis.ResultModels.Il2CppString)}
		0x18118EEA8: Attempts to load the il2cpp metadata for this method (method id 0) and init it cpp-side.

		0x18118EEB6: Copies {'this' (function parameter, type UIToggledComponents)} from rbx into rcx
		0x18118EEB9: [!] Calls managed method System.Boolean UnityEngine.Behaviour::get_enabled() on instance {'this' (function parameter, type UIToggledComponents)} and stores the result in {'enabled' (type System.Boolean)}

		0x18118EEBE: [!] Compares {'enabled' (type System.Boolean)} and False
		0x18118EEC0: Jumps to 0x18118F066 (which is an if statement's body) if enabled equals False ;  - Increasing indentation - is standard if, unimportant is False

		0x18118EEC6: [!] Reads field activate from {'this' (function parameter, type UIToggledComponents)} and stores in a new local {'activate' (type System.Collections.Generic.List`1<UnityEngine.MonoBehaviour>)}

		0x18118EED9: Clears register rdi, yielding zero-local {'local4' (type System.Int32)}
		0x18118EEDB: Copies {'local4' (type System.Int32)} from rdi into rsi
		0x18118EEDD: Copies {'local4' (type System.Int32)} from rdi into rbp
		0x18118EEDF: [!] Compares {'activate' (type System.Collections.Generic.List`1<UnityEngine.MonoBehaviour>)} and 0
		0x18118EEE2: Jumps to 0x18118F06C (which throws a NRE) if activate equals 0. Implicitly present in managed code, so ignored here.
		0x18118EEF0: Loads the global generic method reference for method System.Int32 System.Collections.Generic.List`1::get_Count() on type System.Collections.Generic.List`1<UnityEngine.MonoBehaviour> and stores the result in constant {'get_Count' (constant value of type Cpp2IL.Core.Analysis.ResultModels.GenericMethodReference)} in rdx
		0x18118EEF7: Copies {'activate' (type System.Collections.Generic.List`1<UnityEngine.MonoBehaviour>)} from rax into rcx
		0x18118EEFA: [!] Calls managed method System.Int32 System.Collections.Generic.List`1::get_Count() on instance {'activate' (type System.Collections.Generic.List`1<UnityEngine.MonoBehaviour>)} and stores the result in {'count' (type System.Int32)} ;  - Method resolved from concrete implementations at this address, with the help of a constant value to identify which concrete implementation.

		0x18118EEFF: [!] Compares {'local4' (type System.Int32)} and {'count' (type System.Int32)}
		0x18118EF01: Jumps to 0x18118EF9D if {'local4' (type System.Int32)} is greater than or equal to {'count' (type System.Int32)} ;  - Increasing indentation - is if-else, unimportant is False

		0x18118EF07: [!] Reads field activate from {'this' (function parameter, type UIToggledComponents)} and stores in a new local {'activate2' (type System.Collections.Generic.List`1<UnityEngine.MonoBehaviour>)}

		0x18118EF0B: [!] Compares {'activate2' (type System.Collections.Generic.List`1<UnityEngine.MonoBehaviour>)} and 0
		0x18118EF0E: Jumps to 0x18118F06C (which throws a NRE) if activate2 equals 0. Implicitly present in managed code, so ignored here.
		0x18118EF14: Loads the global generic method reference for method T System.Collections.Generic.List`1::get_Item(System.Int32) on type System.Collections.Generic.List`1<UnityEngine.MonoBehaviour> and stores the result in constant {'get_Item' (constant value of type Cpp2IL.Core.Analysis.ResultModels.GenericMethodReference)} in r8
		0x18118EF1B: Copies {'local4' (type System.Int32)} from rsi into rdx
		0x18118EF1D: [!] Calls managed method T System.Collections.Generic.List`1::get_Item(System.Int32) on instance {'activate2' (type System.Collections.Generic.List`1<UnityEngine.MonoBehaviour>)} with arguments [{'local4' (type System.Int32)}] and stores the result in {'item' (type UnityEngine.MonoBehaviour)} ;  - Method resolved from concrete implementations at this address, with the help of a constant value to identify which concrete implementation.

		0x18118EF22: Loads the type definition for managed type UIToggle as a constant "UIToggle" in rcx
		0x18118EF29: Copies {'item' (type UnityEngine.MonoBehaviour)} from rax into rbp
		0x18118EF2C: Compares "{il2cpp field on {'UIToggle' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" and 2
		0x18118EF33: Jumps to 0x18118EF49 if "{il2cpp field on {'UIToggle' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" equals 2

		0x18118EF35: Compares "{il2cpp field on {'UIToggle' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" and {'local4' (type System.Int32)}
		0x18118EF3B: Jumps to 0x18118EF49 if "{il2cpp field on {'UIToggle' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" != {'local4' (type System.Int32)}

		0x18118EF3D: Calls the il2cpp cctor for the type UIToggle
		0x18118EF42: Loads the type definition for managed type UIToggle as a constant "UIToggle" in rcx
		0x18118EF49: Loads the pointer to the static fields for UIToggle and stores it in constant14 in register rcx
		0x18118EF50: [!] Reads the static field UIToggle UIToggle::current into new local current
		0x18118EF54: [!] Compares {'current' (type UIToggle)} and 0
		0x18118EF57: Jumps to 0x18118F06C (which throws a NRE) if current equals 0. Implicitly present in managed code, so ignored here.
		0x18118EF5D: [!] Compares {field mStarted, read from local {'current' (type UIToggle)}} and {'local4' (type System.Int32)}
		0x18118EF64: Jumps to 0x18118EF6C if {field mStarted, read from local {'current' (type UIToggle)}} != {'local4' (type System.Int32)} ;  - Increasing indentation - is if-else, unimportant is False

		0x18118EF6A: Jumps to 0x18118EF73 (which is an function-local jump destination)

		0x18118EF6C: [!] Reads field mIsActive from {'current' (type UIToggle)} and stores in a new local {'mIsActive' (type System.Boolean)}


		End Of If-Else Block (at 0x18118EF73) where the else started at 0x18118EF6C
		0x18118EF73: [!] Compares {'item' (type UnityEngine.MonoBehaviour)} and 0
		0x18118EF76: Jumps to 0x18118F06C (which throws a NRE) if item equals 0. Implicitly present in managed code, so ignored here.
		0x18118EF7F: Copies {'item' (type UnityEngine.MonoBehaviour)} from rbp into rcx
		0x18118EF82: [!] Calls managed method System.Void UnityEngine.Behaviour::set_enabled(System.Boolean) on instance {'item' (type UnityEngine.MonoBehaviour)} with arguments [{'mIsActive' (type System.Boolean)}]

		0x18118EF87: [!] Reads field activate from {'this' (function parameter, type UIToggledComponents)} and stores in a new local {'activate3' (type System.Collections.Generic.List`1<UnityEngine.MonoBehaviour>)}

		0x18118EF8B: [!] Adds 1 to the value {'local4' (type System.Int32)}, stored in rsi
		0x18118EF8D: Copies {'local4' (type System.Int32)} from rsi into rbp
		0x18118EF8F: [!] Compares {'activate3' (type System.Collections.Generic.List`1<UnityEngine.MonoBehaviour>)} and 0
		0x18118EF92: Jumps to 0x18118EEF0 (which is an if statement's body) if {'activate3' (type System.Collections.Generic.List`1<UnityEngine.MonoBehaviour>)} != 0 ;  - Increasing indentation - is standard if, unimportant is False

		0x18118EF98: Jumps to 0x18118F06C (which is an function-local jump destination)

		0x18118EF9D: [!] Reads field deactivate from {'this' (function parameter, type UIToggledComponents)} and stores in a new local {'deactivate' (type System.Collections.Generic.List`1<UnityEngine.MonoBehaviour>)}

		0x18118EFA1: Copies {'local4' (type System.Int32)} from rdi into rsi
		0x18118EFA3: [!] Compares {'deactivate' (type System.Collections.Generic.List`1<UnityEngine.MonoBehaviour>)} and 0
		0x18118EFA6: Jumps to 0x18118F06C (which throws a NRE) if deactivate equals 0. Implicitly present in managed code, so ignored here.

		Potential Loop Start (0x18118EFB0):
		0x18118EFB0: Loads the global generic method reference for method System.Int32 System.Collections.Generic.List`1::get_Count() on type System.Collections.Generic.List`1<UnityEngine.MonoBehaviour> and stores the result in constant {'get_Count' (constant value of type Cpp2IL.Core.Analysis.ResultModels.GenericMethodReference)} in rdx
		0x18118EFB7: Copies {'deactivate' (type System.Collections.Generic.List`1<UnityEngine.MonoBehaviour>)} from rax into rcx
		0x18118EFBA: [!] Calls managed method System.Int32 System.Collections.Generic.List`1::get_Count() on instance {'deactivate' (type System.Collections.Generic.List`1<UnityEngine.MonoBehaviour>)} and stores the result in {'count2' (type System.Int32)} ;  - Method resolved from concrete implementations at this address, with the help of a constant value to identify which concrete implementation.

		0x18118EFBF: [!] Compares {'local4' (type System.Int32)} and {'count2' (type System.Int32)}
		0x18118EFC1: Jumps to 0x18118F057 (which is an if statement's body) if {'local4' (type System.Int32)} is greater than or equal to {'count2' (type System.Int32)} ;  - Increasing indentation - is standard if, unimportant is False

		0x18118EFC7: [!] Reads field deactivate from {'this' (function parameter, type UIToggledComponents)} and stores in a new local {'deactivate2' (type System.Collections.Generic.List`1<UnityEngine.MonoBehaviour>)}

		0x18118EFCB: [!] Compares {'deactivate2' (type System.Collections.Generic.List`1<UnityEngine.MonoBehaviour>)} and 0
		0x18118EFCE: Jumps to 0x18118F06C (which throws a NRE) if deactivate2 equals 0. Implicitly present in managed code, so ignored here.
		0x18118EFD4: Loads the global generic method reference for method T System.Collections.Generic.List`1::get_Item(System.Int32) on type System.Collections.Generic.List`1<UnityEngine.MonoBehaviour> and stores the result in constant {'get_Item' (constant value of type Cpp2IL.Core.Analysis.ResultModels.GenericMethodReference)} in r8
		0x18118EFDB: Copies {'local4' (type System.Int32)} from rdi into rdx
		0x18118EFDD: [!] Calls managed method T System.Collections.Generic.List`1::get_Item(System.Int32) on instance {'deactivate2' (type System.Collections.Generic.List`1<UnityEngine.MonoBehaviour>)} with arguments [{'local4' (type System.Int32)}] and stores the result in {'item2' (type UnityEngine.MonoBehaviour)} ;  - Method resolved from concrete implementations at this address, with the help of a constant value to identify which concrete implementation.

		0x18118EFE2: Loads the type definition for managed type UIToggle as a constant "UIToggle" in rcx
		0x18118EFE9: Copies {'item2' (type UnityEngine.MonoBehaviour)} from rax into rsi
		0x18118EFEC: Compares "{il2cpp field on {'UIToggle' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" and 2
		0x18118EFF3: Jumps to 0x18118F00A if "{il2cpp field on {'UIToggle' (constant value of type Mono.Cecil.TypeReference)}, offset 0x127}" equals 2

		0x18118EFF5: Compares "{il2cpp field on {'UIToggle' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" and 0
		0x18118EFFC: Jumps to 0x18118F00A if "{il2cpp field on {'UIToggle' (constant value of type Mono.Cecil.TypeReference)}, offset 0xD8}" != 0

		0x18118EFFE: Calls the il2cpp cctor for the type UIToggle
		0x18118F003: Loads the type definition for managed type UIToggle as a constant "UIToggle" in rcx
		0x18118F00A: Loads the pointer to the static fields for UIToggle and stores it in constant28 in register rcx
		0x18118F011: [!] Reads the static field UIToggle UIToggle::current into new local current2
		0x18118F015: [!] Compares {'current2' (type UIToggle)} and 0
		0x18118F018: Jumps to 0x18118F06C (which throws a NRE) if current2 equals 0. Implicitly present in managed code, so ignored here.
		0x18118F01A: [!] Compares {field mStarted, read from local {'current2' (type UIToggle)}} and False
		0x18118F021: Jumps to 0x18118F029 if {field mStarted, read from local {'current2' (type UIToggle)}} != False ;  - Increasing indentation - is if-else, unimportant is False

		0x18118F027: Jumps to 0x18118F030 (which is an function-local jump destination)

		0x18118F029: [!] Reads field mIsActive from {'current2' (type UIToggle)} and stores in a new local {'mIsActive2' (type System.Boolean)}


		End Of If-Else Block (at 0x18118F030) where the else started at 0x18118F029
		0x18118F030: [!] Compares {'item2' (type UnityEngine.MonoBehaviour)} and 0
		0x18118F033: Jumps to 0x18118F06C (which throws a NRE) if item2 equals 0. Implicitly present in managed code, so ignored here.
		0x18118F035: [!] Compares {'mIsActive2' (type System.Boolean)} and False
		0x18118F037: Copies {'item2' (type UnityEngine.MonoBehaviour)} from rsi into rcx
		0x18118F03A: [!] Sets the boolean {'local20' (type System.Boolean)} in rdx to true if mIsActive2 is equal to False, otherwise false.
		0x18118F040: [!] Calls managed method System.Void UnityEngine.Behaviour::set_enabled(System.Boolean) on instance {'item2' (type UnityEngine.MonoBehaviour)} with arguments [{'local20' (type System.Boolean)}]

		0x18118F045: [!] Reads field deactivate from {'this' (function parameter, type UIToggledComponents)} and stores in a new local {'deactivate3' (type System.Collections.Generic.List`1<UnityEngine.MonoBehaviour>)}

		0x18118F049: [!] Adds 1 to the value {'local4' (type System.Int32)}, stored in rdi
		0x18118F04B: Copies {'local4' (type System.Int32)} from rdi into rsi
		0x18118F04D: [!] Compares {'deactivate3' (type System.Collections.Generic.List`1<UnityEngine.MonoBehaviour>)} and 0
		0x18118F050: Jumps to 0x18118F06C (which throws a NRE) if deactivate3 equals 0. Implicitly present in managed code, so ignored here.
		0x18118F052: Jumps to 0x18118EFB0 - which is still in this function, but further up. Probably indicative that this is a loop.
		0x18118F057: Reads unknown value in stack, offset 56 (0x38) and stores the pointer in register rsi as new constant constant34
		0x18118F05C: Reads unknown value in stack, offset 48 (0x30) and stores the pointer in register rbp as new constant constant35
		0x18118F061: Reads unknown value in stack, offset 64 (0x40) and stores the pointer in register rdi as new constant constant36
		0x18118F06B: [!] Returns from the function


		End Of If-Else Block (at 0x18118F06C) where the else started at 0x18118EF9D
		0x18118F06E: [!] Constructs and throws an exception of kind System.NullReferenceException




	Generated Pseudocode:

	Declaring Type: UIToggledComponents
	System.Void Toggle()

		System.Boolean enabled = base.enabled

		if (enabled != False)
		    System.Collections.Generic.List`1<UnityEngine.MonoBehaviour> activate = this.activate
		    ulong local4 = 0

		    System.Int32 count = activate.Count

		    if (local4 < count)
		        System.Collections.Generic.List`1<UnityEngine.MonoBehaviour> activate2 = this.activate

		        UnityEngine.MonoBehaviour item = activate2.Item
		        UIToggle current = UIToggle.current

		        if (current.mStarted == local4)
		        else
		            System.Boolean mIsActive = current.mIsActive
		        endif
                

		        item.enabled = mIsActive
		        System.Collections.Generic.List`1<UnityEngine.MonoBehaviour> activate3 = this.activate
		        local4 += 1

		        if (activate3 == 0)
		        else
		            System.Collections.Generic.List`1<UnityEngine.MonoBehaviour> deactivate = this.deactivate

		            System.Int32 count2 = deactivate.Count

		            if (local4 < count2)
		                System.Collections.Generic.List`1<UnityEngine.MonoBehaviour> deactivate2 = this.deactivate

		                UnityEngine.MonoBehaviour item2 = deactivate2.Item
		                UIToggle current2 = UIToggle.current

		                if (current2.mStarted == False)
		                else
		                    System.Boolean mIsActive2 = current2.mIsActive
		                endif
                        
		                System.Boolean local20 = mIsActive2 == False

		                item2.enabled = local20
		                System.Collections.Generic.List`1<UnityEngine.MonoBehaviour> deactivate3 = this.deactivate
		                local4 += 1
		            endif
                    
		        endif
                
		        return
		    endif
            
		    throw new System.NullReferenceException()


Generated IL:
	IL_0000: ldarg.0
	IL_0001: call System.Boolean UnityEngine.Behaviour::get_enabled()
	IL_0006: ldc.i4.0
	IL_0007: beq IL_00b2
	IL_000c: ldarg.0
	IL_000d: ldfld System.Collections.Generic.List`1<UnityEngine.MonoBehaviour> UIToggledComponents::activate
	IL_0012: stloc.0
	IL_0013: ldc.i4.0
	IL_0014: stloc.1
	IL_0015: ldloc.0
	IL_0016: call System.Int32 System.Collections.Generic.List`1::get_Count()
	IL_001b: stloc.2
	IL_001c: ldloc.1
	IL_001d: ldloc.2
	IL_001e: bge.s IL_0060
	IL_0020: ldarg.0
	IL_0021: ldfld System.Collections.Generic.List`1<UnityEngine.MonoBehaviour> UIToggledComponents::activate
	IL_0026: ldloc.1
	IL_0027: call T System.Collections.Generic.List`1::get_Item(System.Int32)
	IL_002c: stloc.3
	IL_002d: ldsfld UIToggle UIToggle::current
	IL_0032: stloc.s V_4
	IL_0034: ldloc.s V_4
	IL_0036: ldfld System.Boolean UIToggle::mStarted
	IL_003b: ldloc.1
	IL_003c: bne.un.s IL_003e
	IL_003e: ldloc.s V_4
	IL_0040: ldfld System.Boolean UIToggle::mIsActive
	IL_0045: stloc.s V_5
	IL_0047: ldloc.3
	IL_0048: ldloc.s V_5
	IL_004a: call System.Void UnityEngine.Behaviour::set_enabled(System.Boolean)
	IL_004f: ldarg.0
	IL_0050: ldfld System.Collections.Generic.List`1<UnityEngine.MonoBehaviour> UIToggledComponents::activate
	IL_0055: stloc.s V_6
	IL_0057: ldloc.1
	IL_0058: ldc.i4.1
	IL_0059: add
	IL_005a: stloc.1
	IL_005b: ldloc.s V_6
	IL_005d: ldc.i4.0
	IL_005e: bne.un.s IL_005b
	IL_0060: ldarg.0
	IL_0061: ldfld System.Collections.Generic.List`1<UnityEngine.MonoBehaviour> UIToggledComponents::deactivate
	IL_0066: call System.Int32 System.Collections.Generic.List`1::get_Count()
	IL_006b: stloc.s V_7
	IL_006d: ldloc.1
	IL_006e: ldloc.s V_7
	IL_0070: bge.s IL_00b2
	IL_0072: ldarg.0
	IL_0073: ldfld System.Collections.Generic.List`1<UnityEngine.MonoBehaviour> UIToggledComponents::deactivate
	IL_0078: ldloc.1
	IL_0079: call T System.Collections.Generic.List`1::get_Item(System.Int32)
	IL_007e: stloc.s V_8
	IL_0080: ldsfld UIToggle UIToggle::current
	IL_0085: stloc.s V_9
	IL_0087: ldloc.s V_9
	IL_0089: ldfld System.Boolean UIToggle::mStarted
	IL_008e: ldc.i4.0
	IL_008f: bne.un.s IL_0091
	IL_0091: ldloc.s V_9
	IL_0093: ldfld System.Boolean UIToggle::mIsActive
	IL_0098: ldc.i4.0
	IL_0099: ceq
	IL_009b: stloc.s V_10
	IL_009d: ldloc.s V_8
	IL_009f: ldloc.s V_10
	IL_00a1: call System.Void UnityEngine.Behaviour::set_enabled(System.Boolean)
	IL_00a6: ldarg.0
	IL_00a7: ldfld System.Collections.Generic.List`1<UnityEngine.MonoBehaviour> UIToggledComponents::deactivate
	IL_00ac: stloc.s V_11
	IL_00ae: ldloc.1
	IL_00af: ldc.i4.1
	IL_00b0: add
	IL_00b1: stloc.1
	IL_00b2: ret
	IL_00b3: newobj System.Void System.NullReferenceException::.ctor()
	IL_00b8: throw
	

